{
  "code": "def babylonian_squareroot(n):\n    x = n\n    y = 1\n    e = 1e-15\n    while (x - y) > e:\n        x = (x + y) / 2\n        y = n / x\n    return x",
  "results": {
    "assert babylonian_squareroot(10)==3.162277660168379": {
      "result": true,
      "time": 0.0910954475402832,
      "error": null
    },
    "assert babylonian_squareroot(2)==1.414213562373095": {
      "result": true,
      "time": 0.08682036399841309,
      "error": null
    },
    "assert babylonian_squareroot(9)==3.0": {
      "result": true,
      "time": 0.09533810615539551,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 23:05:15",
    "end_time": "2025-05-08 23:05:16",
    "duration": "0:00:01.987651"
  },
  "retry": 0,
  "random_seed": 855
}