{
  "code": "def even_bit_toggle_number(n):\n    mask = 0\n    bit_position = 0\n    temp = n\n    while temp:\n        if bit_position % 2 == 0:\n            mask ^= (1 << bit_position)\n        bit_position += 1\n        temp >>= 1\n    return n ^ mask",
  "results": {
    "assert even_bit_toggle_number(10) == 0": {
      "result": false,
      "time": 0.07795977592468262,
      "error": null
    },
    "assert even_bit_toggle_number(20) == 30": {
      "result": false,
      "time": 0.07782363891601562,
      "error": null
    },
    "assert even_bit_toggle_number(30) == 20": {
      "result": false,
      "time": 0.07917642593383789,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:47:02",
    "end_time": "2025-05-08 22:47:04",
    "duration": "0:00:01.885541"
  },
  "retry": 0,
  "random_seed": 855
}