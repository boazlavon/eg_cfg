{
  "code": "import math\n\ndef smartNumber(n):\n    def count_prime_factors(num):\n        count = 0\n        temp = num\n        if temp % 2 == 0:\n            count += 1\n            while temp % 2 == 0:\n                temp //= 2\n        for i in range(3, int(math.sqrt(temp)) + 1, 2):\n            if temp % i == 0:\n                count += 1\n                while temp % i == 0:\n                    temp //= i\n        if temp > 1:\n            count += 1\n        return count\n\n    smart_numbers = []\n    i = 1\n    while len(smart_numbers) < n:\n        if count_prime_factors(i) >= 3:\n            smart_numbers.append(i)\n        i += 1\n    return smart_numbers[n-1]",
  "results": {
    "assert smartNumber(1) == 30": {
      "result": true,
      "time": 3.4599952697753906,
      "error": null
    },
    "assert smartNumber(50) == 273": {
      "result": true,
      "time": 0.11276841163635254,
      "error": null
    },
    "assert smartNumber(1000) == 2664": {
      "result": true,
      "time": 0.11970829963684082,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:51:00",
    "end_time": "2025-05-08 22:51:12",
    "duration": "0:00:12.518889"
  },
  "retry": 0,
  "random_seed": 855
}