{
  "code": "import heapq\nfrom collections import Counter\n\ndef func(sorted_lists, k):\n    # Flatten the list of lists into a single list\n    all_numbers = [num for sublist in sorted_lists for num in sublist]\n    \n    # Count the frequency of each number\n    freq = Counter(all_numbers)\n    \n    # Use heapq.nlargest to find the k most frequent numbers\n    top_k = heapq.nlargest(k, freq.items(), key=lambda x: (x[1], x[0]))\n    \n    # Extract just the numbers from the top k items\n    return [num for num, _ in top_k]",
  "results": {
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],3)==[5, 7, 1]": {
      "result": false,
      "time": 0.08326053619384766,
      "error": null
    },
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],1)==[1]": {
      "result": true,
      "time": 0.07821106910705566,
      "error": null
    },
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],5)==[6, 5, 7, 8, 1]": {
      "result": false,
      "time": 0.0775156021118164,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:28:41",
    "end_time": "2025-05-08 22:29:03",
    "duration": "0:00:22.917729"
  },
  "retry": 0,
  "random_seed": 855
}