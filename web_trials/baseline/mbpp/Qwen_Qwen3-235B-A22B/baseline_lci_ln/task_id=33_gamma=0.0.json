{
  "code": "def decimal_To_Binary(n):\n    binary_digits = []\n    while n > 0:\n        remainder = n % 2\n        binary_digits.append(remainder)\n        n = n // 2\n    binary_digits.reverse()\n    binary_number = 0\n    for digit in binary_digits:\n        binary_number = binary_number * 10 + digit\n    return binary_number",
  "results": {
    "assert decimal_To_Binary(10) == 1010": {
      "result": true,
      "time": 0.07746434211730957,
      "error": null
    },
    "assert decimal_To_Binary(1) == 1": {
      "result": true,
      "time": 0.07635688781738281,
      "error": null
    },
    "assert decimal_To_Binary(20) == 10100": {
      "result": true,
      "time": 0.08043956756591797,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:27:08",
    "end_time": "2025-05-08 22:27:10",
    "duration": "0:00:02.107131"
  },
  "retry": 0,
  "random_seed": 855
}