{
  "code": "def count_pairs(arr, n, k):\n    count = 0\n    seen_pairs = set()\n    for i in range(n):\n        for j in range(i + 1, n):\n            if abs(arr[i] - arr[j]) == k:\n                pair = (min(arr[i], arr[j]), max(arr[i], arr[j]))\n                if pair not in seen_pairs:\n                    seen_pairs.add(pair)\n                    count += 1\n    return count",
  "results": {
    "assert count_pairs([1, 5, 3, 4, 2], 5, 3) == 2": {
      "result": true,
      "time": 0.11540436744689941,
      "error": null
    },
    "assert count_pairs([8, 12, 16, 4, 0, 20], 6, 4) == 5": {
      "result": true,
      "time": 0.10608553886413574,
      "error": null
    },
    "assert count_pairs([2, 4, 1, 3, 4], 5, 2) == 3": {
      "result": false,
      "time": 0.0993490219116211,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:17:32",
    "end_time": "2025-05-08 22:17:35",
    "duration": "0:00:02.555072"
  },
  "retry": 0,
  "random_seed": 855
}