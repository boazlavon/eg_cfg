{
  "code": "def binary_search(arr, target):\n    left = 0\n    right = len(arr) - 1\n    found = False\n    while left <= right and not found:\n        mid = (left + right) // 2\n        if arr[mid] == target:\n            found = True\n        else:\n            if target < arr[mid]:\n                right = mid - 1\n            else:\n                left = mid + 1\n    return found",
  "results": {
    "assert binary_search([1,2,3,5,8], 6) == False": {
      "result": true,
      "time": 0.08759427070617676,
      "error": null
    },
    "assert binary_search([7, 8, 9, 10, 13], 10) == True": {
      "result": true,
      "time": 0.0781850814819336,
      "error": null
    },
    "assert binary_search([11, 13, 14, 19, 22, 36], 23) == False": {
      "result": true,
      "time": 0.0763094425201416,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:39:59",
    "end_time": "2025-05-08 22:40:22",
    "duration": "0:00:23.046173"
  },
  "retry": 0,
  "random_seed": 855
}