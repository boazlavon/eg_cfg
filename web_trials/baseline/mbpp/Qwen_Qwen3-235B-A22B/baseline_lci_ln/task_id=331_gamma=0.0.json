{
  "code": "def count_unset_bits(number):\n    if number == 0:\n        return 1\n    bit_length = 0\n    temp = number\n    while temp > 0:\n        temp >>= 1\n        bit_length += 1\n    total_bits = bit_length\n    set_bits = 0\n    temp = number\n    for i in range(total_bits):\n        if temp & 1:\n            set_bits += 1\n        temp >>= 1\n    unset_bits = total_bits - set_bits\n    return unset_bits",
  "results": {
    "assert count_unset_bits(2) == 1": {
      "result": true,
      "time": 0.08230137825012207,
      "error": null
    },
    "assert count_unset_bits(4) == 2": {
      "result": true,
      "time": 0.0805661678314209,
      "error": null
    },
    "assert count_unset_bits(6) == 1": {
      "result": true,
      "time": 0.07763433456420898,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:32:39",
    "end_time": "2025-05-08 22:32:42",
    "duration": "0:00:02.471958"
  },
  "retry": 0,
  "random_seed": 855
}