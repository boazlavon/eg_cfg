{
  "code": "def find_rotation_count(arr):\n    low = 0\n    high = len(arr) - 1\n    while low <= high:\n        if arr[low] <= arr[high]:\n            return low\n        mid = (low + high) // 2\n        next_index = (mid + 1) % len(arr)\n        prev_index = (mid - 1 + len(arr)) % len(arr)\n        if arr[mid] <= arr[next_index] and arr[mid] <= arr[prev_index]:\n            return mid\n        elif arr[mid] <= arr[high]:\n            high = mid - 1\n        else:\n            low = mid + 1\n    return -1",
  "results": {
    "assert find_rotation_count([8, 9, 10, 1, 2, 3, 4, 5, 6, 7]) == 3": {
      "result": true,
      "time": 0.07584810256958008,
      "error": null
    },
    "assert find_rotation_count([8, 9, 10,2, 5, 6]) == 3": {
      "result": true,
      "time": 0.07877850532531738,
      "error": null
    },
    "assert find_rotation_count([2, 5, 6, 8, 9, 10]) == 0": {
      "result": true,
      "time": 0.07524561882019043,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:43:35",
    "end_time": "2025-05-08 22:43:39",
    "duration": "0:00:03.731352"
  },
  "retry": 0,
  "random_seed": 855
}