{
  "code": "def index_on_inner_list(list_of_lists, index):\n    # Create a list to store tuples of (value at index, original list)\n    indexed_list = []\n    \n    # Iterate over each inner list in the input list\n    for inner_list in list_of_lists:\n        # Get the value at the specified index\n        value = inner_list[index]\n        # Append a tuple of (value, inner_list) to indexed_list\n        indexed_list.append((value, inner_list))\n    \n    # Sort the indexed_list based on the value at the specified index\n    sorted_list = []\n    # Extract the inner lists in sorted order\n    for item in sorted(indexed_list):\n        # Get the inner_list from the tuple\n        inner_list = item[1]\n        # Append the inner_list to the sorted_list\n        sorted_list.append(inner_list)\n    \n    # Return the sorted list of lists\n    return sorted_list",
  "results": {
    "assert index_on_inner_list([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,0)==[('Beau Turnbull', 94, 98), ('Brady Kent', 97, 96), ('Greyson Fulton', 98, 99), ('Wyatt Knott', 91, 94)]": {
      "result": true,
      "time": 0.1238250732421875,
      "error": null
    },
    "assert index_on_inner_list([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,1)==[('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98), ('Brady Kent', 97, 96), ('Greyson Fulton', 98, 99)]": {
      "result": true,
      "time": 0.12724065780639648,
      "error": null
    },
    "assert index_on_inner_list([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,2)==[('Wyatt Knott', 91, 94), ('Brady Kent', 97, 96), ('Beau Turnbull', 94, 98), ('Greyson Fulton', 98, 99)]": {
      "result": true,
      "time": 0.12861275672912598,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:56:24",
    "guidance_input_tokens": 760,
    "guidance_output_tokens": 230,
    "end_time": "2025-05-07 18:56:28",
    "duration": "0:00:03.419234"
  },
  "retry": 0,
  "random_seed": 813
}