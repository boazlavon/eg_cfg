{
  "code": "def highest_Power_of_2(n):\n    power = 1\n    while power * 2 <= n:\n        power = power * 2\n    return power",
  "results": {
    "assert highest_Power_of_2(10) == 8": {
      "result": true,
      "time": 0.1383657455444336,
      "error": null
    },
    "assert highest_Power_of_2(19) == 16": {
      "result": true,
      "time": 0.12205886840820312,
      "error": null
    },
    "assert highest_Power_of_2(32) == 32": {
      "result": true,
      "time": 0.12587904930114746,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:47:01",
    "guidance_input_tokens": 490,
    "guidance_output_tokens": 69,
    "end_time": "2025-05-07 18:47:03",
    "duration": "0:00:01.714782"
  },
  "retry": 0,
  "random_seed": 813
}