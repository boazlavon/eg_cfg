{
  "code": "def is_samepatterns(colors, patterns):\n    if len(colors) != len(patterns):\n        return False\n    \n    color_to_pattern = {}\n    pattern_to_color = {}\n    \n    for i in range(len(colors)):\n        current_color = colors[i]\n        current_pattern = patterns[i]\n        \n        if current_color in color_to_pattern:\n            if color_to_pattern[current_color] != current_pattern:\n                return False\n        else:\n            color_to_pattern[current_color] = current_pattern\n        \n        if current_pattern in pattern_to_color:\n            if pattern_to_color[current_pattern] != current_color:\n                return False\n        else:\n            pattern_to_color[current_pattern] = current_color\n    \n    return True",
  "results": {
    "assert is_samepatterns([\"red\",\"green\",\"green\"], [\"a\", \"b\", \"b\"])==True ": {
      "result": true,
      "time": 0.13970303535461426,
      "error": null
    },
    "assert is_samepatterns([\"red\",\"green\",\"greenn\"], [\"a\",\"b\",\"b\"])==False ": {
      "result": true,
      "time": 0.32049131393432617,
      "error": null
    },
    "assert is_samepatterns([\"red\",\"green\",\"greenn\"], [\"a\",\"b\"])==False ": {
      "result": true,
      "time": 0.12066960334777832,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:40:19",
    "guidance_input_tokens": 522,
    "guidance_output_tokens": 174,
    "end_time": "2025-05-07 18:40:23",
    "duration": "0:00:03.418692"
  },
  "retry": 0,
  "random_seed": 813
}