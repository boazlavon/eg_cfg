{
  "code": "def index_minimum(records):\n    # Initialize variables to store the minimum value and corresponding name\n    min_value = None\n    min_name = None\n    \n    # Iterate over each record in the list\n    for record in records:\n        # Extract the name and value from the current record\n        name = record[0]\n        value = record[1]\n        \n        # Check if this is the first record or if the current value is smaller than the known minimum\n        if min_value is None or value < min_value:\n            min_value = value\n            min_name = name\n    \n    # Return the name associated with the minimum value\n    return min_name",
  "results": {
    "assert index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'": {
      "result": true,
      "time": 0.17439532279968262,
      "error": null
    },
    "assert index_minimum([('Yash', 185), ('Dawood', 125), ('Sanya', 175)]) == 'Dawood'": {
      "result": true,
      "time": 0.16106605529785156,
      "error": null
    },
    "assert index_minimum([('Sai', 345), ('Salman', 145), ('Ayesha', 96)]) == 'Ayesha'": {
      "result": true,
      "time": 0.160247802734375,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:41:28",
    "guidance_input_tokens": 545,
    "guidance_output_tokens": 163,
    "end_time": "2025-05-07 18:41:31",
    "duration": "0:00:03.011397"
  },
  "retry": 0,
  "random_seed": 813
}