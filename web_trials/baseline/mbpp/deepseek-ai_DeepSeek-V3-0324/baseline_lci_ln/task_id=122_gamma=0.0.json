{
  "code": "def smartNumber(n):\n    if n == 1:\n        return 30\n    count = 1\n    current_number = 30\n    while count < n:\n        current_number += 1\n        temp = current_number\n        factors = set()\n        divisor = 2\n        while divisor * divisor <= temp:\n            if temp % divisor == 0:\n                factors.add(divisor)\n                temp = temp // divisor\n            else:\n                divisor += 1\n        if temp > 1:\n            factors.add(temp)\n        if len(factors) == 3:\n            count += 1\n    return current_number",
  "results": {
    "assert smartNumber(1) == 30": {
      "result": true,
      "time": 0.11930203437805176,
      "error": null
    },
    "assert smartNumber(50) == 273": {
      "result": false,
      "time": 0.11595511436462402,
      "error": null
    },
    "assert smartNumber(1000) == 2664": {
      "result": false,
      "time": 0.1109318733215332,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:42:53",
    "guidance_input_tokens": 472,
    "guidance_output_tokens": 155,
    "end_time": "2025-05-07 18:42:57",
    "duration": "0:00:03.706016"
  },
  "retry": 0,
  "random_seed": 813
}