{
  "code": "def amicable_numbers_sum(limit):\n    def sum_proper_divisors(n):\n        if n == 1:\n            return 0\n        sum_div = 1\n        sqrt_n = int(n ** 0.5)\n        for i in range(2, sqrt_n + 1):\n            if n % i == 0:\n                sum_div += i\n                counterpart = n // i\n                if counterpart != i:\n                    sum_div += counterpart\n        return sum_div\n\n    amicable_sum = 0\n    checked = set()\n    for a in range(1, limit + 1):\n        if a in checked:\n            continue\n        b = sum_proper_divisors(a)\n        if b != a and sum_proper_divisors(b) == a and b <= limit:\n            amicable_sum += a\n            if b > a:\n                amicable_sum += b\n            checked.add(a)\n            checked.add(b)\n    return amicable_sum",
  "results": {
    "assert amicable_numbers_sum(999)==504": {
      "result": false,
      "time": 0.16044855117797852,
      "error": null
    },
    "assert amicable_numbers_sum(9999)==31626": {
      "result": false,
      "time": 0.1893446445465088,
      "error": null
    },
    "assert amicable_numbers_sum(99)==0": {
      "result": false,
      "time": 0.3172166347503662,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:42:57",
    "guidance_input_tokens": 484,
    "guidance_output_tokens": 226,
    "end_time": "2025-05-07 18:43:05",
    "duration": "0:00:08.224137"
  },
  "retry": 0,
  "random_seed": 813
}