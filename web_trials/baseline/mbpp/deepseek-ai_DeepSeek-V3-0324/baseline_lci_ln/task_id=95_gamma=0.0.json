{
  "code": "def Find_Min_Length(lst):\n    if not lst:\n        return 0\n    min_length = len(lst[0])\n    for sublist in lst:\n        current_length = len(sublist)\n        if current_length < min_length:\n            min_length = current_length\n    return min_length",
  "results": {
    "assert Find_Min_Length([[1],[1,2]]) == 1": {
      "result": true,
      "time": 0.19051265716552734,
      "error": null
    },
    "assert Find_Min_Length([[1,2],[1,2,3],[1,2,3,4]]) == 2": {
      "result": true,
      "time": 0.16520476341247559,
      "error": null
    },
    "assert Find_Min_Length([[3,3,3],[4,4,4,4]]) == 3": {
      "result": true,
      "time": 0.15523195266723633,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:41:31",
    "guidance_input_tokens": 529,
    "guidance_output_tokens": 89,
    "end_time": "2025-05-07 18:41:34",
    "duration": "0:00:02.470981"
  },
  "retry": 0,
  "random_seed": 813
}