{
  "code": "import heapq as hq\n\ndef heap_queue_smallest(nums, n):\n    smallest_nums = hq.nsmallest(n, nums)\n    return smallest_nums",
  "results": {
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],3)==[14, 22, 25] ": {
      "result": true,
      "time": 0.13852572441101074,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],2)==[14, 22]": {
      "result": true,
      "time": 0.12592077255249023,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 22, 58],5)==[14, 22, 22, 25, 35]": {
      "result": true,
      "time": 0.12065505981445312,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:45:40",
    "guidance_input_tokens": 742,
    "guidance_output_tokens": 41,
    "end_time": "2025-05-07 18:45:42",
    "duration": "0:00:01.490842"
  },
  "retry": 0,
  "random_seed": 813
}