{
  "code": "def extract_symmetric(tuple_list):\n    symmetric_pairs = set()\n    seen = set()\n    for pair in tuple_list:\n        reversed_pair = (pair[1], pair[0])\n        if reversed_pair in seen:\n            symmetric_pairs.add(pair)\n            symmetric_pairs.add(reversed_pair)\n        seen.add(pair)\n    return symmetric_pairs",
  "results": {
    "assert extract_symmetric([(6, 7), (2, 3), (7, 6), (9, 8), (10, 2), (8, 9)] ) == {(8, 9), (6, 7)}": {
      "result": false,
      "time": 0.13427138328552246,
      "error": null
    },
    "assert extract_symmetric([(7, 8), (3, 4), (8, 7), (10, 9), (11, 3), (9, 10)] ) == {(9, 10), (7, 8)}": {
      "result": false,
      "time": 0.1278531551361084,
      "error": null
    },
    "assert extract_symmetric([(8, 9), (4, 5), (9, 8), (11, 10), (12, 4), (10, 11)] ) == {(8, 9), (10, 11)}": {
      "result": false,
      "time": 0.09888458251953125,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:45:23",
    "guidance_input_tokens": 766,
    "guidance_output_tokens": 81,
    "end_time": "2025-05-07 18:45:25",
    "duration": "0:00:01.947862"
  },
  "retry": 0,
  "random_seed": 813
}