{
  "code": "def babylonian_squareroot(number):\n    if number == 0:\n        return 0.0\n    guess = number / 2.0\n    while True:\n        new_guess = (guess + number / guess) / 2.0\n        if abs(new_guess - guess) < 1e-15:  # Very small difference to ensure precision\n            break\n        guess = new_guess\n    return guess",
  "results": {
    "assert babylonian_squareroot(10)==3.162277660168379": {
      "result": true,
      "time": 0.19826412200927734,
      "error": null
    },
    "assert babylonian_squareroot(2)==1.414213562373095": {
      "result": true,
      "time": 0.1825556755065918,
      "error": null
    },
    "assert babylonian_squareroot(9)==3.0": {
      "result": true,
      "time": 0.19471096992492676,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:33:56",
    "guidance_input_tokens": 651,
    "guidance_output_tokens": 100,
    "end_time": "2025-05-07 18:33:59",
    "duration": "0:00:02.318089"
  },
  "retry": 0,
  "random_seed": 813
}