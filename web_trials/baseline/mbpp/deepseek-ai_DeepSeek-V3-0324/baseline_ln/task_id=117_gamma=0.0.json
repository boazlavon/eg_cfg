{
  "code": "def list_to_float(lst):\n    converted = []\n    for tup in lst:\n        new_tup = []\n        for item in tup:\n            try:\n                new_tup.append(float(item))\n            except ValueError:\n                new_tup.append(item)\n        converted.append(tuple(new_tup))\n    return str(converted)",
  "results": {
    "assert list_to_float( [(\"3\", \"4\"), (\"1\", \"26.45\"), (\"7.32\", \"8\"), (\"4\", \"8\")] ) == '[(3.0, 4.0), (1.0, 26.45), (7.32, 8.0), (4.0, 8.0)]'": {
      "result": true,
      "time": 0.14046859741210938,
      "error": null
    },
    "assert list_to_float( [(\"4\", \"4\"), (\"2\", \"27\"), (\"4.12\", \"9\"), (\"7\", \"11\")] ) == '[(4.0, 4.0), (2.0, 27.0), (4.12, 9.0), (7.0, 11.0)]'": {
      "result": true,
      "time": 0.13170742988586426,
      "error": null
    },
    "assert list_to_float( [(\"6\", \"78\"), (\"5\", \"26.45\"), (\"1.33\", \"4\"), (\"82\", \"13\")] ) == '[(6.0, 78.0), (5.0, 26.45), (1.33, 4.0), (82.0, 13.0)]'": {
      "result": true,
      "time": 0.1380784511566162,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:27:35",
    "guidance_input_tokens": 837,
    "guidance_output_tokens": 74,
    "end_time": "2025-05-07 18:27:38",
    "duration": "0:00:03.224238"
  },
  "retry": 0,
  "random_seed": 813
}