{
  "code": "def counting_sort(arr):\n    if not arr:\n        return arr\n    \n    max_val = max(arr)\n    min_val = min(arr)\n    \n    count = [0] * (max_val - min_val + 1)\n    \n    for num in arr:\n        count[num - min_val] += 1\n    \n    sorted_arr = []\n    for i in range(len(count)):\n        sorted_arr.extend([i + min_val] * count[i])\n    \n    return sorted_arr",
  "results": {
    "assert counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]": {
      "result": true,
      "time": 0.11504888534545898,
      "error": null
    },
    "assert counting_sort([12, 9, 28, 33, 69, 45]) == [9, 12, 28, 33, 45, 69]": {
      "result": true,
      "time": 0.11418700218200684,
      "error": null
    },
    "assert counting_sort([8, 4, 14, 3, 2, 1]) == [1, 2, 3, 4, 8, 14]": {
      "result": true,
      "time": 0.12259268760681152,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:25:03",
    "guidance_input_tokens": 717,
    "guidance_output_tokens": 102,
    "end_time": "2025-05-07 18:25:06",
    "duration": "0:00:03.326422"
  },
  "retry": 0,
  "random_seed": 813
}