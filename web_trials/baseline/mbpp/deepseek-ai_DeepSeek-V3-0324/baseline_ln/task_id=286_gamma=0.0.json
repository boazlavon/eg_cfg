{
  "code": "def max_sub_array_sum_repeated(arr, n, k):\n    def kadane(arr):\n        max_current = max_global = arr[0]\n        for num in arr[1:]:\n            max_current = max(num, max_current + num)\n            if max_current > max_global:\n                max_global = max_current\n        return max_global\n    \n    max_kadane = kadane(arr)\n    if k == 1:\n        return max_kadane\n    \n    total_sum = sum(arr)\n    max_prefix = max_suffix = -float('inf')\n    current_prefix = current_suffix = 0\n    \n    for i in range(n):\n        current_prefix += arr[i]\n        if current_prefix > max_prefix:\n            max_prefix = current_prefix\n    \n    for i in range(n-1, -1, -1):\n        current_suffix += arr[i]\n        if current_suffix > max_suffix:\n            max_suffix = current_suffix\n    \n    if total_sum > 0:\n        return max(max_kadane, max_suffix + (k-2)*total_sum + max_prefix)\n    else:\n        return max(max_kadane, max_suffix + max_prefix)",
  "results": {
    "assert max_sub_array_sum_repeated([10, 20, -30, -1], 4, 3) == 30": {
      "result": true,
      "time": 0.1303410530090332,
      "error": null
    },
    "assert max_sub_array_sum_repeated([-1, 10, 20], 3, 2) == 59": {
      "result": true,
      "time": 0.11255311965942383,
      "error": null
    },
    "assert max_sub_array_sum_repeated([-1, -2, -3], 3, 3) == -1": {
      "result": true,
      "time": 0.1146085262298584,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:35:36",
    "guidance_input_tokens": 693,
    "guidance_output_tokens": 477,
    "end_time": "2025-05-07 18:35:44",
    "duration": "0:00:07.829819"
  },
  "retry": 0,
  "random_seed": 813
}