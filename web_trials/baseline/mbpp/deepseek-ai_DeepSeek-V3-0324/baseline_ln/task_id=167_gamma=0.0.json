{
  "code": "def next_Power_Of_2(n):\n    if n <= 0:\n        return 1\n    power = 1\n    while power < n:\n        power *= 2\n    return power",
  "results": {
    "assert next_Power_Of_2(0) == 1": {
      "result": true,
      "time": 0.09651589393615723,
      "error": null
    },
    "assert next_Power_Of_2(5) == 8": {
      "result": true,
      "time": 0.0913844108581543,
      "error": null
    },
    "assert next_Power_Of_2(17) == 32": {
      "result": true,
      "time": 0.08573389053344727,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:30:16",
    "guidance_input_tokens": 647,
    "guidance_output_tokens": 49,
    "end_time": "2025-05-07 18:30:18",
    "duration": "0:00:01.514909"
  },
  "retry": 0,
  "random_seed": 813
}