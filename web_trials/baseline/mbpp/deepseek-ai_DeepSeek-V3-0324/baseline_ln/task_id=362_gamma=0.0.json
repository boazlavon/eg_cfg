{
  "code": "from collections import Counter\n\ndef max_occurrences(lst):\n    if not lst:\n        return None  # Handle empty list case\n    \n    count = Counter(lst)\n    max_count = max(count.values())\n    max_items = [item for item, cnt in count.items() if cnt == max_count]\n    \n    if len(max_items) == 1:\n        return max_items[0]\n    else:\n        return tuple(max_items)  # Return as a tuple if multiple items have the same max count",
  "results": {
    "assert max_occurrences([1,2,3,1,2,3,12,4,2]) ==  2": {
      "result": true,
      "time": 0.12534284591674805,
      "error": null
    },
    "assert max_occurrences([1,2,6,7,0,1,0,1,0]) == 1,0": {
      "result": false,
      "time": 0.12230777740478516,
      "error": null
    },
    "assert max_occurrences([1,2,3,1,2,4,1]) == 1": {
      "result": true,
      "time": 0.12322092056274414,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:40:00",
    "guidance_input_tokens": 682,
    "guidance_output_tokens": 154,
    "end_time": "2025-05-07 18:40:03",
    "duration": "0:00:03.324027"
  },
  "retry": 0,
  "random_seed": 813
}