{
  "code": "import heapq\n\ndef heap_queue_smallest(numbers, n):\n    smallest_numbers = heapq.nsmallest(n, numbers)\n    return smallest_numbers",
  "results": {
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],3)==[14, 22, 25] ": {
      "result": true,
      "time": 0.07938003540039062,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],2)==[14, 22]": {
      "result": true,
      "time": 0.07869172096252441,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 22, 58],5)==[14, 22, 22, 25, 35]": {
      "result": true,
      "time": 0.07828712463378906,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:22:26",
    "end_time": "2025-05-08 22:22:47",
    "duration": "0:00:21.375883"
  },
  "retry": 0,
  "random_seed": 855
}