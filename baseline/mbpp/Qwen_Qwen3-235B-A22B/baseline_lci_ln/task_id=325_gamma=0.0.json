{
  "code": "def get_Min_Squares(n):\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = i\n        j = 1\n        while j * j <= i:\n            dp[i] = min(dp[i], 1 + dp[i - j * j])\n            j += 1\n    return dp[n]",
  "results": {
    "assert get_Min_Squares(6) == 3": {
      "result": true,
      "time": 0.08254051208496094,
      "error": null
    },
    "assert get_Min_Squares(2) == 2": {
      "result": true,
      "time": 0.07828831672668457,
      "error": null
    },
    "assert get_Min_Squares(4) == 1": {
      "result": true,
      "time": 0.07982087135314941,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:27:06",
    "end_time": "2025-05-08 22:27:08",
    "duration": "0:00:02.305127"
  },
  "retry": 0,
  "random_seed": 855
}