{
  "code": "def start_withp(words):\n    for phrase in words:\n        words_in_phrase = phrase.split()\n        count = 0\n        for word in words_in_phrase:\n            if word[0].lower() == 'p':\n                count += 1\n        if count >= 2:\n            result = []\n            for word in words_in_phrase:\n                if word[0].lower() == 'p':\n                    result.append(word)\n            return (result[0], result[1])",
  "results": {
    "assert start_withp([\"Python PHP\", \"Java JavaScript\", \"c c++\"])==('Python', 'PHP')": {
      "result": true,
      "time": 0.08046150207519531,
      "error": null
    },
    "assert start_withp([\"Python Programming\",\"Java Programming\"])==('Python','Programming')": {
      "result": true,
      "time": 0.0790708065032959,
      "error": null
    },
    "assert start_withp([\"Pqrst Pqr\",\"qrstuv\"])==('Pqrst','Pqr')": {
      "result": true,
      "time": 0.07697510719299316,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:19:27",
    "end_time": "2025-05-08 22:19:29",
    "duration": "0:00:02.099202"
  },
  "retry": 0,
  "random_seed": 855
}