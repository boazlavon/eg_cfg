{
  "code": "def encode_list(input_list):\n    if not input_list:\n        return []\n    encoded_result = []\n    current_element = input_list[0]\n    count = 1\n    for index in range(1, len(input_list)):\n        element = input_list[index]\n        if element == current_element:\n            count += 1\n        else:\n            encoded_result.append([count, current_element])\n            current_element = element\n            count = 1\n    encoded_result.append([count, current_element])\n    return encoded_result",
  "results": {
    "assert encode_list([1,1,2,3,4,4.3,5,1])==[[2, 1], [1, 2], [1, 3], [1, 4], [1, 4.3], [1, 5], [1, 1]]": {
      "result": true,
      "time": 0.08379602432250977,
      "error": null
    },
    "assert encode_list('automatically')==[[1, 'a'], [1, 'u'], [1, 't'], [1, 'o'], [1, 'm'], [1, 'a'], [1, 't'], [1, 'i'], [1, 'c'], [1, 'a'], [2, 'l'], [1, 'y']]": {
      "result": true,
      "time": 0.08071494102478027,
      "error": null
    },
    "assert encode_list('python')==[[1, 'p'], [1, 'y'], [1, 't'], [1, 'h'], [1, 'o'], [1, 'n']]": {
      "result": true,
      "time": 0.07900667190551758,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:29:41",
    "end_time": "2025-05-08 22:30:04",
    "duration": "0:00:23.003665"
  },
  "retry": 0,
  "random_seed": 855
}