{
  "code": "def ap_sum(a, n, d):\n    # Calculate the number of terms in the arithmetic progression\n    number_of_terms = n\n    \n    # Calculate the last term of the arithmetic progression\n    last_term = a + (number_of_terms - 1) * d\n    \n    # Calculate the sum of the arithmetic progression using the formula\n    # sum = number_of_terms / 2 * (first_term + last_term)\n    sum_of_ap = number_of_terms / 2 * (a + last_term)\n    \n    # Return the calculated sum\n    return sum_of_ap",
  "results": {
    "assert ap_sum(1,5,2)==25": {
      "result": true,
      "time": 0.08019351959228516,
      "error": null
    },
    "assert ap_sum(2,6,4)==72": {
      "result": true,
      "time": 0.08120298385620117,
      "error": null
    },
    "assert ap_sum(1,4,5)==34": {
      "result": true,
      "time": 0.08367228507995605,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:31:14",
    "end_time": "2025-05-08 22:31:17",
    "duration": "0:00:02.911159"
  },
  "retry": 0,
  "random_seed": 855
}