{
  "code": "def next_Power_Of_2(n):\n    if n == 0:\n        return 1\n    power = 1\n    while power < n:\n        power *= 2\n    return power",
  "results": {
    "assert next_Power_Of_2(0) == 1": {
      "result": true,
      "time": 0.11763596534729004,
      "error": null
    },
    "assert next_Power_Of_2(5) == 8": {
      "result": true,
      "time": 0.31809163093566895,
      "error": null
    },
    "assert next_Power_Of_2(17) == 32": {
      "result": true,
      "time": 0.11026525497436523,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:15:15",
    "end_time": "2025-05-08 22:15:17",
    "duration": "0:00:02.182122"
  },
  "retry": 0,
  "random_seed": 855
}