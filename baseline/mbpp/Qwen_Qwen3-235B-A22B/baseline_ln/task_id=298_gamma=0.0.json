{
  "code": "def intersection_nested_lists(main_list, nested_lists):\n    result = []\n    for sublist in nested_lists:\n        common_elements = []\n        for item in sublist:\n            if item in main_list:\n                common_elements.append(item)\n        result.append(common_elements)\n    return result",
  "results": {
    "assert intersection_nested_lists( [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],[[12, 18, 23, 25, 45], [7, 11, 19, 24, 28], [1, 5, 8, 18, 15, 16]])==[[12], [7, 11], [1, 5, 8]]": {
      "result": true,
      "time": 0.07689523696899414,
      "error": null
    },
    "assert intersection_nested_lists([[2, 3, 1], [4, 5], [6, 8]], [[4, 5], [6, 8]])==[[], []]": {
      "result": true,
      "time": 0.07320404052734375,
      "error": null
    },
    "assert intersection_nested_lists(['john','amal','joel','george'],[['john'],['jack','john','mary'],['howard','john'],['jude']])==[['john'], ['john'], ['john'], []]": {
      "result": true,
      "time": 0.07618522644042969,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:35:02",
    "end_time": "2025-05-08 22:35:04",
    "duration": "0:00:01.659245"
  },
  "retry": 0,
  "random_seed": 855
}