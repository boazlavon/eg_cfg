{
  "code": "def max_sum(arr, n):\n    # Initialize two arrays for storing maximum sums\n    inc = [x for x in arr]\n    dec = [x for x in arr]\n    \n    # Compute maximum increasing subsequence sums\n    for i in range(n):\n        for j in range(i):\n            if arr[i] > arr[j] and inc[i] < inc[j] + arr[i]:\n                inc[i] = inc[j] + arr[i]\n    \n    # Compute maximum decreasing subsequence sums\n    for i in range(n-1, -1, -1):\n        for j in range(n-1, i, -1):\n            if arr[i] > arr[j] and dec[i] < dec[j] + arr[i]:\n                dec[i] = dec[j] + arr[i]\n    \n    # Find maximum sum of bi-tonic subsequence\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    \n    return max_sum",
  "results": {
    "assert max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9], 9) == 194": {
      "result": true,
      "time": 0.1165158748626709,
      "error": null
    },
    "assert max_sum([80, 60, 30, 40, 20, 10], 6) == 210": {
      "result": true,
      "time": 0.10535597801208496,
      "error": null
    },
    "assert max_sum([2, 3 ,14, 16, 21, 23, 29, 30], 8) == 138": {
      "result": true,
      "time": 0.10275387763977051,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:21:45",
    "end_time": "2025-05-08 22:21:49",
    "duration": "0:00:03.910547"
  },
  "retry": 0,
  "random_seed": 855
}