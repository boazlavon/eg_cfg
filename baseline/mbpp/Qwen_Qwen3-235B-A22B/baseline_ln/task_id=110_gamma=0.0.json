{
  "code": "def extract_missing(ranges, start, end):\n    missing = []\n    for r in ranges:\n        if r[0] < start:\n            missing.append((r[0], min(r[1], start)))\n        if r[1] > end:\n            missing.append((max(r[0], end), r[1]))\n    missing.append((start, end))\n    return sorted(missing)",
  "results": {
    "assert extract_missing([(6, 9), (15, 34), (48, 70)], 2, 100) == [(2, 6), (9, 100), (9, 15), (34, 100), (34, 48), (70, 100)]": {
      "result": false,
      "time": 0.09808230400085449,
      "error": null
    },
    "assert extract_missing([(7, 2), (15, 19), (38, 50)], 5, 60) == [(5, 7), (2, 60), (2, 15), (19, 60), (19, 38), (50, 60)]": {
      "result": false,
      "time": 0.09041285514831543,
      "error": null
    },
    "assert extract_missing([(7, 2), (15, 19), (38, 50)], 1, 52) == [(1, 7), (2, 52), (2, 15), (19, 52), (19, 38), (50, 52)]": {
      "result": false,
      "time": 0.09072279930114746,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 23:05:20",
    "end_time": "2025-05-08 23:05:22",
    "duration": "0:00:02.643890"
  },
  "retry": 0,
  "random_seed": 855
}