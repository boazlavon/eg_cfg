{
  "code": "def max_len_sub(arr, n):\n    dp = {}\n    max_length = 1\n    \n    for num in arr:\n        current_length = 1\n        # Check for num - 1, num, and num + 1 in dp\n        if num - 1 in dp:\n            current_length = max(current_length, dp[num - 1] + 1)\n        if num in dp:\n            current_length = max(current_length, dp[num] + 0)  # Not increasing length if same num\n        if num + 1 in dp:\n            current_length = max(current_length, dp[num + 1] + 1)\n        \n        dp[num] = current_length\n        max_length = max(max_length, current_length)\n    \n    return max_length",
  "results": {
    "assert max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 8) == 5": {
      "result": true,
      "time": 0.10671401023864746,
      "error": null
    },
    "assert max_len_sub([-2, -1, 5, -1, 4, 0, 3], 7) == 4": {
      "result": false,
      "time": 0.12783122062683105,
      "error": null
    },
    "assert max_len_sub([9, 11, 13, 15, 18], 5) == 1": {
      "result": true,
      "time": 0.12376570701599121,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:25:19",
    "guidance_input_tokens": 700,
    "guidance_output_tokens": 358,
    "end_time": "2025-05-07 18:25:24",
    "duration": "0:00:05.157301"
  },
  "retry": 0,
  "random_seed": 813
}