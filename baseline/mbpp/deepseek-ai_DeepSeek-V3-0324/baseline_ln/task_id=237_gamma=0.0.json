{
  "code": "def check_occurences(tuples_list):\n    occurrence_dict = {}\n    for t in tuples_list:\n        # Create a sorted tuple to handle order-insensitive comparison\n        sorted_t = tuple(sorted(t))\n        if sorted_t in occurrence_dict:\n            occurrence_dict[sorted_t] += 1\n        else:\n            occurrence_dict[sorted_t] = 1\n    return occurrence_dict",
  "results": {
    "assert check_occurences([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)] ) == {(1, 3): 2, (2, 5): 2, (3, 6): 1}": {
      "result": true,
      "time": 0.1340348720550537,
      "error": null
    },
    "assert check_occurences([(4, 2), (2, 4), (3, 6), (6, 3), (7, 4)] ) == {(2, 4): 2, (3, 6): 2, (4, 7): 1}": {
      "result": true,
      "time": 0.14013028144836426,
      "error": null
    },
    "assert check_occurences([(13, 2), (11, 23), (12, 25), (25, 12), (16, 23)] ) == {(2, 13): 1, (11, 23): 1, (12, 25): 2, (16, 23): 1}": {
      "result": true,
      "time": 0.12626433372497559,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:33:30",
    "guidance_input_tokens": 809,
    "guidance_output_tokens": 160,
    "end_time": "2025-05-07 18:33:33",
    "duration": "0:00:02.995440"
  },
  "retry": 0,
  "random_seed": 813
}