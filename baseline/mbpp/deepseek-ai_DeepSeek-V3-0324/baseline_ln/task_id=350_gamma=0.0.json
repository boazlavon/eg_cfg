{
  "code": "from collections import Counter\n\ndef minimum_Length(s):\n    if not s:\n        return 0\n    char_counts = Counter(s)\n    min_char = min(char_counts, key=char_counts.get)\n    return len(s) - char_counts[min_char]",
  "results": {
    "assert minimum_Length(\"mnm\") == 1": {
      "result": false,
      "time": 0.12360072135925293,
      "error": null
    },
    "assert minimum_Length(\"abcda\") == 3": {
      "result": false,
      "time": 0.11569595336914062,
      "error": null
    },
    "assert minimum_Length(\"abcb\") == 2": {
      "result": false,
      "time": 0.1124565601348877,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:39:13",
    "guidance_input_tokens": 639,
    "guidance_output_tokens": 58,
    "end_time": "2025-05-07 18:39:16",
    "duration": "0:00:02.560434"
  },
  "retry": 0,
  "random_seed": 813
}