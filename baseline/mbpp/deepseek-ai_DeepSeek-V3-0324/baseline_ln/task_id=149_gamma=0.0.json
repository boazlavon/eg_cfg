{
  "code": "def longest_subseq_with_diff_one(arr, n):\n    dp = {}\n    max_length = 1\n    \n    for num in arr:\n        if num in dp:\n            current_length = dp[num]\n        else:\n            current_length = 1\n        \n        if num - 1 in dp:\n            current_length = max(current_length, dp[num - 1] + 1)\n        if num + 1 in dp:\n            current_length = max(current_length, dp[num + 1] + 1)\n        \n        dp[num] = current_length\n        if current_length > max_length:\n            max_length = current_length\n    \n    return max_length",
  "results": {
    "assert longest_subseq_with_diff_one([1, 2, 3, 4, 5, 3, 2], 7) == 6": {
      "result": true,
      "time": 0.3629887104034424,
      "error": null
    },
    "assert longest_subseq_with_diff_one([10, 9, 4, 5, 4, 8, 6], 7) == 3": {
      "result": true,
      "time": 0.12951898574829102,
      "error": null
    },
    "assert longest_subseq_with_diff_one([1, 2, 3, 2, 3, 7, 2, 1], 8) == 7": {
      "result": true,
      "time": 0.1345808506011963,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:29:03",
    "guidance_input_tokens": 716,
    "guidance_output_tokens": 335,
    "end_time": "2025-05-07 18:29:09",
    "duration": "0:00:05.821164"
  },
  "retry": 0,
  "random_seed": 813
}