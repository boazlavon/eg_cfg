{
  "code": "def max_product(arr, n):\n    # Initialize a list to store the maximum product ending at each position\n    max_prod = [1] * n\n    \n    for i in range(n):\n        max_prod[i] = arr[i]  # Initialize with the element itself\n        for j in range(i):\n            if arr[j] < arr[i] and max_prod[i] < max_prod[j] * arr[i]:\n                max_prod[i] = max_prod[j] * arr[i]\n    \n    return max(max_prod)",
  "results": {
    "assert max_product([3, 100, 4, 5, 150, 6], 6) == 45000 ": {
      "result": true,
      "time": 0.13377881050109863,
      "error": null
    },
    "assert max_product([4, 42, 55, 68, 80], 5) == 50265600": {
      "result": true,
      "time": 0.1281285285949707,
      "error": null
    },
    "assert max_product([10, 22, 9, 33, 21, 50, 41, 60], 8) == 21780000 ": {
      "result": true,
      "time": 0.12223505973815918,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:44:37",
    "guidance_input_tokens": 697,
    "guidance_output_tokens": 198,
    "end_time": "2025-05-07 18:44:40",
    "duration": "0:00:02.939152"
  },
  "retry": 0,
  "random_seed": 813
}