{
  "code": "def next_Perfect_Square(num):\n    if num < 0:\n        return 0\n    current_num = num + 1\n    while True:\n        sqrt_val = current_num ** 0.5\n        is_perfect_square = sqrt_val == int(sqrt_val)\n        if is_perfect_square:\n            return current_num\n        current_num += 1",
  "results": {
    "assert next_Perfect_Square(35) == 36": {
      "result": true,
      "time": 0.09792709350585938,
      "error": null
    },
    "assert next_Perfect_Square(6) == 9": {
      "result": true,
      "time": 0.08733320236206055,
      "error": null
    },
    "assert next_Perfect_Square(9) == 16": {
      "result": true,
      "time": 0.07954788208007812,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:49:19",
    "guidance_input_tokens": 487,
    "guidance_output_tokens": 106,
    "end_time": "2025-05-07 18:49:21",
    "duration": "0:00:01.945941"
  },
  "retry": 0,
  "random_seed": 813
}