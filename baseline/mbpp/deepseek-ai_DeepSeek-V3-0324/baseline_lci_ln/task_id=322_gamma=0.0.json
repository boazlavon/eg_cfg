{
  "code": "def position_min(lst):\n    if not lst:\n        return []\n    \n    min_value = lst[0]\n    min_indices = [0]\n    \n    for i in range(1, len(lst)):\n        current_value = lst[i]\n        \n        if current_value < min_value:\n            min_value = current_value\n            min_indices = [i]\n        elif current_value == min_value:\n            min_indices.append(i)\n    \n    return min_indices",
  "results": {
    "assert position_min([12,33,23,10,67,89,45,667,23,12,11,10,54])==[3,11]": {
      "result": true,
      "time": 0.13201189041137695,
      "error": null
    },
    "assert position_min([1,2,2,2,4,4,4,5,5,5,5])==[0]": {
      "result": true,
      "time": 0.12275862693786621,
      "error": null
    },
    "assert position_min([2,1,5,6,8,3,4,9,10,11,8,12])==[1]": {
      "result": true,
      "time": 0.11460471153259277,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:53:24",
    "guidance_input_tokens": 578,
    "guidance_output_tokens": 123,
    "end_time": "2025-05-07 18:53:28",
    "duration": "0:00:03.610373"
  },
  "retry": 0,
  "random_seed": 813
}