{
  "code": "def longest_subseq_with_diff_one(arr, n):\n    dp = []\n    for i in range(n):\n        dp.append(1)\n    \n    for i in range(1, n):\n        for j in range(i):\n            diff = arr[i] - arr[j]\n            if diff == 1 or diff == -1:\n                if dp[i] < dp[j] + 1:\n                    dp[i] = dp[j] + 1\n    \n    max_length = 0\n    for num in dp:\n        if num > max_length:\n            max_length = num\n    \n    return max_length",
  "results": {
    "assert longest_subseq_with_diff_one([1, 2, 3, 4, 5, 3, 2], 7) == 6": {
      "result": true,
      "time": 0.12095928192138672,
      "error": null
    },
    "assert longest_subseq_with_diff_one([10, 9, 4, 5, 4, 8, 6], 7) == 3": {
      "result": true,
      "time": 0.1221466064453125,
      "error": null
    },
    "assert longest_subseq_with_diff_one([1, 2, 3, 2, 3, 7, 2, 1], 8) == 7": {
      "result": true,
      "time": 0.12045574188232422,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:44:34",
    "guidance_input_tokens": 561,
    "guidance_output_tokens": 153,
    "end_time": "2025-05-07 18:44:37",
    "duration": "0:00:02.886922"
  },
  "retry": 0,
  "random_seed": 813
}