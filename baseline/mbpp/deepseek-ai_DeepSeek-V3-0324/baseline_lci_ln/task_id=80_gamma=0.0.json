{
  "code": "def tetrahedral_number(n):\n    # Calculate the sum of the first n triangular numbers\n    total = 0\n    for k in range(1, n + 1):\n        # Calculate the kth triangular number\n        triangular = k * (k + 1) / 2\n        # Add it to the total\n        total += triangular\n    return total",
  "results": {
    "assert tetrahedral_number(5) == 35.0": {
      "result": true,
      "time": 0.16822075843811035,
      "error": null
    },
    "assert tetrahedral_number(6) == 56.0": {
      "result": true,
      "time": 0.16506361961364746,
      "error": null
    },
    "assert tetrahedral_number(7) == 84.0": {
      "result": true,
      "time": 0.3781437873840332,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:40:43",
    "guidance_input_tokens": 479,
    "guidance_output_tokens": 100,
    "end_time": "2025-05-07 18:40:48",
    "duration": "0:00:05.250830"
  },
  "retry": 0,
  "random_seed": 813
}