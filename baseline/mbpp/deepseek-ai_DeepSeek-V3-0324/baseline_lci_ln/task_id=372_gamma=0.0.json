{
  "code": "import heapq\n\ndef heap_assending(lst):\n    heap = []\n    for num in lst:\n        heapq.heappush(heap, num)\n    sorted_list = []\n    while heap:\n        smallest = heapq.heappop(heap)\n        sorted_list.append(smallest)\n    return sorted_list",
  "results": {
    "assert heap_assending([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1])==[1, 2, 3, 4, 7, 8, 9, 9, 10, 14, 18]": {
      "result": true,
      "time": 0.11757969856262207,
      "error": null
    },
    "assert heap_assending([25, 35, 22, 85, 14, 65, 75, 25, 58])==[14, 22, 25, 25, 35, 58, 65, 75, 85]": {
      "result": true,
      "time": 0.09387636184692383,
      "error": null
    },
    "assert heap_assending([1, 3, 5, 7, 9, 2, 4, 6, 8, 0])==[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]": {
      "result": true,
      "time": 0.10323572158813477,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:56:01",
    "guidance_input_tokens": 642,
    "guidance_output_tokens": 85,
    "end_time": "2025-05-07 18:56:04",
    "duration": "0:00:03.121573"
  },
  "retry": 0,
  "random_seed": 813
}