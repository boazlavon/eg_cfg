{
  "code": "def even_bit_toggle_number(n):\n    mask = 0\n    bit_position = 0\n    while n >> bit_position > 0:\n        if bit_position % 2 == 1:\n            mask = mask | (1 << bit_position)\n        bit_position = bit_position + 1\n    result = n ^ mask\n    return result",
  "results": {
    "assert even_bit_toggle_number(10) == 0": {
      "result": true,
      "time": 0.11599874496459961,
      "error": null
    },
    "assert even_bit_toggle_number(20) == 30": {
      "result": true,
      "time": 0.12804818153381348,
      "error": null
    },
    "assert even_bit_toggle_number(30) == 20": {
      "result": true,
      "time": 0.12720727920532227,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:44:51",
    "guidance_input_tokens": 482,
    "guidance_output_tokens": 96,
    "end_time": "2025-05-07 18:44:53",
    "duration": "0:00:01.797882"
  },
  "retry": 0,
  "random_seed": 813
}