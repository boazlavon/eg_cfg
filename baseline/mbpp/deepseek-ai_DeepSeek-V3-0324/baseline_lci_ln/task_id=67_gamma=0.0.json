{
  "code": "def bell_number(n):\n    if n == 0:\n        return 1\n    bell = [[0] * (n + 1) for _ in range(n + 1)]\n    bell[0][0] = 1\n    for i in range(1, n + 1):\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in range(1, i + 1):\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n    return bell[n][0]",
  "results": {
    "assert bell_number(2)==2": {
      "result": true,
      "time": 0.11983585357666016,
      "error": null
    },
    "assert bell_number(10)==115975": {
      "result": true,
      "time": 0.10889267921447754,
      "error": null
    },
    "assert bell_number(56)==6775685320645824322581483068371419745979053216268760300": {
      "result": true,
      "time": 0.10759592056274414,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:39:57",
    "guidance_input_tokens": 495,
    "guidance_output_tokens": 147,
    "end_time": "2025-05-07 18:39:59",
    "duration": "0:00:02.232358"
  },
  "retry": 0,
  "random_seed": 813
}