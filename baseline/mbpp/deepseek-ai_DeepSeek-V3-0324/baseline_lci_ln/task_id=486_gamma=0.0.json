{
  "code": "import math\n\ndef binomial_probability(n, k, p):\n    # Calculate the binomial coefficient (n choose k)\n    numerator = math.factorial(n)\n    denominator = math.factorial(k) * math.factorial(n - k)\n    binomial_coefficient = numerator / denominator\n    \n    # Calculate the probability of success raised to the power of k\n    success_probability = p ** k\n    \n    # Calculate the probability of failure raised to the power of (n - k)\n    failure_probability = (1 - p) ** (n - k)\n    \n    # Calculate the final binomial probability\n    probability = binomial_coefficient * success_probability * failure_probability\n    \n    return probability",
  "results": {
    "assert binomial_probability(10, 5, 1.0/3) == 0.13656454808718185": {
      "result": true,
      "time": 0.1578655242919922,
      "error": null
    },
    "assert binomial_probability(11, 6, 2.0/4) == 0.2255859375": {
      "result": true,
      "time": 0.1386563777923584,
      "error": null
    },
    "assert binomial_probability(12, 7, 3.0/5) == 0.227030335488": {
      "result": true,
      "time": 0.14034104347229004,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 19:01:38",
    "guidance_input_tokens": 524,
    "guidance_output_tokens": 164,
    "end_time": "2025-05-07 19:01:41",
    "duration": "0:00:03.479186"
  },
  "retry": 0,
  "random_seed": 813
}