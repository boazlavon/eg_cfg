{
  "code": "def binary_search(arr, target):\n    left = 0\n    right = len(arr) - 1\n    while left <= right:\n        mid = (left + right) // 2\n        mid_value = arr[mid]\n        if mid_value == target:\n            return True\n        elif mid_value < target:\n            left = mid + 1\n        else:\n            right = mid - 1\n    return False",
  "results": {
    "assert binary_search([1,2,3,5,8], 6) == False": {
      "result": true,
      "time": 0.13633966445922852,
      "error": null
    },
    "assert binary_search([7, 8, 9, 10, 13], 10) == True": {
      "result": true,
      "time": 0.3397645950317383,
      "error": null
    },
    "assert binary_search([11, 13, 14, 19, 22, 36], 23) == False": {
      "result": true,
      "time": 0.11789894104003906,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 19:01:55",
    "guidance_input_tokens": 520,
    "guidance_output_tokens": 110,
    "end_time": "2025-05-07 19:01:57",
    "duration": "0:00:02.411669"
  },
  "retry": 0,
  "random_seed": 813
}