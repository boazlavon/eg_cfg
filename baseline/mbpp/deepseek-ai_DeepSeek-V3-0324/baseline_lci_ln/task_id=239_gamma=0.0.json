{
  "code": "def get_total_number_of_sequences(m, n):\n    if n == 1:\n        return m\n    total = 0\n    for first in range(1, m + 1):\n        remaining_length = n - 1\n        min_next = 2 * first\n        if min_next > m:\n            continue\n        max_next = m\n        total += get_total_number_of_sequences(max_next, remaining_length)\n        total -= get_total_number_of_sequences(min_next - 1, remaining_length)\n    return total",
  "results": {
    "assert get_total_number_of_sequences(10, 4) == 4": {
      "result": false,
      "time": 0.10056614875793457,
      "error": null
    },
    "assert get_total_number_of_sequences(5, 2) == 6": {
      "result": true,
      "time": 0.08641362190246582,
      "error": null
    },
    "assert get_total_number_of_sequences(16, 3) == 84": {
      "result": false,
      "time": 0.08043622970581055,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:49:06",
    "guidance_input_tokens": 519,
    "guidance_output_tokens": 135,
    "end_time": "2025-05-07 18:49:08",
    "duration": "0:00:02.031206"
  },
  "retry": 0,
  "random_seed": 813
}