{
  "code": "def max_sum_increasing_subseq(nums, n, k, i):\n    dp = [0] * n\n    dp[i] = nums[i]\n    for j in range(i - 1, -1, -1):\n        if nums[j] < nums[i]:\n            dp[j] = max(dp[j], dp[i] + nums[j])\n    return max(dp[:k], default=0)\n",
  "results": {
    "assert max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 4, 6) == 11": {
      "result": false,
      "time": 0.13152551651000977,
      "error": null
    },
    "assert max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 2, 5) == 7": {
      "result": false,
      "time": 0.12543439865112305,
      "error": null
    },
    "assert max_sum_increasing_subseq([11, 15, 19, 21, 26, 28, 31], 7, 2, 4) == 71": {
      "result": false,
      "time": 0.12459325790405273,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}