{
  "code": "def find_minimum_range(arrays):\n    merged = []\n    for array in arrays:\n        merged += array\n    merged = sorted(merged)\n    min_diff = merged[-1] - merged[0]\n    min_range = (merged[0], merged[-1])\n    for i in range(len(merged) - 1):\n        if merged[i + 1] - merged[i] < min_diff:\n            min_diff = merged[i + 1] - merged[i]\n            min_range = (merged[i], merged[i + 1])\n    return min_range\n",
  "results": {
    "assert find_minimum_range([[3, 6, 8, 10, 15], [1, 5, 12], [4, 8, 15, 16], [2, 6]]) == (4, 6)": {
      "result": false,
      "time": 0.3691093921661377,
      "error": null
    },
    "assert find_minimum_range([[ 2, 3, 4, 8, 10, 15 ], [1, 5, 12], [7, 8, 15, 16], [3, 6]]) == (4, 7)": {
      "result": false,
      "time": 0.24898266792297363,
      "error": null
    },
    "assert find_minimum_range([[4, 7, 9, 11, 16], [2, 6, 13], [5, 9, 16, 17], [3, 7]]) == (5, 7)": {
      "result": false,
      "time": 0.7455785274505615,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}