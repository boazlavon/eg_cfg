{
  "code": "from collections import Counter\n\n\ndef rearange_string(s):\n    counter = Counter(s)\n    values = list(counter.values())\n    keys = list(counter.keys())\n    result = []\n    while len(values) > 0:\n        min_value = min(values)\n        values = [v - min_value for v in values]\n        result += [k] * min_value\n    return \"\".join(result)\n",
  "results": {
    "assert rearange_string(\"aab\")==('aba')": {
      "result": false,
      "time": 0.20770812034606934,
      "error": null
    },
    "assert rearange_string(\"aabb\")==('abab')": {
      "result": false,
      "time": 0.2024528980255127,
      "error": null
    },
    "assert rearange_string(\"abccdd\")==('cdabcd')": {
      "result": false,
      "time": 0.20174360275268555,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}