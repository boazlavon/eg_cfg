{
  "code": "def odd_bit_set_number(n):\n    binary_n = bin(n)[2:]\n    odd_bits_set = [int(bit) if int(bit) % 2 != 0 else bit for bit in binary_n]\n    return int(\"\".join(odd_bits_set), 2)\n",
  "results": {
    "assert odd_bit_set_number(10) == 15": {
      "result": false,
      "time": 0.295788049697876,
      "error": null
    },
    "assert odd_bit_set_number(20) == 21": {
      "result": false,
      "time": 0.6758930683135986,
      "error": null
    },
    "assert odd_bit_set_number(30) == 31": {
      "result": false,
      "time": 0.3766212463378906,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}