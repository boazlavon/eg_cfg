{
  "code": "def find_peak(arr, n):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1 if arr[0] > arr[1] else 0\n    else:\n        max_index = arr.index(max(arr))\n        if max_index == 0:\n            return 0\n        elif max_index == n - 1:\n            return n - 1\n        else:\n            prev_index = max_index - 1\n            next_index = max_index + 1\n            if arr[prev_index] <= arr[max_index] and arr[next_index] <= arr[max_index]:\n                return max_index\n            elif arr[prev_index] > arr[max_index]:\n                return prev_index\n            else:\n                return next_index\n",
  "results": {
    "assert find_peak([1, 3, 20, 4, 1, 0], 6) == 2": {
      "result": true,
      "time": 0.24928665161132812,
      "error": null
    },
    "assert find_peak([2, 3, 4, 5, 6], 5) == 4": {
      "result": true,
      "time": 0.2678961753845215,
      "error": null
    },
    "assert find_peak([8, 9, 11, 12, 14, 15], 6) == 5 ": {
      "result": true,
      "time": 0.2658994197845459,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}