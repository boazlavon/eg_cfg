{
  "code": "def max_sum_rectangular_grid(grid, n):\n    m, n = len(grid), len(grid[0])\n    prefix = [[0] * (n + 1) for _ in range(m + 1)]\n    for i in range(m):\n        for j in range(n):\n            prefix[i + 1][j + 1] = prefix[i + 1][j] + prefix[i][j + 1] - prefix[i][j] + grid[i][j]\n    max_sum = float(\"-inf\")\n    for i in range(m):\n        for j in range(n):\n            for k in range(j + 1, n + 1):\n                max_sum = max(max_sum, prefix[i + 1][k] - prefix[i + 1][j] - prefix[i][k] + prefix[i][j])\n    return max_sum\n",
  "results": {
    "assert max_sum_rectangular_grid([ [1, 4, 5], [2, 0, 0 ] ], 3) == 7": {
      "result": false,
      "time": 0.10281515121459961,
      "error": null
    },
    "assert max_sum_rectangular_grid([ [ 1, 2, 3, 4, 5], [ 6, 7, 8, 9, 10] ], 5) == 24": {
      "result": false,
      "time": 0.10318446159362793,
      "error": null
    },
    "assert max_sum_rectangular_grid([ [7, 9, 11, 15, 19], [21, 25, 28, 31, 32] ], 5) == 81": {
      "result": false,
      "time": 0.12186074256896973,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}