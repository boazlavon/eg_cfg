{
  "code": "def find_Divisor(start, end):\n    divisors = {}\n    for i in range(start, end + 1):\n        for j in range(1, i + 1):\n            if i % j == 0:\n                divisors[j] = divisors.get(j, 0) + 1\n    max_divisor = max(divisors, key=divisors.get)\n    return max_divisor\n",
  "results": {
    "assert find_Divisor(2,2) == 2": {
      "result": false,
      "time": 0.2669956684112549,
      "error": null
    },
    "assert find_Divisor(2,5) == 2": {
      "result": false,
      "time": 0.25640034675598145,
      "error": null
    },
    "assert find_Divisor(5,10) == 2": {
      "result": false,
      "time": 0.2518284320831299,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}