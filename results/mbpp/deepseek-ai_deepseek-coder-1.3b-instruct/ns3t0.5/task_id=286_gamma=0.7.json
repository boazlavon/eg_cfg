{
  "code": "def max_sub_array_sum_repeated(arr, n, k):\n    size = len(arr)\n    total_sum = sum(arr)\n    total_sum_repeated = total_sum * k\n    max_sub_array_sum = max(arr)\n    max_sub_array_sum_repeated = max_sub_array_sum * k\n    return max(total_sum_repeated - max_sub_array_sum_repeated, max_sub_array_sum)\n",
  "results": {
    "assert max_sub_array_sum_repeated([10, 20, -30, -1], 4, 3) == 30": {
      "result": false,
      "time": 0.23524928092956543,
      "error": null
    },
    "assert max_sub_array_sum_repeated([-1, 10, 20], 3, 2) == 59": {
      "result": false,
      "time": 0.23256278038024902,
      "error": null
    },
    "assert max_sub_array_sum_repeated([-1, -2, -3], 3, 3) == -1": {
      "result": true,
      "time": 0.24251580238342285,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false
}