{
  "code": "def adjacent_num_product(nums):\n    if len(nums) < 2:\n        return None\n    max_product = nums[0] * nums[1]\n    for i in range(1, len(nums) - 1):\n        product = nums[i] * nums[i + 1]\n        max_product = max(max_product, product)\n    return max_product\n",
  "results": {
    "assert adjacent_num_product([1,2,3,4,5,6]) == 30": {
      "result": true,
      "time": 0.23864102363586426,
      "error": null
    },
    "assert adjacent_num_product([1,2,3,4,5]) == 20": {
      "result": true,
      "time": 0.2503795623779297,
      "error": null
    },
    "assert adjacent_num_product([2,3]) == 6": {
      "result": true,
      "time": 0.2598991394042969,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}