{
  "code": "from collections import Counter\n\n\ndef rearange_string(s):\n    counter = Counter(s)\n    odd_count = [k * (counter[k] % 2) for k in counter.keys() if counter[k] % 2 != 0]\n    sorted_odd_count = sorted(odd_count)\n    res = \"\".join(sorted_odd_count + [k * (counter[k] // 2) for k in sorted(counter.keys())])\n    return res\n",
  "results": {
    "assert rearange_string(\"aab\")==('aba')": {
      "result": false,
      "time": 0.21513891220092773,
      "error": null
    },
    "assert rearange_string(\"aabb\")==('abab')": {
      "result": false,
      "time": 0.21024513244628906,
      "error": null
    },
    "assert rearange_string(\"abccdd\")==('cdabcd')": {
      "result": false,
      "time": 0.21330618858337402,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}