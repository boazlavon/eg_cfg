{
  "code": "def bell_number(n):\n    bell = [[0 for i in range(n + 1)] for j in range(n + 1)]\n    bell[0][0] = 1\n    for i in range(1, n + 1):\n        for j in range(i + 1):\n            if j == 0 or j == i:\n                bell[i][j] = 1\n            else:\n                bell[i][j] = bell[i - 1][j - 1] + bell[i - 1][j]\n    return bell[n][0]\n",
  "results": {
    "assert bell_number(2)==2": {
      "result": false,
      "time": 0.2269456386566162,
      "error": null
    },
    "assert bell_number(10)==115975": {
      "result": false,
      "time": 0.2499384880065918,
      "error": null
    },
    "assert bell_number(56)==6775685320645824322581483068371419745979053216268760300": {
      "result": false,
      "time": 0.2576260566711426,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}