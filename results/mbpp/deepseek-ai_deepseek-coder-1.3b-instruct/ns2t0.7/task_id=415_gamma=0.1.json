{
  "code": "def max_Product(nums):\n    if len(nums) < 2:\n        return None\n    max_product = nums[0] * nums[1]\n    min_product = nums[0] * nums[1]\n    max_nums = (nums[0], nums[1])\n    min_nums = (nums[0], nums[1])\n",
  "results": {
    "assert max_Product([1,2,3,4,7,0,8,4]) == (7,8)": {
      "result": false,
      "time": 0.214369535446167,
      "error": null
    },
    "assert max_Product([0,-1,-2,-4,5,0,-6]) == (-4,-6)": {
      "result": false,
      "time": 0.22000861167907715,
      "error": null
    },
    "assert max_Product([1,2,3]) == (2,3)": {
      "result": false,
      "time": 0.21802639961242676,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}