{
  "code": "def max_sub_array_sum_repeated(arr, n, k):\n    total_sum = sum(arr)\n    total_sum_repeated = total_sum * k\n    if total_sum_repeated < 0:\n        return 0\n    else:\n        curr_sum = sum(arr[:n])\n        max_sum = curr_sum\n        for i in range(n, len(arr)):\n            curr_sum = curr_sum - arr[i - n] + arr[i]\n            max_sum = max(max_sum, curr_sum)\n        return max_sum\n",
  "results": {
    "assert max_sub_array_sum_repeated([10, 20, -30, -1], 4, 3) == 30": {
      "result": false,
      "time": 0.4474928379058838,
      "error": null
    },
    "assert max_sub_array_sum_repeated([-1, 10, 20], 3, 2) == 59": {
      "result": false,
      "time": 0.2873992919921875,
      "error": null
    },
    "assert max_sub_array_sum_repeated([-1, -2, -3], 3, 3) == -1": {
      "result": false,
      "time": 0.296450138092041,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}