{
  "code": "def check_triplet(nums, total, sum_of_triplet, target):\n    nums.sort()\n    length = len(nums)\n    for i in range(length - 2):\n        left = i + 1\n        right = length - 1\n        while left < right:\n            curr_sum = nums[i] + nums[left] + nums[right]\n            if curr_sum == sum_of_triplet:\n                return True\n            elif curr_sum < target:\n                left += 1\n            else:\n                right -= 1\n    return False\n",
  "results": {
    "assert check_triplet([2, 7, 4, 0, 9, 5, 1, 3], 8, 6, 0) == True": {
      "result": true,
      "time": 0.18680572509765625,
      "error": null
    },
    "assert check_triplet([1, 4, 5, 6, 7, 8, 5, 9], 8, 6, 0) == False": {
      "result": true,
      "time": 0.18457937240600586,
      "error": null
    },
    "assert check_triplet([10, 4, 2, 3, 5], 5, 15, 0) == True": {
      "result": true,
      "time": 0.19970035552978516,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}