{
  "code": "def max_len_sub(nums, target):\n    length = len(nums)\n    dp = [0] * length\n    dp[0] = 1 if nums[0] == target else 0\n    max_len = 1 if nums[0] == target else 0\n    for i in range(1, length):\n        if nums[i] == target:\n            dp[i] = dp[i - 1] + 1\n        else:\n            dp[i] = 0\n        max_len = max(max_len, dp[i])\n    return max_len\n",
  "results": {
    "assert max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 8) == 5": {
      "result": false,
      "time": 0.43065619468688965,
      "error": null
    },
    "assert max_len_sub([-2, -1, 5, -1, 4, 0, 3], 7) == 4": {
      "result": false,
      "time": 0.3711588382720947,
      "error": null
    },
    "assert max_len_sub([9, 11, 13, 15, 18], 5) == 1": {
      "result": false,
      "time": 0.3060643672943115,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}