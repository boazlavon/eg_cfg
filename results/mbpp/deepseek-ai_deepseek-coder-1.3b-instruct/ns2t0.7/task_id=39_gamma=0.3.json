{
  "code": "from collections import Counter\n\n\ndef rearange_string(s):\n    counter = Counter(s)\n    keys = list(counter.keys())\n    values = list(counter.values())\n    sorted_keys = sorted(keys, key=lambda x: -values[keys.index(x)])\n    sorted_values = sorted(values)\n    res = []\n    for key, value in zip(sorted_keys, sorted_values):\n        res.append(key * (value // 2))\n        if value % 2 != 0:\n            res.append(key)\n    return \"\".join(res)\n",
  "results": {
    "assert rearange_string(\"aab\")==('aba')": {
      "result": false,
      "time": 0.3323826789855957,
      "error": null
    },
    "assert rearange_string(\"aabb\")==('abab')": {
      "result": false,
      "time": 0.3588063716888428,
      "error": null
    },
    "assert rearange_string(\"abccdd\")==('cdabcd')": {
      "result": false,
      "time": 0.31241869926452637,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}