{
  "code": "def next_Power_Of_2(n):\n    if n == 0:\n        return 1\n    else:\n        return next_Power_Of_2(n - 1) * n\n",
  "results": {
    "assert next_Power_Of_2(0) == 1": {
      "result": true,
      "time": 0.11728191375732422,
      "error": null
    },
    "assert next_Power_Of_2(5) == 8": {
      "result": false,
      "time": 0.11647415161132812,
      "error": null
    },
    "assert next_Power_Of_2(17) == 32": {
      "result": false,
      "time": 0.10852837562561035,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333
}