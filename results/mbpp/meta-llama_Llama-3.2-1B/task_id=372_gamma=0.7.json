{
  "code": "def heap_assending(nums):\n    heap = []\n    for num in nums:\n        if len(heap) == 0 or num > heap[0]:\n            heap.append(num)\n        else:\n            while len(heap) > 0 and num > heap[0]:\n                if len(heap) == 1:\n                    break\n                heap[0] = heap[1]\n                heap.pop()\n            heap[0] = num\n    return heap\n",
  "results": {
    "assert heap_assending([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1])==[1, 2, 3, 4, 7, 8, 9, 9, 10, 14, 18]": {
      "result": false,
      "time": 6.526699542999268,
      "error": null
    },
    "assert heap_assending([25, 35, 22, 85, 14, 65, 75, 25, 58])==[14, 22, 25, 25, 35, 58, 65, 75, 85]": {
      "result": false,
      "time": 6.229688882827759,
      "error": null
    },
    "assert heap_assending([1, 3, 5, 7, 9, 2, 4, 6, 8, 0])==[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]": {
      "result": false,
      "time": 8.682305574417114,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0
}