{
  "code": "def centered_hexagonal_number(n):\n    if n < 0:\n        return None\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    if n == 2:\n        return 3\n    if n == 3:\n        return 5\n    if n == 4:\n        return 7\n    if n == 5:\n        return 9\n    if n == 6:\n        return 11\n    if n == 7:\n        return 13\n    if n == 8:\n        return 15\n    if n == 9:\n        return 17\n    if n == 10:\n        return 19\n    if n == 11:\n        return 21\n    if n == 12:\n        return 23\n    if n == 13:\n        return 25\n    if n == 14:\n        return 27\n    if n == 15:\n        return 29\n    if n == 16:\n        return 31\n    if n == 17:\n        return 33\n    if n == 18:\n        return 35\n    if n == 19:\n        return 37\n    if n == 20:\n        return 39\n    if n == 21:\n        return 41\n    if n == 22:\n        return 43\n    if n == 23:\n        return 45\n    if n == 24:\n        return 47\n    if n == 25:\n        return 49\n    if n == 26:\n        return 51\n    if n == 27:\n        return 53\n    if n == 28:\n        return 55\n    if n == 29:\n        return 57\n    if n == 30:\n        return 59\n    if n == 31:\n        return 61\n    if n == 32:\n        return 63\n    if n == 33:\n        return 65\n    if n == 34:\n        return 67\n    if n == 35:\n        return 69\n    if n == 36:\n        return 71\n    if n == 37:\n        return 73\n    if n == 38:\n        return 75\n    if n == 39:\n        return 77\n    if n == 40:\n        return 79\n    if n == 41:\n        return\n",
  "results": {
    "assert centered_hexagonal_number(10) == 271": {
      "result": false,
      "time": 0.11593937873840332,
      "error": null
    },
    "assert centered_hexagonal_number(2) == 7": {
      "result": false,
      "time": 0.11279964447021484,
      "error": null
    },
    "assert centered_hexagonal_number(9) == 217": {
      "result": false,
      "time": 0.11593770980834961,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0
}