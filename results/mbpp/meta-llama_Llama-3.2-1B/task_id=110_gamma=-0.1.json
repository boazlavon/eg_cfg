{
  "code": "def extract_missing(test_list, strt_val, stop_val):\n    \"\"\"Extract the ranges that are missing from the given list with the given start range and end range values.\"\"\"\n    # Create a list to store the missing ranges\n    missing_ranges = []\n    # Iterate through the list\n    for i in range(len(test_list)):\n        # Check if the current range is missing\n        if test_list[i][0] < strt_val and test_list[i][1] > stop_val:\n            # Append the current range to the missing ranges list\n            missing_ranges.append(test_list[i])\n    # Return the missing ranges list\n    return missing_ranges\n",
  "results": {
    "assert extract_missing([(6, 9), (15, 34), (48, 70)], 2, 100) == [(2, 6), (9, 100), (9, 15), (34, 100), (34, 48), (70, 100)]": {
      "result": false,
      "time": 0.1945812702178955,
      "error": null
    },
    "assert extract_missing([(7, 2), (15, 19), (38, 50)], 5, 60) == [(5, 7), (2, 60), (2, 15), (19, 60), (19, 38), (50, 60)]": {
      "result": false,
      "time": 0.18607044219970703,
      "error": null
    },
    "assert extract_missing([(7, 2), (15, 19), (38, 50)], 1, 52) == [(1, 7), (2, 52), (2, 15), (19, 52), (19, 38), (50, 52)]": {
      "result": false,
      "time": 0.18716669082641602,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0
}