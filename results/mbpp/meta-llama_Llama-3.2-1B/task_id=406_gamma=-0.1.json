{
  "code": "def find_Parity(x):\n    \"\"\"\n    This function takes a number as input and returns the parity of the number.\n    The parity of a number is the remainder when the number is divided by 2.\n    For example, the parity of 12 is 2, because 12 is divisible by 2, but 10 is not.\n    The parity of 10 is 0, because 10 is not divisible by 2.\n    \"\"\"\n    if x % 2 == 0:\n        return \"Even Parity\"\n    else:\n        return \"Odd Parity\"\n",
  "results": {
    "assert find_Parity(12) == \"Even Parity\"": {
      "result": true,
      "time": 0.11013031005859375,
      "error": null
    },
    "assert find_Parity(7) == \"Odd Parity\"": {
      "result": true,
      "time": 0.11202764511108398,
      "error": null
    },
    "assert find_Parity(10) == \"Even Parity\"": {
      "result": true,
      "time": 0.11972594261169434,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0
}