{
  "code": "def first_Missing_Positive(arr, n):\n    if n == 0:\n        return None\n    if n == 1:\n        return arr[0]\n    if n == 2:\n        return arr[0] + arr[1]\n    if n == 3:\n        return arr[0] + arr[1] + arr[2]\n    if n == 4:\n        return arr[0] + arr[1] + arr[2] + arr[3]\n    if n == 5:\n        return arr[0] + arr[1] + arr[2] + arr[3] + arr[4]\n    if n == 6:\n        return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5]\n    if n == 7:\n        return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6]\n    if n == 8:\n        return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\n    if n == 9:\n        return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8]\n    if n == 10:\n        return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9]\n    if n == 11:\n        return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10]\n    if n == 12:\n        return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9] + arr[10] + arr[11]\n    if n == 13:\n        return arr[0] + arr\n",
  "results": {
    "assert first_Missing_Positive([1,2,3,-1,5],5) == 4": {
      "result": false,
      "time": 0.13939380645751953,
      "error": null
    },
    "assert first_Missing_Positive([0,-1,-2,1,5,8],6) == 2": {
      "result": false,
      "time": 0.12736177444458008,
      "error": null
    },
    "assert first_Missing_Positive([0,1,2,5,-8],5) == 3": {
      "result": false,
      "time": 0.12475800514221191,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0
}