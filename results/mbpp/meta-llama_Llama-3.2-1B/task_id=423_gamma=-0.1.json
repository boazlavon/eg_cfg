{
  "code": "def get_maxgold(gold, m, n):\n    \"\"\"\n    :type gold: List[List[int]]\n    :type m: int\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if m == 0 or n == 0:\n        return 0\n    if gold[0][0] == gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] > gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] == gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] > gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] == gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] > gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] == gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] > gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] == gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] > gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] == gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] > gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] == gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] > gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] == gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] > gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] == gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] > gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] == gold[0][1]:\n        return gold[0][0]\n    if gold[0][0] > gold[0][1]:\n        return gold[0][0]\n",
  "results": {
    "assert get_maxgold([[1, 3, 1, 5],[2, 2, 4, 1],[5, 0, 2, 3],[0, 6, 1, 2]],4,4)==16": {
      "result": false,
      "time": 0.10890650749206543,
      "error": null
    },
    "assert get_maxgold([[10,20],[30,40]],2,2)==70": {
      "result": false,
      "time": 0.09776830673217773,
      "error": null
    },
    "assert get_maxgold([[4,9],[3,7]],2,2)==13": {
      "result": false,
      "time": 0.09394407272338867,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0
}