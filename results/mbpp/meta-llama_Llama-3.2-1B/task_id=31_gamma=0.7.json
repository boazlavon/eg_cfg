{
  "code": "def func(nums, k):\n    heap = []\n    for num in nums:\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n            heap.append(num)\n        if len(heap) < k:\n            if num in heap:\n                continue\n",
  "results": {
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],3)==[5, 7, 1]": {
      "result": false,
      "time": 0.17246651649475098,
      "error": null
    },
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],1)==[1]": {
      "result": false,
      "time": 0.15967535972595215,
      "error": null
    },
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],5)==[6, 5, 7, 8, 1]": {
      "result": false,
      "time": 0.1605234146118164,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0
}