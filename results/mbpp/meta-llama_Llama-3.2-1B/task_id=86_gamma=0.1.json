{
  "code": "def centered_hexagonal_number(n):\n    \"\"\"Return the nth centered hexagonal number.\"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    if n == 2:\n        return 7\n    if n == 3:\n        return 13\n    if n == 4:\n        return 21\n    if n == 5:\n        return 35\n    if n == 6:\n        return 55\n    if n == 7:\n        return 89\n    if n == 8:\n        return 137\n    if n == 9:\n        return 217\n    if n == 10:\n        return 343\n    if n == 11:\n        return 577\n    if n == 12:\n        return 961\n    if n == 13:\n        return 1617\n    if n == 14:\n        return 2737\n    if n == 15:\n        return 4559\n    if n == 16:\n        return 7811\n    if n == 17:\n        return 12449\n    if n == 18:\n        return 19889\n    if n == 19:\n        return 31757\n    if n == 20:\n        return 51417\n    if n == 21:\n        return 83289\n    if n == 22:\n        return 134217\n    if n == 23:\n        return 217529\n    if n == 24:\n        return 348117\n    if n == 25:\n        return 545625\n    if n == 26:\n        return 893203\n    if n == 27:\n        return 1445317\n    if n == 28:\n        return 2333697\n    if n == 29:\n        return 3772039\n    if n == 30:\n        return 6106099\n    if n == 31:\n        return 9876543\n    if n == 32:\n        return 1599367\n    if n == 33:\n        return 2588249\n    if n == 34:\n        return 4185799\n    if n == 35:\n        return 6766099\n    if n == 36:\n        return 10995113\n    if n == 37:\n",
  "results": {
    "assert centered_hexagonal_number(10) == 271": {
      "result": false,
      "time": -1,
      "error": "GenerationError"
    },
    "assert centered_hexagonal_number(2) == 7": {
      "result": false,
      "time": -1,
      "error": "GenerationError"
    },
    "assert centered_hexagonal_number(9) == 217": {
      "result": false,
      "time": -1,
      "error": "GenerationError"
    }
  },
  "passed": false,
  "accuracy": 0.0
}