{
  "code": "def permute_string(s):\n    if len(s) == 0:\n        return [\"\"]\n    if len(s) == 1:\n        return [s]\n    perms = []\n    for i in range(len(s)):\n        ch = s[i]\n        sub_perms = permute_string(s[:i] + s[i + 1 :])\n        for perm in sub_perms:\n            perms.append(ch + perm)\n    return perms\n",
  "results": {
    "assert permute_string('ab')==['ab', 'ba']": {
      "result": true,
      "time": 0.22020792961120605,
      "error": null
    },
    "assert permute_string('abc')==['abc', 'bac', 'bca', 'acb', 'cab', 'cba']": {
      "result": false,
      "time": 0.2057640552520752,
      "error": null
    },
    "assert permute_string('abcd')==['abcd', 'bacd', 'bcad', 'bcda', 'acbd', 'cabd', 'cbad', 'cbda', 'acdb', 'cadb', 'cdab', 'cdba', 'abdc', 'badc', 'bdac', 'bdca', 'adbc', 'dabc', 'dbac', 'dbca', 'adcb', 'dacb', 'dcab', 'dcba']": {
      "result": false,
      "time": 0.2036428451538086,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false
}