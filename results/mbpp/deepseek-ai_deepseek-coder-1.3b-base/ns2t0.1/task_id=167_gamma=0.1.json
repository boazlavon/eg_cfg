{
  "code": "def next_Power_Of_2(n):\n    return 2 ** (n - 1).bit_length()\n",
  "results": {
    "assert next_Power_Of_2(0) == 1": {
      "result": false,
      "time": 0.17595362663269043,
      "error": null
    },
    "assert next_Power_Of_2(5) == 8": {
      "result": true,
      "time": 0.17463088035583496,
      "error": null
    },
    "assert next_Power_Of_2(17) == 32": {
      "result": true,
      "time": 0.1789875030517578,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false
}