{
  "code": "def modular_inverse(arr, p, q):\n    result = 0\n    for i in range(len(arr)):\n        if arr[i] % p == q:\n            result += 1\n    return result\n",
  "results": {
    "assert modular_inverse([ 1, 6, 4, 5 ], 4, 7) == 2": {
      "result": false,
      "time": 0.07826495170593262,
      "error": null
    },
    "assert modular_inverse([1, 3, 8, 12, 12], 5, 13) == 3": {
      "result": false,
      "time": 0.07177877426147461,
      "error": null
    },
    "assert modular_inverse([2, 3, 4, 5], 4, 6) == 1": {
      "result": false,
      "time": 0.07211518287658691,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}