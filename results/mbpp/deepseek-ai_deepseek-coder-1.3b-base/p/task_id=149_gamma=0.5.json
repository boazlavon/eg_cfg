{
  "code": "def longest_subseq_with_diff_one(nums, n):\n    nums.sort()\n    longest_subseq = []\n    for i in range(n):\n        if i == 0:\n            longest_subseq.append(nums[i])\n        elif nums[i] - nums[i - 1] == 1:\n            longest_subseq.append(nums[i])\n    return longest_subseq\n",
  "results": {
    "assert longest_subseq_with_diff_one([1, 2, 3, 4, 5, 3, 2], 7) == 6": {
      "result": false,
      "time": 0.07890582084655762,
      "error": null
    },
    "assert longest_subseq_with_diff_one([10, 9, 4, 5, 4, 8, 6], 7) == 3": {
      "result": false,
      "time": 0.07890701293945312,
      "error": null
    },
    "assert longest_subseq_with_diff_one([1, 2, 3, 2, 3, 7, 2, 1], 8) == 7": {
      "result": false,
      "time": 0.08223271369934082,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}