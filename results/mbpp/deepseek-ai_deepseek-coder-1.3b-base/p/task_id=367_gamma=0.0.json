{
  "code": "def is_tree_balanced(root):\n    if root is None:\n        return True\n    else:\n        return abs(height(root.left) - height(root.right)) <= 1 and is_tree_balanced(root.left) and is_tree_balanced(root.right)\n",
  "results": {
    "assert is_tree_balanced(root) == False": {
      "result": false,
      "time": 0.7075281143188477,
      "error": null
    },
    "assert is_tree_balanced(root1) == True": {
      "result": false,
      "time": 0.6583023071289062,
      "error": null
    },
    "assert is_tree_balanced(root2) == False ": {
      "result": false,
      "time": 0.6395003795623779,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}