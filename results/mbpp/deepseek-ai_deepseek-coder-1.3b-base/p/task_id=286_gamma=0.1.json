{
  "code": "def max_sub_array_sum_repeated(arr, n, k):\n    sum_arr = sum(arr)\n    max_sum = sum_arr * k\n    for i in range(1, k):\n        max_sum = max(max_sum, sum_arr - arr[n - i] + arr[i - 1] * (k - i))\n    return max_sum\n",
  "results": {
    "assert max_sub_array_sum_repeated([10, 20, -30, -1], 4, 3) == 30": {
      "result": false,
      "time": 0.18341326713562012,
      "error": null
    },
    "assert max_sub_array_sum_repeated([-1, 10, 20], 3, 2) == 59": {
      "result": false,
      "time": 0.17074823379516602,
      "error": null
    },
    "assert max_sub_array_sum_repeated([-1, -2, -3], 3, 3) == -1": {
      "result": false,
      "time": 0.17210793495178223,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}