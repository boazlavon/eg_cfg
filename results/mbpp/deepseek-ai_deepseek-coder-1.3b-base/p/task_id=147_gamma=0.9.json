{
  "code": "def max_path_sum(triangle, row, col):\n    if row == len(triangle) - 1:\n        return\n    max_path_sum(triangle, row + 1, col)\n    max_path_sum(triangle, row + 1, col + 1)\n    triangle[row][col] += max(triangle[row + 1][col], triangle[row + 1][col + 1])\n    return triangle[row][col]\n",
  "results": {
    "assert max_path_sum([[1, 0, 0], [4, 8, 0], [1, 5, 3]], 2, 2) == 14": {
      "result": false,
      "time": 0.19095253944396973,
      "error": null
    },
    "assert max_path_sum([[13, 0, 0], [7, 4, 0], [2, 4, 6]], 2, 2) == 24 ": {
      "result": false,
      "time": 0.175642728805542,
      "error": null
    },
    "assert max_path_sum([[2, 0, 0], [11, 18, 0], [21, 25, 33]], 2, 2) == 53": {
      "result": false,
      "time": 0.17957854270935059,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}