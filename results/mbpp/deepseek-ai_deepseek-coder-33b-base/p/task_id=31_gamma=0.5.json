{
  "code": "def func(nums, k):\n    heap = []\n    for num in nums:\n        if len(heap) < k:\n            heapq.heappush(heap, num)\n        else:\n            if heap[0] > num:\n                heapq.heappop(heap)\n                heapq.heappush(heap, num)\n    return [heapq.heappop(heap) for _ in range(k)]\n",
  "results": {
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],3)==[5, 7, 1]": {
      "result": false,
      "time": 0.1002187728881836,
      "error": null
    },
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],1)==[1]": {
      "result": false,
      "time": 0.10571980476379395,
      "error": null
    },
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],5)==[6, 5, 7, 8, 1]": {
      "result": false,
      "time": 0.10313081741333008,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}