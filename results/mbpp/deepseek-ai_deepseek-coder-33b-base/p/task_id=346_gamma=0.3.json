{
  "code": "def zigzag(n, k):\n    if n == 0:\n        return 1\n    if n == 1:\n        return k\n    if n == 2:\n        return k * (k + 1) / 2\n    if n == 3:\n        return k * (k + 1) / 2 + k\n    if n == 4:\n        return k * (k + 1) / 2 + k * (k + 1) / 2\n    if n == 5:\n        return k * (k + 1) / 2 + k * (k + 1) / 2 + k\n    if n == 6:\n        return k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k\n    if n == 7:\n        return k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k\n    if n == 8:\n        return k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k\n    if n == 9:\n        return k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k\n    if n == 10:\n        return k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k * (k + 1) / 2 + k\n    if n == 11:\n        return k * (k + 1) / 2 + k\n",
  "results": {
    "assert zigzag(4, 3) == 5": {
      "result": false,
      "time": 0.12296915054321289,
      "error": null
    },
    "assert zigzag(4, 2) == 4": {
      "result": false,
      "time": 0.12221026420593262,
      "error": null
    },
    "assert zigzag(3, 1) == 1": {
      "result": false,
      "time": 0.11973929405212402,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}