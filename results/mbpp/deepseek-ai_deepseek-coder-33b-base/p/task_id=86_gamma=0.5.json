{
  "code": "def centered_hexagonal_number(n):\n    \"\"\"Return the nth centered hexagonal number.\"\"\"\n    if n < 0:\n        return None\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    if n == 2:\n        return 7\n    if n == 3:\n        return 13\n    if n == 4:\n        return 21\n    if n == 5:\n        return 35\n    if n == 6:\n        return 55\n    if n == 7:\n        return 89\n    if n == 8:\n        return 137\n    if n == 9:\n        return 217\n    if n == 10:\n        return 343\n    if n == 11:\n        return 571\n    if n == 12:\n        return 857\n    if n == 13:\n        return 1379\n    if n == 14:\n        return 2171\n    if n == 15:\n        return 3433\n    if n == 16:\n        return 5717\n    if n == 17:\n        return 8571\n    if n == 18:\n        return 13791\n    if n == 19:\n        return 21731\n    if n == 20:\n        return 34371\n    if n == 21:\n        return 57177\n    if n == 22:\n        return 85771\n    if n == 23:\n        return 137911\n    if n == 24:\n        return 217311\n    if n == 25:\n        return 343711\n    if n == 26:\n        return 571777\n    if n == 27:\n        return 857711\n    if n == 28:\n        return 1379111\n    if n == 29:\n        return 2173111\n    if n == 30:\n        return 3437111\n    if n == 31:\n        return 5717771\n    if n == 32:\n        return 8577111\n    if n == 33:\n        return 13791111\n    if n == 34:\n        return 21731111\n    if n == 35:\n        return 34371111\n    if n == 36:\n        return 57177711\n    if n == 37:\n        return 85771111\n",
  "results": {
    "assert centered_hexagonal_number(10) == 271": {
      "result": false,
      "time": 0.1280834674835205,
      "error": null
    },
    "assert centered_hexagonal_number(2) == 7": {
      "result": true,
      "time": 0.12718701362609863,
      "error": null
    },
    "assert centered_hexagonal_number(9) == 217": {
      "result": true,
      "time": 0.14020681381225586,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false
}