{
  "code": "def heap_queue_smallest(nums, n):\n    heap = []\n    for i in nums:\n        heapq.heappush(heap, i)\n    result = []\n    while len(heap) > n:\n        result.append(heapq.heappop(heap))\n    return result\n",
  "results": {
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],3)==[14, 22, 25] ": {
      "result": false,
      "time": 0.1212911605834961,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],2)==[14, 22]": {
      "result": false,
      "time": 0.12328648567199707,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 22, 58],5)==[14, 22, 22, 25, 35]": {
      "result": false,
      "time": 0.12369823455810547,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}