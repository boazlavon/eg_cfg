{
  "code": "def find_Min(arr, low, high):\n    if low > high:\n        return None\n    if low == high:\n        return arr[low]\n    mid = (low + high) // 2\n    if arr[mid] < arr[low]:\n        return find_Min(arr, low, mid)\n    else:\n        return find_Min(arr, mid + 1, high)\n",
  "results": {
    "assert find_Min([1,2,3,4,5],0,4) == 1": {
      "result": false,
      "time": 0.12516069412231445,
      "error": null
    },
    "assert find_Min([4,6,8],0,2) == 4": {
      "result": false,
      "time": 0.1222085952758789,
      "error": null
    },
    "assert find_Min([2,3,5,7,9],0,4) == 2": {
      "result": false,
      "time": 0.12952089309692383,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}