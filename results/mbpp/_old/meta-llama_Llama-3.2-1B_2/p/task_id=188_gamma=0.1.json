{
  "code": "def prod_Square(n):\n    if n == 0:\n        return False\n    else:\n        return n % 2 == 0 and prod_Square(n // 2)\n",
  "results": {
    "assert prod_Square(25) == False": {
      "result": true,
      "time": 0.11536717414855957,
      "error": null
    },
    "assert prod_Square(30) == False": {
      "result": true,
      "time": 0.12389588356018066,
      "error": null
    },
    "assert prod_Square(16) == True": {
      "result": false,
      "time": 0.12545537948608398,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false
}