{
  "code": "def bell_number(n):\n\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return bell_number(n - 1) + bell_number(n - 2)\n",
  "results": {
    "assert bell_number(2)==2": {
      "result": true,
      "time": 0.11625909805297852,
      "error": null
    },
    "assert bell_number(10)==115975": {
      "result": false,
      "time": 0.10719966888427734,
      "error": null
    },
    "assert bell_number(56)==6775685320645824322581483068371419745979053216268760300": {
      "result": false,
      "time": 10.089682579040527,
      "error": "Timeout"
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false
}