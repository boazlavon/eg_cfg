{
  "code": "def max_sum_increasing_subseq(a, n, index, k):\n\n    if index == n:\n        return 0\n    if index == k:\n        return a[k]\n    if index > k:\n        return max(max_sum_increasing_subseq(a, n, index + 1, k), max_sum_increasing_subseq(a, n, index + 1, k + 1))\n    else:\n        return max(max_sum_increasing_subseq(a, n, index + 1, k), max_sum_increasing_subseq(a, n, index + 1, k + 1) + a[index])\n",
  "results": {
    "assert max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 4, 6) == 11": {
      "result": false,
      "time": 0.12326502799987793,
      "error": null
    },
    "assert max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 2, 5) == 7": {
      "result": false,
      "time": 0.1128683090209961,
      "error": null
    },
    "assert max_sum_increasing_subseq([11, 15, 19, 21, 26, 28, 31], 7, 2, 4) == 71": {
      "result": false,
      "time": 0.1195991039276123,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0
}