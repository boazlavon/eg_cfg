{
  "code": "def permutation_coefficient(n, k):\n    \"\"\"Calculate the permutation coefficient of n and k.\"\"\"\n    if n < 0 or k < 0:\n        raise ValueError(\"n and k must be non-negative integers\")\n    if n == 0:\n        return 1\n    if k == 0:\n        return n\n    if k == 1:\n        return n * (n - 1) // 2\n    if k == n:\n        return n * (n - 1) // 2\n    if k > n:\n        raise ValueError(\"k must be less than n\")\n    if k == 1:\n        return n * (n - 1) // 2\n    if k == n:\n        return n * (n - 1) // 2\n    if k == n - 1:\n        return n * (n - 1) // 2\n    if k == n - 2:\n        return n * (n - 1) // 2\n    if k == n - 3:\n        return n * (n - 1) // 2\n    if k == n - 4:\n        return n * (n - 1) // 2\n    if k == n - 5:\n        return n * (n - 1) // 2\n    if k == n - 6:\n        return n * (n - 1) // 2\n    if k == n - 7:\n        return n * (n - 1) // 2\n    if k == n - 8:\n        return n * (n - 1) // 2\n    if k == n - 9:\n        return n * (n - 1) // 2\n    if k == n - 10:\n        return n * (n - 1) // 2\n    if k == n - 11:\n        return n * (n - 1) // 2\n    if k == n - 12:\n        return n * (n - 1) // 2\n    if k == n - 13:\n        return n * (n - 1) // 2\n    if k == n - 14:\n        return n * (n - 1) // 2\n    if k == n - 15:\n        return n * (n - 1) // 2\n    if k == n - 16:\n",
  "results": {
    "assert permutation_coefficient(10, 2) == 90": {
      "result": false,
      "time": -1,
      "error": "GenerationError"
    },
    "assert permutation_coefficient(10, 3) == 720": {
      "result": false,
      "time": -1,
      "error": "GenerationError"
    },
    "assert permutation_coefficient(10, 1) == 10": {
      "result": false,
      "time": -1,
      "error": "GenerationError"
    }
  },
  "passed": false,
  "accuracy": 0.0
}