{
  "code": "def zigzag(n, k):\n    if n == 0:\n        return 1\n    if n == 1:\n        return k\n    if n == 2:\n        return k * (k - 1) / 2\n    if n == 3:\n        return k * (k - 1) * (k - 2) / 6\n    if n == 4:\n        return k * (k - 1) * (k - 2) * (k - 3) / 24\n    if n == 5:\n        return k * (k - 1) * (k - 2) * (k - 3) * (k - 4) / 120\n    if n == 6:\n        return k * (k - 1) * (k - 2) * (k - 3) * (k - 4) * (k - 5) / 720\n    if n == 7:\n        return k * (k - 1) * (k - 2) * (k - 3) * (k - 4) * (k - 5) * (k - 6) / 5040\n    if n == 8:\n        return k * (k - 1) * (k - 2) * (k - 3) * (k - 4) * (k - 5) * (k - 6) * (k - 7) / 40320\n    if n == 9:\n        return k * (k - 1) * (k - 2) * (k - 3) * (k - 4) * (k - 5) * (k - 6) * (k - 7) * (k - 8) / 362880\n    if n == 10:\n        return k * (k - 1) * (k - 2) * (k - 3) * (k - 4) * (k - 5) * (k - 6) * (k - 7) * (k - 8) * (k - 9) / 3628800\n    if n == 11:\n        return k * (k - 1) * (k - 2) * (k - 3) * (k - 4) * (k - ",
  "results": {
    "assert zigzag(4, 3) == 5": {
      "result": false,
      "time": -1,
      "error": "GenerationError"
    },
    "assert zigzag(4, 2) == 4": {
      "result": false,
      "time": -1,
      "error": "GenerationError"
    },
    "assert zigzag(3, 1) == 1": {
      "result": false,
      "time": -1,
      "error": "GenerationError"
    }
  },
  "passed": false,
  "accuracy": 0.0
}