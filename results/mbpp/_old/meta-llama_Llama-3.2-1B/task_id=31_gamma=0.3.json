{
  "code": "def func(nums, k):\n    nums.sort()\n    heap = []\n    for i in range(len(nums)):\n        if len(heap) < k:\n            heap.append(nums[i])\n        else:\n            if nums[i] > heap[0]:\n                heap[0] = nums[i]\n                heapq.heapify(heap)\n            else:\n                heapq.heappushpop(heap, nums[i])\n    return heap\n",
  "results": {
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],3)==[5, 7, 1]": {
      "result": false,
      "time": 0.11581134796142578,
      "error": null
    },
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],1)==[1]": {
      "result": false,
      "time": 0.11778044700622559,
      "error": null
    },
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],5)==[6, 5, 7, 8, 1]": {
      "result": false,
      "time": 0.14156603813171387,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0
}