{
  "code": "def get_Odd_Occurrence(arr, arr_size):\n\n    # Initialize a dictionary to store the count of each element\n    count = {}\n    # Iterate through the array\n    for i in range(arr_size):\n        # If the element is not present in the dictionary, add it with count = 1\n        if arr[i] not in count:\n            count[arr[i]] = 1\n        # If the element is present in the dictionary, increment its count\n        else:\n            count[arr[i]] += 1\n    # Initialize a variable to store the maximum count\n    max_count = 0\n    # Iterate through the dictionary\n    for key, value in count.items():\n        # If the count is greater than the maximum count, update the maximum count\n        if value > max_count:\n            max_count = value\n    # Return the element occurring odd number of times\n    return max_count\n",
  "results": {
    "assert get_Odd_Occurrence([1,2,3,1,2,3,1],7) == 1": {
      "result": false,
      "time": 0.1673436164855957,
      "error": null
    },
    "assert get_Odd_Occurrence([1,2,3,2,3,1,3],7) == 3": {
      "result": true,
      "time": 0.14661240577697754,
      "error": null
    },
    "assert get_Odd_Occurrence([2,3,5,4,5,2,4,3,5,2,4,4,2],13) == 5": {
      "result": false,
      "time": 0.1518843173980713,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333
}