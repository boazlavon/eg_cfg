{
  "code": "def max_path_sum(tri, m, n):\n    if len(tri) == 0:\n        return 0\n    if m == 0:\n        return max_path_sum(tri, n, n)\n    if n == 0:\n        return max_path_sum(tri, m, m)\n    return max(tri[0][0], max_path_sum(tri[1:], m - 1, n - 1) + tri[0][0] + tri[1][0])\n",
  "results": {
    "assert max_path_sum([[1, 0, 0], [4, 8, 0], [1, 5, 3]], 2, 2) == 14": {
      "result": false,
      "time": 0.1974945068359375,
      "error": null
    },
    "assert max_path_sum([[13, 0, 0], [7, 4, 0], [2, 4, 6]], 2, 2) == 24 ": {
      "result": false,
      "time": 0.18684649467468262,
      "error": null
    },
    "assert max_path_sum([[2, 0, 0], [11, 18, 0], [21, 25, 33]], 2, 2) == 53": {
      "result": false,
      "time": 0.2004241943359375,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0
}