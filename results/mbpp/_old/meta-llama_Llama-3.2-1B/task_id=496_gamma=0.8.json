{
  "code": "def heap_queue_smallest(nums, n):\n    if n == 0:\n        return nums\n    else:\n        return heap_queue_smallest(nums[1:], n - 1) + [nums[0]]\n",
  "results": {
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],3)==[14, 22, 25] ": {
      "result": false,
      "time": 0.12772512435913086,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],2)==[14, 22]": {
      "result": false,
      "time": 0.13625860214233398,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 22, 58],5)==[14, 22, 22, 25, 35]": {
      "result": false,
      "time": 0.12350034713745117,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0
}