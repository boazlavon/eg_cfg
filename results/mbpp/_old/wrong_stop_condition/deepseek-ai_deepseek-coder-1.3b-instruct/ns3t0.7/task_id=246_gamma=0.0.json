{
  "code": "def babylonian_squareroot(n):\n    guess = n / 2.0\n    while True:\n        better_guess = (guess + n / guess) / 2.0\n        if abs(guess - better_guess) < 0.000001:\n            return better_guess\n        guess = better_guess\n",
  "results": {
    "assert babylonian_squareroot(10)==3.162277660168379": {
      "result": true,
      "time": 0.2122502326965332,
      "error": null
    },
    "assert babylonian_squareroot(2)==1.414213562373095": {
      "result": true,
      "time": 0.21211957931518555,
      "error": null
    },
    "assert babylonian_squareroot(9)==3.0": {
      "result": true,
      "time": 0.2145862579345703,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}