{
  "code": "def largest_palindrome(nums, n):\n    nums = [str(num) for num in nums]\n    palindromes = [num for num in nums if num == num[::-1]]\n    largest_palindromes = sorted(palindromes, key=lambda x: int(x), reverse=True)[:n]\n    largest_palindrome = \"\".join(largest_palindromes)\n    return int(largest_palindrome) if largest_palindrome else None\n",
  "results": {
    "assert largest_palindrome([1, 232, 54545, 999991], 4) == 54545": {
      "result": false,
      "time": 0.4462747573852539,
      "error": null
    },
    "assert largest_palindrome([1, 2, 3, 4, 5, 50], 6) == 5": {
      "result": false,
      "time": 0.39632582664489746,
      "error": null
    },
    "assert largest_palindrome([1, 3, 7, 9, 45], 5)  == 9": {
      "result": false,
      "time": 0.2825453281402588,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}