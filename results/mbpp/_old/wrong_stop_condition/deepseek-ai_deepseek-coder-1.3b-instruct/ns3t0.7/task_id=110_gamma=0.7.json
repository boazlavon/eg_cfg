{
  "code": "def extract_missing(ranges, start, end):\n    result = []\n    for i in range(len(ranges)):\n        if ranges[i][1] < start:\n            result.append((ranges[i][0], start))\n        elif ranges[i][0] > end:\n            result.append((end + 1, ranges[i][0]))\n        elif ranges[i][0] < start:\n            result.append((start, ranges[i][0]))\n        elif ranges[i][1] > end:\n            result.append((ranges[i][1] + 1, end + 1))\n    return result\n",
  "results": {
    "assert extract_missing([(6, 9), (15, 34), (48, 70)], 2, 100) == [(2, 6), (9, 100), (9, 15), (34, 100), (34, 48), (70, 100)]": {
      "result": false,
      "time": 0.2439744472503662,
      "error": null
    },
    "assert extract_missing([(7, 2), (15, 19), (38, 50)], 5, 60) == [(5, 7), (2, 60), (2, 15), (19, 60), (19, 38), (50, 60)]": {
      "result": false,
      "time": 0.2312164306640625,
      "error": null
    },
    "assert extract_missing([(7, 2), (15, 19), (38, 50)], 1, 52) == [(1, 7), (2, 52), (2, 15), (19, 52), (19, 38), (50, 52)]": {
      "result": false,
      "time": 0.23261451721191406,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}