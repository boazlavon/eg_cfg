{
  "code": "def solve(arr, k):\n    count_arr = [0] * (max(arr) + 1)\n    inversion_count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] > arr[j]:\n                inversion_count += 1\n            count_arr[arr[j]] += 1\n    for i in range(1, len(count_arr)):\n        if count_arr[i] != count_arr[i - 1]:\n            return False\n    return inversion_count == k\n",
  "results": {
    "assert solve([1,0,2],3) == True": {
      "result": false,
      "time": 0.2729940414428711,
      "error": null
    },
    "assert solve([1,2,0],3) == False": {
      "result": true,
      "time": 0.24311161041259766,
      "error": null
    },
    "assert solve([1,2,1],3) == True": {
      "result": false,
      "time": 0.24947762489318848,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false
}