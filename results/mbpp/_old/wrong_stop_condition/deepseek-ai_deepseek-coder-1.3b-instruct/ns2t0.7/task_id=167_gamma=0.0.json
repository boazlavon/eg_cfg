{
  "code": "def next_Power_Of_2(n):\n    return 1 if n and not (n & (n - 1)) else 2\n",
  "results": {
    "assert next_Power_Of_2(0) == 1": {
      "result": false,
      "time": 0.18763160705566406,
      "error": null
    },
    "assert next_Power_Of_2(5) == 8": {
      "result": false,
      "time": 0.19081592559814453,
      "error": null
    },
    "assert next_Power_Of_2(17) == 32": {
      "result": false,
      "time": 0.20731306076049805,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}