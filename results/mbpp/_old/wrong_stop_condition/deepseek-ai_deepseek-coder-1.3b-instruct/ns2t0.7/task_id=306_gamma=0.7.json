{
  "code": "def max_sum_increasing_subseq(arr, n, k, i):\n    if i >= n:\n        return 0\n    max_sum = 0\n    if k > i:\n        max_sum = arr[i]\n    prev_max_sum = max_sum_increasing_subseq(arr, n, k, i + 1)\n    if k > i:\n        max_sum = max(max_sum, arr[i] + prev_max_sum)\n    return max_sum\n",
  "results": {
    "assert max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 4, 6) == 11": {
      "result": false,
      "time": 0.23563385009765625,
      "error": null
    },
    "assert max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 2, 5) == 7": {
      "result": false,
      "time": 0.23403286933898926,
      "error": null
    },
    "assert max_sum_increasing_subseq([11, 15, 19, 21, 26, 28, 31], 7, 2, 4) == 71": {
      "result": false,
      "time": 0.21858620643615723,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}