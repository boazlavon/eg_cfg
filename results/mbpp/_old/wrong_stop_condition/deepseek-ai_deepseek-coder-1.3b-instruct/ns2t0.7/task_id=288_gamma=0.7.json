{
  "code": "from collections import Counter\n\n\ndef modular_inverse(arr, p, m):\n    freq = Counter(arr)\n    inverses = [i for i in freq if (m - i) % p == 1]\n    return len(inverses)\n",
  "results": {
    "assert modular_inverse([ 1, 6, 4, 5 ], 4, 7) == 2": {
      "result": false,
      "time": 0.19583749771118164,
      "error": null
    },
    "assert modular_inverse([1, 3, 8, 12, 12], 5, 13) == 3": {
      "result": false,
      "time": 0.19866681098937988,
      "error": null
    },
    "assert modular_inverse([2, 3, 4, 5], 4, 6) == 1": {
      "result": true,
      "time": 0.22026538848876953,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false
}