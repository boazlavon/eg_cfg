{
  "code": "from collections import Counter\n\n\ndef modular_inverse(arr, m, p):\n    freq = Counter(arr)\n    res = 0\n    for num, count in freq.items():\n        if num % p == m % p and num % p != 0:\n            res += count\n    return res\n",
  "results": {
    "assert modular_inverse([ 1, 6, 4, 5 ], 4, 7) == 2": {
      "result": false,
      "time": 0.17203927040100098,
      "error": null
    },
    "assert modular_inverse([1, 3, 8, 12, 12], 5, 13) == 3": {
      "result": false,
      "time": 0.17743825912475586,
      "error": null
    },
    "assert modular_inverse([2, 3, 4, 5], 4, 6) == 1": {
      "result": true,
      "time": 0.20260190963745117,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false
}