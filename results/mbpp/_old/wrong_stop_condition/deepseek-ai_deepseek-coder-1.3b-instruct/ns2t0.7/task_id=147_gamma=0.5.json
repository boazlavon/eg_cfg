{
  "code": "def max_path_sum(triangle, m, n):\n    dp = triangle[m][n]\n    for i in range(m - 1, -1, -1):\n        dp = max(dp, triangle[i][n] + dp)\n        dp = max(dp, triangle[i][n + 1] + dp)\n        n += 1\n    return dp\n",
  "results": {
    "assert max_path_sum([[1, 0, 0], [4, 8, 0], [1, 5, 3]], 2, 2) == 14": {
      "result": false,
      "time": 0.3420243263244629,
      "error": null
    },
    "assert max_path_sum([[13, 0, 0], [7, 4, 0], [2, 4, 6]], 2, 2) == 24 ": {
      "result": false,
      "time": 0.5588734149932861,
      "error": null
    },
    "assert max_path_sum([[2, 0, 0], [11, 18, 0], [21, 25, 33]], 2, 2) == 53": {
      "result": false,
      "time": 0.3144652843475342,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}