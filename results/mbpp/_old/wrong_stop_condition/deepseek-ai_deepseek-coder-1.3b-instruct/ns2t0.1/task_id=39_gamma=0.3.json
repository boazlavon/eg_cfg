{
  "code": "from collections import Counter\n\n\ndef rearange_string(s):\n    counter = Counter(s)\n    odd_count = sum(v % 2 for v in counter.values())\n    if odd_count > 1:\n        return \"impossible\"\n    odd_keys = [k * 2 for k, v in counter.items() if v % 2]\n    even_keys = [k for k, v in counter.items() if not v % 2]\n    even_values = [v // 2 for k, v in counter.items() if not v % 2]\n    result = []\n    for i in range(len(even_keys)):\n        result.append(even_keys[i])\n        if i < len(even_values):\n            result.append(even_values[i])\n    result.append(odd_keys[0])\n    if len(odd_keys) > 1:\n        result.append(odd_keys[1])\n    return \"\".join(result)\n",
  "results": {
    "assert rearange_string(\"aab\")==('aba')": {
      "result": false,
      "time": 0.2546052932739258,
      "error": null
    },
    "assert rearange_string(\"aabb\")==('abab')": {
      "result": false,
      "time": 0.24010920524597168,
      "error": null
    },
    "assert rearange_string(\"abccdd\")==('cdabcd')": {
      "result": false,
      "time": 0.27408456802368164,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}