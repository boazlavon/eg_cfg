{
  "code": "from collections import Counter\n\n\ndef rearange_string(s):\n    counter = Counter(s)\n    odd_count = sum(v % 2 for v in counter.values())\n    if odd_count > 1:\n        return \"impossible\"\n    odd_keys = [k * 2 for k, v in counter.items() if v % 2]\n    even_keys = [k for k, v in counter.items() if not v % 2]\n    even_count = len(even_keys)\n    if odd_count > 1:\n        even_keys.append(odd_keys[0])\n        even_count += 1\n    even_keys.sort()\n    result = [None] * even_count\n    for i in range(0, even_count, 2):\n        result[i] = even_keys[i]\n        result[i + 1] = even_keys[i + 1]\n    return \"\".join(result)\n",
  "results": {
    "assert rearange_string(\"aab\")==('aba')": {
      "result": false,
      "time": 0.24500370025634766,
      "error": null
    },
    "assert rearange_string(\"aabb\")==('abab')": {
      "result": false,
      "time": 0.23771333694458008,
      "error": null
    },
    "assert rearange_string(\"abccdd\")==('cdabcd')": {
      "result": false,
      "time": 0.23546385765075684,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}