{
  "code": "def min_product_tuple(lst):\n    return min(lst, key=lambda x: x[0] * x[1])[0] * min(lst, key=lambda x: x[0] * x[1])[1]\n",
  "results": {
    "assert min_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==8": {
      "result": true,
      "time": 0.24821090698242188,
      "error": null
    },
    "assert min_product_tuple([(10,20), (15,2), (5,10)] )==30": {
      "result": true,
      "time": 0.2532050609588623,
      "error": null
    },
    "assert min_product_tuple([(11,44), (10,15), (20,5), (12, 9)] )==100": {
      "result": true,
      "time": 0.26299118995666504,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}