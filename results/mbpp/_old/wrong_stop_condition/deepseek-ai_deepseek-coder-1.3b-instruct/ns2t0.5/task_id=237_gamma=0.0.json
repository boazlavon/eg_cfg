{
  "code": "from collections import Counter\n\n\ndef check_occurences(tuples):\n    counts = Counter(tuple(sorted(t)) for t in tuples)\n    result = {}\n    for t in tuples:\n        if tuple(sorted(t)) in counts:\n            result[tuple(sorted(t))] = counts[tuple(sorted(t))]\n    return result\n",
  "results": {
    "assert check_occurences([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)] ) == {(1, 3): 2, (2, 5): 2, (3, 6): 1}": {
      "result": true,
      "time": 0.24840044975280762,
      "error": null
    },
    "assert check_occurences([(4, 2), (2, 4), (3, 6), (6, 3), (7, 4)] ) == {(2, 4): 2, (3, 6): 2, (4, 7): 1}": {
      "result": true,
      "time": 0.22571372985839844,
      "error": null
    },
    "assert check_occurences([(13, 2), (11, 23), (12, 25), (25, 12), (16, 23)] ) == {(2, 13): 1, (11, 23): 1, (12, 25): 2, (16, 23): 1}": {
      "result": true,
      "time": 0.2972562313079834,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}