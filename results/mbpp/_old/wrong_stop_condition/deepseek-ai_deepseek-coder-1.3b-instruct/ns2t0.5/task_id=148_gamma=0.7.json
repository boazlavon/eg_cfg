{
  "code": "def sum_digits_twoparts(n):\n    str_n = str(n)\n    length = len(str_n)\n    if length % 2 == 0:\n        half = length // 2\n        part1 = int(str_n[:half])\n        part2 = int(str_n[half:])\n    else:\n        half = length // 2\n        part1 = int(str_n[:half])\n        part2 = int(str_n[half + 1 :])\n    sum1 = sum(map(int, str(part1)))\n    sum2 = sum(map(int, str(part2)))\n    return max(sum1, sum2)\n",
  "results": {
    "assert sum_digits_twoparts(35)==17": {
      "result": false,
      "time": 0.5519511699676514,
      "error": null
    },
    "assert sum_digits_twoparts(7)==7": {
      "result": false,
      "time": 0.2726109027862549,
      "error": null
    },
    "assert sum_digits_twoparts(100)==19": {
      "result": false,
      "time": 0.4016990661621094,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}