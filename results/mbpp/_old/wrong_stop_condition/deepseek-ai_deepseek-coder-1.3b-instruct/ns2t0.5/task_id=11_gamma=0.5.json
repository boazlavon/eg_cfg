{
  "code": "def remove_Occ(s, ch):\n    first_occurrence = s.find(ch)\n    if first_occurrence == -1:\n        return s\n    last_occurrence = s.rfind(ch)\n    if first_occurrence == last_occurrence:\n        return s[:first_occurrence] + s[first_occurrence + 1 : -1]\n    else:\n        return s[:first_occurrence] + s[first_occurrence + 1 : last_occurrence] + s[last_occurrence + 1 : -1]\n",
  "results": {
    "assert remove_Occ(\"hello\",\"l\") == \"heo\"": {
      "result": false,
      "time": 0.25989556312561035,
      "error": null
    },
    "assert remove_Occ(\"abcda\",\"a\") == \"bcd\"": {
      "result": true,
      "time": 0.2321760654449463,
      "error": null
    },
    "assert remove_Occ(\"PHP\",\"P\") == \"H\"": {
      "result": true,
      "time": 0.24578642845153809,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false
}