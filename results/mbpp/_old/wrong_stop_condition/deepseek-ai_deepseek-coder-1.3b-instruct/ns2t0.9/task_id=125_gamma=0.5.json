{
  "code": "def find_length(binary_string, length):\n    max_difference = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(binary_string) - length + 1):\n        if binary_string[i : i + length] == length * \"0\":\n            count_0 += 1\n        elif binary_string[i : i + length] == length * \"1\":\n            count_1 += 1\n        max_difference = max(max_difference, count_0, count_1)\n        count_0 = 0\n        count_1 = 0\n    return max_difference\n",
  "results": {
    "assert find_length(\"11000010001\", 11) == 6": {
      "result": false,
      "time": 1.1451656818389893,
      "error": null
    },
    "assert find_length(\"10111\", 5) == 1": {
      "result": false,
      "time": 0.5968506336212158,
      "error": null
    },
    "assert find_length(\"11011101100101\", 14) == 2 ": {
      "result": false,
      "time": 0.21586966514587402,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}