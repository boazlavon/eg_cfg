{
  "code": "def solve(arr, N):\n    count = [0] * (N + 1)\n    inversion_count = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            if arr[i] > arr[j]:\n                count[arr[i]] += 1\n                inversion_count += 1\n    inversion_count_second_half = 0\n    for i in range(1, N // 2 + 1):\n        inversion_count_second_half += count[i]\n    return inversion_count == inversion_count_second_half\n",
  "results": {
    "assert solve([1,0,2],3) == True": {
      "result": true,
      "time": 0.12846708297729492,
      "error": null
    },
    "assert solve([1,2,0],3) == False": {
      "result": true,
      "time": 0.12834739685058594,
      "error": null
    },
    "assert solve([1,2,1],3) == True": {
      "result": false,
      "time": 0.14735674858093262,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false
}