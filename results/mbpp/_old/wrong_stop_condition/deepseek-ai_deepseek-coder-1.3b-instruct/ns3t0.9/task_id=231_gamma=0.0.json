{
  "code": "def max_sum(triangle, n):\n    dp = triangle[n - 1]\n    for i in range(n - 2, -1, -1):\n        for j in range(i + 1):\n            dp[j] = max(dp[j], dp[j + 1]) + triangle[i][j]\n    return max(dp)\n",
  "results": {
    "assert max_sum([[1], [2,1], [3,3,2]], 3) == 6": {
      "result": true,
      "time": 0.19378209114074707,
      "error": null
    },
    "assert max_sum([[1], [1, 2], [4, 1, 12]], 3) == 15 ": {
      "result": true,
      "time": 0.194657564163208,
      "error": null
    },
    "assert max_sum([[2], [3,2], [13,23,12]], 3) == 28": {
      "result": true,
      "time": 0.1805737018585205,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}