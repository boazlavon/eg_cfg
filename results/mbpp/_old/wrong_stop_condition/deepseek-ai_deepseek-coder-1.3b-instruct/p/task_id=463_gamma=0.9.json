{
  "code": "def max_subarray_product(nums):\n    if len(nums) == 0:\n        return 0\n    max_product = nums[0]\n    for num in nums[1:]:\n        max_product = max(max_product * num, num)\n    return max_product\n",
  "results": {
    "assert max_subarray_product([1, -2, -3, 0, 7, -8, -2]) == 112": {
      "result": false,
      "time": 0.12259030342102051,
      "error": null
    },
    "assert max_subarray_product([6, -3, -10, 0, 2]) == 180 ": {
      "result": false,
      "time": 0.11477136611938477,
      "error": null
    },
    "assert max_subarray_product([-2, -40, 0, -2, -3]) == 80": {
      "result": false,
      "time": 0.12343478202819824,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}