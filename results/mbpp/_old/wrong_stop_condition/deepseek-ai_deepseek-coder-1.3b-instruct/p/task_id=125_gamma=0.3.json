{
  "code": "def find_length(binary_string, length):\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(length):\n        if binary_string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_diff = max(max_diff, count_1)\n        if i < length - 1:\n            if binary_string[i] == binary_string[i + 1]:\n                if binary_string[i] == \"0\":\n                    count_0 += 1\n                else:\n                    count_1 += 1\n    return max_diff\n",
  "results": {
    "assert find_length(\"11000010001\", 11) == 6": {
      "result": false,
      "time": 0.11294198036193848,
      "error": null
    },
    "assert find_length(\"10111\", 5) == 1": {
      "result": true,
      "time": 0.11595797538757324,
      "error": null
    },
    "assert find_length(\"11011101100101\", 14) == 2 ": {
      "result": false,
      "time": 0.12143492698669434,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false
}