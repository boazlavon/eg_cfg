{
  "code": "def max_profit(prices, k):\n    dp = [[[-float(\"inf\")] * 2 for _ in range(k + 1)] for _ in range(len(prices))]\n    for i in range(len(prices)):\n        for j in range(k, -1, -1):\n            if i == 0 or j == 0:\n                dp[i][j] = [0, 0]\n            else:\n                dp[i][j] = max(dp[i - 1][j], prices[i] - dp[i - 1][j - 1])\n    return dp[-1][-1]\n",
  "results": {
    "assert max_profit([1, 5, 2, 3, 7, 6, 4, 5], 3) == 10": {
      "result": false,
      "time": 0.12003731727600098,
      "error": null
    },
    "assert max_profit([2, 4, 7, 5, 4, 3, 5], 2) == 7": {
      "result": false,
      "time": 0.12450361251831055,
      "error": null
    },
    "assert max_profit([10, 6, 8, 4, 2], 2) == 2": {
      "result": false,
      "time": 0.11979508399963379,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}