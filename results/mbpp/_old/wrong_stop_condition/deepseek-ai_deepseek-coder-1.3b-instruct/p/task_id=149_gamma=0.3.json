{
  "code": "def longest_subseq_with_diff_one(nums, target):\n    nums = [num for num in nums if num <= target]\n    dp = [1] * len(nums)\n    for i in range(len(nums)):\n        for j in range(i):\n            if nums[i] - nums[j] == 1:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n",
  "results": {
    "assert longest_subseq_with_diff_one([1, 2, 3, 4, 5, 3, 2], 7) == 6": {
      "result": false,
      "time": 0.6136050224304199,
      "error": null
    },
    "assert longest_subseq_with_diff_one([10, 9, 4, 5, 4, 8, 6], 7) == 3": {
      "result": true,
      "time": 0.5861215591430664,
      "error": null
    },
    "assert longest_subseq_with_diff_one([1, 2, 3, 2, 3, 7, 2, 1], 8) == 7": {
      "result": false,
      "time": 0.6219727993011475,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false
}