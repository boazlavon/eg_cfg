{
  "code": "def max_subarray_product(nums):\n    max_product = 0\n    for i in range(len(nums)):\n        product = 1\n        for j in range(i, len(nums)):\n            product *= nums[j]\n            if product > max_product:\n                max_product = product\n    return max_product\n",
  "results": {
    "assert max_subarray_product([1, -2, -3, 0, 7, -8, -2]) == 112": {
      "result": true,
      "time": 0.07398271560668945,
      "error": null
    },
    "assert max_subarray_product([6, -3, -10, 0, 2]) == 180 ": {
      "result": true,
      "time": 0.07711505889892578,
      "error": null
    },
    "assert max_subarray_product([-2, -40, 0, -2, -3]) == 80": {
      "result": true,
      "time": 0.07301855087280273,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}