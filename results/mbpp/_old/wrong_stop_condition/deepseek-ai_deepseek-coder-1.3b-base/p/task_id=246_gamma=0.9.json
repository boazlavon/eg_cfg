{
  "code": "def babylonian_squareroot(n):\n    x = n\n    while True:\n        y = (x + n / x) / 2\n        if y == x:\n            break\n        x = y\n    return x\n",
  "results": {
    "assert babylonian_squareroot(10)==3.162277660168379": {
      "result": true,
      "time": 0.14900660514831543,
      "error": null
    },
    "assert babylonian_squareroot(2)==1.414213562373095": {
      "result": true,
      "time": 0.13315796852111816,
      "error": null
    },
    "assert babylonian_squareroot(9)==3.0": {
      "result": true,
      "time": 0.12934136390686035,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}