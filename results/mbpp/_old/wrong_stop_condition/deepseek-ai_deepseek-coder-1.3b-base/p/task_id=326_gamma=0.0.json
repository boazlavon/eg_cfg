{
  "code": "def most_occurrences(words):\n    word_count = {}\n    for word in words:\n        for w in word.split():\n            if w in word_count:\n                word_count[w] += 1\n            else:\n                word_count[w] = 1\n    max_count = max(word_count.values())\n    return max(word_count, key=word_count.get)\n",
  "results": {
    "assert most_occurrences([\"UTS is best for RTF\", \"RTF love UTS\", \"UTS is best\"] ) == 'UTS'": {
      "result": true,
      "time": 0.07122993469238281,
      "error": null
    },
    "assert most_occurrences([\"Its been a great year\", \"this year is so worse\", \"this year is okay\"] ) == 'year'": {
      "result": true,
      "time": 0.06891727447509766,
      "error": null
    },
    "assert most_occurrences([\"Families can be reunited\", \"people can be reunited\", \"Tasks can be achieved \"] ) == 'can'": {
      "result": true,
      "time": 0.06849074363708496,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}