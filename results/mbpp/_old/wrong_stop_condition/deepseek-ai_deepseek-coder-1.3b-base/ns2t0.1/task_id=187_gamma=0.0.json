{
  "code": "def longest_common_subsequence(str1, str2, m, n):\n    if m == 0 or n == 0:\n        return 0\n    elif str1[m - 1] == str2[n - 1]:\n        return 1 + longest_common_subsequence(str1, str2, m - 1, n - 1)\n    else:\n        return max(longest_common_subsequence(str1, str2, m, n - 1), longest_common_subsequence(str1, str2, m - 1, n))\n",
  "results": {
    "assert longest_common_subsequence(\"AGGTAB\" , \"GXTXAYB\", 6, 7) == 4": {
      "result": true,
      "time": 0.18538784980773926,
      "error": null
    },
    "assert longest_common_subsequence(\"ABCDGH\" , \"AEDFHR\", 6, 6) == 3": {
      "result": true,
      "time": 0.1869525909423828,
      "error": null
    },
    "assert longest_common_subsequence(\"AXYT\" , \"AYZX\", 4, 4) == 2": {
      "result": true,
      "time": 0.18641281127929688,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}