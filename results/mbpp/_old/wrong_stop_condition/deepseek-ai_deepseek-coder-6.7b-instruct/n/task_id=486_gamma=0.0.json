{
  "code": "import math\n\n\ndef binomial_probability(n, k, p):\n    \"\"\"\n    Function to compute binomial probability\n    n: number of trials\n    k: number of successes\n    p: probability of success in one trial\n    \"\"\"\n    # Compute binomial coefficient\n    binom_coeff = math.factorial(n) / (math.factorial(k) * math.factorial(n - k))\n\n    # Compute probability\n    prob = binom_coeff * (p**k) * ((1 - p) ** (n - k))\n\n    return prob\n",
  "results": {
    "assert binomial_probability(10, 5, 1.0/3) == 0.13656454808718185": {
      "result": true,
      "time": 0.8709213733673096,
      "error": null
    },
    "assert binomial_probability(11, 6, 2.0/4) == 0.2255859375": {
      "result": true,
      "time": 0.8640422821044922,
      "error": null
    },
    "assert binomial_probability(12, 7, 3.0/5) == 0.227030335488": {
      "result": true,
      "time": 0.8761427402496338,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}