{
  "code": "def next_Power_Of_2(n):\n    if n and not (n & (n - 1)):\n        return n\n",
  "results": {
    "assert next_Power_Of_2(0) == 1": {
      "result": false,
      "time": 0.10450506210327148,
      "error": null
    },
    "assert next_Power_Of_2(5) == 8": {
      "result": false,
      "time": 0.11562013626098633,
      "error": null
    },
    "assert next_Power_Of_2(17) == 32": {
      "result": false,
      "time": 0.10713624954223633,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}