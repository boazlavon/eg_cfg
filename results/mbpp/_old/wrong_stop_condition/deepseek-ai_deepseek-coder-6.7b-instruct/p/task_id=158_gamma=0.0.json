{
  "code": "def min_Ops(arr, n, k):\n    arr.sort()\n    res = float(\"inf\")\n    for i in range(n - k + 1):\n        curr_diff = arr[i + k - 1] - arr[i]\n        curr_sum = sum([arr[i + k - 1] - arr[i] for i in range(i, i + k)])\n        res = min(res, curr_sum)\n    return res if res != float(\"inf\") else -1\n",
  "results": {
    "assert min_Ops([2,2,2,2],4,3) == 0": {
      "result": false,
      "time": 0.17653107643127441,
      "error": null
    },
    "assert min_Ops([4,2,6,8],4,3) == -1": {
      "result": false,
      "time": 0.17737865447998047,
      "error": null
    },
    "assert min_Ops([21,33,9,45,63],5,6) == 24": {
      "result": false,
      "time": 0.17641520500183105,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}