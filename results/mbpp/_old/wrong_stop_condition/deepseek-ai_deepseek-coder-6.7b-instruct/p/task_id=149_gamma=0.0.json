{
  "code": "def longest_subseq_with_diff_one(arr, n):\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(0, i):\n            if abs(arr[i] - arr[j]) == 1 and dp[i] < dp[j] + 1:\n                dp[i] = dp[j] + 1\n    return max(dp)\n",
  "results": {
    "assert longest_subseq_with_diff_one([1, 2, 3, 4, 5, 3, 2], 7) == 6": {
      "result": true,
      "time": 0.1972637176513672,
      "error": null
    },
    "assert longest_subseq_with_diff_one([10, 9, 4, 5, 4, 8, 6], 7) == 3": {
      "result": true,
      "time": 0.18659734725952148,
      "error": null
    },
    "assert longest_subseq_with_diff_one([1, 2, 3, 2, 3, 7, 2, 1], 8) == 7": {
      "result": true,
      "time": 0.1779797077178955,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}