{
  "code": "def first_Missing_Positive(nums, n):\n    if 1 not in nums:\n        return 1\n    if n == 1:\n        return 2\n    for i in range(len(nums)):\n        if nums[i] <= 0 or nums[i] > n:\n            nums[i] = 1\n    for i in range(len(nums)):\n        a = abs(nums[i])\n        if a == n:\n            nums[0] = -abs(nums[0])\n        else:\n            nums[a] = -abs(nums[a])\n    for i in range(1, n):\n        if nums[i] > 0:\n            return i\n    if nums[0] > 0:\n        return n\n    return n + 1\n",
  "results": {
    "assert first_Missing_Positive([1,2,3,-1,5],5) == 4": {
      "result": true,
      "time": 0.22465729713439941,
      "error": null
    },
    "assert first_Missing_Positive([0,-1,-2,1,5,8],6) == 2": {
      "result": true,
      "time": 0.21886038780212402,
      "error": null
    },
    "assert first_Missing_Positive([0,1,2,5,-8],5) == 3": {
      "result": true,
      "time": 0.2226717472076416,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}