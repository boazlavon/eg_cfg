{
  "code": "def is_samepatterns(colors, patterns):\n    if len(colors) != len(patterns):\n        return False\n    color_pattern = {}\n    pattern_color = {}\n    for color, pattern in zip(colors, patterns):\n        if color not in color_pattern:\n            color_pattern[color] = pattern\n        if pattern not in pattern_color:\n            pattern_color[pattern] = color\n        if color_pattern[color] != pattern or pattern_color[pattern] != color:\n            return False\n    return True\n",
  "results": {
    "assert is_samepatterns([\"red\",\"green\",\"green\"], [\"a\", \"b\", \"b\"])==True ": {
      "result": true,
      "time": 0.16469764709472656,
      "error": null
    },
    "assert is_samepatterns([\"red\",\"green\",\"greenn\"], [\"a\",\"b\",\"b\"])==False ": {
      "result": true,
      "time": 0.16159343719482422,
      "error": null
    },
    "assert is_samepatterns([\"red\",\"green\",\"greenn\"], [\"a\",\"b\"])==False ": {
      "result": true,
      "time": 0.16295695304870605,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}