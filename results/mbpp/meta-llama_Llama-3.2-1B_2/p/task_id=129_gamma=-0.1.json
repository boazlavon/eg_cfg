{
  "code": "def magic_square_test(my_matrix):\n    \"\"\"\n    Given a 2D matrix of integers, return True if the matrix is a magic square, and False otherwise.\n    A magic square is a square matrix of integers where the sum of each row, column, and diagonal is equal.\n    \"\"\"\n    # Check if the matrix is square\n    if len(my_matrix) != len(my_matrix[0]):\n        return False\n    # Check if the matrix is a magic square\n    for row in my_matrix:\n        if sum(row) != sum(my_matrix):\n            return False\n    # Check if the matrix is a magic square\n    for col in zip(*my_matrix):\n        if sum(col) != sum(my_matrix):\n            return False\n    # Check if the matrix is a magic square\n    for i in range(len(my_matrix)):\n        for j in range(len(my_matrix)):\n            if my_matrix[i][j] != my_matrix[j][i]:\n                return False\n    return True\n",
  "results": {
    "assert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True": {
      "result": false,
      "time": 0.14210963249206543,
      "error": null
    },
    "assert magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 8]])==True": {
      "result": false,
      "time": 0.1308915615081787,
      "error": null
    },
    "assert magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 7]])==False": {
      "result": false,
      "time": 0.12711715698242188,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false
}