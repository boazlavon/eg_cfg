{
  "code": "def set_Bit_Number(n):\n    \"\"\"Return the most significant bit number which is also a set bit.\"\"\"\n    return n & (n - 1)\n",
  "results": {
    "assert set_Bit_Number(6) == 4": {
      "result": true,
      "time": 0.16569304466247559,
      "error": null
    },
    "assert set_Bit_Number(10) == 8": {
      "result": true,
      "time": 0.17783021926879883,
      "error": null
    },
    "assert set_Bit_Number(18) == 16": {
      "result": true,
      "time": 0.1797792911529541,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false
}