{
  "code": "def minimum_Length(s):\n    if not s:\n        return 0\n    left = 0\n    right = len(s) - 1\n    while left < right and s[left] == s[right]:\n        current_char = s[left]\n        while left <= right and s[left] == current_char:\n            left += 1\n        while left <= right and s[right] == current_char:\n            right -= 1\n    return right - left + 1",
  "results": {
    "assert minimum_Length(\"mnm\") == 1": {
      "result": true,
      "time": 0.12131094932556152,
      "error": null
    },
    "assert minimum_Length(\"abcda\") == 3": {
      "result": true,
      "time": 0.11054706573486328,
      "error": null
    },
    "assert minimum_Length(\"abcb\") == 2": {
      "result": false,
      "time": 0.10951423645019531,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:54:53",
    "guidance_input_tokens": 484,
    "guidance_output_tokens": 127,
    "end_time": "2025-05-07 18:54:55",
    "duration": "0:00:02.178228"
  },
  "retry": 0,
  "random_seed": 813
}