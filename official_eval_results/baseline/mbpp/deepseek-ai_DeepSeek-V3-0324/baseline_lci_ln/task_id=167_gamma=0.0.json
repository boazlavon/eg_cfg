{
  "code": "def next_Power_Of_2(n):\n    if n == 0:\n        return 1\n    power = 1\n    while power < n:\n        power = power * 2\n    return power",
  "results": {
    "assert next_Power_Of_2(0) == 1": {
      "result": true,
      "time": 0.11720061302185059,
      "error": null
    },
    "assert next_Power_Of_2(5) == 8": {
      "result": true,
      "time": 0.11403703689575195,
      "error": null
    },
    "assert next_Power_Of_2(17) == 32": {
      "result": true,
      "time": 0.12172913551330566,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:45:25",
    "guidance_input_tokens": 492,
    "guidance_output_tokens": 76,
    "end_time": "2025-05-07 18:45:27",
    "duration": "0:00:01.835398"
  },
  "retry": 0,
  "random_seed": 813
}