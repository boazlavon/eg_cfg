{
  "code": "import math\n\ndef distance_lat_long(lat1, lon1, lat2, lon2):\n    # Convert degrees to radians\n    lat1_rad = math.radians(lat1)\n    lon1_rad = math.radians(lon1)\n    lat2_rad = math.radians(lat2)\n    lon2_rad = math.radians(lon2)\n    \n    # Earth radius in kilometers\n    earth_radius = 6371.0\n    \n    # Calculate differences\n    delta_lat = lat2_rad - lat1_rad\n    delta_lon = lon2_rad - lon1_rad\n    \n    # Haversine formula components\n    a = math.sin(delta_lat / 2) ** 2\n    b = math.cos(lat1_rad) * math.cos(lat2_rad)\n    c = math.sin(delta_lon / 2) ** 2\n    \n    # Intermediate calculation\n    haversine = a + b * c\n    \n    # Square root term\n    sqrt_term = math.sqrt(haversine)\n    \n    # Arcsin term\n    arcsin_term = math.asin(sqrt_term)\n    \n    # Final distance calculation\n    distance = 2 * earth_radius * arcsin_term\n    \n    return distance",
  "results": {
    "assert distance_lat_long(23.5,67.5,25.5,69.5)==12179.372041317429": {
      "result": false,
      "time": 0.0839989185333252,
      "error": null
    },
    "assert distance_lat_long(10.5,20.5,30.5,40.5)==6069.397933300514": {
      "result": false,
      "time": 0.08211708068847656,
      "error": null
    },
    "assert distance_lat_long(10,20,30,40)==6783.751974994595": {
      "result": false,
      "time": 0.07276153564453125,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:45:59",
    "guidance_input_tokens": 540,
    "guidance_output_tokens": 307,
    "end_time": "2025-05-07 18:46:05",
    "duration": "0:00:06.383343"
  },
  "retry": 0,
  "random_seed": 813
}