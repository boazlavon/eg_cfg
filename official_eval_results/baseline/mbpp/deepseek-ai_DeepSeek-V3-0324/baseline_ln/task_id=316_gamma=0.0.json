{
  "code": "def find_last_occurrence(arr, target):\n    left, right = 0, len(arr) - 1\n    last_occurrence = -1\n    while left <= right:\n        mid = (left + right) // 2\n        if arr[mid] == target:\n            last_occurrence = mid\n            left = mid + 1  # Move to the right to find the last occurrence\n        elif arr[mid] < target:\n            left = mid + 1\n        else:\n            right = mid - 1\n    return last_occurrence",
  "results": {
    "assert find_last_occurrence([2, 5, 5, 5, 6, 6, 8, 9, 9, 9], 5) == 3": {
      "result": true,
      "time": 0.12601828575134277,
      "error": null
    },
    "assert find_last_occurrence([2, 3, 5, 8, 6, 6, 8, 9, 9, 9], 9) == 9": {
      "result": true,
      "time": 0.1204676628112793,
      "error": null
    },
    "assert find_last_occurrence([2, 2, 1, 5, 6, 6, 6, 9, 9, 9], 6) == 6": {
      "result": true,
      "time": 0.11763811111450195,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:37:27",
    "guidance_input_tokens": 733,
    "guidance_output_tokens": 125,
    "end_time": "2025-05-07 18:37:29",
    "duration": "0:00:02.037028"
  },
  "retry": 0,
  "random_seed": 813
}