{
  "code": "def max_sum_rectangular_grid(grid, n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return max(grid[0][0], grid[1][0])\n    if n == 2:\n        return max(grid[0][0] + grid[1][1], grid[0][1] + grid[1][0])\n    dp = [0] * (n + 1)\n    dp[0] = 0\n    dp[1] = max(grid[0][0], grid[1][0])\n    dp[2] = max(grid[0][0] + grid[1][1], grid[0][1] + grid[1][0])\n    for i in range(3, n + 1):\n        option1 = dp[i - 1]\n        option2 = dp[i - 2] + grid[0][i - 1] + grid[1][i - 2]\n        option3 = dp[i - 2] + grid[0][i - 2] + grid[1][i - 1]\n        dp[i] = max(option1, option2, option3)\n    return dp[n]",
  "results": {
    "assert max_sum_rectangular_grid([ [1, 4, 5], [2, 0, 0 ] ], 3) == 7": {
      "result": true,
      "time": 0.07886338233947754,
      "error": null
    },
    "assert max_sum_rectangular_grid([ [ 1, 2, 3, 4, 5], [ 6, 7, 8, 9, 10] ], 5) == 24": {
      "result": false,
      "time": 0.0746469497680664,
      "error": null
    },
    "assert max_sum_rectangular_grid([ [7, 9, 11, 15, 19], [21, 25, 28, 31, 32] ], 5) == 81": {
      "result": false,
      "time": 0.07616949081420898,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:52:29",
    "end_time": "2025-05-08 22:52:33",
    "duration": "0:00:03.876168"
  },
  "retry": 0,
  "random_seed": 855
}