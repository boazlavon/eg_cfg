{
  "code": "def extract_min_max(input_tuple, k):\n    sorted_list = []\n    for element in input_tuple:\n        sorted_list.append(element)\n    sorted_list.sort()\n    min_k_elements = []\n    for i in range(k):\n        min_k_elements.append(sorted_list[i])\n    max_k_elements = []\n    for j in range(k):\n        index = len(sorted_list) - k + j\n        max_k_elements.append(sorted_list[index])\n    combined = []\n    for element in min_k_elements:\n        combined.append(element)\n    for element in max_k_elements:\n        combined.append(element)\n    return tuple(combined)",
  "results": {
    "assert extract_min_max((5, 20, 3, 7, 6, 8), 2) == (3, 5, 8, 20)": {
      "result": true,
      "time": 0.07328224182128906,
      "error": null
    },
    "assert extract_min_max((4, 5, 6, 1, 2, 7), 3) == (1, 2, 4, 5, 6, 7)": {
      "result": true,
      "time": 0.07529902458190918,
      "error": null
    },
    "assert extract_min_max((2, 3, 4, 8, 9, 11, 7), 4) == (2, 3, 4, 7, 8, 9, 11)": {
      "result": false,
      "time": 0.076141357421875,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:53:15",
    "end_time": "2025-05-08 22:53:19",
    "duration": "0:00:03.886246"
  },
  "retry": 0,
  "random_seed": 855
}