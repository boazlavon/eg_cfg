{
  "code": "def k_smallest_pairs(arr1, arr2, k):\n    result = []\n    for i in range(len(arr1)):\n        for j in range(len(arr2)):\n            pair_sum = arr1[i] + arr2[j]\n            current_pair = [arr1[i], arr2[j]]\n            if len(result) < k:\n                result.append(current_pair)\n            else:\n                index = 0\n                max_sum = 0\n                for m in range(k):\n                    sum_so_far = result[m][0] + result[m][1]\n                    if m == 0:\n                        max_sum = sum_so_far\n                    elif sum_so_far > max_sum:\n                        max_sum = sum_so_far\n                        index = m\n                if pair_sum < max_sum:\n                    result[index] = current_pair\n    return result",
  "results": {
    "assert k_smallest_pairs([1,3,7],[2,4,6],2)==[[1, 2], [1, 4]]": {
      "result": true,
      "time": 0.07901334762573242,
      "error": null
    },
    "assert k_smallest_pairs([1,3,7],[2,4,6],1)==[[1, 2]]": {
      "result": true,
      "time": 0.07620501518249512,
      "error": null
    },
    "assert k_smallest_pairs([1,3,7],[2,4,6],7)==[[1, 2], [1, 4], [3, 2], [1, 6], [3, 4], [3, 6], [7, 2]]": {
      "result": false,
      "time": 0.07940316200256348,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:22:56",
    "end_time": "2025-05-08 22:23:00",
    "duration": "0:00:03.522147"
  },
  "retry": 0,
  "random_seed": 855
}