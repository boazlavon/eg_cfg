{
  "code": "def minimum_Length(s):\n    count = {}\n    for char in s:\n        if char in count:\n            count[char] += 1\n        else:\n            count[char] = 1\n    min_count = len(s)\n    for key in count:\n        current_count = count[key]\n        if current_count < min_count:\n            min_count = current_count\n    result = len(s) - min_count\n    return result",
  "results": {
    "assert minimum_Length(\"mnm\") == 1": {
      "result": false,
      "time": 0.07948708534240723,
      "error": null
    },
    "assert minimum_Length(\"abcda\") == 3": {
      "result": false,
      "time": 0.08065366744995117,
      "error": null
    },
    "assert minimum_Length(\"abcb\") == 2": {
      "result": false,
      "time": 0.07972192764282227,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:47:16",
    "end_time": "2025-05-08 22:47:40",
    "duration": "0:00:24.072833"
  },
  "retry": 0,
  "random_seed": 855
}