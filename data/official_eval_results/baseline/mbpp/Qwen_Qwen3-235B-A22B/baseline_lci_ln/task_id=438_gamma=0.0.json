{
  "code": "def count_bidirectional(pairs):\n    count = 0\n    seen = []\n    for pair in pairs:\n        first = pair[0]\n        second = pair[1]\n        reversed_pair = (second, first)\n        if reversed_pair in seen:\n            count += 1\n        else:\n            seen.append(pair)\n    return str(count)",
  "results": {
    "assert count_bidirectional([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)] ) == '3'": {
      "result": true,
      "time": 0.08433413505554199,
      "error": null
    },
    "assert count_bidirectional([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)] ) == '2'": {
      "result": true,
      "time": 0.07803940773010254,
      "error": null
    },
    "assert count_bidirectional([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)] ) == '4'": {
      "result": false,
      "time": 0.07906508445739746,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:31:53",
    "end_time": "2025-05-08 22:31:55",
    "duration": "0:00:02.098056"
  },
  "retry": 0,
  "random_seed": 855
}