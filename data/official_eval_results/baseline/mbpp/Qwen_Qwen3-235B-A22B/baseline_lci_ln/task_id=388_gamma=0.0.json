{
  "code": "def highest_Power_of_2(n):\n    power = 0\n    current_power_of_2 = 1\n    while current_power_of_2 * 2 <= n:\n        current_power_of_2 *= 2\n        power += 1\n    return current_power_of_2",
  "results": {
    "assert highest_Power_of_2(10) == 8": {
      "result": true,
      "time": 0.0819082260131836,
      "error": null
    },
    "assert highest_Power_of_2(19) == 16": {
      "result": true,
      "time": 0.07944226264953613,
      "error": null
    },
    "assert highest_Power_of_2(32) == 32": {
      "result": true,
      "time": 0.0785989761352539,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:29:13",
    "end_time": "2025-05-08 22:29:15",
    "duration": "0:00:01.789034"
  },
  "retry": 0,
  "random_seed": 855
}