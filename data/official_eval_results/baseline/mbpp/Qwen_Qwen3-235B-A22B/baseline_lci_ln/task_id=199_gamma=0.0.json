{
  "code": "def highest_Power_of_2(n):\n    power = 0\n    result = 0\n    while power <= n:\n        result = power\n        power = power * 2 + 1\n    return result",
  "results": {
    "assert highest_Power_of_2(10) == 8": {
      "result": false,
      "time": 0.0895078182220459,
      "error": null
    },
    "assert highest_Power_of_2(19) == 16": {
      "result": false,
      "time": 0.08324718475341797,
      "error": null
    },
    "assert highest_Power_of_2(32) == 32": {
      "result": false,
      "time": 0.08196234703063965,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:23:09",
    "end_time": "2025-05-08 22:23:11",
    "duration": "0:00:01.856222"
  },
  "retry": 0,
  "random_seed": 855
}