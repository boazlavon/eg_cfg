{
  "code": "def next_Perfect_Square(n):\n    import math\n    square_root = math.sqrt(n)\n    integer_square_root = int(square_root)\n    if square_root == integer_square_root:\n        next_square = (integer_square_root + 1) ** 2\n        return next_square\n    else:\n        next_square = (integer_square_root + 1) ** 2\n        return next_square",
  "results": {
    "assert next_Perfect_Square(35) == 36": {
      "result": true,
      "time": 0.08034682273864746,
      "error": null
    },
    "assert next_Perfect_Square(6) == 9": {
      "result": true,
      "time": 0.08159041404724121,
      "error": null
    },
    "assert next_Perfect_Square(9) == 16": {
      "result": true,
      "time": 0.08148431777954102,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:18:56",
    "end_time": "2025-05-08 22:18:59",
    "duration": "0:00:02.308945"
  },
  "retry": 0,
  "random_seed": 855
}