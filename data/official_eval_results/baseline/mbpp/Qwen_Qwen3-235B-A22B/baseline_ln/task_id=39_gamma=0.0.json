{
  "code": "from collections import Counter\ndef rearange_string(s):\n    count = Counter(s)\n    max_heap = [(-freq, char) for char, freq in count.items()]\n    import heapq\n    heapq.heapify(max_heap)\n    \n    prev_char = None\n    prev_freq = 0\n    result = []\n    \n    while max_heap or prev_freq < 0:\n        if not max_heap:\n            return \"\"\n        \n        freq, char = heapq.heappop(max_heap)\n        result.append(char)\n        freq += 1\n        \n        if prev_freq < 0:\n            heapq.heappush(max_heap, (prev_freq, prev_char))\n        \n        prev_char = char\n        prev_freq = freq\n    \n    return ''.join(result)",
  "results": {
    "assert rearange_string(\"aab\")==('aba')": {
      "result": true,
      "time": 0.09708738327026367,
      "error": null
    },
    "assert rearange_string(\"aabb\")==('abab')": {
      "result": true,
      "time": 0.08101916313171387,
      "error": null
    },
    "assert rearange_string(\"abccdd\")==('cdabcd')": {
      "result": true,
      "time": 0.07992029190063477,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:52:10",
    "end_time": "2025-05-08 22:52:13",
    "duration": "0:00:03.062226"
  },
  "retry": 0,
  "random_seed": 855
}