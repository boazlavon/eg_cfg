{
  "code": "def check_equilateral(a, b, c):\n    return a == b == c",
  "results": {
    "assert check_equilateral(6,8,12)==False ": {
      "result": true,
      "time": 0.10141205787658691,
      "error": null
    },
    "assert check_equilateral(6,6,12)==False": {
      "result": true,
      "time": 0.11104035377502441,
      "error": null
    },
    "assert check_equilateral(6,6,6)==True": {
      "result": true,
      "time": 0.09255385398864746,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 23:06:36",
    "end_time": "2025-05-08 23:06:37",
    "duration": "0:00:01.471578"
  },
  "retry": 0,
  "random_seed": 855
}