{
  "code": "import math\n\ndef get_Min_Squares(n):\n    dp = [0, 1, 2, 3]\n    for i in range(4, n+1):\n        dp.append(i)\n        for j in range(1, int(math.sqrt(i)) + 1):\n            temp = j*j\n            if temp <= i:\n                dp[i] = min(dp[i], 1 + dp[i - temp])\n    return dp[n]",
  "results": {
    "assert get_Min_Squares(6) == 3": {
      "result": true,
      "time": 0.12077546119689941,
      "error": null
    },
    "assert get_Min_Squares(2) == 2": {
      "result": true,
      "time": 0.11169981956481934,
      "error": null
    },
    "assert get_Min_Squares(4) == 1": {
      "result": true,
      "time": 0.11507177352905273,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-08 22:20:59",
    "end_time": "2025-05-08 22:21:01",
    "duration": "0:00:02.317997"
  },
  "retry": 0,
  "random_seed": 855
}