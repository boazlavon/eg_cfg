{
  "code": "def get_maxgold(mine, r, c):\n    dp = [[0]*c for _ in range(r)]\n    dp[0][0] = mine[0][0]\n\n    # Fill the first row\n    for j in range(1, c):\n        dp[0][j] = dp[0][j-1] + mine[0][j]\n\n    # Fill the first column\n    for i in range(1, r):\n        dp[i][0] = dp[i-1][0] + mine[i][0]\n\n    # Fill the rest of the dp table\n    for i in range(1, r):\n        for j in range(1, c):\n            dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + mine[i][j]\n\n    return dp[r-1][c-1]",
  "results": {
    "assert get_maxgold([[1, 3, 1, 5],[2, 2, 4, 1],[5, 0, 2, 3],[0, 6, 1, 2]],4,4)==16": {
      "result": false,
      "time": 0.22671961784362793,
      "error": null
    },
    "assert get_maxgold([[10,20],[30,40]],2,2)==70": {
      "result": false,
      "time": 0.23543977737426758,
      "error": null
    },
    "assert get_maxgold([[4,9],[3,7]],2,2)==13": {
      "result": false,
      "time": 0.2549002170562744,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "tokens_count": 242,
  "retry": 0,
  "random_seed": 559
}