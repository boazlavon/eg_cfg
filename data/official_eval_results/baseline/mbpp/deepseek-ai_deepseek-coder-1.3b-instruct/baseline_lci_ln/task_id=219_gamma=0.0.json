{
  "code": "def extract_min_max(tup, k):\n    min_elements = []\n    max_elements = []\n    for i in range(k):\n        min_val = min(tup)\n        max_val = max(tup)\n        min_elements.append(min_val)\n        max_elements.append(max_val)\n        tup = tup[1:]\n    return tuple(min_elements), tuple(max_elements)",
  "results": {
    "assert extract_min_max((5, 20, 3, 7, 6, 8), 2) == (3, 5, 8, 20)": {
      "result": false,
      "time": 0.19355368614196777,
      "error": null
    },
    "assert extract_min_max((4, 5, 6, 1, 2, 7), 3) == (1, 2, 4, 5, 6, 7)": {
      "result": false,
      "time": 0.20239806175231934,
      "error": null
    },
    "assert extract_min_max((2, 3, 4, 8, 9, 11, 7), 4) == (2, 3, 4, 7, 8, 9, 11)": {
      "result": false,
      "time": 0.19972944259643555,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "tokens_count": 131,
  "retry": 0,
  "random_seed": 559
}