{
  "code": "def smartNumber(n):\n    def digits(n):\n        return [int(d) for d in str(n)]\n\n    def product(lst):\n        p = 1\n        for i in lst:\n            p *= i\n        return p\n\n    def smart(n):\n        return n == product(digits(n))\n\n    i = 1\n    while True:\n        if smart(i):\n            n -= 1\n            if n == 0:\n                return i\n        i += 1",
  "results": {
    "assert smartNumber(1) == 30": {
      "result": false,
      "time": 0.24311494827270508,
      "error": null
    },
    "assert smartNumber(50) == 273": {
      "result": false,
      "time": 10.107938528060913,
      "error": "Timeout"
    },
    "assert smartNumber(1000) == 2664": {
      "result": false,
      "time": 10.12734866142273,
      "error": "Timeout"
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "tokens_count": 207,
  "retry": 0,
  "random_seed": 559
}