{
  "code": "def max_sum_rectangular_grid(grid, n):\n    m, k = len(grid), len(grid[0])\n    dp = [[0] * (k + 1) for _ in range(n + 1)]\n    dp2 = [[0] * (k + 1) for _ in range(n + 1)]\n    for i in range(1, m + 1):\n        for j in range(1, min(i + 1, n + 1)):\n            dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1] + grid[i - 1][j - 1])\n            dp2[i][j] = max(dp2[i - 1][j], dp2[i - 1][j - 1] + grid[i - 1][j - 1]) if i > j else dp[i - 1][j - 1] + grid[i - 1][j - 1]\n    return max(dp2[i][n] for i in range(1, m + 1))",
  "results": {
    "assert max_sum_rectangular_grid([ [1, 4, 5], [2, 0, 0 ] ], 3) == 7": {
      "result": false,
      "time": 0.15433573722839355,
      "error": null
    },
    "assert max_sum_rectangular_grid([ [ 1, 2, 3, 4, 5], [ 6, 7, 8, 9, 10] ], 5) == 24": {
      "result": false,
      "time": 0.14526987075805664,
      "error": null
    },
    "assert max_sum_rectangular_grid([ [7, 9, 11, 15, 19], [21, 25, 28, 31, 32] ], 5) == 81": {
      "result": false,
      "time": 0.16157770156860352,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "tokens_count": 313,
  "retry": 0,
  "random_seed": 559
}