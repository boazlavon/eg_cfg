{
  "code": "def magic_square_test(square):\n    n = len(square)\n    row_sum = [0]*n\n    col_sum = [0]*n\n    diag_sum1 = 0\n    diag_sum2 = 0\n\n    for i in range(n):\n        for j in range(n):\n            row_sum[i] += square[i][j]\n            col_sum[j] += square[i][j]\n            if i == j:\n                diag_sum1 += square[i][j]\n            if i + j == n-1:\n                diag_sum2 += square[i][j]\n\n    if max(row_sum) != max(col_sum) or max(row_sum) != max(col_sum) or max(row_sum) != max(col_sum) or max(row_sum) != max(col_sum):\n        return False\n\n    if diag_sum1 != diag_sum2 or diag_sum1 != diag_sum2 or diag_sum1 != diag_sum2:\n        return False\n\n    return True\n",
  "results": {
    "assert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True": {
      "result": true,
      "time": 0.06574368476867676,
      "error": null
    },
    "assert magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 8]])==True": {
      "result": true,
      "time": 0.06327986717224121,
      "error": null
    },
    "assert magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 7]])==False": {
      "result": true,
      "time": 0.05939173698425293,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {},
  "retry": -1,
  "random_seed": -1
}