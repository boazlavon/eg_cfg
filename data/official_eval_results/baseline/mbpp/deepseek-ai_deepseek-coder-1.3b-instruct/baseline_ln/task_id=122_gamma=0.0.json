{
  "code": "def smartNumber(n):\n    i = 1\n    while True:\n        if is_prime(i) and is_product_of_primes(i):\n            n -= 1\n            if n == 0:\n                return i\n        i += 1\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True\n\ndef is_product_of_primes(n):\n    while n > 9:\n        last_digit = n % 10\n        if not is_prime(last_digit):\n            return False\n        n = n // 10\n    return is_prime(n)",
  "results": {
    "assert smartNumber(1) == 30": {
      "result": false,
      "time": 0.16892766952514648,
      "error": null
    },
    "assert smartNumber(50) == 273": {
      "result": false,
      "time": 0.1567070484161377,
      "error": null
    },
    "assert smartNumber(1000) == 2664": {
      "result": false,
      "time": 10.13774037361145,
      "error": "Timeout"
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 10:58:08",
    "input_tokens": 776,
    "output_tokens": 362,
    "end_time": "2025-05-26 10:58:31",
    "duration": "0:00:23.131525"
  },
  "retry": 0,
  "random_seed": 379
}