{
  "code": "from collections import Counter\nfrom heapq import nlargest\n\ndef func(lists, k):\n    counter = Counter()\n    for sublist in lists:\n        for num in sublist:\n            counter[num] += 1\n    return nlargest(k, counter.keys(), key=counter.get)",
  "results": {
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],3)==[5, 7, 1]": {
      "result": false,
      "time": 0.21311688423156738,
      "error": null
    },
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],1)==[1]": {
      "result": true,
      "time": 0.215895414352417,
      "error": null
    },
    "assert func([[1, 2, 6], [1, 3, 4, 5, 7, 8], [1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]],5)==[6, 5, 7, 8, 1]": {
      "result": false,
      "time": 0.2150101661682129,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 10:15:25",
    "input_tokens": 1027,
    "output_tokens": 89,
    "end_time": "2025-05-26 10:15:29",
    "duration": "0:00:04.135267"
  },
  "retry": 0,
  "random_seed": 379
}