{
  "code": "def highest_Power_of_2(n):\n    if n and not (n & (n - 1)):\n        return n\n    else:\n        return n & (~0)",
  "results": {
    "assert highest_Power_of_2(10) == 8": {
      "result": false,
      "time": 0.06460380554199219,
      "error": null
    },
    "assert highest_Power_of_2(19) == 16": {
      "result": false,
      "time": 0.05829596519470215,
      "error": null
    },
    "assert highest_Power_of_2(32) == 32": {
      "result": true,
      "time": 0.052983999252319336,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3333333333333333,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 10:37:17",
    "input_tokens": 796,
    "output_tokens": 72,
    "end_time": "2025-05-26 10:37:20",
    "duration": "0:00:02.983228"
  },
  "retry": 0,
  "random_seed": 379
}