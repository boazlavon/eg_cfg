{
  "code": "def is_valid_parenthese(s):\n    stack = []\n    mapping = {\")\": \"(\", \"]\": \"[\", \"}\": \"{\"}\n\n    for char in s:\n        if char in mapping.values():\n            stack.append(char)\n        elif char in mapping.keys():\n            if stack == [] or mapping[char] != stack.pop():\n                return False\n    return stack == []\n",
  "results": {
    "assert is_valid_parenthese(\"(){}[]\")==True": {
      "result": true,
      "time": 0.06252527236938477,
      "error": null
    },
    "assert is_valid_parenthese(\"()[{)}\")==False": {
      "result": true,
      "time": 0.06083536148071289,
      "error": null
    },
    "assert is_valid_parenthese(\"()\")==True": {
      "result": true,
      "time": 0.0557248592376709,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {},
  "retry": -1,
  "random_seed": -1
}