{
  "code": "def remove_Occ(s, char):\n    first_occurrence = s.find(char)\n    if first_occurrence == -1:\n        return s  # character not found, return original string\n    \n    last_occurrence = s.rfind(char)\n    if first_occurrence == last_occurrence:\n        # Only one occurrence, remove it\n        return s[:first_occurrence] + s[first_occurrence + 1:]\n    \n    # Remove first and last occurrence\n    return s[:first_occurrence] + s[first_occurrence + 1:last_occurrence] + s[last_occurrence + 1:]",
  "results": {
    "assert remove_Occ(\"hello\",\"l\") == \"heo\"": {
      "result": true,
      "time": 0.1318378448486328,
      "error": null
    },
    "assert remove_Occ(\"abcda\",\"a\") == \"bcd\"": {
      "result": true,
      "time": 0.12270641326904297,
      "error": null
    },
    "assert remove_Occ(\"PHP\",\"P\") == \"H\"": {
      "result": true,
      "time": 0.11899685859680176,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:23:10",
    "guidance_input_tokens": 644,
    "guidance_output_tokens": 172,
    "end_time": "2025-05-07 18:23:13",
    "duration": "0:00:03.080073"
  },
  "retry": 0,
  "random_seed": 813
}