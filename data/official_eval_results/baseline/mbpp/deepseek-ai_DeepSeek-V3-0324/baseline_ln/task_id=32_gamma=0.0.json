{
  "code": "import math\n\ndef max_Prime_Factors(n):\n    max_prime = -1\n    \n    # Divide by 2 to remove all even factors\n    while n % 2 == 0:\n        max_prime = 2\n        n = n // 2\n    \n    # Now n must be odd, check for odd divisors up to sqrt(n)\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            max_prime = i\n            n = n // i\n    \n    # If n is a prime number greater than 2\n    if n > 2:\n        max_prime = n\n    \n    return max_prime",
  "results": {
    "assert max_Prime_Factors(15) == 5": {
      "result": true,
      "time": 0.1293349266052246,
      "error": null
    },
    "assert max_Prime_Factors(6) == 3": {
      "result": true,
      "time": 0.0990452766418457,
      "error": null
    },
    "assert max_Prime_Factors(2) == 2": {
      "result": true,
      "time": 0.10879063606262207,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:24:02",
    "guidance_input_tokens": 638,
    "guidance_output_tokens": 150,
    "end_time": "2025-05-07 18:24:05",
    "duration": "0:00:02.894050"
  },
  "retry": 0,
  "random_seed": 813
}