{
  "code": "def is_subset_sum(arr, n, sum):\n    # Base Cases\n    if sum == 0:\n        return True\n    if n == 0 and sum != 0:\n        return False\n\n    # If last element is greater than sum, then ignore it\n    if arr[n-1] > sum:\n        return is_subset_sum(arr, n-1, sum)\n\n    # Check if sum can be obtained by either including or excluding the last element\n    return is_subset_sum(arr, n-1, sum) or is_subset_sum(arr, n-1, sum - arr[n-1])",
  "results": {
    "assert is_subset_sum([3, 34, 4, 12, 5, 2], 6, 9) == True": {
      "result": true,
      "time": 0.12081289291381836,
      "error": null
    },
    "assert is_subset_sum([3, 34, 4, 12, 5, 2], 6, 30) == False": {
      "result": true,
      "time": 0.10978341102600098,
      "error": null
    },
    "assert is_subset_sum([3, 34, 4, 12, 5, 2], 6, 15) == True": {
      "result": true,
      "time": 0.11246895790100098,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:45:03",
    "guidance_input_tokens": 702,
    "guidance_output_tokens": 135,
    "end_time": "2025-05-07 18:45:05",
    "duration": "0:00:02.406868"
  },
  "retry": 0,
  "random_seed": 813
}