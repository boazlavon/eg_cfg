{
  "code": "def smallest_num(lst):\n    if not lst:\n        return None\n    min_value = lst[0]\n    for num in lst:\n        if num < min_value:\n            min_value = num\n    return min_value",
  "results": {
    "assert smallest_num([10, 20, 1, 45, 99]) == 1": {
      "result": true,
      "time": 0.10933947563171387,
      "error": null
    },
    "assert smallest_num([1, 2, 3]) == 1": {
      "result": true,
      "time": 0.11327815055847168,
      "error": null
    },
    "assert smallest_num([45, 46, 50, 60]) == 45": {
      "result": true,
      "time": 0.11312079429626465,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:39:47",
    "guidance_input_tokens": 498,
    "guidance_output_tokens": 79,
    "end_time": "2025-05-07 18:39:49",
    "duration": "0:00:02.100647"
  },
  "retry": 0,
  "random_seed": 813
}