{
  "code": "def positive_count(numbers):\n    total_numbers = len(numbers)\n    positive_numbers = 0\n    for num in numbers:\n        if num > 0:\n            positive_numbers += 1\n    if total_numbers == 0:\n        return 0.0\n    ratio = positive_numbers / total_numbers\n    rounded_ratio = round(ratio, 2)\n    return rounded_ratio",
  "results": {
    "assert positive_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8])==0.54": {
      "result": true,
      "time": 0.10831737518310547,
      "error": null
    },
    "assert positive_count([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8])==0.69": {
      "result": true,
      "time": 0.09670591354370117,
      "error": null
    },
    "assert positive_count([2, 4, -6, -9, 11, -12, 14, -5, 17])==0.56": {
      "result": true,
      "time": 0.09900188446044922,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:59:21",
    "guidance_input_tokens": 577,
    "guidance_output_tokens": 108,
    "end_time": "2025-05-07 18:59:23",
    "duration": "0:00:02.018601"
  },
  "retry": 0,
  "random_seed": 813
}