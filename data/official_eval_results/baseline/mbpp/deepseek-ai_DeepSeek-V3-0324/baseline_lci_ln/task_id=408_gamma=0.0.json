{
  "code": "def k_smallest_pairs(nums1, nums2, k):\n    if not nums1 or not nums2:\n        return []\n    \n    pairs = []\n    for num1 in nums1:\n        for num2 in nums2:\n            pair = [num1, num2]\n            pairs.append(pair)\n    \n    def sum_pair(pair):\n        return pair[0] + pair[1]\n    \n    sorted_pairs = sorted(pairs, key=sum_pair)\n    \n    result = []\n    for i in range(min(k, len(sorted_pairs))):\n        result.append(sorted_pairs[i])\n    \n    return result",
  "results": {
    "assert k_smallest_pairs([1,3,7],[2,4,6],2)==[[1, 2], [1, 4]]": {
      "result": true,
      "time": 0.13112139701843262,
      "error": null
    },
    "assert k_smallest_pairs([1,3,7],[2,4,6],1)==[[1, 2]]": {
      "result": true,
      "time": 0.11948776245117188,
      "error": null
    },
    "assert k_smallest_pairs([1,3,7],[2,4,6],7)==[[1, 2], [1, 4], [3, 2], [1, 6], [3, 4], [3, 6], [7, 2]]": {
      "result": true,
      "time": 0.10764670372009277,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:57:39",
    "guidance_input_tokens": 603,
    "guidance_output_tokens": 154,
    "end_time": "2025-05-07 18:57:41",
    "duration": "0:00:02.435205"
  },
  "retry": 0,
  "random_seed": 813
}