{
  "code": "def ncr_modp(n, r, p):\n    if r > n:\n        return 0\n    if r == 0 or r == n:\n        return 1\n    numerator = 1\n    for i in range(n, n - r, -1):\n        numerator = numerator * i\n        numerator = numerator % p\n    denominator = 1\n    for i in range(1, r + 1):\n        denominator = denominator * i\n        denominator = denominator % p\n    inverse_denominator = pow(denominator, p - 2, p)\n    result = (numerator * inverse_denominator) % p\n    return result",
  "results": {
    "assert ncr_modp(10,2,13)==6": {
      "result": true,
      "time": 0.07463335990905762,
      "error": null
    },
    "assert ncr_modp(15,12,43)==25": {
      "result": true,
      "time": 0.074188232421875,
      "error": null
    },
    "assert ncr_modp(17,9,18)==10": {
      "result": false,
      "time": 0.07248353958129883,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6666666666666666,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:57:21",
    "guidance_input_tokens": 496,
    "guidance_output_tokens": 166,
    "end_time": "2025-05-07 18:57:26",
    "duration": "0:00:05.055781"
  },
  "retry": 0,
  "random_seed": 813
}