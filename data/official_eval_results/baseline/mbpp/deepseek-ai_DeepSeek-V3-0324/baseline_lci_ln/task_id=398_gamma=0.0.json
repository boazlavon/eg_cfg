{
  "code": "def sum_of_digits(lst):\n    total_sum = 0\n    for element in lst:\n        if isinstance(element, list):\n            nested_sum = sum_of_digits(element)\n            total_sum += nested_sum\n        elif isinstance(element, int) and not isinstance(element, bool):\n            num = element\n            if num < 0:\n                num = -num\n            num_str = str(num)\n            digit_sum = 0\n            for ch in num_str:\n                if ch.isdigit():\n                    digit = int(ch)\n                    digit_sum += digit\n            total_sum += digit_sum\n    return total_sum",
  "results": {
    "assert sum_of_digits([10,2,56])==14": {
      "result": true,
      "time": 0.14771056175231934,
      "error": null
    },
    "assert sum_of_digits([[10,20,4,5,'b',70,'a']])==19": {
      "result": true,
      "time": 0.1110990047454834,
      "error": null
    },
    "assert sum_of_digits([10,20,-4,5,-70])==19": {
      "result": true,
      "time": 0.14348983764648438,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-07 18:57:10",
    "guidance_input_tokens": 519,
    "guidance_output_tokens": 177,
    "end_time": "2025-05-07 18:57:14",
    "duration": "0:00:03.847227"
  },
  "retry": 0,
  "random_seed": 813
}