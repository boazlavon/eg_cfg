{
  "code": "def is_bored(S):\n    import re\n    sentences = re.split(r'[.!?]', S)\n    count = 0\n    for sentence in sentences:\n        words = sentence.strip().split()\n        if words and words[0].upper() == 'I':\n            count += 1\n    return count",
  "results": {
    "assert is_bored(\"Hello I sky blue? I\") == 0": {
      "result": false,
      "time": 0.12427449226379395,
      "error": null
    },
    "assert is_bored(\"I I I . I I the . I be I I\") == 3": {
      "result": true,
      "time": 0.1411905288696289,
      "error": null
    },
    "assert is_bored(\"I I I Is I\") == 1": {
      "result": true,
      "time": 0.2140483856201172,
      "error": null
    },
    "assert is_bored(\"I I Hello\") == 1": {
      "result": true,
      "time": 0.12608766555786133,
      "error": null
    },
    "assert is_bored(\"bIt I\") == 0": {
      "result": true,
      "time": 0.15270042419433594,
      "error": null
    },
    "assert is_bored(\"walk I I I I I be I I\") == 0": {
      "result": true,
      "time": 0.16327857971191406,
      "error": null
    },
    "assert is_bored(\"world world Hello\") == 0": {
      "result": true,
      "time": 0.164902925491333,
      "error": null
    },
    "assert is_bored(\"Is I I I the\") == 0": {
      "result": true,
      "time": 0.08134889602661133,
      "error": null
    },
    "assert is_bored(\"love . today. . bIt . I I .\") == 1": {
      "result": true,
      "time": 0.1396169662475586,
      "error": null
    },
    "assert is_bored(\"world world I\") == 0": {
      "result": true,
      "time": 0.10307049751281738,
      "error": null
    },
    "assert is_bored(\"world I Hello\") == 0": {
      "result": true,
      "time": 0.12102389335632324,
      "error": null
    },
    "assert is_bored(\"I It Is I I\") == 1": {
      "result": true,
      "time": 0.1014699935913086,
      "error": null
    },
    "assert is_bored(\"I blue? the Hello I\") == 1": {
      "result": true,
      "time": 0.10410094261169434,
      "error": null
    },
    "assert is_bored(\"I I . . sky I I I I be will I\") == 1": {
      "result": true,
      "time": 0.10274219512939453,
      "error": null
    },
    "assert is_bored(\"I . blue? . I I . I I I I I\") == 3": {
      "result": true,
      "time": 0.0616154670715332,
      "error": null
    },
    "assert is_bored(\"blue? I world blue? I\") == 1": {
      "result": false,
      "time": 0.09482622146606445,
      "error": null
    },
    "assert is_bored(\"sky I ! I I\") == 1": {
      "result": true,
      "time": 0.10640859603881836,
      "error": null
    },
    "assert is_bored(\"I . . I I I a I kill\") == 2": {
      "result": true,
      "time": 0.09943771362304688,
      "error": null
    },
    "assert is_bored(\"I . I I I . be I I I I I\") == 2": {
      "result": true,
      "time": 0.06536650657653809,
      "error": null
    },
    "assert is_bored(\"Hello I I I I I I I I be ! I\") == 0": {
      "result": false,
      "time": 0.10231423377990723,
      "error": null
    },
    "assert is_bored(\"sky I I sky I\") == 0": {
      "result": true,
      "time": 0.10721397399902344,
      "error": null
    },
    "assert is_bored(\"I I kill I I I . I I\") == 2": {
      "result": true,
      "time": 0.10054898262023926,
      "error": null
    },
    "assert is_bored(\"You and I are going for a walk\") == 0, \"Test 6\"\n\n    # Check some edge cases that are easy to work out by hand.": {
      "result": true,
      "time": 0.10578584671020508,
      "error": null
    },
    "assert is_bored(\"I the . I world\") == 2": {
      "result": true,
      "time": 0.10336589813232422,
      "error": null
    },
    "assert is_bored(\"I . going I I I I I .\") == 1": {
      "result": true,
      "time": 0.17643141746520996,
      "error": null
    },
    "assert is_bored(\"I feel good today. I will be productive. will kill It\") == 2, \"Test 5\"": {
      "result": true,
      "time": 0.1719961166381836,
      "error": null
    },
    "assert is_bored(\"I I I I Hello\") == 1": {
      "result": true,
      "time": 0.1754159927368164,
      "error": null
    },
    "assert is_bored(\"I I I I I I I It . I I I\") == 2": {
      "result": true,
      "time": 0.1920316219329834,
      "error": null
    },
    "assert is_bored(\"I I world\") == 1": {
      "result": true,
      "time": 0.13837456703186035,
      "error": null
    },
    "assert is_bored(\"I . I I I I I It I\") == 2": {
      "result": true,
      "time": 0.15724539756774902,
      "error": null
    },
    "assert is_bored(\"I I I Is .\") == 1": {
      "result": true,
      "time": 0.1780848503112793,
      "error": null
    },
    "assert is_bored(\"I . . I I I world I .\") == 2": {
      "result": true,
      "time": 0.2144298553466797,
      "error": null
    },
    "assert is_bored(\"the . the blue? .\") == 0": {
      "result": true,
      "time": 0.19632387161254883,
      "error": null
    },
    "assert is_bored(\"I I I . I going I I I\") == 2": {
      "result": true,
      "time": 0.1411433219909668,
      "error": null
    },
    "assert is_bored(\"blue? I I blue? I\") == 1": {
      "result": false,
      "time": 0.1418743133544922,
      "error": null
    },
    "assert is_bored(\"I . the I It I . I I feel I I\") == 2": {
      "result": true,
      "time": 0.19031739234924316,
      "error": null
    },
    "assert is_bored(\"I I world I I . are I .\") == 1": {
      "result": true,
      "time": 0.210005521774292,
      "error": null
    },
    "assert is_bored(\"Hello . I I will I I I I\") == 1": {
      "result": true,
      "time": 0.22217440605163574,
      "error": null
    },
    "assert is_bored(\"I I I I walk for . I productive.\") == 2": {
      "result": true,
      "time": 0.12169718742370605,
      "error": null
    },
    "assert is_bored(\"sky . I . I\") == 1": {
      "result": false,
      "time": 0.18951702117919922,
      "error": null
    },
    "assert is_bored(\"sky I I I Hello\") == 0": {
      "result": true,
      "time": 0.20392918586730957,
      "error": null
    },
    "assert is_bored(\"I blue? Is . Hello\") == 1": {
      "result": true,
      "time": 0.2069416046142578,
      "error": null
    },
    "assert is_bored(\"I .\") == 1": {
      "result": true,
      "time": 0.20993804931640625,
      "error": null
    },
    "assert is_bored(\"I Hello . I I\") == 2": {
      "result": true,
      "time": 0.1419684886932373,
      "error": null
    },
    "assert is_bored(\"I be I I I I I I . Hello I I\") == 1": {
      "result": true,
      "time": 0.17710494995117188,
      "error": null
    },
    "assert is_bored(\"world I .\") == 0": {
      "result": true,
      "time": 0.19752264022827148,
      "error": null
    },
    "assert is_bored(\"I I I\") == 1": {
      "result": true,
      "time": 0.11983180046081543,
      "error": null
    },
    "assert is_bored(\"I I love sky I . I I I I . productive.\") == 2": {
      "result": true,
      "time": 0.15747475624084473,
      "error": null
    },
    "assert is_bored(\"! .\") == 0": {
      "result": true,
      "time": 0.08767294883728027,
      "error": null
    },
    "assert is_bored(\"kill . I I the . I I blue? be productive. .\") == 2": {
      "result": true,
      "time": 0.07858896255493164,
      "error": null
    },
    "assert is_bored(\"sky I I the .\") == 0": {
      "result": true,
      "time": 0.14599227905273438,
      "error": null
    },
    "assert is_bored(\"I sky I . blue?\") == 1": {
      "result": true,
      "time": 0.18362832069396973,
      "error": null
    },
    "assert is_bored(\"I be I I Is . . . I Hello . I\") == 2": {
      "result": false,
      "time": 0.23895931243896484,
      "error": null
    },
    "assert is_bored(\"Is I\") == 0": {
      "result": true,
      "time": 0.1396162509918213,
      "error": null
    },
    "assert is_bored(\"I the world I It\") == 1": {
      "result": true,
      "time": 0.12367129325866699,
      "error": null
    },
    "assert is_bored(\"sky I I I I\") == 0": {
      "result": true,
      "time": 0.15480327606201172,
      "error": null
    },
    "assert is_bored(\"world . I\") == 0": {
      "result": false,
      "time": 0.13444280624389648,
      "error": null
    },
    "assert is_bored(\"the I I . the\") == 0": {
      "result": true,
      "time": 0.16222906112670898,
      "error": null
    },
    "assert is_bored(\"Is the sky blue?\") == 0, \"Test 2\"": {
      "result": true,
      "time": 0.15510082244873047,
      "error": null
    },
    "assert is_bored(\"Is I It I I\") == 0": {
      "result": true,
      "time": 0.08254528045654297,
      "error": null
    },
    "assert is_bored(\"the .\") == 0": {
      "result": true,
      "time": 0.08192682266235352,
      "error": null
    },
    "assert is_bored(\"productive. world productive. I . I I feel productive. I I I\") == 3": {
      "result": true,
      "time": 0.1644301414489746,
      "error": null
    },
    "assert is_bored(\"I I I I I It I I . world I I\") == 1": {
      "result": true,
      "time": 0.1542224884033203,
      "error": null
    },
    "assert is_bored(\"I I . I I\") == 2": {
      "result": true,
      "time": 0.060935258865356445,
      "error": null
    },
    "assert is_bored(\"Hello I .\") == 0": {
      "result": true,
      "time": 0.12107563018798828,
      "error": null
    },
    "assert is_bored(\"I It I I I . I I I . I I\") == 3": {
      "result": true,
      "time": 0.18723511695861816,
      "error": null
    },
    "assert is_bored(\"world I\") == 0": {
      "result": true,
      "time": 0.0829477310180664,
      "error": null
    },
    "assert is_bored(\"I I . I . I I a I\") == 3": {
      "result": true,
      "time": 0.1597287654876709,
      "error": null
    },
    "assert is_bored(\"I I I I . I . I I\") == 3": {
      "result": true,
      "time": 0.15056562423706055,
      "error": null
    },
    "assert is_bored(\"I . . I world\") == 2": {
      "result": true,
      "time": 0.10215115547180176,
      "error": null
    },
    "assert is_bored(\"I sky I I I\") == 1": {
      "result": true,
      "time": 0.06564998626708984,
      "error": null
    },
    "assert is_bored(\"I I I . . blue? bIt . . I good kill\") == 2": {
      "result": true,
      "time": 0.1443157196044922,
      "error": null
    },
    "assert is_bored(\"Hello I I . I\") == 0": {
      "result": false,
      "time": 0.16165614128112793,
      "error": null
    },
    "assert is_bored(\"Hello . I\") == 0": {
      "result": false,
      "time": 0.18816041946411133,
      "error": null
    },
    "assert is_bored(\"I . . I today. I I I will I . I\") == 3": {
      "result": false,
      "time": 0.1419844627380371,
      "error": null
    },
    "assert is_bored(\"I I I I kill I I for I\") == 1": {
      "result": true,
      "time": 0.19193601608276367,
      "error": null
    },
    "assert is_bored(\"the Is the . I\") == 0": {
      "result": false,
      "time": 0.08214163780212402,
      "error": null
    },
    "assert is_bored(\"I I I will I I . I I today. the I\") == 2": {
      "result": true,
      "time": 0.10492753982543945,
      "error": null
    },
    "assert is_bored(\"sky blue? I sky sky\") == 1": {
      "result": true,
      "time": 0.060889482498168945,
      "error": null
    },
    "assert is_bored(\"I . world\") == 1": {
      "result": true,
      "time": 0.11790728569030762,
      "error": null
    },
    "assert is_bored(\"I I I . I I I . I I I I\") == 3": {
      "result": true,
      "time": 0.15944218635559082,
      "error": null
    },
    "assert is_bored(\"I I I . . I . blue? I\") == 2": {
      "result": false,
      "time": 0.12162971496582031,
      "error": null
    },
    "assert is_bored(\"I I I . I\") == 1": {
      "result": false,
      "time": 0.15285849571228027,
      "error": null
    },
    "assert is_bored(\"bIt\") == 0, \"Test 4\"": {
      "result": true,
      "time": 0.14501047134399414,
      "error": null
    },
    "assert is_bored(\"I I world . sky\") == 1": {
      "result": true,
      "time": 0.08072161674499512,
      "error": null
    },
    "assert is_bored(\"Hello I Hello\") == 0": {
      "result": true,
      "time": 0.14014005661010742,
      "error": null
    },
    "assert is_bored(\"Hello Hello love . blue?\") == 0": {
      "result": true,
      "time": 0.10031318664550781,
      "error": null
    },
    "assert is_bored(\"Hello world\") == 0, \"Test 1\"": {
      "result": true,
      "time": 0.12401986122131348,
      "error": null
    },
    "assert is_bored(\"world . world\") == 0": {
      "result": true,
      "time": 0.1258864402770996,
      "error": null
    },
    "assert is_bored(\"Hello world world\") == 0": {
      "result": true,
      "time": 0.15831828117370605,
      "error": null
    },
    "assert is_bored(\"I love It !\") == 1, \"Test 3\"": {
      "result": true,
      "time": 0.08005023002624512,
      "error": null
    },
    "assert is_bored(\"I Hello Hello\") == 1": {
      "result": true,
      "time": 0.14151573181152344,
      "error": null
    },
    "assert is_bored(\"It I\") == 0": {
      "result": true,
      "time": 0.08395814895629883,
      "error": null
    },
    "assert is_bored(\"I blue? I Is .\") == 2": {
      "result": true,
      "time": 0.1027982234954834,
      "error": null
    },
    "assert is_bored(\"I Hello I\") == 1": {
      "result": true,
      "time": 0.17455124855041504,
      "error": null
    },
    "assert is_bored(\"I I\") == 1": {
      "result": true,
      "time": 0.1648099422454834,
      "error": null
    },
    "assert is_bored(\"I I . I I I I I .\") == 2": {
      "result": true,
      "time": 0.15995287895202637,
      "error": null
    },
    "assert is_bored(\"I I I I I I I I .\") == 1": {
      "result": true,
      "time": 0.07854890823364258,
      "error": null
    },
    "assert is_bored(\"I . I I !\") == 2": {
      "result": true,
      "time": 0.22223925590515137,
      "error": null
    },
    "assert is_bored(\"I ! I . sky\") == 2": {
      "result": true,
      "time": 0.09073019027709961,
      "error": null
    },
    "assert is_bored(\"I I I I I I I I I\") == 1": {
      "result": true,
      "time": 0.128157377243042,
      "error": null
    },
    "assert is_bored(\"I kill I I I blue? I good I productive. I I\") == 3": {
      "result": true,
      "time": 0.09073567390441895,
      "error": null
    },
    "assert is_bored(\"I good I I I sky world I .\") == 1": {
      "result": true,
      "time": 0.1445930004119873,
      "error": null
    },
    "assert is_bored(\"I I I . I be I I . I will I\") == 3": {
      "result": true,
      "time": 0.10320115089416504,
      "error": null
    },
    "assert is_bored(\"world It I It I\") == 0": {
      "result": true,
      "time": 0.15679502487182617,
      "error": null
    },
    "assert is_bored(\"I I I I I a I . .\") == 1": {
      "result": true,
      "time": 0.09241747856140137,
      "error": null
    },
    "assert is_bored(\"world I world\") == 0": {
      "result": true,
      "time": 0.09103918075561523,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.8785046728971962,
  "general_error": "",
  "has_testcase_error": false
}