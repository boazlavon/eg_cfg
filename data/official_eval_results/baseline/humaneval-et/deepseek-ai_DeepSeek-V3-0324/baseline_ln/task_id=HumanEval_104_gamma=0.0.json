{
  "code": "def unique_digits(x):\n    def has_even_digit(num):\n        for digit in str(num):\n            if int(digit) % 2 == 0:\n                return True\n        return False\n    \n    result = [num for num in x if not has_even_digit(num)]\n    result.sort()\n    return result",
  "results": {
    "assert unique_digits([132, 100, 32]) == []": {
      "result": true,
      "time": 0.031207799911499023,
      "error": null
    },
    "assert unique_digits([13201, 1832, 113, 153]) == [113, 153]": {
      "result": true,
      "time": 0.03325200080871582,
      "error": null
    },
    "assert unique_digits([16, 29, 1817, 5]) == [5]": {
      "result": true,
      "time": 0.02898883819580078,
      "error": null
    },
    "assert unique_digits([18, 29, 1203, 4]) == []": {
      "result": true,
      "time": 0.025530338287353516,
      "error": null
    },
    "assert unique_digits([11957, 2956, 106, 146]) == [11957]": {
      "result": true,
      "time": 0.028665781021118164,
      "error": null
    },
    "assert unique_digits([11648, 1283, 106, 154]) == []": {
      "result": true,
      "time": 0.026401281356811523,
      "error": null
    },
    "assert unique_digits([13, 38, 1398, 5]) == [5, 13]": {
      "result": true,
      "time": 0.028955698013305664,
      "error": null
    },
    "assert unique_digits([138, 104, 35]) == [35]": {
      "result": true,
      "time": 0.029008865356445312,
      "error": null
    },
    "assert unique_digits([11330, 1632, 109, 146]) == []": {
      "result": true,
      "time": 0.02825474739074707,
      "error": null
    },
    "assert unique_digits([139, 102, 33]) == [33, 139]": {
      "result": true,
      "time": 0.027901887893676758,
      "error": null
    },
    "assert unique_digits([12495, 2236, 115, 146]) == [115]": {
      "result": true,
      "time": 0.02877211570739746,
      "error": null
    },
    "assert unique_digits([135, 99, 26]) == [99, 135]": {
      "result": true,
      "time": 0.028323888778686523,
      "error": null
    },
    "assert unique_digits([150, 323, 2227, 14]) == []": {
      "result": true,
      "time": 0.02959465980529785,
      "error": null
    },
    "assert unique_digits([152, 325, 2236, 9]) == [9]": {
      "result": true,
      "time": 0.026322364807128906,
      "error": null
    },
    "assert unique_digits([12263, 2608, 106, 153]) == [153]": {
      "result": true,
      "time": 0.02800154685974121,
      "error": null
    },
    "assert unique_digits([11838, 1681, 114, 152]) == []": {
      "result": true,
      "time": 0.030315399169921875,
      "error": null
    },
    "assert unique_digits([131, 103, 27]) == [131]": {
      "result": true,
      "time": 0.028776168823242188,
      "error": null
    },
    "assert unique_digits([12144, 2080, 111, 149]) == [111]": {
      "result": true,
      "time": 0.028794288635253906,
      "error": null
    },
    "assert unique_digits([15, 37, 668, 3]) == [3, 15, 37]": {
      "result": true,
      "time": 0.03008580207824707,
      "error": null
    },
    "assert unique_digits([11706, 2681, 115, 149]) == [115]": {
      "result": true,
      "time": 0.02858734130859375,
      "error": null
    },
    "assert unique_digits([157, 328, 2400, 12]) == [157]": {
      "result": true,
      "time": 0.03084588050842285,
      "error": null
    },
    "assert unique_digits([154, 326, 2275, 5]) == [5]": {
      "result": true,
      "time": 0.024234294891357422,
      "error": null
    },
    "assert unique_digits([12563, 2453, 106, 150]) == []": {
      "result": true,
      "time": 0.02870917320251465,
      "error": null
    },
    "assert unique_digits([154, 319, 854, 8]) == [319]": {
      "result": true,
      "time": 0.028496742248535156,
      "error": null
    },
    "assert unique_digits([155, 327, 606, 8]) == [155]": {
      "result": true,
      "time": 0.02922534942626953,
      "error": null
    },
    "assert unique_digits([137, 102, 31]) == [31, 137]": {
      "result": true,
      "time": 0.030730009078979492,
      "error": null
    },
    "assert unique_digits([151, 321, 686, 13]) == [13, 151]": {
      "result": true,
      "time": 0.03069329261779785,
      "error": null
    },
    "assert unique_digits([133, 108, 33]) == [33, 133]": {
      "result": true,
      "time": 0.030614137649536133,
      "error": null
    },
    "assert unique_digits([12592, 1020, 115, 148]) == [115]": {
      "result": true,
      "time": 0.02713632583618164,
      "error": null
    },
    "assert unique_digits([156, 322, 761, 7]) == [7]": {
      "result": true,
      "time": 0.028949737548828125,
      "error": null
    },
    "assert unique_digits([140, 107, 26]) == []": {
      "result": true,
      "time": 0.02806568145751953,
      "error": null
    },
    "assert unique_digits([139, 108, 27]) == [139]": {
      "result": true,
      "time": 0.02769327163696289,
      "error": null
    },
    "assert unique_digits([13, 34, 2003, 6]) == [13]": {
      "result": true,
      "time": 0.027184486389160156,
      "error": null
    },
    "assert unique_digits([137, 103, 29]) == [137]": {
      "result": true,
      "time": 0.028322219848632812,
      "error": null
    },
    "assert unique_digits([132, 98, 29]) == []": {
      "result": true,
      "time": 0.029747962951660156,
      "error": null
    },
    "assert unique_digits([10, 30, 2076, 3]) == [3]": {
      "result": true,
      "time": 0.02950882911682129,
      "error": null
    },
    "assert unique_digits([155, 323, 1014, 6]) == [155]": {
      "result": true,
      "time": 0.029962778091430664,
      "error": null
    },
    "assert unique_digits([130, 105, 31]) == [31]": {
      "result": true,
      "time": 0.029543161392211914,
      "error": null
    },
    "assert unique_digits([12296, 2695, 107, 152]) == []": {
      "result": true,
      "time": 0.027222156524658203,
      "error": null
    },
    "assert unique_digits([147, 322, 2180, 15]) == [15]": {
      "result": true,
      "time": 0.027498722076416016,
      "error": null
    },
    "assert unique_digits([147, 324, 1561, 10]) == []": {
      "result": true,
      "time": 0.02702951431274414,
      "error": null
    },
    "assert unique_digits([132, 108, 27]) == []": {
      "result": true,
      "time": 0.03176474571228027,
      "error": null
    },
    "assert unique_digits([136, 99, 26]) == [99]": {
      "result": true,
      "time": 0.028231382369995117,
      "error": null
    },
    "assert unique_digits([157, 319, 842, 13]) == [13, 157, 319]": {
      "result": true,
      "time": 0.03139901161193848,
      "error": null
    },
    "assert unique_digits([151, 325, 963, 8]) == [151]": {
      "result": true,
      "time": 0.02790975570678711,
      "error": null
    },
    "assert unique_digits([12, 36, 1972, 2]) == []": {
      "result": true,
      "time": 0.031116485595703125,
      "error": null
    },
    "assert unique_digits([133, 105, 30]) == [133]": {
      "result": true,
      "time": 0.025908708572387695,
      "error": null
    },
    "assert unique_digits([12590, 2103, 108, 149]) == []": {
      "result": true,
      "time": 0.02750086784362793,
      "error": null
    },
    "assert unique_digits([153, 322, 1603, 11]) == [11, 153]": {
      "result": true,
      "time": 0.0291903018951416,
      "error": null
    },
    "assert unique_digits([15, 28, 2033, 4]) == [15]": {
      "result": true,
      "time": 0.03019881248474121,
      "error": null
    },
    "assert unique_digits([19, 35, 1750, 2]) == [19, 35]": {
      "result": true,
      "time": 0.027930736541748047,
      "error": null
    },
    "assert unique_digits([132, 108, 33]) == [33]": {
      "result": true,
      "time": 0.029844284057617188,
      "error": null
    },
    "assert unique_digits([152, 323, 1422, 10]) == []": {
      "result": true,
      "time": 0.026616334915161133,
      "error": null
    },
    "assert unique_digits([151, 328, 1473, 9]) == [9, 151]": {
      "result": true,
      "time": 0.027148723602294922,
      "error": null
    },
    "assert unique_digits([138, 107, 33]) == [33]": {
      "result": true,
      "time": 0.02817392349243164,
      "error": null
    },
    "assert unique_digits([135, 103, 33]) == [33, 135]": {
      "result": true,
      "time": 0.027770042419433594,
      "error": null
    },
    "assert unique_digits([16, 36, 1245, 1]) == [1]": {
      "result": true,
      "time": 0.02652764320373535,
      "error": null
    },
    "assert unique_digits([149, 325, 551, 13]) == [13, 551]": {
      "result": true,
      "time": 0.02611088752746582,
      "error": null
    },
    "assert unique_digits([19, 30, 479, 5]) == [5, 19]": {
      "result": true,
      "time": 0.02373647689819336,
      "error": null
    },
    "assert unique_digits([147, 318, 852, 6]) == []": {
      "result": true,
      "time": 0.026865005493164062,
      "error": null
    },
    "assert unique_digits([11911, 2486, 116, 152]) == [11911]": {
      "result": true,
      "time": 0.030162334442138672,
      "error": null
    },
    "assert unique_digits([10, 29, 839, 2]) == []": {
      "result": true,
      "time": 0.0277252197265625,
      "error": null
    },
    "assert unique_digits([134, 98, 29]) == []": {
      "result": true,
      "time": 0.02776360511779785,
      "error": null
    },
    "assert unique_digits([12150, 1701, 115, 149]) == [115]": {
      "result": true,
      "time": 0.025823593139648438,
      "error": null
    },
    "assert unique_digits([135, 104, 33]) == [33, 135]": {
      "result": true,
      "time": 0.028125762939453125,
      "error": null
    },
    "assert unique_digits([12438, 2377, 108, 150]) == []": {
      "result": true,
      "time": 0.027503490447998047,
      "error": null
    },
    "assert unique_digits([20, 29, 817, 5]) == [5]": {
      "result": true,
      "time": 0.027524948120117188,
      "error": null
    },
    "assert unique_digits([150, 320, 1086, 11]) == [11]": {
      "result": true,
      "time": 0.027713298797607422,
      "error": null
    },
    "assert unique_digits([17, 30, 2073, 4]) == [17]": {
      "result": true,
      "time": 0.03189969062805176,
      "error": null
    },
    "assert unique_digits([133, 99, 27]) == [99, 133]": {
      "result": true,
      "time": 0.029468297958374023,
      "error": null
    },
    "assert unique_digits([139, 100, 36]) == [139]": {
      "result": true,
      "time": 0.025991439819335938,
      "error": null
    },
    "assert unique_digits([130, 99, 27]) == [99]": {
      "result": true,
      "time": 0.028443336486816406,
      "error": null
    },
    "assert unique_digits([11, 28, 1070, 4]) == [11]": {
      "result": true,
      "time": 0.028234243392944336,
      "error": null
    },
    "assert unique_digits([12768, 2105, 110, 149]) == []": {
      "result": true,
      "time": 0.029839038848876953,
      "error": null
    },
    "assert unique_digits([13139, 2540, 110, 146]) == [13139]": {
      "result": true,
      "time": 0.026959896087646484,
      "error": null
    },
    "assert unique_digits([137, 105, 35]) == [35, 137]": {
      "result": true,
      "time": 0.026970386505126953,
      "error": null
    },
    "assert unique_digits([10, 29, 1708, 6]) == []": {
      "result": true,
      "time": 0.027339696884155273,
      "error": null
    },
    "assert unique_digits([11, 31, 600, 1]) == [1, 11, 31]": {
      "result": true,
      "time": 0.02873826026916504,
      "error": null
    },
    "assert unique_digits([12, 32, 1527, 3]) == [3]": {
      "result": true,
      "time": 0.0302734375,
      "error": null
    },
    "assert unique_digits([13169, 2835, 114, 155]) == [155]": {
      "result": true,
      "time": 0.02797675132751465,
      "error": null
    },
    "assert unique_digits([12505, 2912, 114, 154]) == []": {
      "result": true,
      "time": 0.028272151947021484,
      "error": null
    },
    "assert unique_digits([17, 29, 2012, 6]) == [17]": {
      "result": true,
      "time": 0.03161025047302246,
      "error": null
    },
    "assert unique_digits([136, 100, 31]) == [31]": {
      "result": true,
      "time": 0.030016183853149414,
      "error": null
    },
    "assert unique_digits([12158, 1034, 110, 152]) == []": {
      "result": true,
      "time": 0.028029918670654297,
      "error": null
    },
    "assert unique_digits([11, 28, 445, 6]) == [11]": {
      "result": true,
      "time": 0.028596878051757812,
      "error": null
    },
    "assert unique_digits([137, 106, 32]) == [137]": {
      "result": true,
      "time": 0.028692245483398438,
      "error": null
    },
    "assert unique_digits([151, 322, 2270, 7]) == [7, 151]": {
      "result": true,
      "time": 0.03017115592956543,
      "error": null
    },
    "assert unique_digits([135, 101, 26]) == [135]": {
      "result": true,
      "time": 0.024631500244140625,
      "error": null
    },
    "assert unique_digits([156, 321, 810, 8]) == []": {
      "result": true,
      "time": 0.03321123123168945,
      "error": null
    },
    "assert unique_digits([11355, 1562, 115, 146]) == [115, 11355]": {
      "result": true,
      "time": 0.03404664993286133,
      "error": null
    },
    "assert unique_digits([154, 322, 863, 6]) == []": {
      "result": true,
      "time": 0.027887582778930664,
      "error": null
    },
    "assert unique_digits([13, 30, 1214, 6]) == [13]": {
      "result": true,
      "time": 0.03200078010559082,
      "error": null
    },
    "assert unique_digits([153, 328, 2074, 12]) == [153]": {
      "result": true,
      "time": 0.03156542778015137,
      "error": null
    },
    "assert unique_digits([12132, 1059, 110, 150]) == []": {
      "result": true,
      "time": 0.02850174903869629,
      "error": null
    },
    "assert unique_digits([140, 102, 33]) == [33]": {
      "result": true,
      "time": 0.02881026268005371,
      "error": null
    },
    "assert unique_digits([11323, 2509, 107, 146]) == []": {
      "result": true,
      "time": 0.025640010833740234,
      "error": null
    },
    "assert unique_digits([147, 325, 1540, 15]) == [15]": {
      "result": true,
      "time": 0.0315098762512207,
      "error": null
    },
    "assert unique_digits([15, 33, 1422, 1]) == [1, 15, 33]": {
      "result": true,
      "time": 0.026023149490356445,
      "error": null
    },
    "assert unique_digits([15, 37, 629, 5]) == [5, 15, 37]": {
      "result": true,
      "time": 0.029102087020874023,
      "error": null
    },
    "assert unique_digits([154, 323, 2077, 13]) == [13]": {
      "result": true,
      "time": 0.028441667556762695,
      "error": null
    },
    "assert unique_digits([18, 30, 792, 3]) == [3]": {
      "result": true,
      "time": 0.03118157386779785,
      "error": null
    },
    "assert unique_digits([20, 32, 1433, 1]) == [1]": {
      "result": true,
      "time": 0.023975610733032227,
      "error": null
    },
    "assert unique_digits([151, 320, 441, 5]) == [5, 151]": {
      "result": true,
      "time": 0.03235626220703125,
      "error": null
    },
    "assert unique_digits([11494, 2338, 115, 149]) == [115]": {
      "result": true,
      "time": 0.03171253204345703,
      "error": null
    },
    "assert unique_digits([135, 103, 31]) == [31, 135]\n\n    # Check some edge cases that are easy to work out by hand.": {
      "result": true,
      "time": 0.02959299087524414,
      "error": null
    },
    "assert unique_digits([16, 30, 2202, 3]) == [3]": {
      "result": true,
      "time": 0.026577472686767578,
      "error": null
    },
    "assert unique_digits([154, 321, 941, 15]) == [15]": {
      "result": true,
      "time": 0.0300137996673584,
      "error": null
    },
    "assert unique_digits([12669, 1865, 111, 151]) == [111, 151]": {
      "result": true,
      "time": 0.02815532684326172,
      "error": null
    },
    "assert unique_digits([155, 327, 1737, 14]) == [155, 1737]": {
      "result": true,
      "time": 0.02703857421875,
      "error": null
    },
    "assert unique_digits([11389, 1488, 112, 146]) == []": {
      "result": true,
      "time": 0.0289309024810791,
      "error": null
    },
    "assert unique_digits([153, 328, 616, 12]) == [153]": {
      "result": true,
      "time": 0.031148910522460938,
      "error": null
    },
    "assert unique_digits([156, 323, 1793, 9]) == [9, 1793]": {
      "result": true,
      "time": 0.03309226036071777,
      "error": null
    },
    "assert unique_digits([12, 30, 1352, 2]) == []": {
      "result": true,
      "time": 0.029423952102661133,
      "error": null
    },
    "assert unique_digits([18, 31, 1093, 4]) == [31]": {
      "result": true,
      "time": 0.03147101402282715,
      "error": null
    },
    "assert unique_digits([17, 29, 2356, 1]) == [1, 17]": {
      "result": true,
      "time": 0.029158830642700195,
      "error": null
    },
    "assert unique_digits([16, 31, 1988, 2]) == [31]": {
      "result": true,
      "time": 0.026657581329345703,
      "error": null
    },
    "assert unique_digits([153, 326, 1380, 15]) == [15, 153]": {
      "result": true,
      "time": 0.033464670181274414,
      "error": null
    },
    "assert unique_digits([137, 107, 30]) == [137]": {
      "result": true,
      "time": 0.030039548873901367,
      "error": null
    },
    "assert unique_digits([134, 107, 35]) == [35]": {
      "result": true,
      "time": 0.03023076057434082,
      "error": null
    },
    "assert unique_digits([156, 319, 2349, 5]) == [5, 319]": {
      "result": true,
      "time": 0.03239107131958008,
      "error": null
    },
    "assert unique_digits([12607, 2454, 115, 148]) == [115]": {
      "result": true,
      "time": 0.03057694435119629,
      "error": null
    },
    "assert unique_digits([13, 35, 1797, 4]) == [13, 35, 1797]": {
      "result": true,
      "time": 0.03103351593017578,
      "error": null
    },
    "assert unique_digits([12709, 2013, 109, 149]) == []": {
      "result": true,
      "time": 0.03215432167053223,
      "error": null
    },
    "assert unique_digits([148, 323, 1714, 14]) == []": {
      "result": true,
      "time": 0.02581048011779785,
      "error": null
    },
    "assert unique_digits([12345, 2033, 111, 151]) == [111, 151]": {
      "result": true,
      "time": 0.027849674224853516,
      "error": null
    },
    "assert unique_digits([12835, 1733, 115, 149]) == [115, 1733]": {
      "result": true,
      "time": 0.03285980224609375,
      "error": null
    },
    "assert unique_digits([138, 102, 33]) == [33]": {
      "result": true,
      "time": 0.029996156692504883,
      "error": null
    },
    "assert unique_digits([12, 31, 740, 6]) == [31]": {
      "result": true,
      "time": 0.029769420623779297,
      "error": null
    },
    "assert unique_digits([17, 36, 625, 6]) == [17]": {
      "result": true,
      "time": 0.03201627731323242,
      "error": null
    },
    "assert unique_digits([11466, 2311, 112, 150]) == []": {
      "result": true,
      "time": 0.029414892196655273,
      "error": null
    },
    "assert unique_digits([11998, 1341, 115, 155]) == [115, 155]": {
      "result": true,
      "time": 0.03158259391784668,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}