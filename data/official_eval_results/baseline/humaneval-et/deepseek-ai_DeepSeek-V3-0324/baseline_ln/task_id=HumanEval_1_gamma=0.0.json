{
  "code": "from typing import List\n\ndef separate_paren_groups(paren_string: str) -> List[str]:\n    result = []\n    current_group = []\n    balance = 0\n    \n    for char in paren_string:\n        if char == ' ':\n            continue\n        if char == '(':\n            balance += 1\n            current_group.append(char)\n        elif char == ')':\n            balance -= 1\n            current_group.append(char)\n            if balance == 0:\n                result.append(''.join(current_group))\n                current_group = []\n    \n    return result",
  "results": {
    "assert separate_paren_groups(\"(()())(()())(())\") == ['(()())', '(()())', '(())']": {
      "result": true,
      "time": 0.11356592178344727,
      "error": null
    },
    "assert separate_paren_groups(\"(())(((())))(((())))(((())))\") == ['(())', '(((())))', '(((())))', '(((())))']": {
      "result": true,
      "time": 0.12337565422058105,
      "error": null
    },
    "assert separate_paren_groups(\"()(())((()))(())\") == ['()', '(())', '((()))', '(())']": {
      "result": true,
      "time": 0.18179631233215332,
      "error": null
    },
    "assert separate_paren_groups(\"(()())()((())()())((()))\") == ['(()())', '()', '((())()())', '((()))']": {
      "result": true,
      "time": 0.0904378890991211,
      "error": null
    },
    "assert separate_paren_groups(\"(()())(()())((()))((()))\") == ['(()())', '(()())', '((()))', '((()))']": {
      "result": true,
      "time": 0.1665208339691162,
      "error": null
    },
    "assert separate_paren_groups(\"((()))()()((())()())\") == ['((()))', '()', '()', '((())()())']": {
      "result": true,
      "time": 0.09012508392333984,
      "error": null
    },
    "assert separate_paren_groups(\"(())()()\") == ['(())', '()', '()']": {
      "result": true,
      "time": 0.1416945457458496,
      "error": null
    },
    "assert separate_paren_groups(\"(((())))((()))((()))(((())))\") == ['(((())))', '((()))', '((()))', '(((())))']": {
      "result": true,
      "time": 0.13057708740234375,
      "error": null
    },
    "assert separate_paren_groups(\"((()))(())((()))(((())))\") == ['((()))', '(())', '((()))', '(((())))']": {
      "result": true,
      "time": 0.13396596908569336,
      "error": null
    },
    "assert separate_paren_groups(\"(())()(())\") == ['(())', '()', '(())']": {
      "result": true,
      "time": 0.14855122566223145,
      "error": null
    },
    "assert separate_paren_groups(\"(())(()())(())\") == ['(())', '(()())', '(())']": {
      "result": true,
      "time": 0.14470767974853516,
      "error": null
    },
    "assert separate_paren_groups(\"()()(()())\") == ['()', '()', '(()())']": {
      "result": true,
      "time": 0.09601688385009766,
      "error": null
    },
    "assert separate_paren_groups(\"(())(())(())\") == ['(())', '(())', '(())']": {
      "result": true,
      "time": 0.08661031723022461,
      "error": null
    },
    "assert separate_paren_groups(\"((())()())((()))((())()())((())()())\") == ['((())()())', '((()))', '((())()())', '((())()())']": {
      "result": true,
      "time": 0.12386178970336914,
      "error": null
    },
    "assert separate_paren_groups(\"()((())()())((()))((())()())\") == ['()', '((())()())', '((()))', '((())()())']": {
      "result": true,
      "time": 0.15281033515930176,
      "error": null
    },
    "assert separate_paren_groups(\"()((())()())((())()())((()))\") == ['()', '((())()())', '((())()())', '((()))']": {
      "result": true,
      "time": 0.16181540489196777,
      "error": null
    },
    "assert separate_paren_groups(\"((()))()()(((())))\") == ['((()))', '()', '()', '(((())))']": {
      "result": true,
      "time": 0.09301924705505371,
      "error": null
    },
    "assert separate_paren_groups(\"()()()((()))\") == ['()', '()', '()', '((()))']": {
      "result": true,
      "time": 0.12234044075012207,
      "error": null
    },
    "assert separate_paren_groups(\"()(((())))(((())))(())\") == ['()', '(((())))', '(((())))', '(())']": {
      "result": true,
      "time": 0.12616181373596191,
      "error": null
    },
    "assert separate_paren_groups(\"((())()())((())()())((())()())()\") == ['((())()())', '((())()())', '((())()())', '()']": {
      "result": true,
      "time": 0.16573047637939453,
      "error": null
    },
    "assert separate_paren_groups(\"(((())))(((())))(())(())\") == ['(((())))', '(((())))', '(())', '(())']": {
      "result": true,
      "time": 0.1648731231689453,
      "error": null
    },
    "assert separate_paren_groups(\"()(())()\") == ['()', '(())', '()']": {
      "result": true,
      "time": 0.08816051483154297,
      "error": null
    },
    "assert separate_paren_groups(\"((()))()((())()())(()())\") == ['((()))', '()', '((())()())', '(()())']": {
      "result": true,
      "time": 0.08829355239868164,
      "error": null
    },
    "assert separate_paren_groups(\"((())()())(()())((())()())()\") == ['((())()())', '(()())', '((())()())', '()']": {
      "result": true,
      "time": 0.11632418632507324,
      "error": null
    },
    "assert separate_paren_groups(\"(((())))(())()()\") == ['(((())))', '(())', '()', '()']": {
      "result": true,
      "time": 0.12569808959960938,
      "error": null
    },
    "assert separate_paren_groups(\"()(()())(()())((()))\") == ['()', '(()())', '(()())', '((()))']": {
      "result": true,
      "time": 0.11899757385253906,
      "error": null
    },
    "assert separate_paren_groups(\"(())(())(()())\") == ['(())', '(())', '(()())']": {
      "result": true,
      "time": 0.22017502784729004,
      "error": null
    },
    "assert separate_paren_groups(\"()(()())(()())()\") == ['()', '(()())', '(()())', '()']": {
      "result": true,
      "time": 0.16390299797058105,
      "error": null
    },
    "assert separate_paren_groups(\"(()())()(()())\") == ['(()())', '()', '(()())']": {
      "result": true,
      "time": 0.16756296157836914,
      "error": null
    },
    "assert separate_paren_groups(\"(()())(()())()((())()())\") == ['(()())', '(()())', '()', '((())()())']": {
      "result": true,
      "time": 0.19402861595153809,
      "error": null
    },
    "assert separate_paren_groups(\"()(())(())\") == ['()', '(())', '(())']": {
      "result": true,
      "time": 0.06624889373779297,
      "error": null
    },
    "assert separate_paren_groups(\"()(()())(())\") == ['()', '(()())', '(())']": {
      "result": true,
      "time": 0.1827256679534912,
      "error": null
    },
    "assert separate_paren_groups('(()()) ((())) () ((())()())') == [\n        '(()())', '((()))', '()', '((())()())'\n    ]": {
      "result": true,
      "time": 0.21098804473876953,
      "error": null
    },
    "assert separate_paren_groups(\"(())((()))()(((())))\") == ['(())', '((()))', '()', '(((())))']": {
      "result": true,
      "time": 0.299755334854126,
      "error": null
    },
    "assert separate_paren_groups(\"((())()())((()))((()))((()))\") == ['((())()())', '((()))', '((()))', '((()))']": {
      "result": true,
      "time": 0.2752361297607422,
      "error": null
    },
    "assert separate_paren_groups('() (()) ((())) (((())))') == [\n        '()', '(())', '((()))', '(((())))'\n    ]": {
      "result": true,
      "time": 0.33124399185180664,
      "error": null
    },
    "assert separate_paren_groups(\"()()()((())()())\") == ['()', '()', '()', '((())()())']": {
      "result": true,
      "time": 0.12048649787902832,
      "error": null
    },
    "assert separate_paren_groups(\"()(((())))(())((()))\") == ['()', '(((())))', '(())', '((()))']": {
      "result": true,
      "time": 0.2604954242706299,
      "error": null
    },
    "assert separate_paren_groups(\"(())(()())()\") == ['(())', '(()())', '()']": {
      "result": true,
      "time": 0.2399134635925293,
      "error": null
    },
    "assert separate_paren_groups(\"((()))(((())))(())()\") == ['((()))', '(((())))', '(())', '()']": {
      "result": true,
      "time": 0.24483561515808105,
      "error": null
    },
    "assert separate_paren_groups(\"(()())()((()))()\") == ['(()())', '()', '((()))', '()']": {
      "result": true,
      "time": 0.2682499885559082,
      "error": null
    },
    "assert separate_paren_groups('( ) (( )) (( )( ))') == ['()', '(())', '(()())']": {
      "result": true,
      "time": 0.14169645309448242,
      "error": null
    },
    "assert separate_paren_groups(\"()(())(((())))(((())))\") == ['()', '(())', '(((())))', '(((())))']": {
      "result": true,
      "time": 0.1701505184173584,
      "error": null
    },
    "assert separate_paren_groups(\"((()))(((())))((()))((()))\") == ['((()))', '(((())))', '((()))', '((()))']": {
      "result": true,
      "time": 0.30071210861206055,
      "error": null
    },
    "assert separate_paren_groups(\"(((())))(())(())(((())))\") == ['(((())))', '(())', '(())', '(((())))']": {
      "result": true,
      "time": 0.24104905128479004,
      "error": null
    },
    "assert separate_paren_groups(\"((()))()(()())((()))\") == ['((()))', '()', '(()())', '((()))']": {
      "result": true,
      "time": 0.2489774227142334,
      "error": null
    },
    "assert separate_paren_groups(\"()(((())))()(())\") == ['()', '(((())))', '()', '(())']": {
      "result": true,
      "time": 0.21863746643066406,
      "error": null
    },
    "assert separate_paren_groups(\"(())()(()())\") == ['(())', '()', '(()())']": {
      "result": true,
      "time": 0.3134615421295166,
      "error": null
    },
    "assert separate_paren_groups(\"()()()\") == ['()', '()', '()']": {
      "result": true,
      "time": 0.3111400604248047,
      "error": null
    },
    "assert separate_paren_groups(\"((()))(()())((()))()\") == ['((()))', '(()())', '((()))', '()']": {
      "result": true,
      "time": 0.24829363822937012,
      "error": null
    },
    "assert separate_paren_groups(\"((()))(()())()((())()())\") == ['((()))', '(()())', '()', '((())()())']": {
      "result": true,
      "time": 0.2595820426940918,
      "error": null
    },
    "assert separate_paren_groups(\"(()())(()())(()())\") == ['(()())', '(()())', '(()())']": {
      "result": true,
      "time": 0.24849772453308105,
      "error": null
    },
    "assert separate_paren_groups('(()(())((())))') == [\n        '(()(())((())))'\n    ]": {
      "result": true,
      "time": 0.21294355392456055,
      "error": null
    },
    "assert separate_paren_groups(\"()(())()(())\") == ['()', '(())', '()', '(())']": {
      "result": true,
      "time": 0.25324344635009766,
      "error": null
    },
    "assert separate_paren_groups(\"(())()(())(((())))\") == ['(())', '()', '(())', '(((())))']": {
      "result": true,
      "time": 0.2267313003540039,
      "error": null
    },
    "assert separate_paren_groups(\"()((())()())((())()())()\") == ['()', '((())()())', '((())()())', '()']": {
      "result": true,
      "time": 0.2004072666168213,
      "error": null
    },
    "assert separate_paren_groups(\"()()(())((()))\") == ['()', '()', '(())', '((()))']": {
      "result": true,
      "time": 0.29762697219848633,
      "error": null
    },
    "assert separate_paren_groups(\"(())((()))((()))(((())))\") == ['(())', '((()))', '((()))', '(((())))']": {
      "result": true,
      "time": 0.19704747200012207,
      "error": null
    },
    "assert separate_paren_groups(\"((()))(())(())(())\") == ['((()))', '(())', '(())', '(())']": {
      "result": true,
      "time": 0.14701628684997559,
      "error": null
    },
    "assert separate_paren_groups(\"((()))()()((()))\") == ['((()))', '()', '()', '((()))']": {
      "result": true,
      "time": 0.2948448657989502,
      "error": null
    },
    "assert separate_paren_groups(\"(()())((()))((())()())(()())\") == ['(()())', '((()))', '((())()())', '(()())']": {
      "result": true,
      "time": 0.2661707401275635,
      "error": null
    },
    "assert separate_paren_groups(\"(())(())()()\") == ['(())', '(())', '()', '()']": {
      "result": true,
      "time": 0.2980530261993408,
      "error": null
    },
    "assert separate_paren_groups(\"(()(())((())))\") == ['(()(())((())))']": {
      "result": true,
      "time": 0.2611062526702881,
      "error": null
    },
    "assert separate_paren_groups(\"(((())))((()))(((())))((()))\") == ['(((())))', '((()))', '(((())))', '((()))']": {
      "result": true,
      "time": 0.26361536979675293,
      "error": null
    },
    "assert separate_paren_groups(\"()()(())\") == ['()', '()', '(())']": {
      "result": true,
      "time": 0.25928664207458496,
      "error": null
    },
    "assert separate_paren_groups(\"()(())(()())\") == ['()', '(())', '(()())']": {
      "result": true,
      "time": 0.2788429260253906,
      "error": null
    },
    "assert separate_paren_groups(\"(()())()(()())(()())\") == ['(()())', '()', '(()())', '(()())']": {
      "result": true,
      "time": 0.2829575538635254,
      "error": null
    },
    "assert separate_paren_groups(\"(()())()(())\") == ['(()())', '()', '(())']": {
      "result": true,
      "time": 0.2612295150756836,
      "error": null
    },
    "assert separate_paren_groups(\"((()))(())(())()\") == ['((()))', '(())', '(())', '()']": {
      "result": true,
      "time": 0.2257390022277832,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}