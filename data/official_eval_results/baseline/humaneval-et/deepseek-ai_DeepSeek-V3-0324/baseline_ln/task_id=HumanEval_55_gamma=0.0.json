{
  "code": "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    a, b = 0, 1\n    for _ in range(2, n + 1):\n        a, b = b, a + b\n    return b",
  "results": {
    "assert fib(29) == 514229": {
      "result": true,
      "time": 0.027819395065307617,
      "error": null
    },
    "assert fib(25) == 75025": {
      "result": true,
      "time": 0.028851747512817383,
      "error": null
    },
    "assert fib(34) == 5702887": {
      "result": true,
      "time": 0.031203746795654297,
      "error": null
    },
    "assert fib(7) == 13": {
      "result": true,
      "time": 0.03274726867675781,
      "error": null
    },
    "assert fib(32) == 2178309": {
      "result": true,
      "time": 0.02843332290649414,
      "error": null
    },
    "assert fib(27) == 196418": {
      "result": true,
      "time": 0.02619147300720215,
      "error": null
    },
    "assert fib(16) == 987": {
      "result": true,
      "time": 0.03683590888977051,
      "error": null
    },
    "assert fib(14) == 377": {
      "result": true,
      "time": 0.026385068893432617,
      "error": null
    },
    "assert fib(33) == 3524578": {
      "result": true,
      "time": 0.04394960403442383,
      "error": null
    },
    "assert fib(20) == 6765": {
      "result": true,
      "time": 0.02955174446105957,
      "error": null
    },
    "assert fib(8) == 21": {
      "result": true,
      "time": 0.03360342979431152,
      "error": null
    },
    "assert fib(31) == 1346269": {
      "result": true,
      "time": 0.03166699409484863,
      "error": null
    },
    "assert fib(6) == 8": {
      "result": true,
      "time": 0.030968427658081055,
      "error": null
    },
    "assert fib(17) == 1597": {
      "result": true,
      "time": 0.0297548770904541,
      "error": null
    },
    "assert fib(2) == 1": {
      "result": true,
      "time": 0.029646873474121094,
      "error": null
    },
    "assert fib(1) == 1": {
      "result": true,
      "time": 0.028829336166381836,
      "error": null
    },
    "assert fib(30) == 832040": {
      "result": true,
      "time": 0.027524948120117188,
      "error": null
    },
    "assert fib(11) == 89": {
      "result": true,
      "time": 0.03356122970581055,
      "error": null
    },
    "assert fib(3) == 2": {
      "result": true,
      "time": 0.03190350532531738,
      "error": null
    },
    "assert fib(19) == 4181": {
      "result": true,
      "time": 0.0348210334777832,
      "error": null
    },
    "assert fib(21) == 10946": {
      "result": true,
      "time": 0.0315091609954834,
      "error": null
    },
    "assert fib(4) == 3": {
      "result": true,
      "time": 0.03179812431335449,
      "error": null
    },
    "assert fib(10) == 55": {
      "result": true,
      "time": 0.033493995666503906,
      "error": null
    },
    "assert fib(12) == 144": {
      "result": true,
      "time": 0.030365943908691406,
      "error": null
    },
    "assert fib(9) == 34": {
      "result": true,
      "time": 0.029247760772705078,
      "error": null
    },
    "assert fib(13) == 233": {
      "result": true,
      "time": 0.030011653900146484,
      "error": null
    },
    "assert fib(0) == 0": {
      "result": true,
      "time": 0.03024911880493164,
      "error": null
    },
    "assert fib(15) == 610": {
      "result": true,
      "time": 0.03754901885986328,
      "error": null
    },
    "assert fib(22) == 17711": {
      "result": true,
      "time": 0.027524471282958984,
      "error": null
    },
    "assert fib(24) == 46368": {
      "result": true,
      "time": 0.030049562454223633,
      "error": null
    },
    "assert fib(18) == 2584": {
      "result": true,
      "time": 0.02878284454345703,
      "error": null
    },
    "assert fib(28) == 317811": {
      "result": true,
      "time": 0.02927231788635254,
      "error": null
    },
    "assert fib(35) == 9227465": {
      "result": true,
      "time": 0.031264543533325195,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}