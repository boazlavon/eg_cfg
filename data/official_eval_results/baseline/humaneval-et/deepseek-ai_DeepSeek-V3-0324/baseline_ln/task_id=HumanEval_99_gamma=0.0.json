{
  "code": "def closest_integer(value):\n    num = float(value)\n    if num >= 0:\n        return int(num + 0.5)\n    else:\n        return int(num - 0.5)",
  "results": {
    "assert closest_integer(\"396630.07482315193744715\") == 396630": {
      "result": true,
      "time": 0.027956008911132812,
      "error": null
    },
    "assert closest_integer(\"400421550.6045760047304053\") == 400421551": {
      "result": true,
      "time": 0.03508567810058594,
      "error": null
    },
    "assert closest_integer(\"7474101960.9946621112548985\") == 7474101961": {
      "result": true,
      "time": 0.025668621063232422,
      "error": null
    },
    "assert closest_integer(\"20.2284164882780635\") == 20": {
      "result": true,
      "time": 0.03275132179260254,
      "error": null
    },
    "assert closest_integer(\"79430.17924732795127563\") == 79430": {
      "result": true,
      "time": 0.030548810958862305,
      "error": null
    },
    "assert closest_integer(\"79.29738\") == 79": {
      "result": true,
      "time": 0.03200054168701172,
      "error": null
    },
    "assert closest_integer(\"281040.6070070426978076\") == 281041": {
      "result": true,
      "time": 0.03296399116516113,
      "error": null
    },
    "assert closest_integer(\"-10.7668049208854797\") == -11": {
      "result": true,
      "time": 0.027072906494140625,
      "error": null
    },
    "assert closest_integer(\"70.7148103668424428\") == 71": {
      "result": true,
      "time": 0.029314041137695312,
      "error": null
    },
    "assert closest_integer(\"7752780.5410381165130523\") == 7752781": {
      "result": true,
      "time": 0.02958822250366211,
      "error": null
    },
    "assert closest_integer(\"7170.16745005290685966\") == 7170": {
      "result": true,
      "time": 0.029815196990966797,
      "error": null
    },
    "assert closest_integer(\"170.6921985077015881\") == 171": {
      "result": true,
      "time": 0.03459286689758301,
      "error": null
    },
    "assert closest_integer(\"54538150.6638877369321192\") == 54538151": {
      "result": true,
      "time": 0.02894425392150879,
      "error": null
    },
    "assert closest_integer(\"810.05084880400338965\") == 810": {
      "result": true,
      "time": 0.030359983444213867,
      "error": null
    },
    "assert closest_integer(\"5510.8938181386660865\") == 5511": {
      "result": true,
      "time": 0.0293731689453125,
      "error": null
    },
    "assert closest_integer(\"5589713.\") == 5589713": {
      "result": true,
      "time": 0.03514361381530762,
      "error": null
    },
    "assert closest_integer(\"0.9093998495250931\") == 1": {
      "result": true,
      "time": 0.027033567428588867,
      "error": null
    },
    "assert closest_integer(\"90050.4404481408550571\") == 90050": {
      "result": true,
      "time": 0.029131650924682617,
      "error": null
    },
    "assert closest_integer(\".55\") == 1": {
      "result": true,
      "time": 0.029068470001220703,
      "error": null
    },
    "assert closest_integer(\"20.9952573487089358\") == 21": {
      "result": true,
      "time": 0.030231475830078125,
      "error": null
    },
    "assert closest_integer(\"4.1\") == 4": {
      "result": true,
      "time": 0.029042720794677734,
      "error": null
    },
    "assert closest_integer(\"304510.07731976168722998\") == 304510": {
      "result": true,
      "time": 0.027662038803100586,
      "error": null
    },
    "assert closest_integer(\"920.5503068267302647\") == 921": {
      "result": true,
      "time": 0.029698848724365234,
      "error": null
    },
    "assert closest_integer(\"50.5108701326835627\") == 51": {
      "result": true,
      "time": 0.033478736877441406,
      "error": null
    },
    "assert closest_integer(\"8090.2130747773426992\") == 8090": {
      "result": true,
      "time": 0.028984785079956055,
      "error": null
    },
    "assert closest_integer(\"5420.6753885072984122\") == 5421": {
      "result": true,
      "time": 0.026456594467163086,
      "error": null
    },
    "assert closest_integer(\"2127780.6194993537705912\") == 2127781": {
      "result": true,
      "time": 0.028843164443969727,
      "error": null
    },
    "assert closest_integer(\".23\") == 0": {
      "result": true,
      "time": 0.026150226593017578,
      "error": null
    },
    "assert closest_integer(\"58720.6576278790833077\") == 58721": {
      "result": true,
      "time": 0.030252456665039062,
      "error": null
    },
    "assert closest_integer(\"6130.863753701502481\") == 6131": {
      "result": true,
      "time": 0.0280916690826416,
      "error": null
    },
    "assert closest_integer(\"9556050.7817362719643586\") == 9556051": {
      "result": true,
      "time": 0.03254246711730957,
      "error": null
    },
    "assert closest_integer(\"20.287830685087748\") == 20": {
      "result": true,
      "time": 0.030504941940307617,
      "error": null
    },
    "assert closest_integer(\"2002770.9156885375054495\") == 2002771": {
      "result": true,
      "time": 0.03170061111450195,
      "error": null
    },
    "assert closest_integer(\"60.4151789292601701\") == 60": {
      "result": true,
      "time": 0.028476953506469727,
      "error": null
    },
    "assert closest_integer(\"188164680.8625164010892828\") == 188164681": {
      "result": true,
      "time": 0.028786897659301758,
      "error": null
    },
    "assert closest_integer(\"2510.8534760249415141\") == 2511": {
      "result": true,
      "time": 0.029041051864624023,
      "error": null
    },
    "assert closest_integer(\"-15.5\") == -16, \"Test 3\"": {
      "result": true,
      "time": 0.033766746520996094,
      "error": null
    },
    "assert closest_integer(\"396.\") == 396": {
      "result": true,
      "time": 0.027995824813842773,
      "error": null
    },
    "assert closest_integer(\"80.18362563426599365\") == 80": {
      "result": true,
      "time": 0.030728816986083984,
      "error": null
    },
    "assert closest_integer(\"965180090.27865264317516414\") == 965180090": {
      "result": true,
      "time": 0.031348466873168945,
      "error": null
    },
    "assert closest_integer(\"32950.12731759775110685\") == 32950": {
      "result": true,
      "time": 0.028493404388427734,
      "error": null
    },
    "assert closest_integer(\"335640.43815039154886604\") == 335640": {
      "result": true,
      "time": 0.02712106704711914,
      "error": null
    },
    "assert closest_integer(\"20.\") == 20": {
      "result": true,
      "time": 0.029387474060058594,
      "error": null
    },
    "assert closest_integer(\"184964420.27548611693624514\") == 184964420": {
      "result": true,
      "time": 0.03342628479003906,
      "error": null
    },
    "assert closest_integer(\"9682550.8652164441655846\") == 9682551": {
      "result": true,
      "time": 0.03189396858215332,
      "error": null
    },
    "assert closest_integer(\"60.6541701356105623\") == 61": {
      "result": true,
      "time": 0.03190469741821289,
      "error": null
    },
    "assert closest_integer(\".917694\") == 1": {
      "result": true,
      "time": 0.034226179122924805,
      "error": null
    },
    "assert closest_integer(\"420.3730741094554919\") == 420": {
      "result": true,
      "time": 0.028923988342285156,
      "error": null
    },
    "assert closest_integer(\".73\") == 1": {
      "result": true,
      "time": 0.03340029716491699,
      "error": null
    },
    "assert closest_integer(\"8.26\") == 8": {
      "result": true,
      "time": 0.030870914459228516,
      "error": null
    },
    "assert closest_integer(\"568882230.3460506747741575\") == 568882230": {
      "result": true,
      "time": 0.02979874610900879,
      "error": null
    },
    "assert closest_integer(\"9909140.22019882247107447\") == 9909140": {
      "result": true,
      "time": 0.03237557411193848,
      "error": null
    },
    "assert closest_integer(\"15.3\") == 15, \"Test 3\"\n\n    # Check some edge cases that are easy to work out by hand.": {
      "result": true,
      "time": 0.034600019454956055,
      "error": null
    },
    "assert closest_integer(\"8588230.0004916487098123312\") == 8588230": {
      "result": true,
      "time": 0.02815866470336914,
      "error": null
    },
    "assert closest_integer(\"79050.9507930940642703\") == 79051": {
      "result": true,
      "time": 0.027954816818237305,
      "error": null
    },
    "assert closest_integer(\"3370.20175253216166456\") == 3370": {
      "result": true,
      "time": 0.029735088348388672,
      "error": null
    },
    "assert closest_integer(\"2750.9171920354992185\") == 2751": {
      "result": true,
      "time": 0.0277862548828125,
      "error": null
    },
    "assert closest_integer(\"80.7127796045265017\") == 81": {
      "result": true,
      "time": 0.0294344425201416,
      "error": null
    },
    "assert closest_integer(\"807720.6176298175605032\") == 807721": {
      "result": true,
      "time": 0.03183555603027344,
      "error": null
    },
    "assert closest_integer(\"50.06568006872727938\") == 50": {
      "result": true,
      "time": 0.03191065788269043,
      "error": null
    },
    "assert closest_integer(\"18030.8511815378525301\") == 18031": {
      "result": true,
      "time": 0.035864830017089844,
      "error": null
    },
    "assert closest_integer(\"93539740.8429573417816859\") == 93539741": {
      "result": true,
      "time": 0.028006792068481445,
      "error": null
    },
    "assert closest_integer(\"0.08050974009664802\") == 0": {
      "result": true,
      "time": 0.028441667556762695,
      "error": null
    },
    "assert closest_integer(\"8667431660.1773809642921491\") == 8667431660": {
      "result": true,
      "time": 0.028283119201660156,
      "error": null
    },
    "assert closest_integer(\"4560.07986037903944365\") == 4560": {
      "result": true,
      "time": 0.030148983001708984,
      "error": null
    },
    "assert closest_integer(\"90.8718389292538408\") == 91": {
      "result": true,
      "time": 0.03417706489562988,
      "error": null
    },
    "assert closest_integer(\"58720470.3151774565803682\") == 58720470": {
      "result": true,
      "time": 0.025147438049316406,
      "error": null
    },
    "assert closest_integer(\"219670.3814735103021585\") == 219670": {
      "result": true,
      "time": 0.02750992774963379,
      "error": null
    },
    "assert closest_integer(\"3550.3795035988000094\") == 3550": {
      "result": true,
      "time": 0.03421616554260254,
      "error": null
    },
    "assert closest_integer(\"4930.8578331989039943\") == 4931": {
      "result": true,
      "time": 0.030084609985351562,
      "error": null
    },
    "assert closest_integer(\"1187974430.6396705049308593\") == 1187974431": {
      "result": true,
      "time": 0.027187824249267578,
      "error": null
    },
    "assert closest_integer(\"3840583540.8121445801379602\") == 3840583541": {
      "result": true,
      "time": 0.026632308959960938,
      "error": null
    },
    "assert closest_integer(\"643190.9074997847487993\") == 643191": {
      "result": true,
      "time": 0.027894973754882812,
      "error": null
    },
    "assert closest_integer(\"90.41784910359843574\") == 90": {
      "result": true,
      "time": 0.030233144760131836,
      "error": null
    },
    "assert closest_integer(\"8647610.19615183923123347\") == 8647610": {
      "result": true,
      "time": 0.027057647705078125,
      "error": null
    },
    "assert closest_integer(\"5.9\") == 6": {
      "result": true,
      "time": 0.029921770095825195,
      "error": null
    },
    "assert closest_integer(\"49530.9923686605409962\") == 49531": {
      "result": true,
      "time": 0.02927541732788086,
      "error": null
    },
    "assert closest_integer(\"60.3982054790544489\") == 60": {
      "result": true,
      "time": 0.03666257858276367,
      "error": null
    },
    "assert closest_integer(\"9120.7857264964633935\") == 9121": {
      "result": true,
      "time": 0.028401613235473633,
      "error": null
    },
    "assert closest_integer(\"90.310328840125088\") == 90": {
      "result": true,
      "time": 0.03268003463745117,
      "error": null
    },
    "assert closest_integer(\"80.9081244975972714\") == 81": {
      "result": true,
      "time": 0.026990890502929688,
      "error": null
    },
    "assert closest_integer(\"30.4875496675711467\") == 30": {
      "result": true,
      "time": 0.029123544692993164,
      "error": null
    },
    "assert closest_integer(\"96830.7798358829352927\") == 96831": {
      "result": true,
      "time": 0.029590606689453125,
      "error": null
    },
    "assert closest_integer(\"473120.6040377644717714\") == 473121": {
      "result": true,
      "time": 0.03267526626586914,
      "error": null
    },
    "assert closest_integer(\".10826\") == 0": {
      "result": true,
      "time": 0.02892446517944336,
      "error": null
    },
    "assert closest_integer(\"4870.7514635289854439\") == 4871": {
      "result": true,
      "time": 0.031129121780395508,
      "error": null
    },
    "assert closest_integer(\"42850.9135283560202653\") == 42851": {
      "result": true,
      "time": 0.028468608856201172,
      "error": null
    },
    "assert closest_integer(\"70.9074597640722244\") == 71": {
      "result": true,
      "time": 0.03073596954345703,
      "error": null
    },
    "assert closest_integer(\"105759420.7092501708226783\") == 105759421": {
      "result": true,
      "time": 0.0277099609375,
      "error": null
    },
    "assert closest_integer(\"3250.6874339166783494\") == 3251": {
      "result": true,
      "time": 0.031764984130859375,
      "error": null
    },
    "assert closest_integer(\"58340.27521511057002124\") == 58340": {
      "result": true,
      "time": 0.03020310401916504,
      "error": null
    },
    "assert closest_integer(\"0\") == 0, \"Test 0\"": {
      "result": true,
      "time": 0.03194236755371094,
      "error": null
    },
    "assert closest_integer(\"+740.7675428815072424\") == 741": {
      "result": true,
      "time": 0.032314300537109375,
      "error": null
    },
    "assert closest_integer(\"-9.\") == -9": {
      "result": true,
      "time": 0.027423620223999023,
      "error": null
    },
    "assert closest_integer(\"9376920.32484597586363007\") == 9376920": {
      "result": true,
      "time": 0.03236222267150879,
      "error": null
    },
    "assert closest_integer(\"90.754166\") == 91": {
      "result": true,
      "time": 0.030315160751342773,
      "error": null
    },
    "assert closest_integer(\"20.9560740535157867\") == 21": {
      "result": true,
      "time": 0.03664112091064453,
      "error": null
    },
    "assert closest_integer(\"30651380.06269969697942035\") == 30651380": {
      "result": true,
      "time": 0.02895379066467285,
      "error": null
    },
    "assert closest_integer(\"50.6846461124165827\") == 51": {
      "result": true,
      "time": 0.027773380279541016,
      "error": null
    },
    "assert closest_integer(\"0910.38918638690228935\") == 910": {
      "result": true,
      "time": 0.03443765640258789,
      "error": null
    },
    "assert closest_integer(\"25270.26236878929945096\") == 25270": {
      "result": true,
      "time": 0.030736923217773438,
      "error": null
    },
    "assert closest_integer(\"5956430.2031336848206573\") == 5956430": {
      "result": true,
      "time": 0.03132009506225586,
      "error": null
    },
    "assert closest_integer(\"14.5\") == 15, \"Test 2\"": {
      "result": true,
      "time": 0.029934167861938477,
      "error": null
    },
    "assert closest_integer(\"21095172.\") == 21095172": {
      "result": true,
      "time": 0.028508901596069336,
      "error": null
    },
    "assert closest_integer(\"36490.19589678824090695\") == 36490": {
      "result": true,
      "time": 0.030085086822509766,
      "error": null
    },
    "assert closest_integer(\"7284790.9387083108844197\") == 7284791": {
      "result": true,
      "time": 0.028725624084472656,
      "error": null
    },
    "assert closest_integer(\"14550.36803024128148376\") == 14550": {
      "result": true,
      "time": 0.02774190902709961,
      "error": null
    },
    "assert closest_integer(\"716986380.8908632298127022\") == 716986381": {
      "result": true,
      "time": 0.028539180755615234,
      "error": null
    },
    "assert closest_integer(\"2920.2909064116656561\") == 2920": {
      "result": true,
      "time": 0.028272390365600586,
      "error": null
    },
    "assert closest_integer(\"4.3\") == 4": {
      "result": true,
      "time": 0.03694272041320801,
      "error": null
    },
    "assert closest_integer(\"95630.00899682001984714\") == 95630": {
      "result": true,
      "time": 0.027855873107910156,
      "error": null
    },
    "assert closest_integer(\"6277620.047448415643293274\") == 6277620": {
      "result": true,
      "time": 0.02850651741027832,
      "error": null
    },
    "assert closest_integer(\"80.5093924567968169\") == 81": {
      "result": true,
      "time": 0.030574321746826172,
      "error": null
    },
    "assert closest_integer(\"7180.08904084585638494\") == 7180": {
      "result": true,
      "time": 0.02730274200439453,
      "error": null
    },
    "assert closest_integer(\"234430.8213641009547066\") == 234431": {
      "result": true,
      "time": 0.030869245529174805,
      "error": null
    },
    "assert closest_integer(\"9830.2887871019878405\") == 9830": {
      "result": true,
      "time": 0.03240060806274414,
      "error": null
    },
    "assert closest_integer(\"10\") == 10, \"Test 1\"": {
      "result": true,
      "time": 0.030788898468017578,
      "error": null
    },
    "assert closest_integer(\"40.4775205107302265\") == 40": {
      "result": true,
      "time": 0.02983570098876953,
      "error": null
    },
    "assert closest_integer(\"4790.3957977986146939\") == 4790": {
      "result": true,
      "time": 0.030160188674926758,
      "error": null
    },
    "assert closest_integer(\"87061.2\") == 87061": {
      "result": true,
      "time": 0.034238576889038086,
      "error": null
    },
    "assert closest_integer(\"0.47356705599235294\") == 0": {
      "result": true,
      "time": 0.027980327606201172,
      "error": null
    },
    "assert closest_integer(\"29540.8266023455315558\") == 29541": {
      "result": true,
      "time": 0.041745662689208984,
      "error": null
    },
    "assert closest_integer(\"387460.9626228213640998\") == 387461": {
      "result": true,
      "time": 0.03147172927856445,
      "error": null
    },
    "assert closest_integer(\"349.7\") == 350": {
      "result": true,
      "time": 0.03527712821960449,
      "error": null
    },
    "assert closest_integer(\"70.1069369965509347\") == 70": {
      "result": true,
      "time": 0.03173327445983887,
      "error": null
    },
    "assert closest_integer(\"35730.009102915382992016\") == 35730": {
      "result": true,
      "time": 0.028554201126098633,
      "error": null
    },
    "assert closest_integer(\"90.19186788324286208\") == 90": {
      "result": true,
      "time": 0.0332334041595459,
      "error": null
    },
    "assert closest_integer(\"720.33604724999783553\") == 720": {
      "result": true,
      "time": 0.03362917900085449,
      "error": null
    },
    "assert closest_integer(\"8450.5441516861955107\") == 8451": {
      "result": true,
      "time": 0.03204226493835449,
      "error": null
    },
    "assert closest_integer(\"9470.5170825437128881\") == 9471": {
      "result": true,
      "time": 0.03200173377990723,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}