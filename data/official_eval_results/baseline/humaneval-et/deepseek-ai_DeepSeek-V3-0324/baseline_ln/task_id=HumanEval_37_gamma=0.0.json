{
  "code": "def sort_even(l: list) -> list:\n    even_indices = l[::2]\n    even_indices_sorted = sorted(even_indices)\n    result = []\n    for i in range(len(l)):\n        if i % 2 == 0:\n            result.append(even_indices_sorted[i // 2])\n        else:\n            result.append(l[i])\n    return result",
  "results": {
    "assert sort_even([3, 7, -13, 6, 24, 3, 1, 11, 10, -10]) == [-13, 7, 1, 6, 3, 3, 10, 11, 24, -10]": {
      "result": true,
      "time": 0.02950596809387207,
      "error": null
    },
    "assert sort_even([8, 11, -11, 9, 24, 6, 6, 7, 15, -12]) == [-11, 11, 6, 9, 8, 6, 15, 7, 24, -12]": {
      "result": true,
      "time": 0.02758312225341797,
      "error": null
    },
    "assert sort_even([1, 1, 6]) == [1, 1, 6]": {
      "result": true,
      "time": 0.02847456932067871,
      "error": null
    },
    "assert sort_even([6, 3, -4, 4, -7, 6, 6, 1, 121, 3, -6]) == [-7, 3, -6, 4, -4, 6, 6, 1, 6, 3, 121]": {
      "result": true,
      "time": 0.026587247848510742,
      "error": null
    },
    "assert sort_even([6, 6, -13, 1, 25, 2, 7, 8, 7, -12]) == [-13, 6, 6, 1, 7, 2, 7, 8, 25, -12]": {
      "result": true,
      "time": 0.027642488479614258,
      "error": null
    },
    "assert sort_even([7, 6, -10, 3, 18, 1, 5, 10, 10, -14]) == [-10, 6, 5, 3, 7, 1, 10, 10, 18, -14]": {
      "result": true,
      "time": 0.0289309024810791,
      "error": null
    },
    "assert sort_even([3, 1, 1]) == [1, 1, 3]": {
      "result": true,
      "time": 0.03128504753112793,
      "error": null
    },
    "assert sort_even([6, 3, -10, 7, 0, 8, 14, 2, 122, 4, -10]) == [-10, 3, -10, 7, 0, 8, 6, 2, 14, 4, 122]": {
      "result": true,
      "time": 0.028838634490966797,
      "error": null
    },
    "assert sort_even([6, 5, 0, 6, -2, 3, 13, 3, 120, 4, -5]) == [-5, 5, -2, 6, 0, 3, 6, 3, 13, 4, 120]": {
      "result": true,
      "time": 0.0318906307220459,
      "error": null
    },
    "assert sort_even([2, 6, 2]) == [2, 6, 2]": {
      "result": true,
      "time": 0.027422428131103516,
      "error": null
    },
    "assert sort_even([10, 8, -2, 2, -1, 2, 11, 4, 124, 4, -15]) == [-15, 8, -2, 2, -1, 2, 10, 4, 11, 4, 124]": {
      "result": true,
      "time": 0.027933359146118164,
      "error": null
    },
    "assert sort_even([4, 4, 1]) == [1, 4, 4]": {
      "result": true,
      "time": 0.0280148983001709,
      "error": null
    },
    "assert sort_even([2, 1, 4]) == [2, 1, 4]": {
      "result": true,
      "time": 0.029163360595703125,
      "error": null
    },
    "assert sort_even([6, 9, -11, 7, 21, 6, 6, 10, 10, -11]) == [-11, 9, 6, 7, 6, 6, 10, 10, 21, -11]": {
      "result": true,
      "time": 0.02896285057067871,
      "error": null
    },
    "assert sort_even([4, 5, 7]) == [4, 5, 7]": {
      "result": true,
      "time": 0.029634952545166016,
      "error": null
    },
    "assert sort_even([2, 4, 8]) == [2, 4, 8]": {
      "result": true,
      "time": 0.030275583267211914,
      "error": null
    },
    "assert sort_even([5, 1, -9, 1, 0, 2, 7, 1, 118, 6, -14]) == [-14, 1, -9, 1, 0, 2, 5, 1, 7, 6, 118]": {
      "result": true,
      "time": 0.032224178314208984,
      "error": null
    },
    "assert sort_even([8, 9, -13, 6, 25, 3, 6, 8, 10, -12]) == [-13, 9, 6, 6, 8, 3, 10, 8, 25, -12]": {
      "result": true,
      "time": 0.02847146987915039,
      "error": null
    },
    "assert sort_even([10, 3, 0, 2, -6, 8, 13, 4, 125, 3, -11]) == [-11, 3, -6, 2, 0, 8, 10, 4, 13, 3, 125]": {
      "result": true,
      "time": 0.03232598304748535,
      "error": null
    },
    "assert sort_even([5, 1, 2]) == [2, 1, 5]": {
      "result": true,
      "time": 0.033925533294677734,
      "error": null
    },
    "assert sort_even([3, 1, -1, 4, -5, 8, 10, 3, 123, 3, -15]) == [-15, 1, -5, 4, -1, 8, 3, 3, 10, 3, 123]": {
      "result": true,
      "time": 0.028526782989501953,
      "error": null
    },
    "assert sort_even([6, 9, -17, 1, 23, 7, 5, 12, 15, -13]) == [-17, 9, 5, 1, 6, 7, 15, 12, 23, -13]": {
      "result": true,
      "time": 0.0317232608795166,
      "error": null
    },
    "assert sort_even([8, 3, -15, 8, 19, 3, 6, 6, 11, -9]) == [-15, 3, 6, 8, 8, 3, 11, 6, 19, -9]": {
      "result": true,
      "time": 0.02796173095703125,
      "error": null
    },
    "assert sort_even([10, 5, 0, 2, -6, 8, 6, 2, 126, 5, -13]) == [-13, 5, -6, 2, 0, 8, 6, 2, 10, 5, 126]": {
      "result": true,
      "time": 0.035077571868896484,
      "error": null
    },
    "assert sort_even([4, 6, 1]) == [1, 6, 4]": {
      "result": true,
      "time": 0.02925395965576172,
      "error": null
    },
    "assert sort_even([2, 1, 7]) == [2, 1, 7]": {
      "result": true,
      "time": 0.029346704483032227,
      "error": null
    },
    "assert sort_even([5, 7, 1]) == [1, 7, 5]": {
      "result": true,
      "time": 0.02815556526184082,
      "error": null
    },
    "assert sort_even([8, 2, -5, 4, -1, 6, 12, 3, 126, 6, -8]) == [-8, 2, -5, 4, -1, 6, 8, 3, 12, 6, 126]": {
      "result": true,
      "time": 0.030129671096801758,
      "error": null
    },
    "assert sort_even([6, 13, -15, 6, 23, 6, 4, 15, 17, -10]) == [-15, 13, 4, 6, 6, 6, 17, 15, 23, -10]": {
      "result": true,
      "time": 0.03388547897338867,
      "error": null
    },
    "assert sort_even([3, 3, 4]) == [3, 3, 4]": {
      "result": true,
      "time": 0.027552127838134766,
      "error": null
    },
    "assert sort_even([5, 7, -7, 1, 2, 6, 9, 3, 120, 3, -14]) == [-14, 7, -7, 1, 2, 6, 5, 3, 9, 3, 120]": {
      "result": true,
      "time": 0.029476642608642578,
      "error": null
    },
    "assert sort_even([10, 6, -1, 5, 2, 2, 13, 4, 123, 5, -8]) == [-8, 6, -1, 5, 2, 2, 10, 4, 13, 5, 123]": {
      "result": true,
      "time": 0.028003454208374023,
      "error": null
    },
    "assert sort_even([6, 3, -9, 8, 25, 2, 4, 8, 8, -12]) == [-9, 3, 4, 8, 6, 2, 8, 8, 25, -12]": {
      "result": true,
      "time": 0.03175616264343262,
      "error": null
    },
    "assert sort_even([2, 4, 7]) == [2, 4, 7]": {
      "result": true,
      "time": 0.029346942901611328,
      "error": null
    },
    "assert sort_even([8, 4, -2, 7, 2, 3, 9, 1, 118, 3, -10]) == [-10, 4, -2, 7, 2, 3, 8, 1, 9, 3, 118]": {
      "result": true,
      "time": 0.029378652572631836,
      "error": null
    },
    "assert sort_even([7, 5, -7, 6, 25, 1, 6, 11, 7, -10]) == [-7, 5, 6, 6, 7, 1, 7, 11, 25, -10]": {
      "result": true,
      "time": 0.032149314880371094,
      "error": null
    },
    "assert sort_even([7, 6, -8, 6, 1, 4, 4, 3, 125, 1, -14]) == [-14, 6, -8, 6, 1, 4, 4, 3, 7, 1, 125]": {
      "result": true,
      "time": 0.03356218338012695,
      "error": null
    },
    "assert tuple(sort_even([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])) == tuple([-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123])": {
      "result": true,
      "time": 0.02972269058227539,
      "error": null
    },
    "assert sort_even([5, 5, 6]) == [5, 5, 6]": {
      "result": true,
      "time": 0.030910015106201172,
      "error": null
    },
    "assert sort_even([8, 5, -12, 4, 20, 6, 7, 7, 13, -7]) == [-12, 5, 7, 4, 8, 6, 13, 7, 20, -7]": {
      "result": true,
      "time": 0.03540849685668945,
      "error": null
    },
    "assert sort_even([8, 2, -1, 5, 1, 7, 5, 3, 127, 5, -10]) == [-10, 2, -1, 5, 1, 7, 5, 3, 8, 5, 127]": {
      "result": true,
      "time": 0.0279233455657959,
      "error": null
    },
    "assert sort_even([6, 8, -7, 4, -4, 3, 11, 4, 125, 5, -11]) == [-11, 8, -7, 4, -4, 3, 6, 4, 11, 5, 125]": {
      "result": true,
      "time": 0.028714656829833984,
      "error": null
    },
    "assert sort_even([5, 8, -17, 6, 19, 6, 5, 7, 8, -14]) == [-17, 8, 5, 6, 5, 6, 8, 7, 19, -14]": {
      "result": true,
      "time": 0.025731325149536133,
      "error": null
    },
    "assert sort_even([3, 2, -3, 6, -5, 3, 9, 4, 128, 3, -8]) == [-8, 2, -5, 6, -3, 3, 3, 4, 9, 3, 128]": {
      "result": true,
      "time": 0.028238534927368164,
      "error": null
    },
    "assert sort_even([2, 5, 5]) == [2, 5, 5]": {
      "result": true,
      "time": 0.029547691345214844,
      "error": null
    },
    "assert sort_even([7, 3, -7, 3, -5, 8, 12, 2, 124, 4, -12]) == [-12, 3, -7, 3, -5, 8, 7, 2, 12, 4, 124]": {
      "result": true,
      "time": 0.03290605545043945,
      "error": null
    },
    "assert sort_even([5, 1, -9, 4, -7, 7, 5, 5, 128, 4, -7]) == [-9, 1, -7, 4, -7, 7, 5, 5, 5, 4, 128]": {
      "result": true,
      "time": 0.028007030487060547,
      "error": null
    },
    "assert sort_even([1, 4, 4]) == [1, 4, 4]": {
      "result": true,
      "time": 0.027458667755126953,
      "error": null
    },
    "assert sort_even([10, 4, -5, 1, -7, 5, 8, 1, 128, 5, -6]) == [-7, 4, -6, 1, -5, 5, 8, 1, 10, 5, 128]": {
      "result": true,
      "time": 0.02927851676940918,
      "error": null
    },
    "assert sort_even([7, 8, -16, 1, 23, 1, 4, 8, 10, -11]) == [-16, 8, 4, 1, 7, 1, 10, 8, 23, -11]": {
      "result": true,
      "time": 0.03240227699279785,
      "error": null
    },
    "assert sort_even([6, 7, 3]) == [3, 7, 6]": {
      "result": true,
      "time": 0.03600955009460449,
      "error": null
    },
    "assert sort_even([2, 4, -6, 7, 1, 8, 9, 5, 128, 4, -12]) == [-12, 4, -6, 7, 1, 8, 2, 5, 9, 4, 128]": {
      "result": true,
      "time": 0.028323888778686523,
      "error": null
    },
    "assert sort_even([1, 7, -14, 7, 20, 3, 7, 13, 9, -8]) == [-14, 7, 1, 7, 7, 3, 9, 13, 20, -8]": {
      "result": true,
      "time": 0.027821063995361328,
      "error": null
    },
    "assert sort_even([1, 10, -14, 2, 23, 2, 8, 13, 11, -9]) == [-14, 10, 1, 2, 8, 2, 11, 13, 23, -9]": {
      "result": true,
      "time": 0.03023838996887207,
      "error": null
    },
    "assert sort_even([6, 1, -2, 6, 2, 2, 8, 2, 124, 2, -11]) == [-11, 1, -2, 6, 2, 2, 6, 2, 8, 2, 124]": {
      "result": true,
      "time": 0.03214740753173828,
      "error": null
    },
    "assert sort_even([1, 4, -15, 4, 22, 4, 8, 10, 8, -8]) == [-15, 4, 1, 4, 8, 4, 8, 10, 22, -8]": {
      "result": true,
      "time": 0.031989336013793945,
      "error": null
    },
    "assert sort_even([2, 12, -10, 2, 27, 3, 6, 11, 9, -15]) == [-10, 12, 2, 2, 6, 3, 9, 11, 27, -15]": {
      "result": true,
      "time": 0.025619029998779297,
      "error": null
    },
    "assert sort_even([6, 5, 5]) == [5, 5, 6]": {
      "result": true,
      "time": 0.03215622901916504,
      "error": null
    },
    "assert sort_even([4, 7, 6]) == [4, 7, 6]": {
      "result": true,
      "time": 0.03164482116699219,
      "error": null
    },
    "assert sort_even([10, 5, -16, 5, 26, 3, 1, 15, 11, -11]) == [-16, 5, 1, 5, 10, 3, 11, 15, 26, -11]": {
      "result": true,
      "time": 0.030371904373168945,
      "error": null
    },
    "assert sort_even([4, 5, -3, 7, -1, 5, 11, 3, 124, 4, -9]) == [-9, 5, -3, 7, -1, 5, 4, 3, 11, 4, 124]": {
      "result": true,
      "time": 0.03179121017456055,
      "error": null
    },
    "assert sort_even([2, 1, 2]) == [2, 1, 2]": {
      "result": true,
      "time": 0.03573131561279297,
      "error": null
    },
    "assert sort_even([6, 6, -9, 8, 28, 7, 3, 13, 10, -7]) == [-9, 6, 3, 8, 6, 7, 10, 13, 28, -7]": {
      "result": true,
      "time": 0.02869272232055664,
      "error": null
    },
    "assert sort_even([9, 1, 0, 7, -2, 5, 6, 1, 123, 5, -6]) == [-6, 1, -2, 7, 0, 5, 6, 1, 9, 5, 123]": {
      "result": true,
      "time": 0.03003072738647461,
      "error": null
    },
    "assert sort_even([10, 6, -9, 4, -1, 1, 8, 4, 123, 2, -10]) == [-10, 6, -9, 4, -1, 1, 8, 4, 10, 2, 123]": {
      "result": true,
      "time": 0.031678199768066406,
      "error": null
    },
    "assert sort_even([1, 8, -7, 6, 19, 1, 1, 16, 10, -14]) == [-7, 8, 1, 6, 1, 1, 10, 16, 19, -14]": {
      "result": true,
      "time": 0.032433509826660156,
      "error": null
    },
    "assert sort_even([4, 13, -13, 8, 20, 3, 1, 6, 17, -13]) == [-13, 13, 1, 8, 4, 3, 17, 6, 20, -13]": {
      "result": true,
      "time": 0.03261923789978027,
      "error": null
    },
    "assert sort_even([6, 2, 4]) == [4, 2, 6]": {
      "result": true,
      "time": 0.029189348220825195,
      "error": null
    },
    "assert sort_even([9, 5, -13, 4, 21, 7, 6, 9, 10, -7]) == [-13, 5, 6, 4, 9, 7, 10, 9, 21, -7]": {
      "result": true,
      "time": 0.03299689292907715,
      "error": null
    },
    "assert sort_even([1, 5, 4]) == [1, 5, 4]": {
      "result": true,
      "time": 0.030035018920898438,
      "error": null
    },
    "assert sort_even([2, 3, 4]) == [2, 3, 4]": {
      "result": true,
      "time": 0.02962207794189453,
      "error": null
    },
    "assert sort_even([9, 4, -9, 8, 19, 7, 2, 9, 7, -9]) == [-9, 4, 2, 8, 7, 7, 9, 9, 19, -9]": {
      "result": true,
      "time": 0.03503584861755371,
      "error": null
    },
    "assert sort_even([1, 8, -9, 3, 25, 5, 7, 14, 9, -15]) == [-9, 8, 1, 3, 7, 5, 9, 14, 25, -15]": {
      "result": true,
      "time": 0.03148818016052246,
      "error": null
    },
    "assert sort_even([6, 4, 8]) == [6, 4, 8]": {
      "result": true,
      "time": 0.028782129287719727,
      "error": null
    },
    "assert sort_even([4, 7, -8, 7, 23, 4, 6, 8, 17, -14]) == [-8, 7, 4, 7, 6, 4, 17, 8, 23, -14]": {
      "result": true,
      "time": 0.030205249786376953,
      "error": null
    },
    "assert sort_even([2, 5, -2, 6, -6, 4, 4, 5, 124, 5, -15]) == [-15, 5, -6, 6, -2, 4, 2, 5, 4, 5, 124]": {
      "result": true,
      "time": 0.030106782913208008,
      "error": null
    },
    "assert sort_even([9, 13, -17, 2, 21, 6, 7, 15, 10, -13]) == [-17, 13, 7, 2, 9, 6, 10, 15, 21, -13]": {
      "result": true,
      "time": 0.030648231506347656,
      "error": null
    },
    "assert sort_even([4, 6, -8, 7, -3, 2, 5, 4, 124, 5, -15]) == [-15, 6, -8, 7, -3, 2, 4, 4, 5, 5, 124]": {
      "result": true,
      "time": 0.03243064880371094,
      "error": null
    },
    "assert sort_even([3, 2, 4]) == [3, 2, 4]": {
      "result": true,
      "time": 0.029737234115600586,
      "error": null
    },
    "assert sort_even([4, 1, 6]) == [4, 1, 6]": {
      "result": true,
      "time": 0.027809858322143555,
      "error": null
    },
    "assert sort_even([7, 4, -2, 4, 2, 8, 6, 2, 123, 6, -6]) == [-6, 4, -2, 4, 2, 8, 6, 2, 7, 6, 123]": {
      "result": true,
      "time": 0.03550839424133301,
      "error": null
    },
    "assert sort_even([2, 5, 4]) == [2, 5, 4]": {
      "result": true,
      "time": 0.03391075134277344,
      "error": null
    },
    "assert sort_even([10, 5, -7, 3, -5, 4, 14, 1, 119, 2, -10]) == [-10, 5, -7, 3, -5, 4, 10, 1, 14, 2, 119]": {
      "result": true,
      "time": 0.033711910247802734,
      "error": null
    },
    "assert sort_even([4, 6, -3, 5, -5, 5, 11, 3, 128, 4, -14]) == [-14, 6, -5, 5, -3, 5, 4, 3, 11, 4, 128]": {
      "result": true,
      "time": 0.028646469116210938,
      "error": null
    },
    "assert sort_even([9, 5, -7, 9, 23, 4, 6, 7, 13, -5]) == [-7, 5, 6, 9, 9, 4, 13, 7, 23, -5]": {
      "result": true,
      "time": 0.031062841415405273,
      "error": null
    },
    "assert sort_even([3, 8, -6, 2, -5, 5, 8, 4, 120, 3, -8]) == [-8, 8, -6, 2, -5, 5, 3, 4, 8, 3, 120]": {
      "result": true,
      "time": 0.028421640396118164,
      "error": null
    },
    "assert sort_even([10, 4, -6, 4, 1, 3, 4, 3, 119, 5, -9]) == [-9, 4, -6, 4, 1, 3, 4, 3, 10, 5, 119]": {
      "result": true,
      "time": 0.035672903060913086,
      "error": null
    },
    "assert sort_even([6, 6, -7, 1, -1, 1, 6, 5, 122, 5, -9]) == [-9, 6, -7, 1, -1, 1, 6, 5, 6, 5, 122]": {
      "result": true,
      "time": 0.028558969497680664,
      "error": null
    },
    "assert sort_even([2, 10, -11, 6, 23, 3, 6, 7, 13, -12]) == [-11, 10, 2, 6, 6, 3, 13, 7, 23, -12]": {
      "result": true,
      "time": 0.029909849166870117,
      "error": null
    },
    "assert sort_even([2, 11, -11, 1, 25, 3, 8, 15, 15, -7]) == [-11, 11, 2, 1, 8, 3, 15, 15, 25, -7]": {
      "result": true,
      "time": 0.031237125396728516,
      "error": null
    },
    "assert sort_even([9, 6, -1, 6, -7, 1, 7, 1, 125, 5, -11]) == [-11, 6, -7, 6, -1, 1, 7, 1, 9, 5, 125]": {
      "result": true,
      "time": 0.032434701919555664,
      "error": null
    },
    "assert sort_even([7, 9, -11, 3, 22, 4, 1, 8, 15, -7]) == [-11, 9, 1, 3, 7, 4, 15, 8, 22, -7]": {
      "result": true,
      "time": 0.027628660202026367,
      "error": null
    },
    "assert sort_even([5, 9, -14, 1, 19, 5, 7, 13, 14, -9]) == [-14, 9, 5, 1, 7, 5, 14, 13, 19, -9]": {
      "result": true,
      "time": 0.028762102127075195,
      "error": null
    },
    "assert sort_even([5, 12, -13, 2, 21, 2, 7, 15, 7, -15]) == [-13, 12, 5, 2, 7, 2, 7, 15, 21, -15]": {
      "result": true,
      "time": 0.04130125045776367,
      "error": null
    },
    "assert sort_even([4, 4, 7]) == [4, 4, 7]": {
      "result": true,
      "time": 0.02969217300415039,
      "error": null
    },
    "assert sort_even([6, 2, 3]) == [3, 2, 6]": {
      "result": true,
      "time": 0.03127336502075195,
      "error": null
    },
    "assert sort_even([6, 7, -4, 5, -5, 1, 9, 5, 121, 3, -10]) == [-10, 7, -5, 5, -4, 1, 6, 5, 9, 3, 121]": {
      "result": true,
      "time": 0.03122735023498535,
      "error": null
    },
    "assert sort_even([4, 5, -9, 1, -3, 8, 5, 2, 127, 3, -7]) == [-9, 5, -7, 1, -3, 8, 4, 2, 5, 3, 127]": {
      "result": true,
      "time": 0.030764102935791016,
      "error": null
    },
    "assert tuple(sort_even([5, 8, -12, 4, 23, 2, 3, 11, 12, -10])) == tuple([-12, 8, 3, 4, 5, 2, 12, 11, 23, -10])": {
      "result": true,
      "time": 0.03187394142150879,
      "error": null
    },
    "assert sort_even([2, 8, -2, 5, -8, 6, 4, 3, 120, 2, -10]) == [-10, 8, -8, 5, -2, 6, 2, 3, 4, 2, 120]": {
      "result": true,
      "time": 0.027770280838012695,
      "error": null
    },
    "assert sort_even([6, 4, -15, 4, 27, 3, 3, 6, 10, -15]) == [-15, 4, 3, 4, 6, 3, 10, 6, 27, -15]": {
      "result": true,
      "time": 0.02811264991760254,
      "error": null
    },
    "assert sort_even([2, 8, -8, 3, -4, 7, 9, 3, 123, 4, -10]) == [-10, 8, -8, 3, -4, 7, 2, 3, 9, 4, 123]": {
      "result": true,
      "time": 0.029931306838989258,
      "error": null
    },
    "assert sort_even([9, 3, -17, 4, 20, 3, 4, 9, 10, -6]) == [-17, 3, 4, 4, 9, 3, 10, 9, 20, -6]": {
      "result": true,
      "time": 0.03305339813232422,
      "error": null
    },
    "assert sort_even([6, 3, 3]) == [3, 3, 6]": {
      "result": true,
      "time": 0.025125741958618164,
      "error": null
    },
    "assert sort_even([7, 4, -11, 7, 18, 1, 5, 14, 17, -12]) == [-11, 4, 5, 7, 7, 1, 17, 14, 18, -12]": {
      "result": true,
      "time": 0.04658389091491699,
      "error": null
    },
    "assert sort_even([10, 5, -7, 2, 20, 3, 3, 11, 12, -9]) == [-7, 5, 3, 2, 10, 3, 12, 11, 20, -9]": {
      "result": true,
      "time": 0.04431509971618652,
      "error": null
    },
    "assert sort_even([2, 6, 5]) == [2, 6, 5]": {
      "result": true,
      "time": 0.02872443199157715,
      "error": null
    },
    "assert sort_even([7, 6, -17, 1, 20, 4, 1, 12, 10, -5]) == [-17, 6, 1, 1, 7, 4, 10, 12, 20, -5]": {
      "result": true,
      "time": 0.030991315841674805,
      "error": null
    },
    "assert tuple(sort_even([1, 2, 3])) == tuple([1, 2, 3])": {
      "result": true,
      "time": 0.03169655799865723,
      "error": null
    },
    "assert sort_even([8, 3, -5, 2, -1, 3, 6, 3, 126, 2, -12]) == [-12, 3, -5, 2, -1, 3, 6, 3, 8, 2, 126]": {
      "result": true,
      "time": 0.03202033042907715,
      "error": null
    },
    "assert sort_even([4, 6, 8]) == [4, 6, 8]": {
      "result": true,
      "time": 0.03726458549499512,
      "error": null
    },
    "assert sort_even([1, 4, 3]) == [1, 4, 3]": {
      "result": true,
      "time": 0.029299259185791016,
      "error": null
    },
    "assert sort_even([8, 7, -2, 1, -6, 4, 9, 2, 120, 2, -11]) == [-11, 7, -6, 1, -2, 4, 8, 2, 9, 2, 120]": {
      "result": true,
      "time": 0.03310036659240723,
      "error": null
    },
    "assert sort_even([3, 5, -6, 6, -4, 6, 11, 1, 128, 2, -13]) == [-13, 5, -6, 6, -4, 6, 3, 1, 11, 2, 128]": {
      "result": true,
      "time": 0.028058767318725586,
      "error": null
    },
    "assert sort_even([8, 8, -7, 3, -6, 2, 12, 1, 120, 6, -15]) == [-15, 8, -7, 3, -6, 2, 8, 1, 12, 6, 120]": {
      "result": true,
      "time": 0.030449867248535156,
      "error": null
    },
    "assert sort_even([2, 5, 8]) == [2, 5, 8]": {
      "result": true,
      "time": 0.03126263618469238,
      "error": null
    },
    "assert sort_even([3, 2, 1]) == [1, 2, 3]": {
      "result": true,
      "time": 0.029746294021606445,
      "error": null
    },
    "assert sort_even([5, 12, -10, 1, 28, 7, 8, 6, 9, -10]) == [-10, 12, 5, 1, 8, 7, 9, 6, 28, -10]": {
      "result": true,
      "time": 0.030001401901245117,
      "error": null
    },
    "assert sort_even([4, 2, 5]) == [4, 2, 5]": {
      "result": true,
      "time": 0.03194832801818848,
      "error": null
    },
    "assert sort_even([6, 7, -8, 4, -7, 4, 14, 2, 119, 6, -9]) == [-9, 7, -8, 4, -7, 4, 6, 2, 14, 6, 119]": {
      "result": true,
      "time": 0.03325223922729492,
      "error": null
    },
    "assert sort_even([4, 3, -17, 7, 19, 6, 4, 13, 8, -7]) == [-17, 3, 4, 7, 4, 6, 8, 13, 19, -7]": {
      "result": true,
      "time": 0.030968427658081055,
      "error": null
    },
    "assert sort_even([4, 7, 1]) == [1, 7, 4]": {
      "result": true,
      "time": 0.027947664260864258,
      "error": null
    },
    "assert sort_even([1, 7, 3]) == [1, 7, 3]": {
      "result": true,
      "time": 0.03221750259399414,
      "error": null
    },
    "assert sort_even([1, 1, 7]) == [1, 1, 7]": {
      "result": true,
      "time": 0.035130977630615234,
      "error": null
    },
    "assert sort_even([2, 6, -10, 9, 24, 4, 6, 8, 14, -5]) == [-10, 6, 2, 9, 6, 4, 14, 8, 24, -5]": {
      "result": true,
      "time": 0.02675652503967285,
      "error": null
    },
    "assert sort_even([4, 13, -14, 2, 26, 7, 2, 10, 8, -5]) == [-14, 13, 2, 2, 4, 7, 8, 10, 26, -5]": {
      "result": true,
      "time": 0.03224802017211914,
      "error": null
    },
    "assert sort_even([1, 4, 1]) == [1, 4, 1]": {
      "result": true,
      "time": 0.02894449234008789,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}