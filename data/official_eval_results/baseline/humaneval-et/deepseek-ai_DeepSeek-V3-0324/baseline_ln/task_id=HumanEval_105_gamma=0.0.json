{
  "code": "def by_length(arr):\n    number_to_word = {\n        1: \"One\",\n        2: \"Two\",\n        3: \"Three\",\n        4: \"Four\",\n        5: \"Five\",\n        6: \"Six\",\n        7: \"Seven\",\n        8: \"Eight\",\n        9: \"Nine\"\n    }\n    filtered = [num for num in arr if 1 <= num <= 9]\n    filtered.sort()\n    filtered.reverse()\n    result = [number_to_word[num] for num in filtered if num in number_to_word]\n    return result",
  "results": {
    "assert by_length([4, 3, 1, 6, 3, 5, 7, 1]) == ['Seven', 'Six', 'Five', 'Four', 'Three', 'Three', 'One', 'One']": {
      "result": true,
      "time": 0.02902054786682129,
      "error": null
    },
    "assert by_length([5, -5, 8, 5]) == ['Eight', 'Five', 'Five']": {
      "result": true,
      "time": 0.03039693832397461,
      "error": null
    },
    "assert by_length([6, 2, 50]) == ['Six', 'Two']": {
      "result": true,
      "time": 0.029178142547607422,
      "error": null
    },
    "assert by_length([4, 1, 60]) == ['Four', 'One']": {
      "result": true,
      "time": 0.0328977108001709,
      "error": null
    },
    "assert by_length([11, 3, 13]) == ['Three']": {
      "result": true,
      "time": 0.030771493911743164,
      "error": null
    },
    "assert by_length([1, -6, 57]) == ['One']": {
      "result": true,
      "time": 0.029940366744995117,
      "error": null
    },
    "assert by_length([4, 0, 6, 6]) == ['Six', 'Six', 'Four']": {
      "result": true,
      "time": 0.03179121017456055,
      "error": null
    },
    "assert by_length([2, 2, 2, 1, 8, 6, 7, 6]) == ['Eight', 'Seven', 'Six', 'Six', 'Two', 'Two', 'Two', 'One']": {
      "result": true,
      "time": 0.03734159469604492,
      "error": null
    },
    "assert by_length([4, -4, 53]) == ['Four']": {
      "result": true,
      "time": 0.03188681602478027,
      "error": null
    },
    "assert by_length([5, 4, 6, 3]) == ['Six', 'Five', 'Four', 'Three']": {
      "result": true,
      "time": 0.03427720069885254,
      "error": null
    },
    "assert by_length([6, 3, 1, 6, 4, 9, 1, 4]) == ['Nine', 'Six', 'Six', 'Four', 'Four', 'Three', 'One', 'One']": {
      "result": true,
      "time": 0.03619980812072754,
      "error": null
    },
    "assert by_length([6, 1, 5, 4]) == ['Six', 'Five', 'Four', 'One']": {
      "result": true,
      "time": 0.03283119201660156,
      "error": null
    },
    "assert by_length([4, 4, 7, 6]) == ['Seven', 'Six', 'Four', 'Four']": {
      "result": true,
      "time": 0.03075098991394043,
      "error": null
    },
    "assert by_length([5, -3, 51]) == ['Five']": {
      "result": true,
      "time": 0.03372383117675781,
      "error": null
    },
    "assert by_length([6, 7, 7]) == ['Seven', 'Seven', 'Six']": {
      "result": true,
      "time": 0.02979874610900879,
      "error": null
    },
    "assert by_length([3, 5, 3, 7, 5, 7, 5, 3]) == ['Seven', 'Seven', 'Five', 'Five', 'Five', 'Three', 'Three', 'Three']": {
      "result": true,
      "time": 0.032442331314086914,
      "error": null
    },
    "assert by_length([4, 5, 7]) == ['Seven', 'Five', 'Four']": {
      "result": true,
      "time": 0.0321345329284668,
      "error": null
    },
    "assert by_length([]) == [], \"Error\"": {
      "result": true,
      "time": 0.030468225479125977,
      "error": null
    },
    "assert by_length([5, 3, 3, 5]) == ['Five', 'Five', 'Three', 'Three']": {
      "result": true,
      "time": 0.029865503311157227,
      "error": null
    },
    "assert by_length([3, 1, 6, 9, 8, 3, 6, 3]) == ['Nine', 'Eight', 'Six', 'Six', 'Three', 'Three', 'Three', 'One']": {
      "result": true,
      "time": 0.034125566482543945,
      "error": null
    },
    "assert by_length([4, 7, 9]) == ['Nine', 'Seven', 'Four']": {
      "result": true,
      "time": 0.03248953819274902,
      "error": null
    },
    "assert by_length([4, 3, 56]) == ['Four', 'Three']": {
      "result": true,
      "time": 0.03278636932373047,
      "error": null
    },
    "assert by_length([6, 4, 6, 1, 6, 6, 6, 4]) == ['Six', 'Six', 'Six', 'Six', 'Six', 'Four', 'Four', 'One']": {
      "result": true,
      "time": 0.02819681167602539,
      "error": null
    },
    "assert by_length([4, -3, 6, 1]) == ['Six', 'Four', 'One']": {
      "result": true,
      "time": 0.034018516540527344,
      "error": null
    },
    "assert by_length([1, 4, 6, 4, 1, 9, 1, 2]) == ['Nine', 'Six', 'Four', 'Four', 'Two', 'One', 'One', 'One']": {
      "result": true,
      "time": 0.029690980911254883,
      "error": null
    },
    "assert by_length([4, -2, 50]) == ['Four']": {
      "result": true,
      "time": 0.03000187873840332,
      "error": null
    },
    "assert by_length([7, 5, 5, 5, 3, 13, 3, 8]) == ['Eight', 'Seven', 'Five', 'Five', 'Five', 'Three', 'Three']": {
      "result": true,
      "time": 0.033003807067871094,
      "error": null
    },
    "assert by_length([3, 4, 50]) == ['Four', 'Three']": {
      "result": true,
      "time": 0.03093552589416504,
      "error": null
    },
    "assert by_length([1, 2, 60]) == ['Two', 'One']": {
      "result": true,
      "time": 0.029664278030395508,
      "error": null
    },
    "assert by_length([6, -4, 50]) == ['Six']": {
      "result": true,
      "time": 0.02991628646850586,
      "error": null
    },
    "assert by_length([6, 3, 1, 7]) == ['Seven', 'Six', 'Three', 'One']": {
      "result": true,
      "time": 0.031168699264526367,
      "error": null
    },
    "assert by_length([12, 7, 4]) == ['Seven', 'Four']": {
      "result": true,
      "time": 0.029798269271850586,
      "error": null
    },
    "assert by_length([4, 4, 8]) == ['Eight', 'Four', 'Four']": {
      "result": true,
      "time": 0.03129696846008301,
      "error": null
    },
    "assert by_length([10, 4, 12]) == ['Four']": {
      "result": true,
      "time": 0.029727697372436523,
      "error": null
    },
    "assert by_length([]) == []": {
      "result": true,
      "time": 0.030289173126220703,
      "error": null
    },
    "assert by_length([2, 3, 5, 8, 5, 7, 6, 4]) == ['Eight', 'Seven', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two']": {
      "result": true,
      "time": 0.029178619384765625,
      "error": null
    },
    "assert by_length([3, -1, 52]) == ['Three']": {
      "result": true,
      "time": 0.028606176376342773,
      "error": null
    },
    "assert by_length([5, -5, 51]) == ['Five']": {
      "result": true,
      "time": 0.026886940002441406,
      "error": null
    },
    "assert by_length([7, 5, 11]) == ['Seven', 'Five']": {
      "result": true,
      "time": 0.02795863151550293,
      "error": null
    },
    "assert by_length([2, 1, 1, 4, 5, 8, 2, 3]) == [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"], \"Error\"": {
      "result": true,
      "time": 0.028380155563354492,
      "error": null
    },
    "assert by_length([1, -1 , 55]) == ['One'], \"Error\"\n\n    # Check some edge cases that are easy to work out by hand.": {
      "result": true,
      "time": 0.02893853187561035,
      "error": null
    },
    "assert by_length([4, 3, 54]) == ['Four', 'Three']": {
      "result": true,
      "time": 0.031810760498046875,
      "error": null
    },
    "assert by_length([4, -6, 7, 6]) == ['Seven', 'Six', 'Four']": {
      "result": true,
      "time": 0.029150962829589844,
      "error": null
    },
    "assert by_length([1, -2, 2, 7]) == ['Seven', 'Two', 'One']": {
      "result": true,
      "time": 0.02899003028869629,
      "error": null
    },
    "assert by_length([1, 5, 6, 3, 9, 13, 2, 8]) == ['Nine', 'Eight', 'Six', 'Five', 'Three', 'Two', 'One']": {
      "result": true,
      "time": 0.03465127944946289,
      "error": null
    },
    "assert by_length([5, 4, 2, 2]) == ['Five', 'Four', 'Two', 'Two']": {
      "result": true,
      "time": 0.03416895866394043,
      "error": null
    },
    "assert by_length([6, -2, 50]) == ['Six']": {
      "result": true,
      "time": 0.031894683837890625,
      "error": null
    },
    "assert by_length([4, -1, 3, 3]) == ['Four', 'Three', 'Three']": {
      "result": true,
      "time": 0.02887892723083496,
      "error": null
    },
    "assert by_length([5, 5, 1, 2, 5, 6, 1, 1]) == ['Six', 'Five', 'Five', 'Five', 'Two', 'One', 'One', 'One']": {
      "result": true,
      "time": 0.03109145164489746,
      "error": null
    },
    "assert by_length([5, 2, 6, 6]) == ['Six', 'Six', 'Five', 'Two']": {
      "result": true,
      "time": 0.02882099151611328,
      "error": null
    },
    "assert by_length([3, -1, 8, 5]) == ['Eight', 'Five', 'Three']": {
      "result": true,
      "time": 0.027928829193115234,
      "error": null
    },
    "assert by_length([4, 3, 12]) == ['Four', 'Three']": {
      "result": true,
      "time": 0.03384089469909668,
      "error": null
    },
    "assert by_length([6, 5, 3, 9, 7, 12, 3, 2]) == ['Nine', 'Seven', 'Six', 'Five', 'Three', 'Three', 'Two']": {
      "result": true,
      "time": 0.028246402740478516,
      "error": null
    },
    "assert by_length([2, -6, 53]) == ['Two']": {
      "result": true,
      "time": 0.03429675102233887,
      "error": null
    },
    "assert by_length([5, 0, 4, 4]) == ['Five', 'Four', 'Four']": {
      "result": true,
      "time": 0.028912782669067383,
      "error": null
    },
    "assert by_length([5, -5, 8, 3]) == ['Eight', 'Five', 'Three']": {
      "result": true,
      "time": 0.029726266860961914,
      "error": null
    },
    "assert by_length([3, -6, 57]) == ['Three']": {
      "result": true,
      "time": 0.025645732879638672,
      "error": null
    },
    "assert by_length([6, 6, 3, 8, 3, 11, 4, 2]) == ['Eight', 'Six', 'Six', 'Four', 'Three', 'Three', 'Two']": {
      "result": true,
      "time": 0.032256364822387695,
      "error": null
    },
    "assert by_length([6, 4, 54]) == ['Six', 'Four']": {
      "result": true,
      "time": 0.02822256088256836,
      "error": null
    },
    "assert by_length([12, 7, 10]) == ['Seven']": {
      "result": true,
      "time": 0.028758764266967773,
      "error": null
    },
    "assert by_length([3, 1, 55]) == ['Three', 'One']": {
      "result": true,
      "time": 0.02991461753845215,
      "error": null
    },
    "assert by_length([6, -2, 56]) == ['Six']": {
      "result": true,
      "time": 0.03130650520324707,
      "error": null
    },
    "assert by_length([5, 1, 2, 6, 5, 5, 1, 5]) == ['Six', 'Five', 'Five', 'Five', 'Five', 'Two', 'One', 'One']": {
      "result": true,
      "time": 0.02998185157775879,
      "error": null
    },
    "assert by_length([12, 8, 11]) == ['Eight']": {
      "result": true,
      "time": 0.034851789474487305,
      "error": null
    },
    "assert by_length([4, 3, 10]) == ['Four', 'Three']": {
      "result": true,
      "time": 0.028956890106201172,
      "error": null
    },
    "assert by_length([11, 8, 12]) == ['Eight']": {
      "result": true,
      "time": 0.0280153751373291,
      "error": null
    },
    "assert by_length([5, 5, 10]) == ['Five', 'Five']": {
      "result": true,
      "time": 0.02962183952331543,
      "error": null
    },
    "assert by_length([8, 9, 7]) == ['Nine', 'Eight', 'Seven']": {
      "result": true,
      "time": 0.029153108596801758,
      "error": null
    },
    "assert by_length([8, 4, 4]) == ['Eight', 'Four', 'Four']": {
      "result": true,
      "time": 0.027490854263305664,
      "error": null
    },
    "assert by_length([1, 5, 2, 6, 6, 9, 5, 1]) == ['Nine', 'Six', 'Six', 'Five', 'Five', 'Two', 'One', 'One']": {
      "result": true,
      "time": 0.031183242797851562,
      "error": null
    },
    "assert by_length([4, 2, 51]) == ['Four', 'Two']": {
      "result": true,
      "time": 0.02949380874633789,
      "error": null
    },
    "assert by_length([9, 4, 8]) == [\"Nine\", \"Eight\", \"Four\"]": {
      "result": true,
      "time": 0.03168606758117676,
      "error": null
    },
    "assert by_length([5, 3, 2, 5]) == ['Five', 'Five', 'Three', 'Two']": {
      "result": true,
      "time": 0.026645183563232422,
      "error": null
    },
    "assert by_length([7, 5, 3, 6, 7, 12, 2, 8]) == ['Eight', 'Seven', 'Seven', 'Six', 'Five', 'Three', 'Two']": {
      "result": true,
      "time": 0.027827024459838867,
      "error": null
    },
    "assert by_length([2, 1, 50]) == ['Two', 'One']": {
      "result": true,
      "time": 0.030007362365722656,
      "error": null
    },
    "assert by_length([2, -3, 8, 1]) == ['Eight', 'Two', 'One']": {
      "result": true,
      "time": 0.029468059539794922,
      "error": null
    },
    "assert by_length([1, -1, 3, 2]) == [\"Three\", \"Two\", \"One\"]": {
      "result": true,
      "time": 0.03101515769958496,
      "error": null
    },
    "assert by_length([4, -2, 56]) == ['Four']": {
      "result": true,
      "time": 0.03243374824523926,
      "error": null
    },
    "assert by_length([6, 4, 4, 2, 7, 8, 6, 2]) == ['Eight', 'Seven', 'Six', 'Six', 'Four', 'Four', 'Two', 'Two']": {
      "result": true,
      "time": 0.03360795974731445,
      "error": null
    },
    "assert by_length([2, 1, 3, 6, 9, 12, 4, 7]) == ['Nine', 'Seven', 'Six', 'Four', 'Three', 'Two', 'One']": {
      "result": true,
      "time": 0.03077387809753418,
      "error": null
    },
    "assert by_length([4, 5, 6, 5, 4, 4, 4, 6]) == ['Six', 'Six', 'Five', 'Five', 'Four', 'Four', 'Four', 'Four']": {
      "result": true,
      "time": 0.027339696884155273,
      "error": null
    },
    "assert by_length([4, 2, 7]) == ['Seven', 'Four', 'Two']": {
      "result": true,
      "time": 0.032917022705078125,
      "error": null
    },
    "assert by_length([5, -5, 8, 4]) == ['Eight', 'Five', 'Four']": {
      "result": true,
      "time": 0.029706478118896484,
      "error": null
    },
    "assert by_length([2, 4, 1, 2]) == ['Four', 'Two', 'Two', 'One']": {
      "result": true,
      "time": 0.028401613235473633,
      "error": null
    },
    "assert by_length([3, 0, 52]) == ['Three']": {
      "result": true,
      "time": 0.0307772159576416,
      "error": null
    },
    "assert by_length([5, -5, 60]) == ['Five']": {
      "result": true,
      "time": 0.03160977363586426,
      "error": null
    },
    "assert by_length([9, 1, 3]) == ['Nine', 'Three', 'One']": {
      "result": true,
      "time": 0.028870820999145508,
      "error": null
    },
    "assert by_length([4, 5, 4, 8, 5, 12, 2, 1]) == ['Eight', 'Five', 'Five', 'Four', 'Four', 'Two', 'One']": {
      "result": true,
      "time": 0.028849124908447266,
      "error": null
    },
    "assert by_length([8, 7, 4]) == ['Eight', 'Seven', 'Four']": {
      "result": true,
      "time": 0.027411222457885742,
      "error": null
    },
    "assert by_length([2, -2, 4, 3]) == ['Four', 'Three', 'Two']": {
      "result": true,
      "time": 0.03407168388366699,
      "error": null
    },
    "assert by_length([3, -3, 5, 1]) == ['Five', 'Three', 'One']": {
      "result": true,
      "time": 0.03259134292602539,
      "error": null
    },
    "assert by_length([9, 8, 6]) == ['Nine', 'Eight', 'Six']": {
      "result": true,
      "time": 0.02938222885131836,
      "error": null
    },
    "assert by_length([2, 1, 1, 8, 5, 10, 4, 4]) == ['Eight', 'Five', 'Four', 'Four', 'Two', 'One', 'One']": {
      "result": true,
      "time": 0.030704736709594727,
      "error": null
    },
    "assert by_length([2, 0, 52]) == ['Two']": {
      "result": true,
      "time": 0.02774643898010254,
      "error": null
    },
    "assert by_length([5, 6, 2, 9, 3, 6, 4, 5]) == ['Nine', 'Six', 'Six', 'Five', 'Five', 'Four', 'Three', 'Two']": {
      "result": true,
      "time": 0.02686929702758789,
      "error": null
    },
    "assert by_length([3, 6, 5, 7, 3, 9, 1, 3]) == ['Nine', 'Seven', 'Six', 'Five', 'Three', 'Three', 'Three', 'One']": {
      "result": true,
      "time": 0.0282747745513916,
      "error": null
    },
    "assert by_length([10, 1, 6]) == ['Six', 'One']": {
      "result": true,
      "time": 0.0318448543548584,
      "error": null
    },
    "assert by_length([5, 7, 5]) == ['Seven', 'Five', 'Five']": {
      "result": true,
      "time": 0.027397871017456055,
      "error": null
    },
    "assert by_length([6, -6, 2, 4]) == ['Six', 'Four', 'Two']": {
      "result": true,
      "time": 0.029099464416503906,
      "error": null
    },
    "assert by_length([1, 4, 2, 7]) == ['Seven', 'Four', 'Two', 'One']": {
      "result": true,
      "time": 0.028391122817993164,
      "error": null
    },
    "assert by_length([10, 9, 11]) == ['Nine']": {
      "result": true,
      "time": 0.03296470642089844,
      "error": null
    },
    "assert by_length([3, 1, 3, 2, 4, 3, 1, 1]) == ['Four', 'Three', 'Three', 'Three', 'Two', 'One', 'One', 'One']": {
      "result": true,
      "time": 0.028811931610107422,
      "error": null
    },
    "assert by_length([9, 6, 13]) == ['Nine', 'Six']": {
      "result": true,
      "time": 0.02611255645751953,
      "error": null
    },
    "assert by_length([5, 9, 13]) == ['Nine', 'Five']": {
      "result": true,
      "time": 0.02734065055847168,
      "error": null
    },
    "assert by_length([1, 4, 2, 5]) == ['Five', 'Four', 'Two', 'One']": {
      "result": true,
      "time": 0.030716657638549805,
      "error": null
    },
    "assert by_length([4, 4, 2, 6, 9, 8, 1, 8]) == ['Nine', 'Eight', 'Eight', 'Six', 'Four', 'Four', 'Two', 'One']": {
      "result": true,
      "time": 0.0287783145904541,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}