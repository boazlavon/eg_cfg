{
  "code": "def count_upper(s):\n    vowels = {'A', 'E', 'I', 'O', 'U'}\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels:\n            count += 1\n    return count",
  "results": {
    "assert count_upper(\"aBEdEI\") == 2": {
      "result": true,
      "time": 0.02561211585998535,
      "error": null
    },
    "assert count_upper(\"aBIOEf\") == 2": {
      "result": true,
      "time": 0.027553319931030273,
      "error": null
    },
    "assert count_upper(\"aEcdefg\") == 0": {
      "result": true,
      "time": 0.029627084732055664,
      "error": null
    },
    "assert count_upper(\"dBOE\") == 1": {
      "result": true,
      "time": 0.027951955795288086,
      "error": null
    },
    "assert count_upper(\"IEEU\") == 2": {
      "result": true,
      "time": 0.0300600528717041,
      "error": null
    },
    "assert count_upper(\"AEEE\") == 2": {
      "result": true,
      "time": 0.0275270938873291,
      "error": null
    },
    "assert count_upper(\"aBEdEf\") == 2": {
      "result": true,
      "time": 0.030448436737060547,
      "error": null
    },
    "assert count_upper(\"\") == 0": {
      "result": true,
      "time": 0.028223037719726562,
      "error": null
    },
    "assert count_upper('abcdefg') == 0": {
      "result": true,
      "time": 0.026768922805786133,
      "error": null
    },
    "assert count_upper(\"aOcdOfg\") == 1": {
      "result": true,
      "time": 0.02672290802001953,
      "error": null
    },
    "assert count_upper(\"UBCdUf\") == 2": {
      "result": true,
      "time": 0.030189037322998047,
      "error": null
    },
    "assert count_upper('U')  == 1": {
      "result": true,
      "time": 0.028920888900756836,
      "error": null
    },
    "assert count_upper(\"ABCdEf\") == 2": {
      "result": true,
      "time": 0.02615833282470703,
      "error": null
    },
    "assert count_upper('') == 0": {
      "result": true,
      "time": 0.026427745819091797,
      "error": null
    },
    "assert count_upper(\"IbcdeAg\") == 1": {
      "result": true,
      "time": 0.028576135635375977,
      "error": null
    },
    "assert count_upper(\"UBUE\") == 2": {
      "result": true,
      "time": 0.028499126434326172,
      "error": null
    },
    "assert count_upper(\"Ebcdefg\") == 1": {
      "result": true,
      "time": 0.02938079833984375,
      "error": null
    },
    "assert count_upper(\"dUBE\") == 0": {
      "result": true,
      "time": 0.026681900024414062,
      "error": null
    },
    "assert count_upper(\"EOEE\") == 2": {
      "result": true,
      "time": 0.026998043060302734,
      "error": null
    },
    "assert count_upper(\"OBCdEA\") == 2": {
      "result": true,
      "time": 0.025278329849243164,
      "error": null
    },
    "assert count_upper(\"I\") == 1": {
      "result": true,
      "time": 0.027522802352905273,
      "error": null
    },
    "assert count_upper(\"OBCdEf\") == 2": {
      "result": true,
      "time": 0.02933025360107422,
      "error": null
    },
    "assert count_upper(\"EIEE\") == 2": {
      "result": true,
      "time": 0.028481245040893555,
      "error": null
    },
    "assert count_upper(\"dBBU\") == 0": {
      "result": true,
      "time": 0.029221296310424805,
      "error": null
    },
    "assert count_upper(\"dEOE\") == 1": {
      "result": true,
      "time": 0.029531240463256836,
      "error": null
    },
    "assert count_upper(\"O\") == 1": {
      "result": true,
      "time": 0.028989553451538086,
      "error": null
    },
    "assert count_upper(\"AEAE\") == 2": {
      "result": true,
      "time": 0.029447078704833984,
      "error": null
    },
    "assert count_upper(\"EEEE\") == 2": {
      "result": true,
      "time": 0.030887603759765625,
      "error": null
    },
    "assert count_upper(\"aBCdEf\") == 1": {
      "result": true,
      "time": 0.029411792755126953,
      "error": null
    },
    "assert count_upper(\"abUdOfg\") == 2": {
      "result": true,
      "time": 0.02931976318359375,
      "error": null
    },
    "assert count_upper('aBCdEf')  == 1": {
      "result": true,
      "time": 0.02863287925720215,
      "error": null
    },
    "assert count_upper(\"aBAUEf\") == 2": {
      "result": true,
      "time": 0.027062177658081055,
      "error": null
    },
    "assert count_upper(\"EBIdUU\") == 3": {
      "result": true,
      "time": 0.02710723876953125,
      "error": null
    },
    "assert count_upper(\"abcdeAg\") == 0": {
      "result": true,
      "time": 0.0308530330657959,
      "error": null
    },
    "assert count_upper(\"ABIE\") == 2": {
      "result": true,
      "time": 0.02750539779663086,
      "error": null
    },
    "assert count_upper(\"abOdefg\") == 1": {
      "result": true,
      "time": 0.030183792114257812,
      "error": null
    },
    "assert count_upper(\"aBUAEf\") == 2": {
      "result": true,
      "time": 0.028922557830810547,
      "error": null
    },
    "assert count_upper(\"aBIdIf\") == 2": {
      "result": true,
      "time": 0.029506921768188477,
      "error": null
    },
    "assert count_upper(\"abcdUfg\") == 1": {
      "result": true,
      "time": 0.027965068817138672,
      "error": null
    },
    "assert count_upper(\"IBBE\") == 1": {
      "result": true,
      "time": 0.026594161987304688,
      "error": null
    },
    "assert count_upper(\"dBBE\") == 0": {
      "result": true,
      "time": 0.02787303924560547,
      "error": null
    },
    "assert count_upper(\"B\") == 0": {
      "result": true,
      "time": 0.029338598251342773,
      "error": null
    },
    "assert count_upper(\"A\") == 1": {
      "result": true,
      "time": 0.03145718574523926,
      "error": null
    },
    "assert count_upper(\"IICdEf\") == 2": {
      "result": true,
      "time": 0.0307619571685791,
      "error": null
    },
    "assert count_upper('EEEE') == 2\n\n    # Check some edge cases that are easy to work out by hand.": {
      "result": true,
      "time": 0.030901432037353516,
      "error": null
    },
    "assert count_upper(\"AbcdefA\") == 2": {
      "result": true,
      "time": 0.02663445472717285,
      "error": null
    },
    "assert count_upper(\"abIdUfg\") == 2": {
      "result": true,
      "time": 0.027580738067626953,
      "error": null
    },
    "assert count_upper(\"aUCdEf\") == 1": {
      "result": true,
      "time": 0.03194618225097656,
      "error": null
    },
    "assert count_upper(\"abcdefg\") == 0": {
      "result": true,
      "time": 0.028966188430786133,
      "error": null
    },
    "assert count_upper(\"UBBE\") == 1": {
      "result": true,
      "time": 0.029574871063232422,
      "error": null
    },
    "assert count_upper(\"U\") == 1": {
      "result": true,
      "time": 0.029125690460205078,
      "error": null
    },
    "assert count_upper(\"dBIE\") == 1": {
      "result": true,
      "time": 0.02901482582092285,
      "error": null
    },
    "assert count_upper('dBBE') == 0": {
      "result": true,
      "time": 0.03202033042907715,
      "error": null
    },
    "assert count_upper(\"abcUefU\") == 1": {
      "result": true,
      "time": 0.028221845626831055,
      "error": null
    },
    "assert count_upper(\"abcdefU\") == 1": {
      "result": true,
      "time": 0.029906749725341797,
      "error": null
    },
    "assert count_upper(\"EUEE\") == 2": {
      "result": true,
      "time": 0.029754638671875,
      "error": null
    },
    "assert count_upper(\"E\") == 1": {
      "result": true,
      "time": 0.028193950653076172,
      "error": null
    },
    "assert count_upper(\"EBCdEf\") == 2": {
      "result": true,
      "time": 0.02884840965270996,
      "error": null
    },
    "assert count_upper('B')  == 0": {
      "result": true,
      "time": 0.029404401779174805,
      "error": null
    },
    "assert count_upper(\"abOUAfg\") == 2": {
      "result": true,
      "time": 0.031077861785888672,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}