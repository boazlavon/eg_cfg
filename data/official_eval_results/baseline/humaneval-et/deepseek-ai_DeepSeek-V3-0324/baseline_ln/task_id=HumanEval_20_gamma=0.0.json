{
  "code": "from typing import List, Tuple\n\ndef find_closest_elements(numbers: List[float]) -> Tuple[float, float]:\n    sorted_numbers = sorted(numbers)\n    min_diff = float('inf')\n    result = (0.0, 0.0)\n    \n    for i in range(len(sorted_numbers) - 1):\n        diff = sorted_numbers[i+1] - sorted_numbers[i]\n        if diff < min_diff:\n            min_diff = diff\n            result = (sorted_numbers[i], sorted_numbers[i+1])\n    \n    return result",
  "results": {
    "assert find_closest_elements([2.799, 5.734, 9.072, 8.167, 1.17]) == (8.167, 9.072)": {
      "result": true,
      "time": 0.19541478157043457,
      "error": null
    },
    "assert find_closest_elements([1.151, 7.331, 6.961, 1.121, 9.394]) == (1.121, 1.151)": {
      "result": true,
      "time": 0.17159748077392578,
      "error": null
    },
    "assert find_closest_elements([3.76, 5.019, 7.274, 5.739, 6.283, 3.921]) == (3.76, 3.921)": {
      "result": true,
      "time": 0.2693164348602295,
      "error": null
    },
    "assert find_closest_elements([6.325, 3.072, 5.428, 7.297, 4.089, 5.66]) == (5.428, 5.66)": {
      "result": true,
      "time": 0.22168540954589844,
      "error": null
    },
    "assert find_closest_elements([5.585, 6.614, 3.842, 7.308, 1.869, 4.385]) == (3.842, 4.385)": {
      "result": true,
      "time": 0.32723379135131836,
      "error": null
    },
    "assert find_closest_elements([5.266, 2.316, 2.106, 4.695, 7.829, 5.356]) == (5.266, 5.356)": {
      "result": true,
      "time": 0.1763315200805664,
      "error": null
    },
    "assert find_closest_elements([6.723, 1.347, 1.701, 9.386, 7.071, 4.776]) == (6.723, 7.071)": {
      "result": true,
      "time": 0.3312833309173584,
      "error": null
    },
    "assert find_closest_elements([4.149, 7.544, 8.706, 2.894, 6.973, 4.602]) == (4.149, 4.602)": {
      "result": true,
      "time": 0.3287811279296875,
      "error": null
    },
    "assert find_closest_elements([1.0, 2.0, 5.9, 4.0, 5.0]) == (5.0, 5.9)": {
      "result": true,
      "time": 0.2349989414215088,
      "error": null
    },
    "assert find_closest_elements([6.619, 4.238, 3.558, 1.332, 4.671, 3.48]) == (3.48, 3.558)": {
      "result": true,
      "time": 0.19966363906860352,
      "error": null
    },
    "assert find_closest_elements([2.511, 2.209, 5.873, 5.542, 9.527]) == (2.209, 2.511)": {
      "result": true,
      "time": 0.19837117195129395,
      "error": null
    },
    "assert find_closest_elements([2.02, 2.285, 5.994, 4.996, 10.628, 1.044]) == (2.02, 2.285)": {
      "result": true,
      "time": 0.2703423500061035,
      "error": null
    },
    "assert find_closest_elements([2.221, 4.878, 3.058, 5.94, 3.965]) == (2.221, 3.058)": {
      "result": true,
      "time": 0.1731722354888916,
      "error": null
    },
    "assert find_closest_elements([4.849, 6.916, 2.678, 8.661, 1.55]) == (1.55, 2.678)": {
      "result": true,
      "time": 0.19989848136901855,
      "error": null
    },
    "assert find_closest_elements([6.835, 2.3, 5.897, 8.478, 8.459, 3.905]) == (8.459, 8.478)": {
      "result": true,
      "time": 0.25725626945495605,
      "error": null
    },
    "assert find_closest_elements([1.476, 2.717, 8.239, 7.924, 3.257]) == (7.924, 8.239)": {
      "result": true,
      "time": 0.3044557571411133,
      "error": null
    },
    "assert find_closest_elements([1.861, 2.25, 2.69, 7.092, 10.91, 2.034]) == (1.861, 2.034)": {
      "result": true,
      "time": 0.22963666915893555,
      "error": null
    },
    "assert find_closest_elements([4.547, 4.481, 3.379, 1.256, 1.726, 1.324]) == (4.481, 4.547)": {
      "result": true,
      "time": 0.14018511772155762,
      "error": null
    },
    "assert find_closest_elements([6.674, 2.703, 6.562, 7.232, 1.66]) == (6.562, 6.674)": {
      "result": true,
      "time": 0.28652071952819824,
      "error": null
    },
    "assert find_closest_elements([1.738, 4.294, 4.231, 5.973, 7.751]) == (4.231, 4.294)": {
      "result": true,
      "time": 0.28710389137268066,
      "error": null
    },
    "assert find_closest_elements([4.543, 1.53, 2.265, 7.111, 5.605, 3.81]) == (3.81, 4.543)": {
      "result": true,
      "time": 0.2458045482635498,
      "error": null
    },
    "assert find_closest_elements([4.768, 3.585, 10.538, 2.821, 6.735]) == (2.821, 3.585)": {
      "result": true,
      "time": 0.21190261840820312,
      "error": null
    },
    "assert find_closest_elements([2.095, 1.209, 3.629, 8.322, 2.181, 4.773]) == (2.095, 2.181)": {
      "result": true,
      "time": 0.30695557594299316,
      "error": null
    },
    "assert find_closest_elements([6.545, 1.304, 2.802, 2.275, 9.414, 3.214]) == (2.802, 3.214)": {
      "result": true,
      "time": 0.1950669288635254,
      "error": null
    },
    "assert find_closest_elements([3.657, 2.81, 9.353, 1.637, 2.389]) == (2.389, 2.81)": {
      "result": true,
      "time": 0.18635940551757812,
      "error": null
    },
    "assert find_closest_elements([3.163, 7.088, 2.137, 8.142, 10.34, 4.478]) == (2.137, 3.163)": {
      "result": true,
      "time": 0.1847069263458252,
      "error": null
    },
    "assert find_closest_elements([1.126, 4.13, 1.621, 5.694, 9.119, 6.507]) == (1.126, 1.621)": {
      "result": true,
      "time": 0.24928903579711914,
      "error": null
    },
    "assert find_closest_elements([5.706, 4.372, 5.028, 6.128, 1.755, 1.426]) == (1.426, 1.755)": {
      "result": true,
      "time": 0.2699403762817383,
      "error": null
    },
    "assert find_closest_elements([5.663, 5.943, 3.838, 8.325, 3.551]) == (5.663, 5.943)": {
      "result": true,
      "time": 0.27951955795288086,
      "error": null
    },
    "assert find_closest_elements([1.167, 6.164, 1.599, 3.39, 2.371, 3.681]) == (3.39, 3.681)": {
      "result": true,
      "time": 0.31552577018737793,
      "error": null
    },
    "assert find_closest_elements([5.391, 7.059, 5.446, 8.009, 10.213, 7.823]) == (5.391, 5.446)": {
      "result": true,
      "time": 0.32980799674987793,
      "error": null
    },
    "assert find_closest_elements([2.887, 7.782, 8.023, 5.004, 6.454, 7.722]) == (7.722, 7.782)": {
      "result": true,
      "time": 0.21817231178283691,
      "error": null
    },
    "assert find_closest_elements([4.651, 4.954, 8.472, 5.048, 7.008, 1.21]) == (4.954, 5.048)": {
      "result": true,
      "time": 0.1766362190246582,
      "error": null
    },
    "assert find_closest_elements([5.491, 2.311, 4.077, 8.943, 10.549, 2.901]) == (2.311, 2.901)": {
      "result": true,
      "time": 0.2679445743560791,
      "error": null
    },
    "assert find_closest_elements([5.712, 1.274, 8.172, 4.921, 9.539, 4.876]) == (4.876, 4.921)": {
      "result": true,
      "time": 0.27175021171569824,
      "error": null
    },
    "assert find_closest_elements([2.455, 6.483, 4.497, 8.124, 9.81, 7.223]) == (6.483, 7.223)": {
      "result": true,
      "time": 0.30992794036865234,
      "error": null
    },
    "assert find_closest_elements([5.884, 3.934, 2.135, 5.072, 6.536, 5.227]) == (5.072, 5.227)": {
      "result": true,
      "time": 0.1374530792236328,
      "error": null
    },
    "assert find_closest_elements([6.26, 6.141, 7.317, 7.204, 4.595, 2.319]) == (7.204, 7.317)": {
      "result": true,
      "time": 0.19948649406433105,
      "error": null
    },
    "assert find_closest_elements([4.742, 4.371, 3.74, 7.145, 7.351, 1.976]) == (7.145, 7.351)": {
      "result": true,
      "time": 0.2109372615814209,
      "error": null
    },
    "assert find_closest_elements([3.902, 4.617, 5.353, 7.86, 4.224, 4.076]) == (4.076, 4.224)": {
      "result": true,
      "time": 0.30255746841430664,
      "error": null
    },
    "assert find_closest_elements([2.355, 5.36, 5.435, 9.968, 5.954]) == (5.36, 5.435)": {
      "result": true,
      "time": 0.3129754066467285,
      "error": null
    },
    "assert find_closest_elements([4.739, 5.317, 7.732, 9.028, 8.783]) == (8.783, 9.028)": {
      "result": true,
      "time": 0.3058037757873535,
      "error": null
    },
    "assert find_closest_elements([3.643, 6.34, 1.179, 3.094, 4.846, 7.076]) == (3.094, 3.643)": {
      "result": true,
      "time": 0.237410306930542,
      "error": null
    },
    "assert find_closest_elements([3.457, 4.679, 1.687, 7.789, 3.562]) == (3.457, 3.562)": {
      "result": true,
      "time": 0.22609472274780273,
      "error": null
    },
    "assert find_closest_elements([1.922, 7.851, 6.952, 7.923, 10.47, 2.667]) == (7.851, 7.923)": {
      "result": true,
      "time": 0.1756134033203125,
      "error": null
    },
    "assert find_closest_elements([3.404, 6.53, 2.433, 8.401, 10.403, 5.454]) == (2.433, 3.404)": {
      "result": true,
      "time": 0.19468283653259277,
      "error": null
    },
    "assert find_closest_elements([4.476, 2.311, 7.797, 6.765, 8.914]) == (6.765, 7.797)": {
      "result": true,
      "time": 0.23629236221313477,
      "error": null
    },
    "assert find_closest_elements([2.934, 1.264, 5.155, 2.683, 6.177, 7.174]) == (2.683, 2.934)": {
      "result": true,
      "time": 0.3198423385620117,
      "error": null
    },
    "assert find_closest_elements([2.04, 4.721, 1.829, 8.584, 9.484]) == (1.829, 2.04)": {
      "result": true,
      "time": 0.23650288581848145,
      "error": null
    },
    "assert find_closest_elements([5.231, 5.467, 10.012, 5.877, 3.795]) == (5.231, 5.467)": {
      "result": true,
      "time": 0.26914167404174805,
      "error": null
    },
    "assert find_closest_elements([2.413, 6.334, 1.835, 7.668, 5.353, 3.727]) == (1.835, 2.413)": {
      "result": true,
      "time": 0.2819397449493408,
      "error": null
    },
    "assert find_closest_elements([1.881, 5.861, 7.574, 6.511, 9.97, 3.808]) == (5.861, 6.511)": {
      "result": true,
      "time": 0.3219871520996094,
      "error": null
    },
    "assert find_closest_elements([1.75, 3.762, 8.084, 3.769, 7.086]) == (3.762, 3.769)": {
      "result": true,
      "time": 0.22347044944763184,
      "error": null
    },
    "assert find_closest_elements([3.035, 3.043, 6.939, 3.285, 8.417, 2.245]) == (3.035, 3.043)": {
      "result": true,
      "time": 0.2383887767791748,
      "error": null
    },
    "assert find_closest_elements([5.728, 5.369, 2.503, 1.725, 2.121, 5.613]) == (5.613, 5.728)": {
      "result": true,
      "time": 0.31921935081481934,
      "error": null
    },
    "assert find_closest_elements([5.052, 2.518, 4.847, 5.006, 4.581]) == (5.006, 5.052)": {
      "result": true,
      "time": 0.20543527603149414,
      "error": null
    },
    "assert find_closest_elements([1.886, 6.604, 8.097, 2.398, 7.53]) == (1.886, 2.398)": {
      "result": true,
      "time": 0.24770832061767578,
      "error": null
    },
    "assert find_closest_elements([4.055, 7.398, 8.972, 3.325, 10.781, 6.26]) == (3.325, 4.055)": {
      "result": true,
      "time": 0.17555594444274902,
      "error": null
    },
    "assert find_closest_elements([1.747, 1.138, 2.993, 8.012, 9.711]) == (1.138, 1.747)": {
      "result": true,
      "time": 0.19408893585205078,
      "error": null
    },
    "assert find_closest_elements([4.005, 1.483, 4.773, 9.401, 10.654]) == (4.005, 4.773)": {
      "result": true,
      "time": 0.332871675491333,
      "error": null
    },
    "assert find_closest_elements([5.162, 1.625, 2.306, 7.743, 3.918, 7.365]) == (7.365, 7.743)": {
      "result": true,
      "time": 0.27826642990112305,
      "error": null
    },
    "assert find_closest_elements([3.767, 6.465, 7.577, 9.717, 8.324]) == (7.577, 8.324)": {
      "result": true,
      "time": 0.3349263668060303,
      "error": null
    },
    "assert find_closest_elements([4.434, 3.213, 3.317, 2.077, 10.033]) == (3.213, 3.317)": {
      "result": true,
      "time": 0.285703182220459,
      "error": null
    },
    "assert find_closest_elements([5.658, 6.558, 7.895, 8.161, 9.407, 3.14]) == (7.895, 8.161)": {
      "result": true,
      "time": 0.22915887832641602,
      "error": null
    },
    "assert find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]) == (2.0, 2.2)": {
      "result": true,
      "time": 0.3238711357116699,
      "error": null
    },
    "assert find_closest_elements([1.817, 7.132, 7.831, 5.286, 5.238, 7.889]) == (5.238, 5.286)": {
      "result": true,
      "time": 0.2648303508758545,
      "error": null
    },
    "assert find_closest_elements([1.808, 3.99, 2.648, 8.19, 10.03, 3.08]) == (2.648, 3.08)": {
      "result": true,
      "time": 0.33495354652404785,
      "error": null
    },
    "assert find_closest_elements([4.578, 7.334, 3.074, 7.698, 5.754, 3.228]) == (3.074, 3.228)": {
      "result": true,
      "time": 0.225083589553833,
      "error": null
    },
    "assert find_closest_elements([1.846, 2.086, 8.878, 1.452, 5.541, 5.4]) == (5.4, 5.541)": {
      "result": true,
      "time": 0.2642173767089844,
      "error": null
    },
    "assert find_closest_elements([1.869, 7.234, 3.548, 4.517, 10.721, 2.386]) == (1.869, 2.386)": {
      "result": true,
      "time": 0.26136279106140137,
      "error": null
    },
    "assert find_closest_elements([1.917, 3.618, 5.743, 5.077, 4.788, 2.651]) == (4.788, 5.077)": {
      "result": true,
      "time": 0.34164857864379883,
      "error": null
    },
    "assert find_closest_elements([2.431, 3.098, 3.198, 1.749, 3.08, 5.905]) == (3.08, 3.098)": {
      "result": true,
      "time": 0.3517444133758545,
      "error": null
    },
    "assert find_closest_elements([2.122, 5.672, 3.248, 8.415, 7.934, 1.573]) == (7.934, 8.415)": {
      "result": true,
      "time": 0.28640246391296387,
      "error": null
    },
    "assert find_closest_elements([4.109, 4.434, 10.408, 1.231, 7.809]) == (4.109, 4.434)": {
      "result": true,
      "time": 0.2116391658782959,
      "error": null
    },
    "assert find_closest_elements([4.093, 1.763, 6.268, 6.813, 7.613]) == (6.268, 6.813)": {
      "result": true,
      "time": 0.31473731994628906,
      "error": null
    },
    "assert find_closest_elements([2.861, 5.281, 10.635, 6.34, 9.942]) == (9.942, 10.635)": {
      "result": true,
      "time": 0.31786131858825684,
      "error": null
    },
    "assert find_closest_elements([1.407, 2.722, 9.408, 6.13, 8.484]) == (8.484, 9.408)": {
      "result": true,
      "time": 0.23327136039733887,
      "error": null
    },
    "assert find_closest_elements([1.583, 1.622, 3.267, 1.369, 9.183, 1.109]) == (1.583, 1.622)": {
      "result": true,
      "time": 0.263322114944458,
      "error": null
    },
    "assert find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]) == (2.0, 2.0)": {
      "result": true,
      "time": 0.3317239284515381,
      "error": null
    },
    "assert find_closest_elements([5.581, 3.297, 3.618, 7.633, 5.968]) == (3.297, 3.618)": {
      "result": true,
      "time": 0.23937511444091797,
      "error": null
    },
    "assert find_closest_elements([6.581, 2.975, 1.545, 7.51, 1.984, 6.974]) == (6.581, 6.974)": {
      "result": true,
      "time": 0.3362996578216553,
      "error": null
    },
    "assert find_closest_elements([1.899, 5.546, 1.471, 7.277, 4.704, 2.178]) == (1.899, 2.178)": {
      "result": true,
      "time": 0.17268872261047363,
      "error": null
    },
    "assert find_closest_elements([2.184, 1.057, 6.418, 3.603, 4.392, 2.992]) == (2.992, 3.603)": {
      "result": true,
      "time": 0.1382122039794922,
      "error": null
    },
    "assert find_closest_elements([6.888, 6.146, 4.217, 7.785, 1.434, 5.675]) == (5.675, 6.146)": {
      "result": true,
      "time": 0.27137136459350586,
      "error": null
    },
    "assert find_closest_elements([2.332, 2.681, 2.23, 8.684, 9.103]) == (2.23, 2.332)": {
      "result": true,
      "time": 0.3432750701904297,
      "error": null
    },
    "assert find_closest_elements([4.026, 7.41, 7.265, 5.317, 5.086, 3.325]) == (7.265, 7.41)": {
      "result": true,
      "time": 0.3399546146392822,
      "error": null
    },
    "assert find_closest_elements([1.1, 2.2, 3.1, 4.1, 5.1]) == (2.2, 3.1)": {
      "result": true,
      "time": 0.1420755386352539,
      "error": null
    },
    "assert find_closest_elements([3.366, 3.412, 4.331, 6.475, 1.551]) == (3.366, 3.412)": {
      "result": true,
      "time": 0.2889246940612793,
      "error": null
    },
    "assert find_closest_elements([2.376, 5.979, 5.7, 1.555, 4.588]) == (5.7, 5.979)": {
      "result": true,
      "time": 0.2905399799346924,
      "error": null
    },
    "assert find_closest_elements([1.886, 7.694, 1.523, 9.933, 1.796, 7.99]) == (1.796, 1.886)": {
      "result": true,
      "time": 0.24798989295959473,
      "error": null
    },
    "assert find_closest_elements([3.741, 3.162, 3.933, 7.305, 7.172]) == (7.172, 7.305)": {
      "result": true,
      "time": 0.26607823371887207,
      "error": null
    },
    "assert find_closest_elements([6.289, 5.037, 6.63, 6.769, 7.718, 6.371]) == (6.289, 6.371)": {
      "result": true,
      "time": 0.17768406867980957,
      "error": null
    },
    "assert find_closest_elements([6.401, 5.439, 7.455, 2.289, 3.226, 1.405]) == (1.405, 2.289)": {
      "result": true,
      "time": 0.2070307731628418,
      "error": null
    },
    "assert find_closest_elements([5.359, 3.637, 6.71, 5.559, 6.655]) == (6.655, 6.71)": {
      "result": true,
      "time": 0.253711462020874,
      "error": null
    },
    "assert find_closest_elements([6.018, 3.681, 9.699, 4.695, 2.75]) == (2.75, 3.681)": {
      "result": true,
      "time": 0.20401978492736816,
      "error": null
    },
    "assert find_closest_elements([6.24, 5.278, 6.461, 4.531, 3.086, 3.952]) == (6.24, 6.461)": {
      "result": true,
      "time": 0.21865582466125488,
      "error": null
    },
    "assert find_closest_elements([2.409, 5.139, 3.874, 6.67, 1.106]) == (3.874, 5.139)": {
      "result": true,
      "time": 0.1979367733001709,
      "error": null
    },
    "assert find_closest_elements([3.851, 1.824, 8.417, 5.906, 3.636, 7.245]) == (3.636, 3.851)": {
      "result": true,
      "time": 0.3002045154571533,
      "error": null
    },
    "assert find_closest_elements([4.84, 6.872, 4.811, 6.062, 9.992, 1.229]) == (4.811, 4.84)": {
      "result": true,
      "time": 0.24497556686401367,
      "error": null
    },
    "assert find_closest_elements([2.909, 1.804, 2.091, 6.56, 1.804, 1.317]) == (1.804, 1.804)": {
      "result": true,
      "time": 0.20615744590759277,
      "error": null
    },
    "assert find_closest_elements([4.684, 1.291, 6.624, 7.021, 4.234]) == (6.624, 7.021)": {
      "result": true,
      "time": 0.2865736484527588,
      "error": null
    },
    "assert find_closest_elements([5.508, 7.684, 2.845, 8.601, 5.973]) == (5.508, 5.973)": {
      "result": true,
      "time": 0.23202037811279297,
      "error": null
    },
    "assert find_closest_elements([5.751, 7.791, 7.706, 9.224, 4.141, 3.511]) == (7.706, 7.791)": {
      "result": true,
      "time": 0.21532392501831055,
      "error": null
    },
    "assert find_closest_elements([6.04, 2.605, 5.636, 2.488, 2.464]) == (2.464, 2.488)": {
      "result": true,
      "time": 0.21986794471740723,
      "error": null
    },
    "assert find_closest_elements([1.939, 3.796, 8.864, 1.91, 4.997, 1.083]) == (1.91, 1.939)": {
      "result": true,
      "time": 0.17687129974365234,
      "error": null
    },
    "assert find_closest_elements([4.846, 5.266, 1.694, 4.9, 2.532]) == (4.846, 4.9)": {
      "result": true,
      "time": 0.2022097110748291,
      "error": null
    },
    "assert find_closest_elements([4.259, 1.581, 7.663, 8.805, 6.09]) == (7.663, 8.805)": {
      "result": true,
      "time": 0.09324860572814941,
      "error": null
    },
    "assert find_closest_elements([4.466, 5.158, 2.579, 6.165, 2.506]) == (2.506, 2.579)": {
      "result": true,
      "time": 0.0868079662322998,
      "error": null
    },
    "assert find_closest_elements([2.738, 4.255, 2.797, 5.502, 4.96, 1.763]) == (2.738, 2.797)": {
      "result": true,
      "time": 0.159132719039917,
      "error": null
    },
    "assert find_closest_elements([1.42, 5.997, 2.369, 3.775, 2.189]) == (2.189, 2.369)": {
      "result": true,
      "time": 0.21528291702270508,
      "error": null
    },
    "assert find_closest_elements([3.986, 5.241, 4.771, 9.313, 2.081, 4.192]) == (3.986, 4.192)": {
      "result": true,
      "time": 0.0895986557006836,
      "error": null
    },
    "assert find_closest_elements([6.173, 5.936, 1.726, 2.43, 6.691, 3.497]) == (5.936, 6.173)": {
      "result": true,
      "time": 0.14560365676879883,
      "error": null
    },
    "assert find_closest_elements([3.328, 3.637, 1.28, 2.154, 1.604, 2.649]) == (3.328, 3.637)": {
      "result": true,
      "time": 0.09035897254943848,
      "error": null
    },
    "assert find_closest_elements([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]) == (3.9, 4.0)": {
      "result": true,
      "time": 0.14209461212158203,
      "error": null
    },
    "assert find_closest_elements([2.651, 7.485, 7.842, 8.402, 3.653]) == (7.485, 7.842)": {
      "result": true,
      "time": 0.1442866325378418,
      "error": null
    },
    "assert find_closest_elements([2.03, 2.964, 6.733, 2.896, 6.259]) == (2.896, 2.964)": {
      "result": true,
      "time": 0.18099427223205566,
      "error": null
    },
    "assert find_closest_elements([4.419, 7.367, 1.304, 6.596, 1.457]) == (1.304, 1.457)": {
      "result": true,
      "time": 0.13867473602294922,
      "error": null
    },
    "assert find_closest_elements([6.549, 5.576, 1.734, 5.487, 10.576, 4.603]) == (5.487, 5.576)": {
      "result": true,
      "time": 0.12973713874816895,
      "error": null
    },
    "assert find_closest_elements([2.123, 7.816, 7.076, 3.267, 1.127, 6.14]) == (7.076, 7.816)": {
      "result": true,
      "time": 0.1882309913635254,
      "error": null
    },
    "assert find_closest_elements([3.188, 2.948, 1.127, 2.701, 4.923]) == (2.948, 3.188)": {
      "result": true,
      "time": 0.08910965919494629,
      "error": null
    },
    "assert find_closest_elements([5.791, 5.048, 2.941, 6.309, 4.976, 3.933]) == (4.976, 5.048)": {
      "result": true,
      "time": 0.12895679473876953,
      "error": null
    },
    "assert find_closest_elements([3.129, 5.724, 3.991, 5.781, 9.477, 2.189]) == (5.724, 5.781)": {
      "result": true,
      "time": 0.14599370956420898,
      "error": null
    },
    "assert find_closest_elements([4.826, 2.942, 3.366, 8.937, 5.509]) == (2.942, 3.366)": {
      "result": true,
      "time": 0.1404581069946289,
      "error": null
    },
    "assert find_closest_elements([5.656, 4.706, 6.049, 4.432, 10.071, 6.621]) == (4.432, 4.706)": {
      "result": true,
      "time": 0.1994037628173828,
      "error": null
    },
    "assert find_closest_elements([5.96, 6.282, 7.125, 3.733, 5.066]) == (5.96, 6.282)": {
      "result": true,
      "time": 0.21066784858703613,
      "error": null
    },
    "assert find_closest_elements([1.432, 4.03, 4.335, 4.673, 7.481, 1.211]) == (1.211, 1.432)": {
      "result": true,
      "time": 0.14354348182678223,
      "error": null
    },
    "assert find_closest_elements([5.324, 7.792, 5.351, 2.783, 1.186]) == (5.324, 5.351)": {
      "result": true,
      "time": 0.14514446258544922,
      "error": null
    },
    "assert find_closest_elements([5.682, 3.588, 6.756, 2.2, 6.169, 7.427]) == (5.682, 6.169)": {
      "result": true,
      "time": 0.23209619522094727,
      "error": null
    },
    "assert find_closest_elements([6.296, 2.382, 8.904, 7.696, 1.686, 6.854]) == (6.296, 6.854)": {
      "result": true,
      "time": 0.308870792388916,
      "error": null
    },
    "assert find_closest_elements([6.716, 6.469, 6.587, 9.729, 8.598, 6.662]) == (6.662, 6.716)": {
      "result": true,
      "time": 0.14022374153137207,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}