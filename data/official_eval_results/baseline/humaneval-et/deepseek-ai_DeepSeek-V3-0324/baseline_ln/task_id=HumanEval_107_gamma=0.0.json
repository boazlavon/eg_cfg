{
  "code": "def even_odd_palindrome(n):\n    even_count = 0\n    odd_count = 0\n    for num in range(1, n + 1):\n        if str(num) == str(num)[::-1]:  # Check if palindrome\n            if num % 2 == 0:\n                even_count += 1\n            else:\n                odd_count += 1\n    return (even_count, odd_count)",
  "results": {
    "assert even_odd_palindrome(830) == (41, 50)": {
      "result": true,
      "time": 0.03691864013671875,
      "error": null
    },
    "assert even_odd_palindrome(898) == (48, 50)": {
      "result": true,
      "time": 0.02831244468688965,
      "error": null
    },
    "assert even_odd_palindrome(151) == (8, 16)": {
      "result": true,
      "time": 0.028488874435424805,
      "error": null
    },
    "assert even_odd_palindrome(108) == (8, 11)": {
      "result": true,
      "time": 0.026620864868164062,
      "error": null
    },
    "assert even_odd_palindrome(1) == (0, 1)": {
      "result": true,
      "time": 0.027923583984375,
      "error": null
    },
    "assert even_odd_palindrome(687) == (37, 40)": {
      "result": true,
      "time": 0.030057668685913086,
      "error": null
    },
    "assert even_odd_palindrome(999) == (48, 60)": {
      "result": true,
      "time": 0.02834486961364746,
      "error": null
    },
    "assert even_odd_palindrome(452) == (23, 30)": {
      "result": true,
      "time": 0.029447078704833984,
      "error": null
    },
    "assert even_odd_palindrome(510) == (28, 31)": {
      "result": true,
      "time": 0.02836751937866211,
      "error": null
    },
    "assert even_odd_palindrome(670) == (35, 40)": {
      "result": true,
      "time": 0.028671741485595703,
      "error": null
    },
    "assert even_odd_palindrome(799) == (38, 50)": {
      "result": true,
      "time": 0.02912616729736328,
      "error": null
    },
    "assert even_odd_palindrome(890) == (47, 50)": {
      "result": true,
      "time": 0.02719879150390625,
      "error": null
    },
    "assert even_odd_palindrome(944) == (48, 54)": {
      "result": true,
      "time": 0.028139829635620117,
      "error": null
    },
    "assert even_odd_palindrome(554) == (28, 35)": {
      "result": true,
      "time": 0.02814316749572754,
      "error": null
    },
    "assert even_odd_palindrome(986) == (48, 58)": {
      "result": true,
      "time": 0.02980184555053711,
      "error": null
    },
    "assert even_odd_palindrome(956) == (48, 55)": {
      "result": true,
      "time": 0.02909088134765625,
      "error": null
    },
    "assert even_odd_palindrome(845) == (42, 50)": {
      "result": true,
      "time": 0.02903461456298828,
      "error": null
    },
    "assert even_odd_palindrome(541) == (28, 34)": {
      "result": true,
      "time": 0.02719569206237793,
      "error": null
    },
    "assert even_odd_palindrome(28) == (5, 6)": {
      "result": true,
      "time": 0.026779651641845703,
      "error": null
    },
    "assert even_odd_palindrome(848) == (43, 50)": {
      "result": true,
      "time": 0.03121662139892578,
      "error": null
    },
    "assert even_odd_palindrome(405) == (19, 30)": {
      "result": true,
      "time": 0.02842569351196289,
      "error": null
    },
    "assert even_odd_palindrome(40) == (5, 7)": {
      "result": true,
      "time": 0.02937936782836914,
      "error": null
    },
    "assert even_odd_palindrome(415) == (20, 30)": {
      "result": true,
      "time": 0.028153181076049805,
      "error": null
    },
    "assert even_odd_palindrome(12) == (4, 6)": {
      "result": true,
      "time": 0.029824495315551758,
      "error": null
    },
    "assert even_odd_palindrome(548) == (28, 35)": {
      "result": true,
      "time": 0.027245283126831055,
      "error": null
    },
    "assert even_odd_palindrome(175) == (8, 18)": {
      "result": true,
      "time": 0.02750396728515625,
      "error": null
    },
    "assert even_odd_palindrome(860) == (44, 50)": {
      "result": true,
      "time": 0.03001713752746582,
      "error": null
    },
    "assert even_odd_palindrome(123) == (8, 13)": {
      "result": true,
      "time": 0.02984619140625,
      "error": null
    },
    "assert even_odd_palindrome(854) == (43, 50)": {
      "result": true,
      "time": 0.030145645141601562,
      "error": null
    },
    "assert even_odd_palindrome(769) == (38, 47)": {
      "result": true,
      "time": 0.030051708221435547,
      "error": null
    },
    "assert even_odd_palindrome(423) == (20, 30)": {
      "result": true,
      "time": 0.028989315032958984,
      "error": null
    },
    "assert even_odd_palindrome(113) == (8, 12)": {
      "result": true,
      "time": 0.026772499084472656,
      "error": null
    },
    "assert even_odd_palindrome(688) == (37, 40)": {
      "result": true,
      "time": 0.027312755584716797,
      "error": null
    },
    "assert even_odd_palindrome(210) == (9, 20)": {
      "result": true,
      "time": 0.030196666717529297,
      "error": null
    },
    "assert even_odd_palindrome(661) == (34, 40)": {
      "result": true,
      "time": 0.030332565307617188,
      "error": null
    },
    "assert even_odd_palindrome(947) == (48, 54)": {
      "result": true,
      "time": 0.028483867645263672,
      "error": null
    },
    "assert even_odd_palindrome(133) == (8, 14)": {
      "result": true,
      "time": 0.027541637420654297,
      "error": null
    },
    "assert even_odd_palindrome(987) == (48, 58)": {
      "result": true,
      "time": 0.030783891677856445,
      "error": null
    },
    "assert even_odd_palindrome(434) == (22, 30)": {
      "result": true,
      "time": 0.0315244197845459,
      "error": null
    },
    "assert even_odd_palindrome(193) == (8, 20)": {
      "result": true,
      "time": 0.02875375747680664,
      "error": null
    },
    "assert even_odd_palindrome(613) == (29, 40)": {
      "result": true,
      "time": 0.03125333786010742,
      "error": null
    },
    "assert even_odd_palindrome(808) == (39, 50)": {
      "result": true,
      "time": 0.03218984603881836,
      "error": null
    },
    "assert even_odd_palindrome(95) == (8, 9)": {
      "result": true,
      "time": 0.031098127365112305,
      "error": null
    },
    "assert even_odd_palindrome(627) == (31, 40)": {
      "result": true,
      "time": 0.030876874923706055,
      "error": null
    },
    "assert even_odd_palindrome(154) == (8, 16)": {
      "result": true,
      "time": 0.030273914337158203,
      "error": null
    },
    "assert even_odd_palindrome(335) == (18, 24)": {
      "result": true,
      "time": 0.028151988983154297,
      "error": null
    },
    "assert even_odd_palindrome(485) == (27, 30)": {
      "result": true,
      "time": 0.028383255004882812,
      "error": null
    },
    "assert even_odd_palindrome(19) == (4, 6)": {
      "result": true,
      "time": 0.0272519588470459,
      "error": null
    },
    "assert even_odd_palindrome(550) == (28, 35)": {
      "result": true,
      "time": 0.028702974319458008,
      "error": null
    },
    "assert even_odd_palindrome(170) == (8, 17)": {
      "result": true,
      "time": 0.026747941970825195,
      "error": null
    },
    "assert even_odd_palindrome(460) == (24, 30)": {
      "result": true,
      "time": 0.026092052459716797,
      "error": null
    },
    "assert even_odd_palindrome(725) == (38, 42)": {
      "result": true,
      "time": 0.030888080596923828,
      "error": null
    },
    "assert even_odd_palindrome(824) == (40, 50)": {
      "result": true,
      "time": 0.027025938034057617,
      "error": null
    },
    "assert even_odd_palindrome(93) == (8, 9)": {
      "result": true,
      "time": 0.027190446853637695,
      "error": null
    },
    "assert even_odd_palindrome(315) == (18, 22)": {
      "result": true,
      "time": 0.031260013580322266,
      "error": null
    },
    "assert even_odd_palindrome(63) == (6, 8)": {
      "result": true,
      "time": 0.030174970626831055,
      "error": null
    },
    "assert even_odd_palindrome(539) == (28, 34)": {
      "result": true,
      "time": 0.028777599334716797,
      "error": null
    },
    "assert even_odd_palindrome(792) == (38, 49)": {
      "result": true,
      "time": 0.02978229522705078,
      "error": null
    },
    "assert even_odd_palindrome(911) == (48, 51)": {
      "result": true,
      "time": 0.02776503562927246,
      "error": null
    },
    "assert even_odd_palindrome(603) == (28, 40)": {
      "result": true,
      "time": 0.024707317352294922,
      "error": null
    },
    "assert even_odd_palindrome(385) == (18, 29)": {
      "result": true,
      "time": 0.02527618408203125,
      "error": null
    },
    "assert even_odd_palindrome(617) == (30, 40)": {
      "result": true,
      "time": 0.028112173080444336,
      "error": null
    },
    "assert even_odd_palindrome(980) == (48, 58)": {
      "result": true,
      "time": 0.028559207916259766,
      "error": null
    },
    "assert even_odd_palindrome(566) == (28, 37)": {
      "result": true,
      "time": 0.027341604232788086,
      "error": null
    },
    "assert even_odd_palindrome(633) == (31, 40)": {
      "result": true,
      "time": 0.034101009368896484,
      "error": null
    },
    "assert even_odd_palindrome(843) == (42, 50)": {
      "result": true,
      "time": 0.02818012237548828,
      "error": null
    },
    "assert even_odd_palindrome(722) == (38, 42)": {
      "result": true,
      "time": 0.02633810043334961,
      "error": null
    },
    "assert even_odd_palindrome(190) == (8, 19)": {
      "result": true,
      "time": 0.028063058853149414,
      "error": null
    },
    "assert even_odd_palindrome(25) == (5, 6)": {
      "result": true,
      "time": 0.027327299118041992,
      "error": null
    },
    "assert even_odd_palindrome(71) == (7, 8)": {
      "result": true,
      "time": 0.027312278747558594,
      "error": null
    },
    "assert even_odd_palindrome(949) == (48, 55)": {
      "result": true,
      "time": 0.02886223793029785,
      "error": null
    },
    "assert even_odd_palindrome(9) == (4, 5)": {
      "result": true,
      "time": 0.02798914909362793,
      "error": null
    },
    "assert even_odd_palindrome(971) == (48, 57)": {
      "result": true,
      "time": 0.02996230125427246,
      "error": null
    },
    "assert even_odd_palindrome(572) == (28, 37)": {
      "result": true,
      "time": 0.027190208435058594,
      "error": null
    },
    "assert even_odd_palindrome(307) == (18, 21)": {
      "result": true,
      "time": 0.03188037872314453,
      "error": null
    },
    "assert even_odd_palindrome(778) == (38, 48)": {
      "result": true,
      "time": 0.03344368934631348,
      "error": null
    },
    "assert even_odd_palindrome(130) == (8, 13)": {
      "result": true,
      "time": 0.027973651885986328,
      "error": null
    },
    "assert even_odd_palindrome(84) == (7, 9)": {
      "result": true,
      "time": 0.03606104850769043,
      "error": null
    },
    "assert even_odd_palindrome(421) == (20, 30)": {
      "result": true,
      "time": 0.029962778091430664,
      "error": null
    },
    "assert even_odd_palindrome(628) == (31, 40)": {
      "result": true,
      "time": 0.02978348731994629,
      "error": null
    },
    "assert even_odd_palindrome(319) == (18, 22)": {
      "result": true,
      "time": 0.029435396194458008,
      "error": null
    },
    "assert even_odd_palindrome(487) == (27, 30)": {
      "result": true,
      "time": 0.027019500732421875,
      "error": null
    },
    "assert even_odd_palindrome(993) == (48, 59)": {
      "result": true,
      "time": 0.029558420181274414,
      "error": null
    },
    "assert even_odd_palindrome(820) == (40, 50)": {
      "result": true,
      "time": 0.029359817504882812,
      "error": null
    },
    "assert even_odd_palindrome(951) == (48, 55)": {
      "result": true,
      "time": 0.029369831085205078,
      "error": null
    },
    "assert even_odd_palindrome(389) == (18, 29)": {
      "result": true,
      "time": 0.02846550941467285,
      "error": null
    },
    "assert even_odd_palindrome(664) == (34, 40)": {
      "result": true,
      "time": 0.02871251106262207,
      "error": null
    },
    "assert even_odd_palindrome(26) == (5, 6)": {
      "result": true,
      "time": 0.028054237365722656,
      "error": null
    },
    "assert even_odd_palindrome(570) == (28, 37)": {
      "result": true,
      "time": 0.029209613800048828,
      "error": null
    },
    "assert even_odd_palindrome(629) == (31, 40)": {
      "result": true,
      "time": 0.029085159301757812,
      "error": null
    },
    "assert even_odd_palindrome(376) == (18, 28)": {
      "result": true,
      "time": 0.027329206466674805,
      "error": null
    },
    "assert even_odd_palindrome(446) == (23, 30)": {
      "result": true,
      "time": 0.028889179229736328,
      "error": null
    },
    "assert even_odd_palindrome(369) == (18, 27)": {
      "result": true,
      "time": 0.03356146812438965,
      "error": null
    },
    "assert even_odd_palindrome(3) == (1, 2)": {
      "result": true,
      "time": 0.02689361572265625,
      "error": null
    },
    "assert even_odd_palindrome(680) == (36, 40)": {
      "result": true,
      "time": 0.028015851974487305,
      "error": null
    },
    "assert even_odd_palindrome(395) == (18, 30)": {
      "result": true,
      "time": 0.026638031005859375,
      "error": null
    },
    "assert even_odd_palindrome(506) == (28, 31)": {
      "result": true,
      "time": 0.03292655944824219,
      "error": null
    },
    "assert even_odd_palindrome(893) == (47, 50)": {
      "result": true,
      "time": 0.02967357635498047,
      "error": null
    },
    "assert even_odd_palindrome(470) == (25, 30)": {
      "result": true,
      "time": 0.029242992401123047,
      "error": null
    },
    "assert even_odd_palindrome(56) == (6, 8)": {
      "result": true,
      "time": 0.03182101249694824,
      "error": null
    },
    "assert even_odd_palindrome(291) == (17, 20)": {
      "result": true,
      "time": 0.0322566032409668,
      "error": null
    },
    "assert even_odd_palindrome(330) == (18, 23)": {
      "result": true,
      "time": 0.0333712100982666,
      "error": null
    },
    "assert even_odd_palindrome(545) == (28, 35)": {
      "result": true,
      "time": 0.03088998794555664,
      "error": null
    },
    "assert even_odd_palindrome(701) == (38, 40)": {
      "result": true,
      "time": 0.03146696090698242,
      "error": null
    },
    "assert even_odd_palindrome(328) == (18, 23)": {
      "result": true,
      "time": 0.03336453437805176,
      "error": null
    },
    "assert even_odd_palindrome(631) == (31, 40)": {
      "result": true,
      "time": 0.03183102607727051,
      "error": null
    },
    "assert even_odd_palindrome(8) == (4, 4)": {
      "result": true,
      "time": 0.030867338180541992,
      "error": null
    },
    "assert even_odd_palindrome(934) == (48, 53)": {
      "result": true,
      "time": 0.03058624267578125,
      "error": null
    },
    "assert even_odd_palindrome(585) == (28, 39)": {
      "result": true,
      "time": 0.03183174133300781,
      "error": null
    },
    "assert even_odd_palindrome(876) == (45, 50)": {
      "result": true,
      "time": 0.030408620834350586,
      "error": null
    },
    "assert even_odd_palindrome(203) == (9, 20)": {
      "result": true,
      "time": 0.0286102294921875,
      "error": null
    },
    "assert even_odd_palindrome(105) == (8, 11)": {
      "result": true,
      "time": 0.0300447940826416,
      "error": null
    },
    "assert even_odd_palindrome(960) == (48, 56)": {
      "result": true,
      "time": 0.029250621795654297,
      "error": null
    },
    "assert even_odd_palindrome(537) == (28, 34)": {
      "result": true,
      "time": 0.032018184661865234,
      "error": null
    },
    "assert even_odd_palindrome(38) == (5, 7)": {
      "result": true,
      "time": 0.03250908851623535,
      "error": null
    },
    "assert even_odd_palindrome(507) == (28, 31)": {
      "result": true,
      "time": 0.02841019630432129,
      "error": null
    },
    "assert even_odd_palindrome(448) == (23, 30)": {
      "result": true,
      "time": 0.028978824615478516,
      "error": null
    },
    "assert even_odd_palindrome(994) == (48, 59)": {
      "result": true,
      "time": 0.0305020809173584,
      "error": null
    },
    "assert even_odd_palindrome(188) == (8, 19)": {
      "result": true,
      "time": 0.027772188186645508,
      "error": null
    },
    "assert even_odd_palindrome(922) == (48, 52)": {
      "result": true,
      "time": 0.02889561653137207,
      "error": null
    },
    "assert even_odd_palindrome(672) == (35, 40)": {
      "result": true,
      "time": 0.031148195266723633,
      "error": null
    },
    "assert even_odd_palindrome(403) == (18, 30)": {
      "result": true,
      "time": 0.027078866958618164,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}