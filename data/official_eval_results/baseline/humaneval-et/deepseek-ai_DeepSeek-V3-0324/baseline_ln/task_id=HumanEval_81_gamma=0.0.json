{
  "code": "def numerical_letter_grade(grades):\n    grade_mapping = [\n        (4.0, 'A+'),\n        (3.7, 'A'),\n        (3.3, 'A-'),\n        (3.0, 'B+'),\n        (2.7, 'B'),\n        (2.3, 'B-'),\n        (2.0, 'C+'),\n        (1.7, 'C'),\n        (1.3, 'C-'),\n        (1.0, 'D+'),\n        (0.7, 'D'),\n        (0.0, 'D-'),\n    ]\n    letter_grades = []\n    for gpa in grades:\n        if gpa == 0.0:\n            letter_grades.append('E')\n            continue\n        for threshold, grade in grade_mapping:\n            if gpa >= threshold:\n                letter_grades.append(grade)\n                break\n    return letter_grades",
  "results": {
    "assert numerical_letter_grade([3.367]) == ['A-']": {
      "result": true,
      "time": 0.0276186466217041,
      "error": null
    },
    "assert numerical_letter_grade([3.709]) == ['A']": {
      "result": true,
      "time": 0.028212785720825195,
      "error": null
    },
    "assert numerical_letter_grade([1.501]) == ['C-']": {
      "result": true,
      "time": 0.029589176177978516,
      "error": null
    },
    "assert numerical_letter_grade([6.042, 3, 5.935, 5, 5.423]) == ['A', 'B', 'A', 'A', 'A']": {
      "result": false,
      "time": 0.03205442428588867,
      "error": null
    },
    "assert numerical_letter_grade([1.511]) == ['C-']": {
      "result": true,
      "time": 0.032778024673461914,
      "error": null
    },
    "assert numerical_letter_grade([6, 4.502, 2.77, 6.757, 4.66]) == ['A', 'A', 'B', 'A', 'A']": {
      "result": false,
      "time": 0.029421567916870117,
      "error": null
    },
    "assert numerical_letter_grade([5.309, 3, 3.031, 4, 3.721]) == ['A', 'B', 'B+', 'A+', 'A']": {
      "result": false,
      "time": 0.03192138671875,
      "error": null
    },
    "assert numerical_letter_grade([1, 1.067, 5.544, 2.104, 6.994]) == ['D', 'D+', 'A', 'C+', 'A']": {
      "result": false,
      "time": 0.028155803680419922,
      "error": null
    },
    "assert numerical_letter_grade([3, 3.93, 1.74, 2.791, 2.576]) == ['B', 'A', 'C', 'B', 'B-']": {
      "result": false,
      "time": 0.028617382049560547,
      "error": null
    },
    "assert numerical_letter_grade([4.799]) == ['A']": {
      "result": false,
      "time": 0.03150606155395508,
      "error": null
    },
    "assert numerical_letter_grade([4.104]) == ['A']": {
      "result": false,
      "time": 0.028200626373291016,
      "error": null
    },
    "assert numerical_letter_grade([6, 2.642, 5.179, 5.542, 7.925]) == ['A', 'B-', 'A', 'A', 'A']": {
      "result": false,
      "time": 0.029400348663330078,
      "error": null
    },
    "assert numerical_letter_grade([7.75, 2, 6.21, 4, 7.481]) == ['A', 'C', 'A', 'A+', 'A']": {
      "result": false,
      "time": 0.03159737586975098,
      "error": null
    },
    "assert numerical_letter_grade([3, 1.608, 4.584, 1.801, 5.528]) == ['B', 'C-', 'A', 'C', 'A']": {
      "result": false,
      "time": 0.03431200981140137,
      "error": null
    },
    "assert numerical_letter_grade([2.259]) == ['C+']": {
      "result": true,
      "time": 0.025835275650024414,
      "error": null
    },
    "assert numerical_letter_grade([4, 2.626, 2.824, 7.424, 5.83]) == ['A+', 'B-', 'B', 'A', 'A']": {
      "result": false,
      "time": 0.029168367385864258,
      "error": null
    },
    "assert numerical_letter_grade([0, 0.7]) == ['E', 'D-']\n\n    # Check some edge cases that are easy to work out by hand.": {
      "result": false,
      "time": 0.028959035873413086,
      "error": null
    },
    "assert numerical_letter_grade([4.84, 4, 4.974, 6, 5.319]) == ['A', 'A+', 'A', 'A', 'A']": {
      "result": false,
      "time": 0.031831979751586914,
      "error": null
    },
    "assert numerical_letter_grade([2.033]) == ['C+']": {
      "result": true,
      "time": 0.035158634185791016,
      "error": null
    },
    "assert numerical_letter_grade([2.516]) == ['B-']": {
      "result": true,
      "time": 0.02889394760131836,
      "error": null
    },
    "assert numerical_letter_grade([9.54, 5, 6.671, 1, 5.784]) == ['A', 'A', 'A', 'D', 'A']": {
      "result": false,
      "time": 0.027298450469970703,
      "error": null
    },
    "assert numerical_letter_grade([1, 5.293, 4.749, 7.907, 5.656]) == ['D', 'A', 'A', 'A', 'A']": {
      "result": false,
      "time": 0.02865123748779297,
      "error": null
    },
    "assert numerical_letter_grade([6.463, 2, 3.954, 5, 7.145]) == ['A', 'C', 'A', 'A', 'A']": {
      "result": false,
      "time": 0.029677867889404297,
      "error": null
    },
    "assert numerical_letter_grade([3.826]) == ['A']": {
      "result": true,
      "time": 0.031755924224853516,
      "error": null
    },
    "assert numerical_letter_grade([3, 3.758, 2.783, 2.733, 7.605]) == ['B', 'A', 'B', 'B', 'A']": {
      "result": false,
      "time": 0.02887749671936035,
      "error": null
    },
    "assert numerical_letter_grade([2.597]) == ['B-']": {
      "result": true,
      "time": 0.030282020568847656,
      "error": null
    },
    "assert numerical_letter_grade([4, 1.435, 5.824, 1.539, 7.492]) == ['A+', 'C-', 'A', 'C-', 'A']": {
      "result": false,
      "time": 0.02977752685546875,
      "error": null
    },
    "assert numerical_letter_grade([6.423]) == ['A']": {
      "result": false,
      "time": 0.025708436965942383,
      "error": null
    },
    "assert numerical_letter_grade([1.143]) == ['D+']": {
      "result": true,
      "time": 0.028400897979736328,
      "error": null
    },
    "assert numerical_letter_grade([1.891]) == ['C']": {
      "result": true,
      "time": 0.026215791702270508,
      "error": null
    },
    "assert numerical_letter_grade([5.065, 4, 5.911, 2, 4.43]) == ['A', 'A+', 'A', 'C', 'A']": {
      "result": false,
      "time": 0.027486324310302734,
      "error": null
    },
    "assert numerical_letter_grade([4.477, 7, 6.699, 6, 7.022]) == ['A', 'A', 'A', 'A', 'A']": {
      "result": false,
      "time": 0.028944969177246094,
      "error": null
    },
    "assert numerical_letter_grade([5, 2.658, 2.151, 6.268, 5.527]) == ['A', 'B-', 'C+', 'A', 'A']": {
      "result": false,
      "time": 0.028391361236572266,
      "error": null
    },
    "assert numerical_letter_grade([3, 4.558, 2.072, 3.712, 5.809]) == ['B', 'A', 'C+', 'A', 'A']": {
      "result": false,
      "time": 0.025643110275268555,
      "error": null
    },
    "assert numerical_letter_grade([3, 4.425, 6.207, 4.631, 3.821]) == ['B', 'A', 'A', 'A', 'A']": {
      "result": false,
      "time": 0.03035116195678711,
      "error": null
    },
    "assert numerical_letter_grade([1.878]) == ['C']": {
      "result": true,
      "time": 0.030972003936767578,
      "error": null
    },
    "assert numerical_letter_grade([3.81]) == ['A']": {
      "result": true,
      "time": 0.030997276306152344,
      "error": null
    },
    "assert numerical_letter_grade([5.976, 4, 1.433, 7, 3.077]) == ['A', 'A+', 'C-', 'A', 'B+']": {
      "result": false,
      "time": 0.02913808822631836,
      "error": null
    },
    "assert numerical_letter_grade([2.226]) == ['C+']": {
      "result": true,
      "time": 0.026488065719604492,
      "error": null
    },
    "assert numerical_letter_grade([5.364]) == ['A']": {
      "result": false,
      "time": 0.032363176345825195,
      "error": null
    },
    "assert numerical_letter_grade([4.946]) == ['A']": {
      "result": false,
      "time": 0.024829626083374023,
      "error": null
    },
    "assert numerical_letter_grade([4, 3.251, 2.546, 1.98, 3.082]) == ['A+', 'B+', 'B-', 'C', 'B+']": {
      "result": true,
      "time": 0.02933192253112793,
      "error": null
    },
    "assert numerical_letter_grade([3.189]) == ['B+']": {
      "result": true,
      "time": 0.0287017822265625,
      "error": null
    },
    "assert numerical_letter_grade([6.618]) == ['A']": {
      "result": false,
      "time": 0.027176856994628906,
      "error": null
    },
    "assert numerical_letter_grade([4.835]) == ['A']": {
      "result": false,
      "time": 0.028753995895385742,
      "error": null
    },
    "assert numerical_letter_grade([1, 0.3, 1.5, 2.8, 3.3]) == ['D', 'D-', 'C-', 'B', 'B+']": {
      "result": false,
      "time": 0.029880285263061523,
      "error": null
    },
    "assert numerical_letter_grade([5.356]) == ['A']": {
      "result": false,
      "time": 0.03014969825744629,
      "error": null
    },
    "assert numerical_letter_grade([3.612]) == ['A-']": {
      "result": true,
      "time": 0.02912759780883789,
      "error": null
    },
    "assert numerical_letter_grade([2.601]) == ['B-']": {
      "result": true,
      "time": 0.030121326446533203,
      "error": null
    },
    "assert numerical_letter_grade([1.978]) == ['C']": {
      "result": true,
      "time": 0.027202844619750977,
      "error": null
    },
    "assert numerical_letter_grade([5, 3.231, 4.961, 5.91, 4.348]) == ['A', 'B+', 'A', 'A', 'A']": {
      "result": false,
      "time": 0.028679847717285156,
      "error": null
    },
    "assert numerical_letter_grade([0.5]) == ['D-']": {
      "result": true,
      "time": 0.02966165542602539,
      "error": null
    },
    "assert numerical_letter_grade([2.412]) == ['B-']": {
      "result": true,
      "time": 0.02682638168334961,
      "error": null
    },
    "assert numerical_letter_grade([1.699]) == ['C-']": {
      "result": true,
      "time": 0.02759575843811035,
      "error": null
    },
    "assert numerical_letter_grade([9.553, 3, 1.754, 7, 7.712]) == ['A', 'B', 'C', 'A', 'A']": {
      "result": false,
      "time": 0.029206275939941406,
      "error": null
    },
    "assert numerical_letter_grade([5.909, 4, 3.917, 4, 2.236]) == ['A', 'A+', 'A', 'A+', 'C+']": {
      "result": false,
      "time": 0.028315305709838867,
      "error": null
    },
    "assert numerical_letter_grade([5, 4.675, 6.301, 3.928, 5.804]) == ['A', 'A', 'A', 'A', 'A']": {
      "result": false,
      "time": 0.030924320220947266,
      "error": null
    },
    "assert numerical_letter_grade([4.845]) == ['A']": {
      "result": false,
      "time": 0.028719663619995117,
      "error": null
    },
    "assert numerical_letter_grade([2.091]) == ['C+']": {
      "result": true,
      "time": 0.029419660568237305,
      "error": null
    },
    "assert numerical_letter_grade([4.822]) == ['A']": {
      "result": false,
      "time": 0.028456687927246094,
      "error": null
    },
    "assert numerical_letter_grade([1, 1.556, 6.189, 3.588, 1.625]) == ['D', 'C-', 'A', 'A-', 'C-']": {
      "result": false,
      "time": 0.02904343605041504,
      "error": null
    },
    "assert numerical_letter_grade([6.134, 3, 6.155, 3, 2.084]) == ['A', 'B', 'A', 'B', 'C+']": {
      "result": false,
      "time": 0.027610301971435547,
      "error": null
    },
    "assert numerical_letter_grade([5, 3.839, 3.698, 4.34, 1.955]) == ['A', 'A', 'A-', 'A', 'C']": {
      "result": false,
      "time": 0.027118206024169922,
      "error": null
    },
    "assert numerical_letter_grade([4.813]) == ['A']": {
      "result": false,
      "time": 0.03048396110534668,
      "error": null
    },
    "assert numerical_letter_grade([1.266, 7, 4.913, 2, 1.115]) == ['D+', 'A', 'A', 'C', 'D+']": {
      "result": false,
      "time": 0.03398942947387695,
      "error": null
    },
    "assert numerical_letter_grade([4.381]) == ['A']": {
      "result": false,
      "time": 0.029521942138671875,
      "error": null
    },
    "assert numerical_letter_grade([2.985]) == ['B']": {
      "result": true,
      "time": 0.031397104263305664,
      "error": null
    },
    "assert numerical_letter_grade([4.314]) == ['A']": {
      "result": false,
      "time": 0.03234410285949707,
      "error": null
    },
    "assert numerical_letter_grade([9.317, 8, 3.7, 6, 2.483]) == ['A', 'A', 'A-', 'A', 'B-']": {
      "result": false,
      "time": 0.027387142181396484,
      "error": null
    },
    "assert numerical_letter_grade([2.169]) == ['C+']": {
      "result": true,
      "time": 0.027899503707885742,
      "error": null
    },
    "assert numerical_letter_grade([3.925]) == ['A']": {
      "result": true,
      "time": 0.026797056198120117,
      "error": null
    },
    "assert numerical_letter_grade([1.275]) == ['D+']": {
      "result": true,
      "time": 0.030159473419189453,
      "error": null
    },
    "assert numerical_letter_grade([1.076]) == ['D+']": {
      "result": true,
      "time": 0.032445669174194336,
      "error": null
    },
    "assert numerical_letter_grade([1.906]) == ['C']": {
      "result": true,
      "time": 0.03098750114440918,
      "error": null
    },
    "assert numerical_letter_grade([6, 5.144, 4.622, 7.362, 8.196]) == ['A', 'A', 'A', 'A', 'A']": {
      "result": false,
      "time": 0.03172421455383301,
      "error": null
    },
    "assert numerical_letter_grade([5.778]) == ['A']": {
      "result": false,
      "time": 0.02806997299194336,
      "error": null
    },
    "assert numerical_letter_grade([5.012]) == ['A']": {
      "result": false,
      "time": 0.02864813804626465,
      "error": null
    },
    "assert numerical_letter_grade([0.0]) == ['E']": {
      "result": true,
      "time": 0.0275576114654541,
      "error": null
    },
    "assert numerical_letter_grade([4.873, 3, 2.438, 6, 5.365]) == ['A', 'B', 'B-', 'A', 'A']": {
      "result": false,
      "time": 0.026905536651611328,
      "error": null
    },
    "assert numerical_letter_grade([1.169]) == ['D+']": {
      "result": true,
      "time": 0.02914142608642578,
      "error": null
    },
    "assert numerical_letter_grade([4.454]) == ['A']": {
      "result": false,
      "time": 0.03000497817993164,
      "error": null
    },
    "assert numerical_letter_grade([1, 1.181, 4.176, 7.002, 5.356]) == ['D', 'D+', 'A', 'A', 'A']": {
      "result": false,
      "time": 0.028751611709594727,
      "error": null
    },
    "assert numerical_letter_grade([1.412]) == ['C-']": {
      "result": true,
      "time": 0.03514719009399414,
      "error": null
    },
    "assert numerical_letter_grade([3.054]) == ['B+']": {
      "result": true,
      "time": 0.034124135971069336,
      "error": null
    },
    "assert numerical_letter_grade([5.401]) == ['A']": {
      "result": false,
      "time": 0.029729366302490234,
      "error": null
    },
    "assert numerical_letter_grade([5.559]) == ['A']": {
      "result": false,
      "time": 0.029275894165039062,
      "error": null
    },
    "assert numerical_letter_grade([2.454, 8, 1.163, 2, 3.831]) == ['B-', 'A', 'D+', 'C', 'A']": {
      "result": false,
      "time": 0.029111623764038086,
      "error": null
    },
    "assert numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]) == ['A+', 'B', 'C-', 'C', 'A-']": {
      "result": false,
      "time": 0.03240609169006348,
      "error": null
    },
    "assert numerical_letter_grade([5.288]) == ['A']": {
      "result": false,
      "time": 0.028486251831054688,
      "error": null
    },
    "assert numerical_letter_grade([3.516]) == ['A-']": {
      "result": true,
      "time": 0.028049945831298828,
      "error": null
    },
    "assert numerical_letter_grade([3.111]) == ['B+']": {
      "result": true,
      "time": 0.026889562606811523,
      "error": null
    },
    "assert numerical_letter_grade([3.411]) == ['A-']": {
      "result": true,
      "time": 0.0313868522644043,
      "error": null
    },
    "assert numerical_letter_grade([1.415]) == ['C-']": {
      "result": true,
      "time": 0.02939152717590332,
      "error": null
    },
    "assert numerical_letter_grade([4.682]) == ['A']": {
      "result": false,
      "time": 0.03201413154602051,
      "error": null
    },
    "assert numerical_letter_grade([4.152, 7, 2.102, 5, 8.879]) == ['A', 'A', 'C+', 'A', 'A']": {
      "result": false,
      "time": 0.030900239944458008,
      "error": null
    },
    "assert numerical_letter_grade([6, 2.172, 3.849, 1.272, 6.298]) == ['A', 'C+', 'A', 'D+', 'A']": {
      "result": false,
      "time": 0.0325627326965332,
      "error": null
    },
    "assert numerical_letter_grade([4.697]) == ['A']": {
      "result": false,
      "time": 0.03448224067687988,
      "error": null
    },
    "assert numerical_letter_grade([4.86]) == ['A']": {
      "result": false,
      "time": 0.028094053268432617,
      "error": null
    },
    "assert numerical_letter_grade([1.2]) == ['D+']": {
      "result": true,
      "time": 0.029267072677612305,
      "error": null
    },
    "assert numerical_letter_grade([6.363]) == ['A']": {
      "result": false,
      "time": 0.0256502628326416,
      "error": null
    },
    "assert numerical_letter_grade([5.886]) == ['A']": {
      "result": false,
      "time": 0.03156256675720215,
      "error": null
    },
    "assert numerical_letter_grade([4.202]) == ['A']": {
      "result": false,
      "time": 0.030984878540039062,
      "error": null
    },
    "assert numerical_letter_grade([8.911, 1, 5.562, 6, 1.001]) == ['A', 'D', 'A', 'A', 'D+']": {
      "result": false,
      "time": 0.03053903579711914,
      "error": null
    },
    "assert numerical_letter_grade([5.442]) == ['A']": {
      "result": false,
      "time": 0.029159069061279297,
      "error": null
    },
    "assert numerical_letter_grade([1.32, 8, 4.236, 1, 5.296]) == ['C-', 'A', 'A', 'D', 'A']": {
      "result": false,
      "time": 0.031720876693725586,
      "error": null
    },
    "assert numerical_letter_grade([1.058, 4, 5.349, 2, 4.304]) == ['D+', 'A+', 'A', 'C', 'A']": {
      "result": false,
      "time": 0.03258037567138672,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3584905660377358,
  "general_error": "",
  "has_testcase_error": false
}