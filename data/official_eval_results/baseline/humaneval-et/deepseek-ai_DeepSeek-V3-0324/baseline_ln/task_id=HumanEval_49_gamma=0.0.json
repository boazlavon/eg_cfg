{
  "code": "def modp(n: int, p: int) -> int:\n    return pow(2, n, p)",
  "results": {
    "assert modp(104, 97) == 62": {
      "result": true,
      "time": 0.025450468063354492,
      "error": null
    },
    "assert modp(97, 102) == 2": {
      "result": true,
      "time": 0.02892780303955078,
      "error": null
    },
    "assert modp(28, 9) == 7": {
      "result": true,
      "time": 0.028636932373046875,
      "error": null
    },
    "assert modp(4, 8) == 0": {
      "result": true,
      "time": 0.0302734375,
      "error": null
    },
    "assert modp(3, 11) == 8": {
      "result": true,
      "time": 0.02598738670349121,
      "error": null
    },
    "assert modp(1, 106) == 2": {
      "result": true,
      "time": 0.026935577392578125,
      "error": null
    },
    "assert modp(4, 12) == 4": {
      "result": true,
      "time": 0.025407075881958008,
      "error": null
    },
    "assert modp(102, 104) == 64": {
      "result": true,
      "time": 0.02514362335205078,
      "error": null
    },
    "assert modp(6, 9) == 1": {
      "result": true,
      "time": 0.027434349060058594,
      "error": null
    },
    "assert modp(1, 103) == 2": {
      "result": true,
      "time": 0.02498769760131836,
      "error": null
    },
    "assert modp(26, 9) == 4": {
      "result": true,
      "time": 0.026238441467285156,
      "error": null
    },
    "assert modp(1101, 101) == 2": {
      "result": true,
      "time": 0.026146411895751953,
      "error": null
    },
    "assert modp(34, 8) == 0": {
      "result": true,
      "time": 0.030927181243896484,
      "error": null
    },
    "assert modp(35, 8) == 0": {
      "result": true,
      "time": 0.0258481502532959,
      "error": null
    },
    "assert modp(1376, 99) == 31": {
      "result": true,
      "time": 0.029044151306152344,
      "error": null
    },
    "assert modp(25, 3) == 2": {
      "result": true,
      "time": 0.02732229232788086,
      "error": null
    },
    "assert modp(7, 7) == 2": {
      "result": true,
      "time": 0.02893996238708496,
      "error": null
    },
    "assert modp(100, 101) == 1": {
      "result": true,
      "time": 0.02608799934387207,
      "error": null
    },
    "assert modp(2, 100) == 4": {
      "result": true,
      "time": 0.027237653732299805,
      "error": null
    },
    "assert modp(102, 105) == 64": {
      "result": true,
      "time": 0.025541067123413086,
      "error": null
    },
    "assert modp(1, 9) == 2": {
      "result": true,
      "time": 0.026645898818969727,
      "error": null
    },
    "assert modp(33, 7) == 1": {
      "result": true,
      "time": 0.024116039276123047,
      "error": null
    },
    "assert modp(3, 101) == 8": {
      "result": true,
      "time": 0.02692699432373047,
      "error": null
    },
    "assert modp(892, 106) == 44": {
      "result": true,
      "time": 0.02844715118408203,
      "error": null
    },
    "assert modp(4, 14) == 2": {
      "result": true,
      "time": 0.027244091033935547,
      "error": null
    },
    "assert modp(31, 6) == 2": {
      "result": true,
      "time": 0.025915145874023438,
      "error": null
    },
    "assert modp(1950, 97) == 33": {
      "result": true,
      "time": 0.026942968368530273,
      "error": null
    },
    "assert modp(6, 7) == 1": {
      "result": true,
      "time": 0.02896714210510254,
      "error": null
    },
    "assert modp(101, 99) == 68": {
      "result": true,
      "time": 0.031661033630371094,
      "error": null
    },
    "assert modp(31, 3) == 2": {
      "result": true,
      "time": 0.027110576629638672,
      "error": null
    },
    "assert modp(1257, 99) == 62": {
      "result": true,
      "time": 0.02810811996459961,
      "error": null
    },
    "assert modp(6, 3) == 1": {
      "result": true,
      "time": 0.028563499450683594,
      "error": null
    },
    "assert modp(32, 7) == 4": {
      "result": true,
      "time": 0.027787446975708008,
      "error": null
    },
    "assert modp(8, 6) == 4": {
      "result": true,
      "time": 0.026338815689086914,
      "error": null
    },
    "assert modp(1, 7) == 2": {
      "result": true,
      "time": 0.02887415885925293,
      "error": null
    },
    "assert modp(3, 104) == 8": {
      "result": true,
      "time": 0.027559280395507812,
      "error": null
    },
    "assert modp(96, 99) == 64": {
      "result": true,
      "time": 0.02566218376159668,
      "error": null
    },
    "assert modp(497, 96) == 32": {
      "result": true,
      "time": 0.026640653610229492,
      "error": null
    },
    "assert modp(33, 8) == 0": {
      "result": true,
      "time": 0.0288846492767334,
      "error": null
    },
    "assert modp(30, 10) == 4": {
      "result": true,
      "time": 0.02720355987548828,
      "error": null
    },
    "assert modp(2, 9) == 4": {
      "result": true,
      "time": 0.025770187377929688,
      "error": null
    },
    "assert modp(36, 3) == 1": {
      "result": true,
      "time": 0.02722001075744629,
      "error": null
    },
    "assert modp(1357, 101) == 74": {
      "result": true,
      "time": 0.02666330337524414,
      "error": null
    },
    "assert modp(1670, 104) == 56": {
      "result": true,
      "time": 0.026439428329467773,
      "error": null
    },
    "assert modp(125, 96) == 32": {
      "result": true,
      "time": 0.026070833206176758,
      "error": null
    },
    "assert modp(6, 1) == 0": {
      "result": true,
      "time": 0.026215791702270508,
      "error": null
    },
    "assert modp(35, 2) == 0": {
      "result": true,
      "time": 0.027095317840576172,
      "error": null
    },
    "assert modp(32, 9) == 4": {
      "result": true,
      "time": 0.06039142608642578,
      "error": null
    },
    "assert modp(1625, 103) == 33": {
      "result": true,
      "time": 0.03334355354309082,
      "error": null
    },
    "assert modp(7, 2) == 0": {
      "result": true,
      "time": 0.024053573608398438,
      "error": null
    },
    "assert modp(102, 100) == 4": {
      "result": true,
      "time": 0.028695344924926758,
      "error": null
    },
    "assert modp(8, 13) == 9": {
      "result": true,
      "time": 0.02489495277404785,
      "error": null
    },
    "assert modp(27, 7) == 1": {
      "result": true,
      "time": 0.02788066864013672,
      "error": null
    },
    "assert modp(280, 98) == 30": {
      "result": true,
      "time": 0.026799678802490234,
      "error": null
    },
    "assert modp(597, 102) == 32": {
      "result": true,
      "time": 0.026647567749023438,
      "error": null
    },
    "assert modp(2, 8) == 4": {
      "result": true,
      "time": 0.025928258895874023,
      "error": null
    },
    "assert modp(1, 98) == 2": {
      "result": true,
      "time": 0.028432607650756836,
      "error": null
    },
    "assert modp(104, 106) == 54": {
      "result": true,
      "time": 0.02486109733581543,
      "error": null
    },
    "assert modp(33, 10) == 2": {
      "result": true,
      "time": 0.027144908905029297,
      "error": null
    },
    "assert modp(2, 101) == 4": {
      "result": true,
      "time": 0.0290219783782959,
      "error": null
    },
    "assert modp(1000, 105) == 16": {
      "result": true,
      "time": 0.027897357940673828,
      "error": null
    },
    "assert modp(2, 96) == 4": {
      "result": true,
      "time": 0.026926517486572266,
      "error": null
    },
    "assert modp(29, 5) == 2": {
      "result": true,
      "time": 0.02692699432373047,
      "error": null
    },
    "assert modp(28, 6) == 4": {
      "result": true,
      "time": 0.025681257247924805,
      "error": null
    },
    "assert modp(1, 105) == 2": {
      "result": true,
      "time": 0.027057647705078125,
      "error": null
    },
    "assert modp(95, 106) == 50": {
      "result": true,
      "time": 0.0255277156829834,
      "error": null
    },
    "assert modp(97, 99) == 29": {
      "result": true,
      "time": 0.027230024337768555,
      "error": null
    },
    "assert modp(7, 11) == 7": {
      "result": true,
      "time": 0.027152538299560547,
      "error": null
    },
    "assert modp(3, 13) == 8": {
      "result": true,
      "time": 0.02657175064086914,
      "error": null
    },
    "assert modp(3, 14) == 8": {
      "result": true,
      "time": 0.02512669563293457,
      "error": null
    },
    "assert modp(95, 101) == 60": {
      "result": true,
      "time": 0.026761770248413086,
      "error": null
    },
    "assert modp(4, 99) == 16": {
      "result": true,
      "time": 0.029877185821533203,
      "error": null
    },
    "assert modp(4, 7) == 2": {
      "result": true,
      "time": 0.02648472785949707,
      "error": null
    },
    "assert modp(31, 1) == 0": {
      "result": true,
      "time": 0.02579498291015625,
      "error": null
    },
    "assert modp(5, 16) == 0": {
      "result": true,
      "time": 0.02642226219177246,
      "error": null
    },
    "assert modp(5, 102) == 32": {
      "result": true,
      "time": 0.026427030563354492,
      "error": null
    },
    "assert modp(26, 5) == 4": {
      "result": true,
      "time": 0.03018784523010254,
      "error": null
    },
    "assert modp(4, 16) == 0": {
      "result": true,
      "time": 0.026439905166625977,
      "error": null
    },
    "assert modp(0, 101) == 1": {
      "result": true,
      "time": 0.026997804641723633,
      "error": null
    },
    "assert modp(104, 104) == 48": {
      "result": true,
      "time": 0.027142047882080078,
      "error": null
    },
    "assert modp(96, 100) == 36": {
      "result": true,
      "time": 0.025089740753173828,
      "error": null
    },
    "assert modp(32, 6) == 4": {
      "result": true,
      "time": 0.026980876922607422,
      "error": null
    },
    "assert modp(26, 8) == 0": {
      "result": true,
      "time": 0.030053138732910156,
      "error": null
    },
    "assert modp(103, 97) == 31": {
      "result": true,
      "time": 0.029435157775878906,
      "error": null
    },
    "assert modp(1, 4) == 2": {
      "result": true,
      "time": 0.027683496475219727,
      "error": null
    },
    "assert modp(2, 97) == 4": {
      "result": true,
      "time": 0.02770233154296875,
      "error": null
    },
    "assert modp(25, 8) == 0": {
      "result": true,
      "time": 0.02709174156188965,
      "error": null
    },
    "assert modp(5, 12) == 8": {
      "result": true,
      "time": 0.02612781524658203,
      "error": null
    },
    "assert modp(2, 104) == 4": {
      "result": true,
      "time": 0.02604818344116211,
      "error": null
    },
    "assert modp(1, 14) == 2": {
      "result": true,
      "time": 0.02695012092590332,
      "error": null
    },
    "assert modp(34, 6) == 4": {
      "result": true,
      "time": 0.027922630310058594,
      "error": null
    },
    "assert modp(1161, 104) == 96": {
      "result": true,
      "time": 0.026187658309936523,
      "error": null
    },
    "assert modp(1999, 96) == 32": {
      "result": true,
      "time": 0.026096582412719727,
      "error": null
    },
    "assert modp(3, 103) == 8": {
      "result": true,
      "time": 0.026755094528198242,
      "error": null
    },
    "assert modp(30, 3) == 1": {
      "result": true,
      "time": 0.024039506912231445,
      "error": null
    },
    "assert modp(4, 6) == 4": {
      "result": true,
      "time": 0.026180744171142578,
      "error": null
    },
    "assert modp(7, 8) == 0": {
      "result": true,
      "time": 0.02746295928955078,
      "error": null
    },
    "assert modp(30, 5) == 4": {
      "result": true,
      "time": 0.02813124656677246,
      "error": null
    },
    "assert modp(457, 101) == 74": {
      "result": true,
      "time": 0.027596712112426758,
      "error": null
    },
    "assert modp(36, 2) == 0": {
      "result": true,
      "time": 0.026684045791625977,
      "error": null
    },
    "assert modp(4, 104) == 16": {
      "result": true,
      "time": 0.02758049964904785,
      "error": null
    },
    "assert modp(1, 104) == 2": {
      "result": true,
      "time": 0.028621912002563477,
      "error": null
    },
    "assert modp(35, 7) == 4": {
      "result": true,
      "time": 0.02713155746459961,
      "error": null
    },
    "assert modp(4, 5) == 1": {
      "result": true,
      "time": 0.029642581939697266,
      "error": null
    },
    "assert modp(26, 2) == 0": {
      "result": true,
      "time": 0.024528026580810547,
      "error": null
    },
    "assert modp(100, 105) == 16": {
      "result": true,
      "time": 0.026393651962280273,
      "error": null
    },
    "assert modp(102, 103) == 1": {
      "result": true,
      "time": 0.027962207794189453,
      "error": null
    },
    "assert modp(377, 99) == 95": {
      "result": true,
      "time": 0.023714303970336914,
      "error": null
    },
    "assert modp(1262, 98) == 4": {
      "result": true,
      "time": 0.024358034133911133,
      "error": null
    },
    "assert modp(1, 101) == 2": {
      "result": true,
      "time": 0.029300689697265625,
      "error": null
    },
    "assert modp(1, 1) == 0": {
      "result": true,
      "time": 0.0262451171875,
      "error": null
    },
    "assert modp(30, 8) == 0": {
      "result": true,
      "time": 0.02759385108947754,
      "error": null
    },
    "assert modp(28, 5) == 1": {
      "result": true,
      "time": 0.025908708572387695,
      "error": null
    },
    "assert modp(99, 104) == 8": {
      "result": true,
      "time": 0.027256011962890625,
      "error": null
    },
    "assert modp(3, 5) == 3": {
      "result": true,
      "time": 0.027509212493896484,
      "error": null
    },
    "assert modp(31, 5) == 3": {
      "result": true,
      "time": 0.026640653610229492,
      "error": null
    },
    "assert modp(7, 10) == 8": {
      "result": true,
      "time": 0.028224468231201172,
      "error": null
    },
    "assert modp(33, 9) == 8": {
      "result": true,
      "time": 0.028090715408325195,
      "error": null
    },
    "assert modp(5, 15) == 2": {
      "result": true,
      "time": 0.029906511306762695,
      "error": null
    },
    "assert modp(3, 4) == 0": {
      "result": true,
      "time": 0.027384281158447266,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}