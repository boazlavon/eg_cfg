{
  "code": "def even_odd_count(num):\n    even = odd = 0\n    for digit in str(abs(num)):\n        if int(digit) % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    return (even, odd)",
  "results": {
    "assert even_odd_count(7) == (0, 1)": {
      "result": true,
      "time": 0.03046584129333496,
      "error": null
    },
    "assert even_odd_count(-80) == (2, 0)": {
      "result": true,
      "time": 0.03243613243103027,
      "error": null
    },
    "assert even_odd_count(345577) == (1, 5)": {
      "result": true,
      "time": 0.02493143081665039,
      "error": null
    },
    "assert even_odd_count(2) == (1, 0)": {
      "result": true,
      "time": 0.028708457946777344,
      "error": null
    },
    "assert even_odd_count(345308) == (3, 3)": {
      "result": true,
      "time": 0.03185868263244629,
      "error": null
    },
    "assert even_odd_count(-4) == (1, 0)": {
      "result": true,
      "time": 0.03860664367675781,
      "error": null
    },
    "assert even_odd_count(0) == (1, 0)\n\n\n    # Check some edge cases that are easy to work out by hand.": {
      "result": true,
      "time": 0.03110194206237793,
      "error": null
    },
    "assert even_odd_count(345501) == (2, 4)": {
      "result": true,
      "time": 0.03146696090698242,
      "error": null
    },
    "assert even_odd_count(-76) == (1, 1)": {
      "result": true,
      "time": 0.026089191436767578,
      "error": null
    },
    "assert even_odd_count(-345816) == (3, 3)": {
      "result": true,
      "time": 0.02792525291442871,
      "error": null
    },
    "assert even_odd_count(-45352) == (2, 3)": {
      "result": true,
      "time": 0.030406951904296875,
      "error": null
    },
    "assert even_odd_count(-45351) == (1, 4)": {
      "result": true,
      "time": 0.02595806121826172,
      "error": null
    },
    "assert even_odd_count(2450) == (3, 1)": {
      "result": true,
      "time": 0.029633760452270508,
      "error": null
    },
    "assert even_odd_count(-345822) == (4, 2)": {
      "result": true,
      "time": 0.03093552589416504,
      "error": null
    },
    "assert even_odd_count(3171) == (0, 4)": {
      "result": true,
      "time": 0.029106616973876953,
      "error": null
    },
    "assert even_odd_count(-75) == (0, 2)": {
      "result": true,
      "time": 0.0311434268951416,
      "error": null
    },
    "assert even_odd_count(-45348) == (3, 2)": {
      "result": true,
      "time": 0.030310392379760742,
      "error": null
    },
    "assert even_odd_count(1) == (0, 1)": {
      "result": true,
      "time": 0.028683185577392578,
      "error": null
    },
    "assert even_odd_count(346175) == (2, 4)": {
      "result": true,
      "time": 0.027170181274414062,
      "error": null
    },
    "assert even_odd_count(4) == (1, 0)": {
      "result": true,
      "time": 0.026273488998413086,
      "error": null
    },
    "assert even_odd_count(345265) == (3, 3)": {
      "result": true,
      "time": 0.0378725528717041,
      "error": null
    },
    "assert even_odd_count(-45345) == (2, 3)": {
      "result": true,
      "time": 0.02841782569885254,
      "error": null
    },
    "assert even_odd_count(-74) == (1, 1)": {
      "result": true,
      "time": 0.030874967575073242,
      "error": null
    },
    "assert even_odd_count(-345819) == (2, 4)": {
      "result": true,
      "time": 0.03267073631286621,
      "error": null
    },
    "assert even_odd_count(345360) == (3, 3)": {
      "result": true,
      "time": 0.02701568603515625,
      "error": null
    },
    "assert even_odd_count(3452) == (2, 2)": {
      "result": true,
      "time": 0.02948284149169922,
      "error": null
    },
    "assert even_odd_count(3347) == (1, 3)": {
      "result": true,
      "time": 0.03637242317199707,
      "error": null
    },
    "assert even_odd_count(-345820) == (4, 2)": {
      "result": true,
      "time": 0.025298595428466797,
      "error": null
    },
    "assert even_odd_count(-45343) == (2, 3)": {
      "result": true,
      "time": 0.031554222106933594,
      "error": null
    },
    "assert even_odd_count(-45347) == (2, 3)": {
      "result": true,
      "time": 0.03357100486755371,
      "error": null
    },
    "assert even_odd_count(346787) == (3, 3)": {
      "result": true,
      "time": 0.03049635887145996,
      "error": null
    },
    "assert even_odd_count(-2) == (1, 0)": {
      "result": true,
      "time": 0.030986309051513672,
      "error": null
    },
    "assert even_odd_count(-345821) == (3, 3)": {
      "result": true,
      "time": 0.032350778579711914,
      "error": null
    },
    "assert even_odd_count(-77) == (0, 2)": {
      "result": true,
      "time": 0.03142070770263672,
      "error": null
    },
    "assert even_odd_count(-73) == (0, 2)": {
      "result": true,
      "time": 0.030983686447143555,
      "error": null
    },
    "assert even_odd_count(-79) == (0, 2)": {
      "result": true,
      "time": 0.03214669227600098,
      "error": null
    },
    "assert even_odd_count(345858) == (3, 3)": {
      "result": true,
      "time": 0.028417587280273438,
      "error": null
    },
    "assert even_odd_count(346658) == (4, 2)": {
      "result": true,
      "time": 0.032537221908569336,
      "error": null
    },
    "assert even_odd_count(10) == (1, 1)": {
      "result": true,
      "time": 0.03103947639465332,
      "error": null
    },
    "assert even_odd_count(345794) == (2, 4)": {
      "result": true,
      "time": 0.03393983840942383,
      "error": null
    },
    "assert even_odd_count(346614) == (4, 2)": {
      "result": true,
      "time": 0.029998779296875,
      "error": null
    },
    "assert even_odd_count(3987) == (1, 3)": {
      "result": true,
      "time": 0.03152179718017578,
      "error": null
    },
    "assert even_odd_count(9) == (0, 1)": {
      "result": true,
      "time": 0.026768207550048828,
      "error": null
    },
    "assert even_odd_count(-5) == (0, 1)": {
      "result": true,
      "time": 0.03197932243347168,
      "error": null
    },
    "assert even_odd_count(347145) == (2, 4)": {
      "result": true,
      "time": 0.026792526245117188,
      "error": null
    },
    "assert even_odd_count(4207) == (3, 1)": {
      "result": true,
      "time": 0.0328679084777832,
      "error": null
    },
    "assert even_odd_count(-45344) == (3, 2)": {
      "result": true,
      "time": 0.03023982048034668,
      "error": null
    },
    "assert even_odd_count(3949) == (1, 3)": {
      "result": true,
      "time": 0.03272747993469238,
      "error": null
    },
    "assert even_odd_count(3) == (0, 1)": {
      "result": true,
      "time": 0.03287076950073242,
      "error": null
    },
    "assert even_odd_count(-82) == (2, 0)": {
      "result": true,
      "time": 0.029662370681762695,
      "error": null
    },
    "assert even_odd_count(-81) == (1, 1)": {
      "result": true,
      "time": 0.02937936782836914,
      "error": null
    },
    "assert even_odd_count(-45349) == (2, 3)": {
      "result": true,
      "time": 0.027872085571289062,
      "error": null
    },
    "assert even_odd_count(346547) == (3, 3)": {
      "result": true,
      "time": 0.026354074478149414,
      "error": null
    },
    "assert even_odd_count(5) == (0, 1)": {
      "result": true,
      "time": 0.03113579750061035,
      "error": null
    },
    "assert even_odd_count(-45346) == (3, 2)": {
      "result": true,
      "time": 0.03025341033935547,
      "error": null
    },
    "assert even_odd_count(-345817) == (2, 4)": {
      "result": true,
      "time": 0.03227043151855469,
      "error": null
    },
    "assert even_odd_count(12) == (1, 1)": {
      "result": true,
      "time": 0.03486824035644531,
      "error": null
    },
    "assert even_odd_count(3444) == (3, 1)": {
      "result": true,
      "time": 0.02619767189025879,
      "error": null
    },
    "assert even_odd_count(3981) == (1, 3)": {
      "result": true,
      "time": 0.031148672103881836,
      "error": null
    },
    "assert even_odd_count(0) == (1, 0)": {
      "result": true,
      "time": 0.03259134292602539,
      "error": null
    },
    "assert even_odd_count(-3) == (0, 1)": {
      "result": true,
      "time": 0.031516075134277344,
      "error": null
    },
    "assert even_odd_count(346081) == (4, 2)": {
      "result": true,
      "time": 0.0355067253112793,
      "error": null
    },
    "assert even_odd_count(-345823) == (3, 3)": {
      "result": true,
      "time": 0.030182838439941406,
      "error": null
    },
    "assert even_odd_count(8) == (1, 0)": {
      "result": true,
      "time": 0.03414201736450195,
      "error": null
    },
    "assert even_odd_count(3015) == (1, 3)": {
      "result": true,
      "time": 0.03216409683227539,
      "error": null
    },
    "assert even_odd_count(3724) == (2, 2)": {
      "result": true,
      "time": 0.0261991024017334,
      "error": null
    },
    "assert even_odd_count(345220) == (4, 2)": {
      "result": true,
      "time": 0.029890775680541992,
      "error": null
    },
    "assert even_odd_count(346211) == (3, 3)": {
      "result": true,
      "time": 0.034041643142700195,
      "error": null
    },
    "assert even_odd_count(-78) == (1, 1)": {
      "result": true,
      "time": 0.027872323989868164,
      "error": null
    },
    "assert even_odd_count(2810) == (3, 1)": {
      "result": true,
      "time": 0.029146432876586914,
      "error": null
    },
    "assert even_odd_count(2650) == (3, 1)": {
      "result": true,
      "time": 0.030370473861694336,
      "error": null
    },
    "assert even_odd_count(-83) == (1, 1)": {
      "result": true,
      "time": 0.031348228454589844,
      "error": null
    },
    "assert even_odd_count(-345824) == (4, 2)": {
      "result": true,
      "time": 0.03006458282470703,
      "error": null
    },
    "assert even_odd_count(-345818) == (3, 3)": {
      "result": true,
      "time": 0.03404879570007324,
      "error": null
    },
    "assert even_odd_count(-6) == (1, 0)": {
      "result": true,
      "time": 0.03319954872131348,
      "error": null
    },
    "assert even_odd_count(-7) == (0, 1)": {
      "result": true,
      "time": 0.030452251434326172,
      "error": null
    },
    "assert even_odd_count(2708) == (3, 1)": {
      "result": true,
      "time": 0.030524730682373047,
      "error": null
    },
    "assert even_odd_count(-1) == (0, 1)": {
      "result": true,
      "time": 0.030795574188232422,
      "error": null
    },
    "assert even_odd_count(-345825) == (3, 3)": {
      "result": true,
      "time": 0.038054466247558594,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}