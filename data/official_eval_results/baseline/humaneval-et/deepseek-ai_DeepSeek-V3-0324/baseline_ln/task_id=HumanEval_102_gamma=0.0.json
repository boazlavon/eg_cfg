{
  "code": "def choose_num(x, y):\n    start = min(x, y)\n    end = max(x, y)\n    for num in range(end, start - 1, -1):\n        if num % 2 == 0:\n            return num\n    return -1",
  "results": {
    "assert choose_num(4249, 4823) == 4822": {
      "result": true,
      "time": 0.028343677520751953,
      "error": null
    },
    "assert choose_num(5373, 4639) == -1": {
      "result": false,
      "time": 0.028168916702270508,
      "error": null
    },
    "assert choose_num(31, 6) == -1": {
      "result": false,
      "time": 0.031058311462402344,
      "error": null
    },
    "assert choose_num(37, 13023) == 13022": {
      "result": true,
      "time": 0.030194759368896484,
      "error": null
    },
    "assert choose_num(34, 13247) == 13246": {
      "result": true,
      "time": 0.02905559539794922,
      "error": null
    },
    "assert choose_num(29, 15) == -1": {
      "result": false,
      "time": 0.026520252227783203,
      "error": null
    },
    "assert choose_num(3, 9) == 8": {
      "result": true,
      "time": 0.026218891143798828,
      "error": null
    },
    "assert choose_num(12, 15) == 14": {
      "result": true,
      "time": 0.027106761932373047,
      "error": null
    },
    "assert choose_num(4, 4) == 4": {
      "result": true,
      "time": 0.0279998779296875,
      "error": null
    },
    "assert choose_num(550, 543) == -1": {
      "result": false,
      "time": 0.029031753540039062,
      "error": null
    },
    "assert choose_num(7, 34) == 34": {
      "result": true,
      "time": 0.031156063079833984,
      "error": null
    },
    "assert choose_num(6, 11) == 10": {
      "result": true,
      "time": 0.03059077262878418,
      "error": null
    },
    "assert choose_num(3, 12) == 12": {
      "result": true,
      "time": 0.030257463455200195,
      "error": null
    },
    "assert choose_num(23, 10) == -1": {
      "result": false,
      "time": 0.03594565391540527,
      "error": null
    },
    "assert choose_num(32, 11) == -1": {
      "result": false,
      "time": 0.029683351516723633,
      "error": null
    },
    "assert choose_num(18, 16) == -1": {
      "result": false,
      "time": 0.03085017204284668,
      "error": null
    },
    "assert choose_num(27, 10) == -1\n\n    # Check some edge cases that are easy to work out by hand.": {
      "result": false,
      "time": 0.030690431594848633,
      "error": null
    },
    "assert choose_num(8, 15) == 14": {
      "result": true,
      "time": 0.033377647399902344,
      "error": null
    },
    "assert choose_num(545, 546) == 546": {
      "result": true,
      "time": 0.027965307235717773,
      "error": null
    },
    "assert choose_num(547, 549) == 548": {
      "result": true,
      "time": 0.029248476028442383,
      "error": null
    },
    "assert choose_num(9, 28) == 28": {
      "result": true,
      "time": 0.02787613868713379,
      "error": null
    },
    "assert choose_num(34, 12634) == 12634": {
      "result": true,
      "time": 0.029924631118774414,
      "error": null
    },
    "assert choose_num(550, 542) == -1": {
      "result": false,
      "time": 0.02992105484008789,
      "error": null
    },
    "assert choose_num(7, 19) == 18": {
      "result": true,
      "time": 0.029088497161865234,
      "error": null
    },
    "assert choose_num(2, 9) == 8": {
      "result": true,
      "time": 0.030818939208984375,
      "error": null
    },
    "assert choose_num(4, 2) == -1": {
      "result": false,
      "time": 0.029254436492919922,
      "error": null
    },
    "assert choose_num(11, 10) == -1": {
      "result": false,
      "time": 0.028363466262817383,
      "error": null
    },
    "assert choose_num(542, 543) == 542": {
      "result": true,
      "time": 0.027840137481689453,
      "error": null
    },
    "assert choose_num(11, 11) == -1": {
      "result": true,
      "time": 0.03059244155883789,
      "error": null
    },
    "assert choose_num(5234, 5233) == -1": {
      "result": false,
      "time": 0.0340116024017334,
      "error": null
    },
    "assert choose_num(17, 13) == -1": {
      "result": false,
      "time": 0.030657052993774414,
      "error": null
    },
    "assert choose_num(28, 6) == -1": {
      "result": false,
      "time": 0.02532362937927246,
      "error": null
    },
    "assert choose_num(36, 12359) == 12358": {
      "result": true,
      "time": 0.03534698486328125,
      "error": null
    },
    "assert choose_num(547, 542) == -1": {
      "result": false,
      "time": 0.034119606018066406,
      "error": null
    },
    "assert choose_num(4292, 5649) == 5648": {
      "result": true,
      "time": 0.027699708938598633,
      "error": null
    },
    "assert choose_num(31, 13152) == 13152": {
      "result": true,
      "time": 0.03628182411193848,
      "error": null
    },
    "assert choose_num(4796, 5300) == 5300": {
      "result": true,
      "time": 0.02987504005432129,
      "error": null
    },
    "assert choose_num(29, 12690) == 12690": {
      "result": true,
      "time": 0.028671741485595703,
      "error": null
    },
    "assert choose_num(9, 11) == 10": {
      "result": true,
      "time": 0.03430342674255371,
      "error": null
    },
    "assert choose_num(4637, 5993) == 5992": {
      "result": true,
      "time": 0.028600692749023438,
      "error": null
    },
    "assert choose_num(36, 11801) == 11800": {
      "result": true,
      "time": 0.027570009231567383,
      "error": null
    },
    "assert choose_num(27, 6) == -1": {
      "result": false,
      "time": 0.03494572639465332,
      "error": null
    },
    "assert choose_num(548, 542) == -1": {
      "result": false,
      "time": 0.036835670471191406,
      "error": null
    },
    "assert choose_num(11, 30) == 30": {
      "result": true,
      "time": 0.03289055824279785,
      "error": null
    },
    "assert choose_num(31, 13214) == 13214": {
      "result": true,
      "time": 0.034380435943603516,
      "error": null
    },
    "assert choose_num(32, 13283) == 13282": {
      "result": true,
      "time": 0.03203320503234863,
      "error": null
    },
    "assert choose_num(4494, 4861) == 4860": {
      "result": true,
      "time": 0.03246712684631348,
      "error": null
    },
    "assert choose_num(9, 27) == 26": {
      "result": true,
      "time": 0.035370826721191406,
      "error": null
    },
    "assert choose_num(13, 12) == -1": {
      "result": false,
      "time": 0.030268192291259766,
      "error": null
    },
    "assert choose_num(8, 31) == 30": {
      "result": true,
      "time": 0.029269695281982422,
      "error": null
    },
    "assert choose_num(14, 9) == -1": {
      "result": false,
      "time": 0.0318295955657959,
      "error": null
    },
    "assert choose_num(7, 11) == 10": {
      "result": true,
      "time": 0.02856278419494629,
      "error": null
    },
    "assert choose_num(36, 11976) == 11976": {
      "result": true,
      "time": 0.03226041793823242,
      "error": null
    },
    "assert choose_num(10, 29) == 28": {
      "result": true,
      "time": 0.028926372528076172,
      "error": null
    },
    "assert choose_num(17, 15) == -1": {
      "result": false,
      "time": 0.029966115951538086,
      "error": null
    },
    "assert choose_num(13, 9) == -1": {
      "result": false,
      "time": 0.031992435455322266,
      "error": null
    },
    "assert choose_num(547, 548) == 548": {
      "result": true,
      "time": 0.027306556701660156,
      "error": null
    },
    "assert choose_num(10, 14) == 14": {
      "result": true,
      "time": 0.029091835021972656,
      "error": null
    },
    "assert choose_num(549, 549) == -1": {
      "result": true,
      "time": 0.033357858657836914,
      "error": null
    },
    "assert choose_num(542, 547) == 546": {
      "result": true,
      "time": 0.03157305717468262,
      "error": null
    },
    "assert choose_num(541, 542) == 542": {
      "result": true,
      "time": 0.03145146369934082,
      "error": null
    },
    "assert choose_num(34, 12261) == 12260": {
      "result": true,
      "time": 0.031091690063476562,
      "error": null
    },
    "assert choose_num(8, 13) == 12": {
      "result": true,
      "time": 0.03142285346984863,
      "error": null
    },
    "assert choose_num(3, 7) == 6": {
      "result": true,
      "time": 0.03143024444580078,
      "error": null
    },
    "assert choose_num(33, 12354) == 12354": {
      "result": true,
      "time": 0.02976393699645996,
      "error": null
    },
    "assert choose_num(12, 7) == -1": {
      "result": false,
      "time": 0.031180143356323242,
      "error": null
    },
    "assert choose_num(31, 12815) == 12814": {
      "result": true,
      "time": 0.029224395751953125,
      "error": null
    },
    "assert choose_num(4756, 5476) == 5476": {
      "result": true,
      "time": 0.029787302017211914,
      "error": null
    },
    "assert choose_num(29, 10) == -1": {
      "result": false,
      "time": 0.027221202850341797,
      "error": null
    },
    "assert choose_num(16, 17) == 16": {
      "result": true,
      "time": 0.031036853790283203,
      "error": null
    },
    "assert choose_num(9, 24) == 24": {
      "result": true,
      "time": 0.03155851364135742,
      "error": null
    },
    "assert choose_num(6, 3) == -1": {
      "result": false,
      "time": 0.02611255645751953,
      "error": null
    },
    "assert choose_num(5338, 5267) == -1": {
      "result": false,
      "time": 0.03199481964111328,
      "error": null
    },
    "assert choose_num(4547, 5362) == 5362": {
      "result": true,
      "time": 0.030529022216796875,
      "error": null
    },
    "assert choose_num(8, 26) == 26": {
      "result": true,
      "time": 0.02922797203063965,
      "error": null
    },
    "assert choose_num(11, 12) == 12": {
      "result": true,
      "time": 0.031206846237182617,
      "error": null
    },
    "assert choose_num(25, 13) == -1": {
      "result": false,
      "time": 0.03438591957092285,
      "error": null
    },
    "assert choose_num(7, 7) == -1": {
      "result": true,
      "time": 0.028215646743774414,
      "error": null
    },
    "assert choose_num(7, 16) == 16": {
      "result": true,
      "time": 0.0314481258392334,
      "error": null
    },
    "assert choose_num(4883, 5654) == 5654": {
      "result": true,
      "time": 0.028485536575317383,
      "error": null
    },
    "assert choose_num(8, 32) == 32": {
      "result": true,
      "time": 0.029166221618652344,
      "error": null
    },
    "assert choose_num(6, 29) == 28": {
      "result": true,
      "time": 0.027257204055786133,
      "error": null
    },
    "assert choose_num(38, 12926) == 12926": {
      "result": true,
      "time": 0.030730485916137695,
      "error": null
    },
    "assert choose_num(9, 7) == -1": {
      "result": false,
      "time": 0.03104233741760254,
      "error": null
    },
    "assert choose_num(12, 6) == -1": {
      "result": false,
      "time": 0.02997875213623047,
      "error": null
    },
    "assert choose_num(15, 14) == -1": {
      "result": false,
      "time": 0.031233787536621094,
      "error": null
    },
    "assert choose_num(10, 8) == -1": {
      "result": false,
      "time": 0.03131222724914551,
      "error": null
    },
    "assert choose_num(11, 29) == 28": {
      "result": true,
      "time": 0.02884817123413086,
      "error": null
    },
    "assert choose_num(14, 11) == -1": {
      "result": false,
      "time": 0.03176116943359375,
      "error": null
    },
    "assert choose_num(13, 17) == 16": {
      "result": true,
      "time": 0.028525114059448242,
      "error": null
    },
    "assert choose_num(5, 8) == 8": {
      "result": true,
      "time": 0.028090953826904297,
      "error": null
    },
    "assert choose_num(546, 549) == 548": {
      "result": true,
      "time": 0.028069734573364258,
      "error": null
    },
    "assert choose_num(8, 14) == 14": {
      "result": true,
      "time": 0.029271364212036133,
      "error": null
    },
    "assert choose_num(5, 26) == 26": {
      "result": true,
      "time": 0.03078746795654297,
      "error": null
    },
    "assert choose_num(8, 12) == 12": {
      "result": true,
      "time": 0.031943559646606445,
      "error": null
    },
    "assert choose_num(31, 12511) == 12510": {
      "result": true,
      "time": 0.028596878051757812,
      "error": null
    },
    "assert choose_num(32, 10) == -1": {
      "result": false,
      "time": 0.030810832977294922,
      "error": null
    },
    "assert choose_num(7, 10) == 10": {
      "result": true,
      "time": 0.03232455253601074,
      "error": null
    },
    "assert choose_num(6087, 4359) == -1": {
      "result": false,
      "time": 0.02853679656982422,
      "error": null
    },
    "assert choose_num(31, 10) == -1": {
      "result": false,
      "time": 0.03364205360412598,
      "error": null
    },
    "assert choose_num(10, 11) == 10": {
      "result": true,
      "time": 0.030260324478149414,
      "error": null
    },
    "assert choose_num(4386, 4651) == 4650": {
      "result": true,
      "time": 0.031443119049072266,
      "error": null
    },
    "assert choose_num(27, 5) == -1": {
      "result": false,
      "time": 0.026791095733642578,
      "error": null
    },
    "assert choose_num(546, 546) == 546": {
      "result": true,
      "time": 0.028597593307495117,
      "error": null
    },
    "assert choose_num(30, 13282) == 13282": {
      "result": true,
      "time": 0.02885890007019043,
      "error": null
    },
    "assert choose_num(6, 32) == 32": {
      "result": true,
      "time": 0.026207685470581055,
      "error": null
    },
    "assert choose_num(14, 15) == 14": {
      "result": true,
      "time": 0.030606508255004883,
      "error": null
    },
    "assert choose_num(11, 13) == 12": {
      "result": true,
      "time": 0.027071237564086914,
      "error": null
    },
    "assert choose_num(5962, 4558) == -1": {
      "result": false,
      "time": 0.02926468849182129,
      "error": null
    },
    "assert choose_num(543, 542) == -1": {
      "result": false,
      "time": 0.030996322631835938,
      "error": null
    },
    "assert choose_num(1, 32) == 32": {
      "result": true,
      "time": 0.03215503692626953,
      "error": null
    },
    "assert choose_num(5830, 5508) == -1": {
      "result": false,
      "time": 0.026371479034423828,
      "error": null
    },
    "assert choose_num(4623, 5093) == 5092": {
      "result": true,
      "time": 0.029724597930908203,
      "error": null
    },
    "assert choose_num(32, 7) == -1": {
      "result": false,
      "time": 0.028076887130737305,
      "error": null
    },
    "assert choose_num(546, 550) == 550": {
      "result": true,
      "time": 0.033010244369506836,
      "error": null
    },
    "assert choose_num(28, 13) == -1": {
      "result": false,
      "time": 0.030437231063842773,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6551724137931034,
  "general_error": "",
  "has_testcase_error": false
}