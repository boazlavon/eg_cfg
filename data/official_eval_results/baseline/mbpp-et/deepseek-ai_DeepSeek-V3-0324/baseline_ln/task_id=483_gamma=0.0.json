{
  "code": "import math\n\ndef first_Factorial_Divisible_Number(x):\n    n = 1\n    while True:\n        factorial = math.factorial(n)\n        if factorial % x == 0:\n            return n\n        n += 1",
  "results": {
    "assert first_Factorial_Divisible_Number(10) == 5": {
      "result": true,
      "time": 0.0744485855102539,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(15) == 5": {
      "result": true,
      "time": 0.09621644020080566,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(5) == 4": {
      "result": false,
      "time": 0.08733677864074707,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(13) == 12": {
      "result": false,
      "time": 0.07997488975524902,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(6) == 3": {
      "result": true,
      "time": 0.09427857398986816,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(8) == 4": {
      "result": true,
      "time": 0.06910967826843262,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(14) == 7": {
      "result": true,
      "time": 0.07469487190246582,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(7) == 6": {
      "result": false,
      "time": 0.0859220027923584,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(12) == 4": {
      "result": true,
      "time": 0.09029722213745117,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(11) == 10": {
      "result": false,
      "time": 0.09250545501708984,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(9) == 6": {
      "result": true,
      "time": 0.08582925796508789,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(20) == 5": {
      "result": true,
      "time": 0.06593894958496094,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(19) == 18": {
      "result": false,
      "time": 0.07369446754455566,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(18) == 6": {
      "result": true,
      "time": 0.0896291732788086,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(16) == 6": {
      "result": true,
      "time": 0.08761715888977051,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(17) == 16": {
      "result": false,
      "time": 0.0892794132232666,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(1) == 1": {
      "result": true,
      "time": 0.07833600044250488,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(2) == 1": {
      "result": false,
      "time": 0.085235595703125,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(4) == 3": {
      "result": false,
      "time": 0.08736300468444824,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(3) == 2": {
      "result": false,
      "time": 0.09171319007873535,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.55,
  "general_error": "",
  "has_testcase_error": false
}