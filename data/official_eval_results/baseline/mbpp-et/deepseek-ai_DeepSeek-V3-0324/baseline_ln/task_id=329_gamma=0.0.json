{
  "code": "def neg_count(nums):\n    count = 0\n    for num in nums:\n        if num < 0:\n            count += 1\n    return count",
  "results": {
    "assert neg_count([-1,-2,3,-4,-5]) == 4": {
      "result": true,
      "time": 0.0522608757019043,
      "error": null
    },
    "assert neg_count([1,2,3]) == 0": {
      "result": true,
      "time": 0.04797506332397461,
      "error": null
    },
    "assert neg_count([1,2,-3,-10,20]) == 2": {
      "result": true,
      "time": 0.03839516639709473,
      "error": null
    },
    "assert neg_count([3, 1, 7, -3, -1]) == 2": {
      "result": true,
      "time": 0.05672168731689453,
      "error": null
    },
    "assert neg_count([-1, -6, 4, -1, -4]) == 4": {
      "result": true,
      "time": 0.03755903244018555,
      "error": null
    },
    "assert neg_count([0, -1, 6, -2, 0]) == 4": {
      "result": false,
      "time": 0.05562114715576172,
      "error": null
    },
    "assert neg_count([-5, -7, 8, -7, -5]) == 4": {
      "result": true,
      "time": 0.05548739433288574,
      "error": null
    },
    "assert neg_count([0, 1, 3, -7, -9]) == 3": {
      "result": false,
      "time": 0.0414886474609375,
      "error": null
    },
    "assert neg_count([-3, -2, 8, -6, -5]) == 4": {
      "result": true,
      "time": 0.044774532318115234,
      "error": null
    },
    "assert neg_count([-1, -2, 8, -2, -2]) == 4": {
      "result": true,
      "time": 0.05342364311218262,
      "error": null
    },
    "assert neg_count([3, -1, 8, -8, -1]) == 3": {
      "result": true,
      "time": 0.05125999450683594,
      "error": null
    },
    "assert neg_count([4, -7, 2, 1, 0]) == 2": {
      "result": false,
      "time": 0.04194140434265137,
      "error": null
    },
    "assert neg_count([-4, -7, 1, -1, -10]) == 4": {
      "result": true,
      "time": 0.04754328727722168,
      "error": null
    },
    "assert neg_count([4, -5, 6, 0, -7]) == 3": {
      "result": false,
      "time": 0.048647403717041016,
      "error": null
    },
    "assert neg_count([1, -3, 8, -8, -3]) == 3": {
      "result": true,
      "time": 0.045678138732910156,
      "error": null
    },
    "assert neg_count([-2, -4, 8, -8, -4]) == 4": {
      "result": true,
      "time": 0.049292564392089844,
      "error": null
    },
    "assert neg_count([0, 2, 2, -7, 0]) == 3": {
      "result": false,
      "time": 0.05986785888671875,
      "error": null
    },
    "assert neg_count([4, -6, 2, -2, -7]) == 3": {
      "result": true,
      "time": 0.055043697357177734,
      "error": null
    },
    "assert neg_count([-1, 1, 6, -9, -6]) == 3": {
      "result": true,
      "time": 0.05489945411682129,
      "error": null
    },
    "assert neg_count([3, -2, 2, -7, -9]) == 3": {
      "result": true,
      "time": 0.058881521224975586,
      "error": null
    },
    "assert neg_count([4, -6, 6, -1, -4]) == 3": {
      "result": true,
      "time": 0.056407928466796875,
      "error": null
    },
    "assert neg_count([3, -6, 1, -7, -1]) == 3": {
      "result": true,
      "time": 0.05167841911315918,
      "error": null
    },
    "assert neg_count([2, 1, 6, -4, -5]) == 2": {
      "result": true,
      "time": 0.062335968017578125,
      "error": null
    },
    "assert neg_count([4, 1, 6, 1, -1]) == 1": {
      "result": true,
      "time": 0.05701589584350586,
      "error": null
    },
    "assert neg_count([2, -2, 8, -5, -5]) == 3": {
      "result": true,
      "time": 0.05655074119567871,
      "error": null
    },
    "assert neg_count([4, -3, 2, -2, -2]) == 3": {
      "result": true,
      "time": 0.054880619049072266,
      "error": null
    },
    "assert neg_count([-1, -4, 2, 0, -7]) == 4": {
      "result": false,
      "time": 0.05205655097961426,
      "error": null
    },
    "assert neg_count([-5, -7, 4, 1, -6]) == 3": {
      "result": true,
      "time": 0.04830646514892578,
      "error": null
    },
    "assert neg_count([2, -2, 6, -7, -5]) == 3": {
      "result": true,
      "time": 0.06237483024597168,
      "error": null
    },
    "assert neg_count([-1, 3, 4, -3, -1]) == 3": {
      "result": true,
      "time": 0.04610395431518555,
      "error": null
    },
    "assert neg_count([2, 3, 7, -1, -7]) == 2": {
      "result": true,
      "time": 0.054697513580322266,
      "error": null
    },
    "assert neg_count([-3, -4, 6, 0, -7]) == 4": {
      "result": false,
      "time": 0.05968022346496582,
      "error": null
    },
    "assert neg_count([-4, 1, 8, -7, -9]) == 3": {
      "result": true,
      "time": 0.06241631507873535,
      "error": null
    },
    "assert neg_count([-2, -5, 5, -1, -10]) == 4": {
      "result": true,
      "time": 0.04670143127441406,
      "error": null
    },
    "assert neg_count([0, -3, 8, -1, 0]) == 4": {
      "result": false,
      "time": 0.056734323501586914,
      "error": null
    },
    "assert neg_count([-2, -2, 3, -8, 0]) == 4": {
      "result": false,
      "time": 0.06985950469970703,
      "error": null
    },
    "assert neg_count([3, 6, 3]) == 0": {
      "result": true,
      "time": 0.06260132789611816,
      "error": null
    },
    "assert neg_count([5, 6, 8]) == 0": {
      "result": true,
      "time": 0.059786319732666016,
      "error": null
    },
    "assert neg_count([1, 2, 4]) == 0": {
      "result": true,
      "time": 0.05162358283996582,
      "error": null
    },
    "assert neg_count([1, 4, 6]) == 0": {
      "result": true,
      "time": 0.04860377311706543,
      "error": null
    },
    "assert neg_count([4, 5, 2]) == 0": {
      "result": true,
      "time": 0.060686588287353516,
      "error": null
    },
    "assert neg_count([4, 4, 6]) == 0": {
      "result": true,
      "time": 0.07333016395568848,
      "error": null
    },
    "assert neg_count([1, 7, 4]) == 0": {
      "result": true,
      "time": 0.04864931106567383,
      "error": null
    },
    "assert neg_count([2, 5, 4]) == 0": {
      "result": true,
      "time": 0.06781148910522461,
      "error": null
    },
    "assert neg_count([3, 4, 3]) == 0": {
      "result": true,
      "time": 0.05849957466125488,
      "error": null
    },
    "assert neg_count([6, 7, 2]) == 0": {
      "result": true,
      "time": 0.05341529846191406,
      "error": null
    },
    "assert neg_count([5, 7, 5]) == 0": {
      "result": true,
      "time": 0.048142194747924805,
      "error": null
    },
    "assert neg_count([2, 3, 5]) == 0": {
      "result": true,
      "time": 0.06298995018005371,
      "error": null
    },
    "assert neg_count([5, 1, 5]) == 0": {
      "result": true,
      "time": 0.04674482345581055,
      "error": null
    },
    "assert neg_count([1, 7, 8]) == 0": {
      "result": true,
      "time": 0.06259989738464355,
      "error": null
    },
    "assert neg_count([4, 2, 4]) == 0": {
      "result": true,
      "time": 0.05839729309082031,
      "error": null
    },
    "assert neg_count([2, 7, 7]) == 0": {
      "result": true,
      "time": 0.05664324760437012,
      "error": null
    },
    "assert neg_count([6, 2, 2]) == 0": {
      "result": true,
      "time": 0.054213762283325195,
      "error": null
    },
    "assert neg_count([1, 7, 1]) == 0": {
      "result": true,
      "time": 0.06086397171020508,
      "error": null
    },
    "assert neg_count([6, 7, 1]) == 0": {
      "result": true,
      "time": 0.05776667594909668,
      "error": null
    },
    "assert neg_count([6, 1, 6]) == 0": {
      "result": true,
      "time": 0.054483652114868164,
      "error": null
    },
    "assert neg_count([4, 3, 8]) == 0": {
      "result": true,
      "time": 0.049651384353637695,
      "error": null
    },
    "assert neg_count([2, 6, 2]) == 0": {
      "result": true,
      "time": 0.06521487236022949,
      "error": null
    },
    "assert neg_count([6, 6, 7]) == 0": {
      "result": true,
      "time": 0.056554317474365234,
      "error": null
    },
    "assert neg_count([5, 4, 5]) == 0": {
      "result": true,
      "time": 0.06243085861206055,
      "error": null
    },
    "assert neg_count([6, 2, 5]) == 0": {
      "result": true,
      "time": 0.05163884162902832,
      "error": null
    },
    "assert neg_count([5, 3, 1]) == 0": {
      "result": true,
      "time": 0.04237532615661621,
      "error": null
    },
    "assert neg_count([5, 5, 5]) == 0": {
      "result": true,
      "time": 0.048760175704956055,
      "error": null
    },
    "assert neg_count([1, 1, 2]) == 0": {
      "result": true,
      "time": 0.04381537437438965,
      "error": null
    },
    "assert neg_count([5, 4, 2]) == 0": {
      "result": true,
      "time": 0.0480649471282959,
      "error": null
    },
    "assert neg_count([4, 6, 5]) == 0": {
      "result": true,
      "time": 0.04660224914550781,
      "error": null
    },
    "assert neg_count([1, 6, 2, -11, 25]) == 1": {
      "result": true,
      "time": 0.049117326736450195,
      "error": null
    },
    "assert neg_count([2, 6, -7, -6, 22]) == 2": {
      "result": true,
      "time": 0.05507922172546387,
      "error": null
    },
    "assert neg_count([2, 5, -5, -14, 20]) == 2": {
      "result": true,
      "time": 0.04616379737854004,
      "error": null
    },
    "assert neg_count([3, 1, -2, -12, 21]) == 2": {
      "result": true,
      "time": 0.05085635185241699,
      "error": null
    },
    "assert neg_count([1, 5, -3, -6, 21]) == 2": {
      "result": true,
      "time": 0.04866361618041992,
      "error": null
    },
    "assert neg_count([1, 4, -1, -13, 16]) == 2": {
      "result": true,
      "time": 0.05701947212219238,
      "error": null
    },
    "assert neg_count([4, 5, -4, -10, 21]) == 2": {
      "result": true,
      "time": 0.0395197868347168,
      "error": null
    },
    "assert neg_count([6, 2, -4, -12, 21]) == 2": {
      "result": true,
      "time": 0.04686141014099121,
      "error": null
    },
    "assert neg_count([1, 1, -6, -14, 18]) == 2": {
      "result": true,
      "time": 0.03829455375671387,
      "error": null
    },
    "assert neg_count([4, 2, -8, -12, 21]) == 2": {
      "result": true,
      "time": 0.04602694511413574,
      "error": null
    },
    "assert neg_count([1, 2, 2, -9, 22]) == 1": {
      "result": true,
      "time": 0.049512386322021484,
      "error": null
    },
    "assert neg_count([6, 4, -4, -11, 19]) == 2": {
      "result": true,
      "time": 0.048847198486328125,
      "error": null
    },
    "assert neg_count([6, 4, 0, -5, 22]) == 2": {
      "result": false,
      "time": 0.04286551475524902,
      "error": null
    },
    "assert neg_count([6, 7, -5, -15, 24]) == 2": {
      "result": true,
      "time": 0.04191899299621582,
      "error": null
    },
    "assert neg_count([1, 4, -8, -11, 23]) == 2": {
      "result": true,
      "time": 0.04737353324890137,
      "error": null
    },
    "assert neg_count([3, 2, -1, -10, 21]) == 2": {
      "result": true,
      "time": 0.051227569580078125,
      "error": null
    },
    "assert neg_count([6, 5, -4, -10, 16]) == 2": {
      "result": true,
      "time": 0.03834128379821777,
      "error": null
    },
    "assert neg_count([6, 1, 1, -10, 25]) == 1": {
      "result": true,
      "time": 0.03818392753601074,
      "error": null
    },
    "assert neg_count([4, 6, -5, -10, 23]) == 2": {
      "result": true,
      "time": 0.03962826728820801,
      "error": null
    },
    "assert neg_count([4, 6, -5, -10, 21]) == 2": {
      "result": true,
      "time": 0.055892229080200195,
      "error": null
    },
    "assert neg_count([1, 4, -4, -13, 16]) == 2": {
      "result": true,
      "time": 0.04159688949584961,
      "error": null
    },
    "assert neg_count([2, 4, -6, -10, 15]) == 2": {
      "result": true,
      "time": 0.04850339889526367,
      "error": null
    },
    "assert neg_count([3, 5, -1, -12, 20]) == 2": {
      "result": true,
      "time": 0.04551291465759277,
      "error": null
    },
    "assert neg_count([6, 6, -8, -8, 22]) == 2": {
      "result": true,
      "time": 0.04106736183166504,
      "error": null
    },
    "assert neg_count([4, 5, -5, -15, 21]) == 2": {
      "result": true,
      "time": 0.05697512626647949,
      "error": null
    },
    "assert neg_count([1, 2, 1, -5, 22]) == 1": {
      "result": true,
      "time": 0.039843082427978516,
      "error": null
    },
    "assert neg_count([2, 2, -2, -14, 21]) == 2": {
      "result": true,
      "time": 0.05147099494934082,
      "error": null
    },
    "assert neg_count([1, 7, -4, -6, 24]) == 2": {
      "result": true,
      "time": 0.04436826705932617,
      "error": null
    },
    "assert neg_count([5, 6, -4, -8, 24]) == 2": {
      "result": true,
      "time": 0.042058467864990234,
      "error": null
    },
    "assert neg_count([1, 7, -7, -7, 21]) == 2": {
      "result": true,
      "time": 0.04664278030395508,
      "error": null
    },
    "assert neg_count([2, 1, 2, -10, 21]) == 1": {
      "result": true,
      "time": 0.04847455024719238,
      "error": null
    },
    "assert neg_count([3, 6, -6, -7, 18]) == 2": {
      "result": true,
      "time": 0.04435324668884277,
      "error": null
    },
    "assert neg_count([6, 1, 0, -14, 21]) == 2": {
      "result": false,
      "time": 0.04433774948120117,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.8888888888888888,
  "general_error": "",
  "has_testcase_error": false
}