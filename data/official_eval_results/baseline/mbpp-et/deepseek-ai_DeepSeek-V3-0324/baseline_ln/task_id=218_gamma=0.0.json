{
  "code": "def min_Operations(x, y):\n    operations = 0\n    while x != y:\n        if x < y:\n            if y % 2 == 0 and y // 2 >= x:\n                y = y // 2\n            else:\n                y -= 1\n        else:\n            if x % 2 == 0 and x // 2 >= y:\n                x = x // 2\n            else:\n                x -= 1\n        operations += 1\n    return operations",
  "results": {
    "assert min_Operations(2,4) == 1": {
      "result": true,
      "time": 0.04177498817443848,
      "error": null
    },
    "assert min_Operations(4,10) == 4": {
      "result": false,
      "time": 0.03702092170715332,
      "error": null
    },
    "assert min_Operations(1,4) == 3": {
      "result": false,
      "time": 0.05011796951293945,
      "error": null
    },
    "assert min_Operations(1, 7) == 6": {
      "result": false,
      "time": 0.046652793884277344,
      "error": null
    },
    "assert min_Operations(5, 7) == 6": {
      "result": false,
      "time": 0.04733133316040039,
      "error": null
    },
    "assert min_Operations(4, 6) == 2": {
      "result": true,
      "time": 0.05045580863952637,
      "error": null
    },
    "assert min_Operations(2, 9) == 8": {
      "result": false,
      "time": 0.04920029640197754,
      "error": null
    },
    "assert min_Operations(1, 1) == 0": {
      "result": true,
      "time": 0.05119204521179199,
      "error": null
    },
    "assert min_Operations(2, 7) == 6": {
      "result": false,
      "time": 0.0464322566986084,
      "error": null
    },
    "assert min_Operations(2, 5) == 4": {
      "result": false,
      "time": 0.050861358642578125,
      "error": null
    },
    "assert min_Operations(7, 9) == 8": {
      "result": false,
      "time": 0.05378532409667969,
      "error": null
    },
    "assert min_Operations(3, 3) == 0": {
      "result": true,
      "time": 0.05939769744873047,
      "error": null
    },
    "assert min_Operations(6, 6) == 0": {
      "result": true,
      "time": 0.05691170692443848,
      "error": null
    },
    "assert min_Operations(5, 5) == 0": {
      "result": true,
      "time": 0.05101799964904785,
      "error": null
    },
    "assert min_Operations(4, 7) == 6": {
      "result": false,
      "time": 0.054459333419799805,
      "error": null
    },
    "assert min_Operations(1, 4) == 3": {
      "result": false,
      "time": 0.05002093315124512,
      "error": null
    },
    "assert min_Operations(7, 8) == 7": {
      "result": false,
      "time": 0.052330732345581055,
      "error": null
    },
    "assert min_Operations(3, 9) == 2": {
      "result": false,
      "time": 0.052941322326660156,
      "error": null
    },
    "assert min_Operations(6, 7) == 6": {
      "result": false,
      "time": 0.05316424369812012,
      "error": null
    },
    "assert min_Operations(2, 6) == 2": {
      "result": true,
      "time": 0.04242849349975586,
      "error": null
    },
    "assert min_Operations(4, 8) == 1": {
      "result": true,
      "time": 0.04334092140197754,
      "error": null
    },
    "assert min_Operations(3, 8) == 7": {
      "result": false,
      "time": 0.04079151153564453,
      "error": null
    },
    "assert min_Operations(6, 8) == 3": {
      "result": false,
      "time": 0.04508233070373535,
      "error": null
    },
    "assert min_Operations(1, 9) == 8": {
      "result": false,
      "time": 0.045526742935180664,
      "error": null
    },
    "assert min_Operations(5, 6) == 5": {
      "result": false,
      "time": 0.0410761833190918,
      "error": null
    },
    "assert min_Operations(3, 14) == 13": {
      "result": false,
      "time": 0.042174339294433594,
      "error": null
    },
    "assert min_Operations(8, 10) == 4": {
      "result": false,
      "time": 0.04364180564880371,
      "error": null
    },
    "assert min_Operations(8, 11) == 10": {
      "result": false,
      "time": 0.04040646553039551,
      "error": null
    },
    "assert min_Operations(5, 14) == 13": {
      "result": false,
      "time": 0.044487953186035156,
      "error": null
    },
    "assert min_Operations(8, 9) == 8": {
      "result": false,
      "time": 0.04940676689147949,
      "error": null
    },
    "assert min_Operations(7, 13) == 12": {
      "result": false,
      "time": 0.044931650161743164,
      "error": null
    },
    "assert min_Operations(9, 11) == 10": {
      "result": false,
      "time": 0.04137134552001953,
      "error": null
    },
    "assert min_Operations(1, 15) == 14": {
      "result": false,
      "time": 0.04071402549743652,
      "error": null
    },
    "assert min_Operations(4, 10) == 4": {
      "result": false,
      "time": 0.04921364784240723,
      "error": null
    },
    "assert min_Operations(7, 15) == 14": {
      "result": false,
      "time": 0.04130148887634277,
      "error": null
    },
    "assert min_Operations(1, 12) == 11": {
      "result": false,
      "time": 0.04254651069641113,
      "error": null
    },
    "assert min_Operations(3, 10) == 9": {
      "result": false,
      "time": 0.050458669662475586,
      "error": null
    },
    "assert min_Operations(8, 13) == 12": {
      "result": false,
      "time": 0.03426718711853027,
      "error": null
    },
    "assert min_Operations(1, 13) == 12": {
      "result": false,
      "time": 0.04394173622131348,
      "error": null
    },
    "assert min_Operations(4, 9) == 8": {
      "result": false,
      "time": 0.05005478858947754,
      "error": null
    },
    "assert min_Operations(7, 11) == 10": {
      "result": false,
      "time": 0.04167628288269043,
      "error": null
    },
    "assert min_Operations(4, 5) == 4": {
      "result": false,
      "time": 0.04755830764770508,
      "error": null
    },
    "assert min_Operations(9, 12) == 3": {
      "result": true,
      "time": 0.04451107978820801,
      "error": null
    },
    "assert min_Operations(3, 6) == 1": {
      "result": true,
      "time": 0.04694032669067383,
      "error": null
    },
    "assert min_Operations(1, 6) == 5": {
      "result": false,
      "time": 0.04648470878601074,
      "error": null
    },
    "assert min_Operations(1, 8) == 7": {
      "result": false,
      "time": 0.04075312614440918,
      "error": null
    },
    "assert min_Operations(7, 10) == 9": {
      "result": false,
      "time": 0.037930965423583984,
      "error": null
    },
    "assert min_Operations(2, 12) == 5": {
      "result": false,
      "time": 0.04902815818786621,
      "error": null
    },
    "assert min_Operations(1, 3) == 2": {
      "result": true,
      "time": 0.04452967643737793,
      "error": null
    },
    "assert min_Operations(2, 3) == 2": {
      "result": false,
      "time": 0.04394388198852539,
      "error": null
    },
    "assert min_Operations(2, 2) == 0": {
      "result": true,
      "time": 0.04871034622192383,
      "error": null
    },
    "assert min_Operations(3, 4) == 3": {
      "result": false,
      "time": 0.04163336753845215,
      "error": null
    },
    "assert min_Operations(2, 8) == 3": {
      "result": false,
      "time": 0.04572653770446777,
      "error": null
    },
    "assert min_Operations(3, 7) == 6": {
      "result": false,
      "time": 0.042623043060302734,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.2222222222222222,
  "general_error": "",
  "has_testcase_error": false
}