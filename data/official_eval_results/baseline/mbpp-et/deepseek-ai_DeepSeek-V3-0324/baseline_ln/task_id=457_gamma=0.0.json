{
  "code": "def Find_Min(lst):\n    min_len = min(len(sublist) for sublist in lst)\n    min_sublist = [sublist for sublist in lst if len(sublist) == min_len][0]\n    return min_sublist",
  "results": {
    "assert Find_Min([[1],[1,2],[1,2,3]]) == [1]": {
      "result": true,
      "time": 0.04088187217712402,
      "error": null
    },
    "assert Find_Min([[1,1],[1,1,1],[1,2,7,8]]) == [1,1]": {
      "result": true,
      "time": 0.06065082550048828,
      "error": null
    },
    "assert Find_Min([['x'],['x','y'],['x','y','z']]) == ['x']": {
      "result": true,
      "time": 0.04232358932495117,
      "error": null
    },
    "assert Find_Min([[5], [3, 6], [5, 6, 7]]) == [3, 6]": {
      "result": false,
      "time": 0.03759026527404785,
      "error": null
    },
    "assert Find_Min([[1], [6, 1], [3, 5, 4]]) == [1]": {
      "result": true,
      "time": 0.038376808166503906,
      "error": null
    },
    "assert Find_Min([[5], [4, 1], [5, 1, 5]]) == [4, 1]": {
      "result": false,
      "time": 0.04790449142456055,
      "error": null
    },
    "assert Find_Min([[1], [1, 6], [2, 2, 8]]) == [1]": {
      "result": true,
      "time": 0.04331159591674805,
      "error": null
    },
    "assert Find_Min([[6], [4, 7], [2, 2, 4]]) == [2, 2, 4]": {
      "result": false,
      "time": 0.03988456726074219,
      "error": null
    },
    "assert Find_Min([[6], [1, 7], [1, 1, 7]]) == [1, 1, 7]": {
      "result": false,
      "time": 0.0408320426940918,
      "error": null
    },
    "assert Find_Min([[3], [2, 5], [2, 3, 5]]) == [2, 3, 5]": {
      "result": false,
      "time": 0.04892706871032715,
      "error": null
    },
    "assert Find_Min([[4], [6, 6], [1, 3, 5]]) == [1, 3, 5]": {
      "result": false,
      "time": 0.03835868835449219,
      "error": null
    },
    "assert Find_Min([[1], [5, 4], [6, 2, 2]]) == [1]": {
      "result": true,
      "time": 0.045778512954711914,
      "error": null
    },
    "assert Find_Min([[6], [4, 4], [5, 4, 4]]) == [4, 4]": {
      "result": false,
      "time": 0.03969740867614746,
      "error": null
    },
    "assert Find_Min([[5], [4, 5], [5, 6, 1]]) == [4, 5]": {
      "result": false,
      "time": 0.03963351249694824,
      "error": null
    },
    "assert Find_Min([[6], [6, 6], [4, 7, 8]]) == [4, 7, 8]": {
      "result": false,
      "time": 0.03746533393859863,
      "error": null
    },
    "assert Find_Min([[6], [1, 5], [5, 6, 4]]) == [1, 5]": {
      "result": false,
      "time": 0.04121255874633789,
      "error": null
    },
    "assert Find_Min([[4], [4, 4], [6, 6, 3]]) == [4]": {
      "result": true,
      "time": 0.04676485061645508,
      "error": null
    },
    "assert Find_Min([[6], [5, 3], [6, 3, 2]]) == [5, 3]": {
      "result": false,
      "time": 0.043975114822387695,
      "error": null
    },
    "assert Find_Min([[3], [1, 2], [2, 6, 5]]) == [1, 2]": {
      "result": false,
      "time": 0.05433082580566406,
      "error": null
    },
    "assert Find_Min([[6], [1, 6], [2, 3, 8]]) == [1, 6]": {
      "result": false,
      "time": 0.03988814353942871,
      "error": null
    },
    "assert Find_Min([[5], [6, 5], [2, 5, 6]]) == [2, 5, 6]": {
      "result": false,
      "time": 0.04288887977600098,
      "error": null
    },
    "assert Find_Min([[3], [4, 1], [3, 7, 7]]) == [3]": {
      "result": true,
      "time": 0.04693746566772461,
      "error": null
    },
    "assert Find_Min([[2], [2, 2], [5, 7, 5]]) == [2]": {
      "result": true,
      "time": 0.04363250732421875,
      "error": null
    },
    "assert Find_Min([[3], [4, 7], [5, 3, 7]]) == [3]": {
      "result": true,
      "time": 0.04473519325256348,
      "error": null
    },
    "assert Find_Min([[6], [4, 3], [1, 2, 6]]) == [1, 2, 6]": {
      "result": false,
      "time": 0.045022010803222656,
      "error": null
    },
    "assert Find_Min([[3], [3, 1], [2, 2, 5]]) == [2, 2, 5]": {
      "result": false,
      "time": 0.04828214645385742,
      "error": null
    },
    "assert Find_Min([[1], [3, 7], [1, 2, 6]]) == [1]": {
      "result": true,
      "time": 0.044509172439575195,
      "error": null
    },
    "assert Find_Min([[3], [2, 5], [6, 2, 1]]) == [2, 5]": {
      "result": false,
      "time": 0.037715911865234375,
      "error": null
    },
    "assert Find_Min([[4], [3, 4], [4, 3, 8]]) == [3, 4]": {
      "result": false,
      "time": 0.04597020149230957,
      "error": null
    },
    "assert Find_Min([[1], [1, 4], [4, 6, 7]]) == [1]": {
      "result": true,
      "time": 0.04265785217285156,
      "error": null
    },
    "assert Find_Min([[5], [6, 5], [5, 5, 6]]) == [5]": {
      "result": true,
      "time": 0.037873029708862305,
      "error": null
    },
    "assert Find_Min([[3], [3, 4], [3, 1, 6]]) == [3]": {
      "result": true,
      "time": 0.03577280044555664,
      "error": null
    },
    "assert Find_Min([[6], [3, 3], [4, 2, 8]]) == [3, 3]": {
      "result": false,
      "time": 0.044693946838378906,
      "error": null
    },
    "assert Find_Min([[4], [3, 7], [6, 5, 8]]) == [3, 7]": {
      "result": false,
      "time": 0.04421544075012207,
      "error": null
    },
    "assert Find_Min([[4], [4, 6], [2, 5, 1]]) == [2, 5, 1]": {
      "result": false,
      "time": 0.040788888931274414,
      "error": null
    },
    "assert Find_Min([[4], [6, 2], [4, 6, 7]]) == [4]": {
      "result": true,
      "time": 0.0487370491027832,
      "error": null
    },
    "assert Find_Min([[4, 5], [1, 4, 1], [6, 2, 9, 13]]) == [1, 4, 1]": {
      "result": false,
      "time": 0.04442930221557617,
      "error": null
    },
    "assert Find_Min([[4, 3], [4, 5, 3], [2, 3, 4, 8]]) == [2, 3, 4, 8]": {
      "result": false,
      "time": 0.03713846206665039,
      "error": null
    },
    "assert Find_Min([[3, 4], [5, 6, 4], [6, 5, 4, 12]]) == [3, 4]": {
      "result": true,
      "time": 0.0488584041595459,
      "error": null
    },
    "assert Find_Min([[4, 4], [1, 5, 6], [5, 3, 12, 11]]) == [1, 5, 6]": {
      "result": false,
      "time": 0.040480852127075195,
      "error": null
    },
    "assert Find_Min([[2, 2], [4, 2, 5], [1, 5, 10, 3]]) == [1, 5, 10, 3]": {
      "result": false,
      "time": 0.04894876480102539,
      "error": null
    },
    "assert Find_Min([[1, 6], [5, 2, 6], [5, 7, 11, 5]]) == [1, 6]": {
      "result": true,
      "time": 0.04024314880371094,
      "error": null
    },
    "assert Find_Min([[3, 1], [4, 2, 1], [2, 5, 6, 5]]) == [2, 5, 6, 5]": {
      "result": false,
      "time": 0.04546070098876953,
      "error": null
    },
    "assert Find_Min([[2, 4], [2, 1, 1], [4, 3, 11, 9]]) == [2, 1, 1]": {
      "result": false,
      "time": 0.038135528564453125,
      "error": null
    },
    "assert Find_Min([[1, 4], [2, 2, 4], [5, 4, 10, 8]]) == [1, 4]": {
      "result": true,
      "time": 0.03816819190979004,
      "error": null
    },
    "assert Find_Min([[2, 2], [1, 5, 6], [5, 7, 2, 8]]) == [1, 5, 6]": {
      "result": false,
      "time": 0.03725576400756836,
      "error": null
    },
    "assert Find_Min([[3, 6], [4, 2, 3], [6, 2, 7, 12]]) == [3, 6]": {
      "result": true,
      "time": 0.031972646713256836,
      "error": null
    },
    "assert Find_Min([[2, 1], [3, 1, 5], [1, 6, 10, 11]]) == [1, 6, 10, 11]": {
      "result": false,
      "time": 0.0334625244140625,
      "error": null
    },
    "assert Find_Min([[3, 4], [5, 1, 2], [3, 5, 4, 11]]) == [3, 4]": {
      "result": true,
      "time": 0.04374217987060547,
      "error": null
    },
    "assert Find_Min([[4, 2], [4, 1, 3], [5, 7, 4, 4]]) == [4, 1, 3]": {
      "result": false,
      "time": 0.04053854942321777,
      "error": null
    },
    "assert Find_Min([[5, 3], [6, 1, 1], [6, 5, 11, 7]]) == [5, 3]": {
      "result": true,
      "time": 0.03348994255065918,
      "error": null
    },
    "assert Find_Min([[2, 6], [5, 6, 2], [3, 7, 3, 11]]) == [2, 6]": {
      "result": true,
      "time": 0.044213294982910156,
      "error": null
    },
    "assert Find_Min([[4, 6], [6, 4, 6], [6, 2, 8, 7]]) == [4, 6]": {
      "result": true,
      "time": 0.044883012771606445,
      "error": null
    },
    "assert Find_Min([[4, 2], [6, 4, 5], [1, 6, 3, 4]]) == [1, 6, 3, 4]": {
      "result": false,
      "time": 0.040570735931396484,
      "error": null
    },
    "assert Find_Min([[4, 3], [6, 2, 2], [2, 2, 7, 10]]) == [2, 2, 7, 10]": {
      "result": false,
      "time": 0.0469820499420166,
      "error": null
    },
    "assert Find_Min([[2, 1], [3, 5, 4], [4, 6, 12, 9]]) == [2, 1]": {
      "result": true,
      "time": 0.04468369483947754,
      "error": null
    },
    "assert Find_Min([[3, 6], [2, 3, 6], [3, 2, 10, 8]]) == [2, 3, 6]": {
      "result": false,
      "time": 0.04269766807556152,
      "error": null
    },
    "assert Find_Min([[2, 6], [6, 2, 3], [6, 2, 9, 8]]) == [2, 6]": {
      "result": true,
      "time": 0.04336357116699219,
      "error": null
    },
    "assert Find_Min([[6, 2], [2, 1, 3], [2, 2, 8, 4]]) == [2, 1, 3]": {
      "result": false,
      "time": 0.04687857627868652,
      "error": null
    },
    "assert Find_Min([[2, 5], [4, 4, 5], [2, 2, 3, 12]]) == [2, 2, 3, 12]": {
      "result": false,
      "time": 0.04099678993225098,
      "error": null
    },
    "assert Find_Min([[6, 5], [4, 2, 2], [2, 7, 8, 13]]) == [2, 7, 8, 13]": {
      "result": false,
      "time": 0.04214620590209961,
      "error": null
    },
    "assert Find_Min([[5, 5], [3, 6, 5], [2, 6, 12, 11]]) == [2, 6, 12, 11]": {
      "result": false,
      "time": 0.04572486877441406,
      "error": null
    },
    "assert Find_Min([[6, 6], [1, 2, 3], [4, 2, 2, 9]]) == [1, 2, 3]": {
      "result": false,
      "time": 0.038938283920288086,
      "error": null
    },
    "assert Find_Min([[1, 6], [2, 6, 1], [5, 7, 7, 7]]) == [1, 6]": {
      "result": true,
      "time": 0.04807329177856445,
      "error": null
    },
    "assert Find_Min([[5, 2], [6, 4, 6], [6, 2, 6, 5]]) == [5, 2]": {
      "result": true,
      "time": 0.03965163230895996,
      "error": null
    },
    "assert Find_Min([[2, 5], [4, 5, 3], [6, 4, 6, 12]]) == [2, 5]": {
      "result": true,
      "time": 0.042209625244140625,
      "error": null
    },
    "assert Find_Min([[3, 2], [3, 3, 5], [6, 6, 5, 10]]) == [3, 2]": {
      "result": true,
      "time": 0.034219980239868164,
      "error": null
    },
    "assert Find_Min([[2, 2], [2, 2, 2], [6, 5, 3, 9]]) == [2, 2]": {
      "result": true,
      "time": 0.042131662368774414,
      "error": null
    },
    "assert Find_Min([[1, 3], [6, 4, 2], [1, 7, 8, 7]]) == [1, 3]": {
      "result": true,
      "time": 0.04955554008483887,
      "error": null
    },
    "assert Find_Min([['l'], ['a', 'v'], ['z', 'j', 'r']]) == ['a', 'v']": {
      "result": false,
      "time": 0.041776180267333984,
      "error": null
    },
    "assert Find_Min([['t'], ['w', 'e'], ['a', 't', 'z']]) == ['a', 't', 'z']": {
      "result": false,
      "time": 0.04861879348754883,
      "error": null
    },
    "assert Find_Min([['n'], ['w', 'b'], ['y', 'u', 'r']]) == ['n']": {
      "result": true,
      "time": 0.03918743133544922,
      "error": null
    },
    "assert Find_Min([['w'], ['w', 'e'], ['p', 'v', 'm']]) == ['p', 'v', 'm']": {
      "result": false,
      "time": 0.04546236991882324,
      "error": null
    },
    "assert Find_Min([['i'], ['u', 'u'], ['t', 'r', 'n']]) == ['i']": {
      "result": true,
      "time": 0.04755234718322754,
      "error": null
    },
    "assert Find_Min([['g'], ['p', 'n'], ['z', 'y', 'd']]) == ['g']": {
      "result": true,
      "time": 0.04398512840270996,
      "error": null
    },
    "assert Find_Min([['n'], ['y', 'h'], ['t', 'b', 't']]) == ['n']": {
      "result": true,
      "time": 0.04264497756958008,
      "error": null
    },
    "assert Find_Min([['h'], ['f', 'z'], ['u', 'j', 'i']]) == ['f', 'z']": {
      "result": false,
      "time": 0.04478764533996582,
      "error": null
    },
    "assert Find_Min([['u'], ['c', 'a'], ['q', 'u', 'v']]) == ['c', 'a']": {
      "result": false,
      "time": 0.0326080322265625,
      "error": null
    },
    "assert Find_Min([['w'], ['g', 'u'], ['y', 'i', 'c']]) == ['g', 'u']": {
      "result": false,
      "time": 0.041085004806518555,
      "error": null
    },
    "assert Find_Min([['k'], ['m', 'w'], ['t', 'y', 'a']]) == ['k']": {
      "result": true,
      "time": 0.04341387748718262,
      "error": null
    },
    "assert Find_Min([['z'], ['p', 'd'], ['i', 'l', 'j']]) == ['i', 'l', 'j']": {
      "result": false,
      "time": 0.035477638244628906,
      "error": null
    },
    "assert Find_Min([['d'], ['w', 'f'], ['d', 'm', 'o']]) == ['d']": {
      "result": true,
      "time": 0.044336557388305664,
      "error": null
    },
    "assert Find_Min([['i'], ['d', 'i'], ['q', 'l', 'd']]) == ['d', 'i']": {
      "result": false,
      "time": 0.03562736511230469,
      "error": null
    },
    "assert Find_Min([['d'], ['m', 'f'], ['w', 'r', 'u']]) == ['d']": {
      "result": true,
      "time": 0.042679786682128906,
      "error": null
    },
    "assert Find_Min([['l'], ['i', 'g'], ['t', 'm', 'z']]) == ['i', 'g']": {
      "result": false,
      "time": 0.03212571144104004,
      "error": null
    },
    "assert Find_Min([['n'], ['i', 'n'], ['c', 'p', 'v']]) == ['c', 'p', 'v']": {
      "result": false,
      "time": 0.037432193756103516,
      "error": null
    },
    "assert Find_Min([['q'], ['c', 'o'], ['y', 'k', 'p']]) == ['c', 'o']": {
      "result": false,
      "time": 0.04486203193664551,
      "error": null
    },
    "assert Find_Min([['s'], ['y', 'b'], ['r', 'd', 'r']]) == ['r', 'd', 'r']": {
      "result": false,
      "time": 0.03661084175109863,
      "error": null
    },
    "assert Find_Min([['d'], ['r', 't'], ['z', 'o', 'i']]) == ['d']": {
      "result": true,
      "time": 0.04443240165710449,
      "error": null
    },
    "assert Find_Min([['n'], ['v', 'd'], ['t', 'd', 'b']]) == ['n']": {
      "result": true,
      "time": 0.045316457748413086,
      "error": null
    },
    "assert Find_Min([['h'], ['e', 'i'], ['g', 'k', 'm']]) == ['e', 'i']": {
      "result": false,
      "time": 0.04461479187011719,
      "error": null
    },
    "assert Find_Min([['c'], ['d', 'c'], ['j', 's', 'r']]) == ['c']": {
      "result": true,
      "time": 0.0449223518371582,
      "error": null
    },
    "assert Find_Min([['u'], ['k', 'm'], ['p', 'w', 'b']]) == ['k', 'm']": {
      "result": false,
      "time": 0.04120159149169922,
      "error": null
    },
    "assert Find_Min([['y'], ['m', 'r'], ['n', 'v', 'f']]) == ['m', 'r']": {
      "result": false,
      "time": 0.05405139923095703,
      "error": null
    },
    "assert Find_Min([['a'], ['o', 'y'], ['f', 'y', 'p']]) == ['a']": {
      "result": true,
      "time": 0.04290175437927246,
      "error": null
    },
    "assert Find_Min([['x'], ['a', 'l'], ['i', 'm', 'k']]) == ['a', 'l']": {
      "result": false,
      "time": 0.045610666275024414,
      "error": null
    },
    "assert Find_Min([['p'], ['w', 'r'], ['s', 'l', 'h']]) == ['p']": {
      "result": true,
      "time": 0.043766021728515625,
      "error": null
    },
    "assert Find_Min([['c'], ['e', 'm'], ['e', 'z', 'p']]) == ['c']": {
      "result": true,
      "time": 0.043711185455322266,
      "error": null
    },
    "assert Find_Min([['x'], ['q', 'p'], ['j', 'm', 'g']]) == ['j', 'm', 'g']": {
      "result": false,
      "time": 0.04608726501464844,
      "error": null
    },
    "assert Find_Min([['c'], ['e', 'h'], ['j', 'j', 'q']]) == ['c']": {
      "result": true,
      "time": 0.04986834526062012,
      "error": null
    },
    "assert Find_Min([['v'], ['s', 'w'], ['f', 'm', 'f']]) == ['f', 'm', 'f']": {
      "result": false,
      "time": 0.045614004135131836,
      "error": null
    },
    "assert Find_Min([['n'], ['t', 'g'], ['i', 'c', 'w']]) == ['i', 'c', 'w']": {
      "result": false,
      "time": 0.04331088066101074,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.4411764705882353,
  "general_error": "",
  "has_testcase_error": false
}