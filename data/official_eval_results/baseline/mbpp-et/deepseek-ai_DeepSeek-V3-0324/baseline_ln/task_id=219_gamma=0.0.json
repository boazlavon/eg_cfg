{
  "code": "def extract_min_max(test_tup, k):\n    sorted_tup = sorted(test_tup)\n    min_k = sorted_tup[:k]\n    max_k = sorted_tup[-k:]\n    result = tuple(min_k + max_k)\n    return result",
  "results": {
    "assert extract_min_max((5, 20, 3, 7, 6, 8), 2) == (3, 5, 8, 20)": {
      "result": true,
      "time": 0.04430818557739258,
      "error": null
    },
    "assert extract_min_max((4, 5, 6, 1, 2, 7), 3) == (1, 2, 4, 5, 6, 7)": {
      "result": true,
      "time": 0.04003000259399414,
      "error": null
    },
    "assert extract_min_max((2, 3, 4, 8, 9, 11, 7), 4) == (2, 3, 4, 7, 8, 9, 11)": {
      "result": false,
      "time": 0.04566502571105957,
      "error": null
    },
    "assert extract_min_max((3, 23, 6, 8, 11, 3), 6) == (3, 3, 6, 8, 11, 23)": {
      "result": false,
      "time": 0.0509800910949707,
      "error": null
    },
    "assert extract_min_max((7, 24, 4, 7, 11, 3), 6) == (3, 4, 7, 7, 11, 24)": {
      "result": false,
      "time": 0.04536747932434082,
      "error": null
    },
    "assert extract_min_max((2, 25, 2, 2, 5, 8), 4) == (2, 2, 2, 5, 8, 25)": {
      "result": false,
      "time": 0.04250693321228027,
      "error": null
    },
    "assert extract_min_max((9, 25, 6, 3, 9, 8), 3) == (3, 6, 8, 9, 9, 25)": {
      "result": true,
      "time": 0.04735255241394043,
      "error": null
    },
    "assert extract_min_max((8, 22, 7, 12, 2, 13), 4) == (2, 7, 8, 12, 13, 22)": {
      "result": false,
      "time": 0.04551529884338379,
      "error": null
    },
    "assert extract_min_max((5, 24, 5, 9, 7, 7), 7) == (5, 5, 7, 7, 9, 24)": {
      "result": false,
      "time": 0.04582047462463379,
      "error": null
    },
    "assert extract_min_max((6, 18, 4, 5, 11, 11), 3) == (4, 5, 6, 11, 11, 18)": {
      "result": true,
      "time": 0.05393671989440918,
      "error": null
    },
    "assert extract_min_max((3, 18, 3, 3, 2, 7), 5) == (2, 3, 3, 3, 7, 18)": {
      "result": false,
      "time": 0.0481259822845459,
      "error": null
    },
    "assert extract_min_max((3, 22, 1, 12, 5, 12), 1) == (1, 22)": {
      "result": true,
      "time": 0.045471906661987305,
      "error": null
    },
    "assert extract_min_max((6, 19, 2, 10, 11, 11), 7) == (2, 6, 10, 11, 11, 19)": {
      "result": false,
      "time": 0.04830646514892578,
      "error": null
    },
    "assert extract_min_max((1, 24, 6, 11, 2, 13), 3) == (1, 2, 6, 11, 13, 24)": {
      "result": true,
      "time": 0.05047750473022461,
      "error": null
    },
    "assert extract_min_max((7, 18, 3, 4, 8, 4), 3) == (3, 4, 4, 7, 8, 18)": {
      "result": true,
      "time": 0.032292842864990234,
      "error": null
    },
    "assert extract_min_max((5, 15, 8, 7, 3, 9), 1) == (3, 15)": {
      "result": true,
      "time": 0.03359794616699219,
      "error": null
    },
    "assert extract_min_max((5, 24, 5, 4, 5, 7), 4) == (4, 5, 5, 5, 7, 24)": {
      "result": false,
      "time": 0.04333639144897461,
      "error": null
    },
    "assert extract_min_max((10, 20, 4, 8, 10, 4), 7) == (4, 4, 8, 10, 10, 20)": {
      "result": false,
      "time": 0.03554224967956543,
      "error": null
    },
    "assert extract_min_max((9, 16, 8, 6, 6, 8), 1) == (6, 16)": {
      "result": true,
      "time": 0.03480052947998047,
      "error": null
    },
    "assert extract_min_max((5, 25, 6, 6, 7, 11), 3) == (5, 6, 6, 7, 11, 25)": {
      "result": true,
      "time": 0.03666210174560547,
      "error": null
    },
    "assert extract_min_max((6, 23, 7, 2, 8, 3), 1) == (2, 23)": {
      "result": true,
      "time": 0.03764796257019043,
      "error": null
    },
    "assert extract_min_max((4, 19, 3, 8, 6, 12), 7) == (3, 4, 6, 8, 12, 19)": {
      "result": false,
      "time": 0.04207134246826172,
      "error": null
    },
    "assert extract_min_max((5, 23, 2, 2, 11, 8), 1) == (2, 23)": {
      "result": true,
      "time": 0.03609204292297363,
      "error": null
    },
    "assert extract_min_max((7, 25, 5, 4, 10, 12), 6) == (4, 5, 7, 10, 12, 25)": {
      "result": false,
      "time": 0.041528940200805664,
      "error": null
    },
    "assert extract_min_max((8, 16, 8, 2, 3, 12), 4) == (2, 3, 8, 8, 12, 16)": {
      "result": false,
      "time": 0.04217886924743652,
      "error": null
    },
    "assert extract_min_max((4, 15, 8, 11, 2, 4), 2) == (2, 4, 11, 15)": {
      "result": true,
      "time": 0.037940263748168945,
      "error": null
    },
    "assert extract_min_max((5, 19, 8, 10, 1, 9), 6) == (1, 5, 8, 9, 10, 19)": {
      "result": false,
      "time": 0.03306436538696289,
      "error": null
    },
    "assert extract_min_max((9, 24, 7, 3, 5, 10), 1) == (3, 24)": {
      "result": true,
      "time": 0.03900718688964844,
      "error": null
    },
    "assert extract_min_max((1, 20, 6, 10, 11, 11), 6) == (1, 6, 10, 11, 11, 20)": {
      "result": false,
      "time": 0.03745532035827637,
      "error": null
    },
    "assert extract_min_max((2, 25, 3, 8, 4, 9), 7) == (2, 3, 4, 8, 9, 25)": {
      "result": false,
      "time": 0.04226040840148926,
      "error": null
    },
    "assert extract_min_max((3, 17, 3, 11, 4, 3), 2) == (3, 3, 11, 17)": {
      "result": true,
      "time": 0.0337834358215332,
      "error": null
    },
    "assert extract_min_max((9, 24, 3, 6, 2, 10), 6) == (2, 3, 6, 9, 10, 24)": {
      "result": false,
      "time": 0.040372371673583984,
      "error": null
    },
    "assert extract_min_max((4, 15, 6, 6, 5, 7), 6) == (4, 5, 6, 6, 7, 15)": {
      "result": false,
      "time": 0.04017496109008789,
      "error": null
    },
    "assert extract_min_max((10, 20, 5, 5, 3, 6), 6) == (3, 5, 5, 6, 10, 20)": {
      "result": false,
      "time": 0.03644442558288574,
      "error": null
    },
    "assert extract_min_max((6, 20, 7, 10, 6, 13), 6) == (6, 6, 7, 10, 13, 20)": {
      "result": false,
      "time": 0.034783363342285156,
      "error": null
    },
    "assert extract_min_max((6, 25, 2, 8, 2, 9), 5) == (2, 2, 6, 8, 9, 25)": {
      "result": false,
      "time": 0.0360562801361084,
      "error": null
    },
    "assert extract_min_max((9, 3, 3, 5, 7, 10), 3) == (3, 3, 5, 7, 9, 10)": {
      "result": true,
      "time": 0.03935718536376953,
      "error": null
    },
    "assert extract_min_max((2, 4, 2, 6, 3, 3), 1) == (2, 6)": {
      "result": true,
      "time": 0.040879011154174805,
      "error": null
    },
    "assert extract_min_max((4, 1, 4, 6, 3, 11), 6) == (1, 3, 4, 4, 6, 11)": {
      "result": false,
      "time": 0.037520408630371094,
      "error": null
    },
    "assert extract_min_max((6, 9, 11, 6, 6, 10), 2) == (6, 6, 10, 11)": {
      "result": true,
      "time": 0.04134869575500488,
      "error": null
    },
    "assert extract_min_max((4, 1, 2, 2, 3, 4), 6) == (1, 2, 2, 3, 4, 4)": {
      "result": false,
      "time": 0.04024052619934082,
      "error": null
    },
    "assert extract_min_max((7, 2, 10, 4, 2, 2), 1) == (2, 10)": {
      "result": true,
      "time": 0.03865361213684082,
      "error": null
    },
    "assert extract_min_max((6, 2, 4, 1, 5, 3), 6) == (1, 2, 3, 4, 5, 6)": {
      "result": false,
      "time": 0.044419288635253906,
      "error": null
    },
    "assert extract_min_max((2, 8, 5, 1, 1, 3), 4) == (1, 1, 2, 3, 5, 8)": {
      "result": false,
      "time": 0.04124641418457031,
      "error": null
    },
    "assert extract_min_max((2, 6, 6, 6, 4, 7), 8) == (2, 4, 6, 6, 6, 7)": {
      "result": false,
      "time": 0.04082059860229492,
      "error": null
    },
    "assert extract_min_max((5, 8, 1, 5, 3, 6), 6) == (1, 3, 5, 5, 6, 8)": {
      "result": false,
      "time": 0.04313802719116211,
      "error": null
    },
    "assert extract_min_max((9, 6, 11, 3, 1, 9), 1) == (1, 11)": {
      "result": true,
      "time": 0.041214704513549805,
      "error": null
    },
    "assert extract_min_max((2, 10, 4, 6, 3, 5), 3) == (2, 3, 4, 5, 6, 10)": {
      "result": true,
      "time": 0.04104208946228027,
      "error": null
    },
    "assert extract_min_max((4, 9, 5, 1, 1, 8), 4) == (1, 1, 4, 5, 8, 9)": {
      "result": false,
      "time": 0.04065966606140137,
      "error": null
    },
    "assert extract_min_max((9, 2, 9, 2, 4, 9), 1) == (2, 9)": {
      "result": true,
      "time": 0.03922748565673828,
      "error": null
    },
    "assert extract_min_max((9, 4, 6, 3, 4, 11), 5) == (3, 4, 4, 6, 9, 11)": {
      "result": false,
      "time": 0.043817996978759766,
      "error": null
    },
    "assert extract_min_max((3, 7, 10, 3, 3, 3), 2) == (3, 3, 7, 10)": {
      "result": true,
      "time": 0.04614448547363281,
      "error": null
    },
    "assert extract_min_max((2, 6, 8, 4, 7, 11), 3) == (2, 4, 6, 7, 8, 11)": {
      "result": true,
      "time": 0.03917074203491211,
      "error": null
    },
    "assert extract_min_max((2, 7, 6, 3, 5, 6), 4) == (2, 3, 5, 6, 6, 7)": {
      "result": false,
      "time": 0.04169821739196777,
      "error": null
    },
    "assert extract_min_max((2, 7, 7, 5, 6, 3), 1) == (2, 7)": {
      "result": true,
      "time": 0.04125237464904785,
      "error": null
    },
    "assert extract_min_max((7, 3, 11, 4, 2, 10), 1) == (2, 11)": {
      "result": true,
      "time": 0.04534554481506348,
      "error": null
    },
    "assert extract_min_max((7, 4, 8, 1, 3, 4), 2) == (1, 3, 7, 8)": {
      "result": true,
      "time": 0.03755903244018555,
      "error": null
    },
    "assert extract_min_max((2, 4, 9, 1, 5, 6), 8) == (1, 2, 4, 5, 6, 9)": {
      "result": false,
      "time": 0.03780722618103027,
      "error": null
    },
    "assert extract_min_max((3, 5, 6, 3, 4, 2), 5) == (2, 3, 3, 4, 5, 6)": {
      "result": false,
      "time": 0.0373072624206543,
      "error": null
    },
    "assert extract_min_max((3, 4, 7, 2, 6, 9), 7) == (2, 3, 4, 6, 7, 9)": {
      "result": false,
      "time": 0.0363621711730957,
      "error": null
    },
    "assert extract_min_max((1, 5, 8, 6, 1, 11), 5) == (1, 1, 5, 6, 8, 11)": {
      "result": false,
      "time": 0.04153633117675781,
      "error": null
    },
    "assert extract_min_max((2, 2, 9, 6, 5, 9), 5) == (2, 2, 5, 6, 9, 9)": {
      "result": false,
      "time": 0.03853297233581543,
      "error": null
    },
    "assert extract_min_max((7, 4, 2, 5, 4, 6), 8) == (2, 4, 4, 5, 6, 7)": {
      "result": false,
      "time": 0.038281917572021484,
      "error": null
    },
    "assert extract_min_max((8, 2, 4, 3, 7, 6), 4) == (2, 3, 4, 6, 7, 8)": {
      "result": false,
      "time": 0.03963303565979004,
      "error": null
    },
    "assert extract_min_max((1, 2, 2, 3, 2, 3), 1) == (1, 3)": {
      "result": true,
      "time": 0.034848690032958984,
      "error": null
    },
    "assert extract_min_max((9, 3, 1, 5, 6, 7), 5) == (1, 3, 5, 6, 7, 9)": {
      "result": false,
      "time": 0.03565812110900879,
      "error": null
    },
    "assert extract_min_max((4, 1, 10, 2, 4, 8), 7) == (1, 2, 4, 4, 8, 10)": {
      "result": false,
      "time": 0.02992415428161621,
      "error": null
    },
    "assert extract_min_max((6, 9, 10, 6, 6, 9), 2) == (6, 6, 9, 10)": {
      "result": true,
      "time": 0.04338216781616211,
      "error": null
    },
    "assert extract_min_max((3, 3, 7, 1, 1, 4), 7) == (1, 1, 3, 3, 4, 7)": {
      "result": false,
      "time": 0.042265892028808594,
      "error": null
    },
    "assert extract_min_max((3, 3, 6, 6, 7, 15, 3), 3) == (3, 3, 3, 6, 7, 15)": {
      "result": true,
      "time": 0.0379025936126709,
      "error": null
    },
    "assert extract_min_max((4, 7, 3, 9, 9, 13, 6), 1) == (3, 13)": {
      "result": true,
      "time": 0.0399167537689209,
      "error": null
    },
    "assert extract_min_max((2, 3, 3, 5, 11, 9, 5), 4) == (2, 3, 3, 5, 5, 9, 11)": {
      "result": false,
      "time": 0.035750627517700195,
      "error": null
    },
    "assert extract_min_max((5, 6, 3, 10, 7, 16, 5), 4) == (3, 5, 5, 6, 7, 10, 16)": {
      "result": false,
      "time": 0.04252028465270996,
      "error": null
    },
    "assert extract_min_max((1, 7, 1, 6, 11, 15, 10), 5) == (1, 1, 6, 7, 10, 11, 15)": {
      "result": false,
      "time": 0.040747880935668945,
      "error": null
    },
    "assert extract_min_max((3, 3, 1, 5, 11, 12, 8), 2) == (1, 3, 11, 12)": {
      "result": true,
      "time": 0.03633832931518555,
      "error": null
    },
    "assert extract_min_max((6, 2, 4, 7, 5, 8, 5), 1) == (2, 8)": {
      "result": true,
      "time": 0.03987383842468262,
      "error": null
    },
    "assert extract_min_max((3, 7, 9, 5, 12, 14, 11), 7) == (3, 5, 7, 9, 11, 12, 14)": {
      "result": false,
      "time": 0.0382843017578125,
      "error": null
    },
    "assert extract_min_max((7, 5, 9, 7, 12, 6, 2), 9) == (2, 5, 6, 7, 7, 9, 12)": {
      "result": false,
      "time": 0.0385432243347168,
      "error": null
    },
    "assert extract_min_max((6, 4, 6, 3, 6, 16, 12), 5) == (3, 4, 6, 6, 6, 12, 16)": {
      "result": false,
      "time": 0.03391909599304199,
      "error": null
    },
    "assert extract_min_max((2, 3, 8, 4, 4, 16, 5), 7) == (2, 3, 4, 4, 5, 8, 16)": {
      "result": false,
      "time": 0.04332375526428223,
      "error": null
    },
    "assert extract_min_max((2, 3, 5, 13, 5, 13, 7), 8) == (2, 3, 5, 5, 7, 13, 13)": {
      "result": false,
      "time": 0.04024076461791992,
      "error": null
    },
    "assert extract_min_max((4, 7, 5, 4, 7, 9, 5), 5) == (4, 4, 5, 5, 7, 7, 9)": {
      "result": false,
      "time": 0.03594684600830078,
      "error": null
    },
    "assert extract_min_max((5, 2, 9, 6, 13, 13, 3), 6) == (2, 3, 5, 6, 9, 13, 13)": {
      "result": false,
      "time": 0.04178452491760254,
      "error": null
    },
    "assert extract_min_max((7, 8, 2, 10, 5, 9, 12), 3) == (2, 5, 7, 9, 10, 12)": {
      "result": true,
      "time": 0.041504621505737305,
      "error": null
    },
    "assert extract_min_max((7, 1, 4, 13, 7, 12, 4), 5) == (1, 4, 4, 7, 7, 12, 13)": {
      "result": false,
      "time": 0.03837251663208008,
      "error": null
    },
    "assert extract_min_max((3, 2, 7, 6, 13, 9, 5), 7) == (2, 3, 5, 6, 7, 9, 13)": {
      "result": false,
      "time": 0.043256521224975586,
      "error": null
    },
    "assert extract_min_max((2, 4, 7, 12, 14, 9, 8), 5) == (2, 4, 7, 8, 9, 12, 14)": {
      "result": false,
      "time": 0.042099952697753906,
      "error": null
    },
    "assert extract_min_max((6, 6, 6, 8, 12, 6, 7), 3) == (6, 6, 6, 7, 8, 12)": {
      "result": true,
      "time": 0.035839080810546875,
      "error": null
    },
    "assert extract_min_max((6, 5, 4, 10, 4, 10, 9), 3) == (4, 4, 5, 9, 10, 10)": {
      "result": true,
      "time": 0.0404207706451416,
      "error": null
    },
    "assert extract_min_max((4, 8, 3, 13, 13, 16, 3), 7) == (3, 3, 4, 8, 13, 13, 16)": {
      "result": false,
      "time": 0.03623199462890625,
      "error": null
    },
    "assert extract_min_max((4, 2, 7, 8, 7, 11, 6), 6) == (2, 4, 6, 7, 7, 8, 11)": {
      "result": false,
      "time": 0.03744220733642578,
      "error": null
    },
    "assert extract_min_max((7, 2, 5, 12, 9, 16, 5), 6) == (2, 5, 5, 7, 9, 12, 16)": {
      "result": false,
      "time": 0.04117774963378906,
      "error": null
    },
    "assert extract_min_max((7, 1, 1, 8, 10, 6, 12), 2) == (1, 1, 10, 12)": {
      "result": true,
      "time": 0.04336738586425781,
      "error": null
    },
    "assert extract_min_max((4, 4, 2, 7, 5, 8, 4), 7) == (2, 4, 4, 4, 5, 7, 8)": {
      "result": false,
      "time": 0.04133915901184082,
      "error": null
    },
    "assert extract_min_max((7, 1, 6, 3, 5, 8, 2), 2) == (1, 2, 7, 8)": {
      "result": true,
      "time": 0.030597209930419922,
      "error": null
    },
    "assert extract_min_max((5, 8, 4, 10, 9, 16, 5), 5) == (4, 5, 5, 8, 9, 10, 16)": {
      "result": false,
      "time": 0.03559064865112305,
      "error": null
    },
    "assert extract_min_max((5, 6, 4, 8, 8, 6, 10), 3) == (4, 5, 6, 8, 8, 10)": {
      "result": true,
      "time": 0.04563188552856445,
      "error": null
    },
    "assert extract_min_max((2, 3, 7, 8, 9, 16, 2), 5) == (2, 2, 3, 7, 8, 9, 16)": {
      "result": false,
      "time": 0.036131858825683594,
      "error": null
    },
    "assert extract_min_max((3, 2, 6, 13, 11, 7, 2), 6) == (2, 2, 3, 6, 7, 11, 13)": {
      "result": false,
      "time": 0.03964400291442871,
      "error": null
    },
    "assert extract_min_max((5, 8, 4, 10, 4, 16, 9), 9) == (4, 4, 5, 8, 9, 10, 16)": {
      "result": false,
      "time": 0.034151554107666016,
      "error": null
    },
    "assert extract_min_max((7, 4, 1, 9, 13, 12, 3), 8) == (1, 3, 4, 7, 9, 12, 13)": {
      "result": false,
      "time": 0.03873443603515625,
      "error": null
    },
    "assert extract_min_max((1, 3, 3, 6, 12, 6, 4), 3) == (1, 3, 3, 6, 6, 12)": {
      "result": true,
      "time": 0.04264116287231445,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.39215686274509803,
  "general_error": "",
  "has_testcase_error": false
}