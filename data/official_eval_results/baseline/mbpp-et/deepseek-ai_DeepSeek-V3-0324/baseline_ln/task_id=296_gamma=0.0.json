{
  "code": "def get_Inv_Count(arr, n):\n    return merge_sort(arr, 0, n - 1)\n\ndef merge_sort(arr, left, right):\n    inv_count = 0\n    if left < right:\n        mid = (left + right) // 2\n        inv_count += merge_sort(arr, left, mid)\n        inv_count += merge_sort(arr, mid + 1, right)\n        inv_count += merge(arr, left, mid, right)\n    return inv_count\n\ndef merge(arr, left, mid, right):\n    temp = []\n    i = left\n    j = mid + 1\n    inv_count = 0\n\n    while i <= mid and j <= right:\n        if arr[i] <= arr[j]:\n            temp.append(arr[i])\n            i += 1\n        else:\n            temp.append(arr[j])\n            inv_count += (mid - i + 1)\n            j += 1\n\n    while i <= mid:\n        temp.append(arr[i])\n        i += 1\n\n    while j <= right:\n        temp.append(arr[j])\n        j += 1\n\n    for k in range(len(temp)):\n        arr[left + k] = temp[k]\n\n    return inv_count",
  "results": {
    "assert get_Inv_Count([1,20,6,4,5],5) == 5": {
      "result": true,
      "time": 0.045357704162597656,
      "error": null
    },
    "assert get_Inv_Count([1,2,1],3) == 1": {
      "result": true,
      "time": 0.04459190368652344,
      "error": null
    },
    "assert get_Inv_Count([1,2,5,6,1],5) == 3": {
      "result": true,
      "time": 0.04002809524536133,
      "error": null
    },
    "assert get_Inv_Count([1, 22, 8, 3, 10], 1) == 0": {
      "result": true,
      "time": 0.04274725914001465,
      "error": null
    },
    "assert get_Inv_Count([6, 22, 10, 6, 3], 3) == 1": {
      "result": true,
      "time": 0.04868364334106445,
      "error": null
    },
    "assert get_Inv_Count([2, 16, 4, 6, 10], 1) == 0": {
      "result": true,
      "time": 0.0431971549987793,
      "error": null
    },
    "assert get_Inv_Count([2, 16, 7, 1, 4], 4) == 4": {
      "result": true,
      "time": 0.04575181007385254,
      "error": null
    },
    "assert get_Inv_Count([4, 18, 4, 9, 6], 3) == 1": {
      "result": true,
      "time": 0.03977465629577637,
      "error": null
    },
    "assert get_Inv_Count([2, 24, 2, 3, 2], 2) == 0": {
      "result": true,
      "time": 0.04570817947387695,
      "error": null
    },
    "assert get_Inv_Count([4, 16, 7, 2, 3], 1) == 0": {
      "result": true,
      "time": 0.035491943359375,
      "error": null
    },
    "assert get_Inv_Count([3, 24, 3, 5, 5], 4) == 2": {
      "result": true,
      "time": 0.04577779769897461,
      "error": null
    },
    "assert get_Inv_Count([5, 25, 11, 1, 4], 3) == 1": {
      "result": true,
      "time": 0.04293227195739746,
      "error": null
    },
    "assert get_Inv_Count([4, 20, 2, 5, 2], 3) == 2": {
      "result": true,
      "time": 0.04633474349975586,
      "error": null
    },
    "assert get_Inv_Count([4, 23, 5, 5, 2], 2) == 0": {
      "result": true,
      "time": 0.038729190826416016,
      "error": null
    },
    "assert get_Inv_Count([1, 17, 4, 7, 2], 2) == 0": {
      "result": true,
      "time": 0.038356781005859375,
      "error": null
    },
    "assert get_Inv_Count([5, 17, 8, 1, 6], 4) == 4": {
      "result": true,
      "time": 0.043456077575683594,
      "error": null
    },
    "assert get_Inv_Count([2, 22, 9, 5, 2], 1) == 0": {
      "result": true,
      "time": 0.03887462615966797,
      "error": null
    },
    "assert get_Inv_Count([5, 23, 11, 6, 1], 2) == 0": {
      "result": true,
      "time": 0.05269789695739746,
      "error": null
    },
    "assert get_Inv_Count([4, 20, 5, 6, 5], 2) == 0": {
      "result": true,
      "time": 0.0417478084564209,
      "error": null
    },
    "assert get_Inv_Count([6, 21, 10, 8, 1], 2) == 0": {
      "result": true,
      "time": 0.04351043701171875,
      "error": null
    },
    "assert get_Inv_Count([3, 17, 5, 4, 8], 5) == 4": {
      "result": true,
      "time": 0.05038881301879883,
      "error": null
    },
    "assert get_Inv_Count([6, 19, 5, 4, 8], 3) == 2": {
      "result": true,
      "time": 0.045886993408203125,
      "error": null
    },
    "assert get_Inv_Count([6, 15, 7, 4, 2], 1) == 0": {
      "result": true,
      "time": 0.04874300956726074,
      "error": null
    },
    "assert get_Inv_Count([3, 21, 7, 9, 3], 3) == 1": {
      "result": true,
      "time": 0.05335235595703125,
      "error": null
    },
    "assert get_Inv_Count([6, 25, 3, 3, 4], 4) == 4": {
      "result": true,
      "time": 0.06391572952270508,
      "error": null
    },
    "assert get_Inv_Count([5, 16, 8, 4, 7], 1) == 0": {
      "result": true,
      "time": 0.06051182746887207,
      "error": null
    },
    "assert get_Inv_Count([3, 17, 9, 9, 8], 4) == 2": {
      "result": true,
      "time": 0.060755252838134766,
      "error": null
    },
    "assert get_Inv_Count([5, 25, 11, 8, 9], 5) == 5": {
      "result": true,
      "time": 0.05510878562927246,
      "error": null
    },
    "assert get_Inv_Count([2, 16, 3, 1, 2], 1) == 0": {
      "result": true,
      "time": 0.04547548294067383,
      "error": null
    },
    "assert get_Inv_Count([6, 15, 1, 3, 5], 3) == 2": {
      "result": true,
      "time": 0.05927014350891113,
      "error": null
    },
    "assert get_Inv_Count([6, 17, 6, 3, 1], 5) == 8": {
      "result": true,
      "time": 0.04373574256896973,
      "error": null
    },
    "assert get_Inv_Count([2, 25, 11, 6, 9], 1) == 0": {
      "result": true,
      "time": 0.06014561653137207,
      "error": null
    },
    "assert get_Inv_Count([5, 20, 3, 4, 5], 1) == 0": {
      "result": true,
      "time": 0.048934221267700195,
      "error": null
    },
    "assert get_Inv_Count([3, 17, 1, 5, 3], 3) == 2": {
      "result": true,
      "time": 0.048895835876464844,
      "error": null
    },
    "assert get_Inv_Count([6, 19, 6, 7, 10], 1) == 0": {
      "result": true,
      "time": 0.05068325996398926,
      "error": null
    },
    "assert get_Inv_Count([2, 15, 8, 3, 2], 5) == 6": {
      "result": true,
      "time": 0.045755624771118164,
      "error": null
    },
    "assert get_Inv_Count([4, 6, 1], 3) == 2": {
      "result": true,
      "time": 0.06391167640686035,
      "error": null
    },
    "assert get_Inv_Count([2, 3, 6], 1) == 0": {
      "result": true,
      "time": 0.053757429122924805,
      "error": null
    },
    "assert get_Inv_Count([2, 5, 4], 2) == 0": {
      "result": true,
      "time": 0.05401873588562012,
      "error": null
    },
    "assert get_Inv_Count([1, 2, 1], 2) == 0": {
      "result": true,
      "time": 0.048276662826538086,
      "error": null
    },
    "assert get_Inv_Count([2, 2, 6], 1) == 0": {
      "result": true,
      "time": 0.053365230560302734,
      "error": null
    },
    "assert get_Inv_Count([6, 5, 2], 2) == 1": {
      "result": true,
      "time": 0.05106925964355469,
      "error": null
    },
    "assert get_Inv_Count([1, 5, 6], 1) == 0": {
      "result": true,
      "time": 0.04843282699584961,
      "error": null
    },
    "assert get_Inv_Count([4, 3, 4], 3) == 1": {
      "result": true,
      "time": 0.061014413833618164,
      "error": null
    },
    "assert get_Inv_Count([2, 2, 5], 1) == 0": {
      "result": true,
      "time": 0.05326414108276367,
      "error": null
    },
    "assert get_Inv_Count([2, 2, 2], 2) == 0": {
      "result": true,
      "time": 0.06033635139465332,
      "error": null
    },
    "assert get_Inv_Count([5, 6, 5], 3) == 1": {
      "result": true,
      "time": 0.05871939659118652,
      "error": null
    },
    "assert get_Inv_Count([2, 4, 1], 2) == 0": {
      "result": true,
      "time": 0.06565093994140625,
      "error": null
    },
    "assert get_Inv_Count([1, 2, 6], 1) == 0": {
      "result": true,
      "time": 0.05252838134765625,
      "error": null
    },
    "assert get_Inv_Count([2, 7, 2], 3) == 1": {
      "result": true,
      "time": 0.05283761024475098,
      "error": null
    },
    "assert get_Inv_Count([6, 6, 4], 3) == 2": {
      "result": true,
      "time": 0.04704880714416504,
      "error": null
    },
    "assert get_Inv_Count([1, 4, 6], 1) == 0": {
      "result": true,
      "time": 0.05313277244567871,
      "error": null
    },
    "assert get_Inv_Count([5, 7, 1], 3) == 2": {
      "result": true,
      "time": 0.042388916015625,
      "error": null
    },
    "assert get_Inv_Count([6, 3, 3], 1) == 0": {
      "result": true,
      "time": 0.05449724197387695,
      "error": null
    },
    "assert get_Inv_Count([6, 2, 6], 1) == 0": {
      "result": true,
      "time": 0.04742169380187988,
      "error": null
    },
    "assert get_Inv_Count([6, 3, 4], 2) == 1": {
      "result": true,
      "time": 0.0576930046081543,
      "error": null
    },
    "assert get_Inv_Count([2, 2, 3], 3) == 0": {
      "result": true,
      "time": 0.05568361282348633,
      "error": null
    },
    "assert get_Inv_Count([2, 2, 6], 3) == 0": {
      "result": true,
      "time": 0.05416536331176758,
      "error": null
    },
    "assert get_Inv_Count([2, 5, 2], 3) == 1": {
      "result": true,
      "time": 0.05914044380187988,
      "error": null
    },
    "assert get_Inv_Count([4, 3, 6], 2) == 1": {
      "result": true,
      "time": 0.04880523681640625,
      "error": null
    },
    "assert get_Inv_Count([5, 7, 2], 3) == 2": {
      "result": true,
      "time": 0.048110246658325195,
      "error": null
    },
    "assert get_Inv_Count([4, 1, 4], 1) == 0": {
      "result": true,
      "time": 0.06941580772399902,
      "error": null
    },
    "assert get_Inv_Count([6, 1, 2], 1) == 0": {
      "result": true,
      "time": 0.05698800086975098,
      "error": null
    },
    "assert get_Inv_Count([5, 7, 5], 3) == 1": {
      "result": true,
      "time": 0.05528092384338379,
      "error": null
    },
    "assert get_Inv_Count([3, 4, 5], 1) == 0": {
      "result": true,
      "time": 0.050534725189208984,
      "error": null
    },
    "assert get_Inv_Count([6, 3, 2], 3) == 3": {
      "result": true,
      "time": 0.060619354248046875,
      "error": null
    },
    "assert get_Inv_Count([1, 4, 6], 2) == 0": {
      "result": true,
      "time": 0.04202461242675781,
      "error": null
    },
    "assert get_Inv_Count([3, 5, 3], 3) == 1": {
      "result": true,
      "time": 0.04687047004699707,
      "error": null
    },
    "assert get_Inv_Count([3, 1, 2], 2) == 1": {
      "result": true,
      "time": 0.05628180503845215,
      "error": null
    },
    "assert get_Inv_Count([4, 6, 7, 11, 4], 3) == 0": {
      "result": true,
      "time": 0.04719829559326172,
      "error": null
    },
    "assert get_Inv_Count([5, 2, 1, 2, 6], 3) == 3": {
      "result": true,
      "time": 0.03960776329040527,
      "error": null
    },
    "assert get_Inv_Count([1, 3, 3, 7, 4], 1) == 0": {
      "result": true,
      "time": 0.042695045471191406,
      "error": null
    },
    "assert get_Inv_Count([3, 6, 2, 1, 1], 5) == 8": {
      "result": true,
      "time": 0.03950214385986328,
      "error": null
    },
    "assert get_Inv_Count([3, 4, 8, 6, 4], 2) == 0": {
      "result": true,
      "time": 0.043684959411621094,
      "error": null
    },
    "assert get_Inv_Count([1, 7, 4, 8, 3], 1) == 0": {
      "result": true,
      "time": 0.047678470611572266,
      "error": null
    },
    "assert get_Inv_Count([4, 5, 2, 7, 2], 3) == 2": {
      "result": true,
      "time": 0.03940892219543457,
      "error": null
    },
    "assert get_Inv_Count([5, 2, 2, 10, 6], 4) == 2": {
      "result": true,
      "time": 0.049581050872802734,
      "error": null
    },
    "assert get_Inv_Count([1, 7, 8, 3, 2], 4) == 2": {
      "result": true,
      "time": 0.04239535331726074,
      "error": null
    },
    "assert get_Inv_Count([4, 5, 8, 6, 5], 5) == 3": {
      "result": true,
      "time": 0.040067195892333984,
      "error": null
    },
    "assert get_Inv_Count([2, 3, 7, 3, 2], 2) == 0": {
      "result": true,
      "time": 0.05398273468017578,
      "error": null
    },
    "assert get_Inv_Count([3, 5, 5, 2, 5], 2) == 0": {
      "result": true,
      "time": 0.04021644592285156,
      "error": null
    },
    "assert get_Inv_Count([6, 3, 7, 8, 6], 3) == 1": {
      "result": true,
      "time": 0.04850935935974121,
      "error": null
    },
    "assert get_Inv_Count([3, 2, 7, 8, 1], 1) == 0": {
      "result": true,
      "time": 0.04588174819946289,
      "error": null
    },
    "assert get_Inv_Count([5, 3, 3, 3, 3], 3) == 2": {
      "result": true,
      "time": 0.04740738868713379,
      "error": null
    },
    "assert get_Inv_Count([4, 1, 1, 7, 4], 2) == 1": {
      "result": true,
      "time": 0.04161810874938965,
      "error": null
    },
    "assert get_Inv_Count([3, 3, 1, 2, 6], 3) == 2": {
      "result": true,
      "time": 0.04617476463317871,
      "error": null
    },
    "assert get_Inv_Count([1, 7, 5, 1, 6], 5) == 4": {
      "result": true,
      "time": 0.04520845413208008,
      "error": null
    },
    "assert get_Inv_Count([5, 6, 2, 10, 4], 2) == 0": {
      "result": true,
      "time": 0.04653167724609375,
      "error": null
    },
    "assert get_Inv_Count([6, 6, 2, 2, 3], 3) == 2": {
      "result": true,
      "time": 0.04395914077758789,
      "error": null
    },
    "assert get_Inv_Count([4, 2, 3, 9, 3], 3) == 2": {
      "result": true,
      "time": 0.044643402099609375,
      "error": null
    },
    "assert get_Inv_Count([3, 2, 1, 4, 5], 3) == 3": {
      "result": true,
      "time": 0.04859042167663574,
      "error": null
    },
    "assert get_Inv_Count([2, 6, 4, 5, 5], 1) == 0": {
      "result": true,
      "time": 0.05082058906555176,
      "error": null
    },
    "assert get_Inv_Count([6, 3, 10, 1, 6], 1) == 0": {
      "result": true,
      "time": 0.044451236724853516,
      "error": null
    },
    "assert get_Inv_Count([6, 3, 6, 3, 2], 2) == 1": {
      "result": true,
      "time": 0.04244565963745117,
      "error": null
    },
    "assert get_Inv_Count([1, 3, 4, 9, 6], 4) == 0": {
      "result": true,
      "time": 0.04240775108337402,
      "error": null
    },
    "assert get_Inv_Count([3, 5, 5, 11, 6], 2) == 0": {
      "result": true,
      "time": 0.04818010330200195,
      "error": null
    },
    "assert get_Inv_Count([2, 6, 9, 8, 6], 1) == 0": {
      "result": true,
      "time": 0.04360651969909668,
      "error": null
    },
    "assert get_Inv_Count([4, 4, 6, 3, 3], 4) == 3": {
      "result": true,
      "time": 0.04357028007507324,
      "error": null
    },
    "assert get_Inv_Count([5, 4, 10, 1, 3], 4) == 4": {
      "result": true,
      "time": 0.04097414016723633,
      "error": null
    },
    "assert get_Inv_Count([1, 2, 8, 1, 3], 2) == 0": {
      "result": true,
      "time": 0.04750251770019531,
      "error": null
    },
    "assert get_Inv_Count([6, 1, 9, 11, 6], 1) == 0": {
      "result": true,
      "time": 0.0459895133972168,
      "error": null
    },
    "assert get_Inv_Count([2, 6, 2, 5, 1], 3) == 1": {
      "result": true,
      "time": 0.04499411582946777,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}