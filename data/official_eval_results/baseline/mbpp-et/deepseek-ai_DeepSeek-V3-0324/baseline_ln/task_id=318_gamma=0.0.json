{
  "code": "def max_volume(S):\n    max_vol = 0\n    for a in range(1, S - 1):\n        for b in range(1, S - a):\n            c = S - a - b\n            if c > 0:\n                volume = a * b * c\n                if volume > max_vol:\n                    max_vol = volume\n    return max_vol",
  "results": {
    "assert max_volume(8) == 18": {
      "result": true,
      "time": 0.0638117790222168,
      "error": null
    },
    "assert max_volume(4) == 2": {
      "result": true,
      "time": 0.06107068061828613,
      "error": null
    },
    "assert max_volume(1) == 0": {
      "result": true,
      "time": 0.06782078742980957,
      "error": null
    },
    "assert max_volume(11) == 48": {
      "result": true,
      "time": 0.05748462677001953,
      "error": null
    },
    "assert max_volume(10) == 36": {
      "result": true,
      "time": 0.05758047103881836,
      "error": null
    },
    "assert max_volume(9) == 27": {
      "result": true,
      "time": 0.0666043758392334,
      "error": null
    },
    "assert max_volume(5) == 4": {
      "result": true,
      "time": 0.07150673866271973,
      "error": null
    },
    "assert max_volume(13) == 80": {
      "result": true,
      "time": 0.058301687240600586,
      "error": null
    },
    "assert max_volume(6) == 8": {
      "result": true,
      "time": 0.0732431411743164,
      "error": null
    },
    "assert max_volume(3) == 1": {
      "result": true,
      "time": 0.05281782150268555,
      "error": null
    },
    "assert max_volume(12) == 64": {
      "result": true,
      "time": 0.06735754013061523,
      "error": null
    },
    "assert max_volume(7) == 12": {
      "result": true,
      "time": 0.06735897064208984,
      "error": null
    },
    "assert max_volume(2) == 0": {
      "result": true,
      "time": 0.06145429611206055,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}