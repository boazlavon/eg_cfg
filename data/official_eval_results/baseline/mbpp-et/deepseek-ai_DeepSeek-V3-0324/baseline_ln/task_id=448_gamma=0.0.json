{
  "code": "def cal_sum(n):\n    if n == 0:\n        return 3\n    elif n == 1:\n        return 3\n    elif n == 2:\n        return 5\n    \n    # Initialize the first three Perrin numbers\n    p = [3, 0, 2]\n    total = sum(p)  # Initial sum (3 + 0 + 2 = 5)\n    \n    for i in range(3, n + 1):\n        next_val = p[i-2] + p[i-3]\n        p.append(next_val)\n        total += next_val\n    \n    return total",
  "results": {
    "assert cal_sum(9) == 49": {
      "result": true,
      "time": 0.03141307830810547,
      "error": null
    },
    "assert cal_sum(10) == 66": {
      "result": true,
      "time": 0.04174947738647461,
      "error": null
    },
    "assert cal_sum(11) == 88": {
      "result": true,
      "time": 0.03637528419494629,
      "error": null
    },
    "assert cal_sum(8) == 37": {
      "result": true,
      "time": 0.03308749198913574,
      "error": null
    },
    "assert cal_sum(14) == 207": {
      "result": true,
      "time": 0.0375523567199707,
      "error": null
    },
    "assert cal_sum(12) == 117": {
      "result": true,
      "time": 0.03837943077087402,
      "error": null
    },
    "assert cal_sum(4) == 10": {
      "result": true,
      "time": 0.04429340362548828,
      "error": null
    },
    "assert cal_sum(13) == 156": {
      "result": true,
      "time": 0.041884660720825195,
      "error": null
    },
    "assert cal_sum(5) == 15": {
      "result": true,
      "time": 0.03891754150390625,
      "error": null
    },
    "assert cal_sum(6) == 20": {
      "result": true,
      "time": 0.0387883186340332,
      "error": null
    },
    "assert cal_sum(7) == 27": {
      "result": true,
      "time": 0.04228091239929199,
      "error": null
    },
    "assert cal_sum(15) == 275": {
      "result": true,
      "time": 0.043526649475097656,
      "error": null
    },
    "assert cal_sum(16) == 365": {
      "result": true,
      "time": 0.038486480712890625,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}