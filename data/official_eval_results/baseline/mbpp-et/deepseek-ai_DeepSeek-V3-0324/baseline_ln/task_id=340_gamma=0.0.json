{
  "code": "import heapq\n\ndef sum_three_smallest_nums(nums):\n    # Filter out non-positive numbers and get the three smallest positive numbers\n    positive_nums = [num for num in nums if num > 0]\n    three_smallest = heapq.nsmallest(3, positive_nums)\n    return sum(three_smallest)",
  "results": {
    "assert sum_three_smallest_nums([10,20,30,40,50,60,7]) == 37": {
      "result": true,
      "time": 0.16203546524047852,
      "error": null
    },
    "assert sum_three_smallest_nums([1,2,3,4,5]) == 6": {
      "result": true,
      "time": 0.13256239891052246,
      "error": null
    },
    "assert sum_three_smallest_nums([0,1,2,3,4,5]) == 6": {
      "result": true,
      "time": 0.09973859786987305,
      "error": null
    },
    "assert sum_three_smallest_nums([13, 24, 35, 45, 51, 56, 2]) == 39": {
      "result": true,
      "time": 0.1604022979736328,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 22, 33, 35, 49, 60, 12]) == 49": {
      "result": true,
      "time": 0.11965274810791016,
      "error": null
    },
    "assert sum_three_smallest_nums([8, 23, 33, 45, 48, 57, 2]) == 33": {
      "result": true,
      "time": 0.1305234432220459,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 15, 31, 42, 46, 62, 8]) == 38": {
      "result": true,
      "time": 0.13326811790466309,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 19, 29, 38, 55, 65, 12]) == 36": {
      "result": true,
      "time": 0.144364595413208,
      "error": null
    },
    "assert sum_three_smallest_nums([7, 19, 25, 37, 49, 62, 12]) == 38": {
      "result": true,
      "time": 0.13805794715881348,
      "error": null
    },
    "assert sum_three_smallest_nums([14, 25, 25, 42, 51, 63, 9]) == 48": {
      "result": true,
      "time": 0.14132452011108398,
      "error": null
    },
    "assert sum_three_smallest_nums([12, 21, 26, 43, 45, 62, 11]) == 44": {
      "result": true,
      "time": 0.1188359260559082,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 25, 35, 39, 46, 62, 7]) == 38": {
      "result": true,
      "time": 0.14734697341918945,
      "error": null
    },
    "assert sum_three_smallest_nums([9, 25, 28, 38, 52, 56, 11]) == 45": {
      "result": true,
      "time": 0.1229240894317627,
      "error": null
    },
    "assert sum_three_smallest_nums([12, 16, 35, 41, 50, 61, 3]) == 31": {
      "result": true,
      "time": 0.12706375122070312,
      "error": null
    },
    "assert sum_three_smallest_nums([8, 24, 33, 36, 45, 64, 4]) == 36": {
      "result": true,
      "time": 0.12078404426574707,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 25, 25, 43, 48, 59, 6]) == 46": {
      "result": true,
      "time": 0.08745789527893066,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 17, 31, 36, 51, 65, 4]) == 36": {
      "result": true,
      "time": 0.12756085395812988,
      "error": null
    },
    "assert sum_three_smallest_nums([11, 20, 27, 45, 48, 59, 7]) == 38": {
      "result": true,
      "time": 0.15505456924438477,
      "error": null
    },
    "assert sum_three_smallest_nums([7, 15, 35, 37, 46, 60, 9]) == 31": {
      "result": true,
      "time": 0.12360882759094238,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 18, 31, 37, 52, 64, 11]) == 44": {
      "result": true,
      "time": 0.12375211715698242,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 24, 33, 44, 45, 65, 8]) == 38": {
      "result": true,
      "time": 0.12266302108764648,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 17, 26, 40, 48, 56, 5]) == 28": {
      "result": true,
      "time": 0.13124799728393555,
      "error": null
    },
    "assert sum_three_smallest_nums([11, 17, 33, 36, 50, 56, 11]) == 39": {
      "result": true,
      "time": 0.1402425765991211,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 19, 26, 41, 53, 65, 5]) == 39": {
      "result": true,
      "time": 0.09662961959838867,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 24, 29, 38, 48, 59, 6]) == 36": {
      "result": true,
      "time": 0.12092757225036621,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 23, 28, 39, 46, 57, 12]) == 40": {
      "result": true,
      "time": 0.14321374893188477,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 17, 35, 40, 53, 61, 8]) == 30": {
      "result": true,
      "time": 0.13200044631958008,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 21, 35, 38, 50, 57, 8]) == 35": {
      "result": true,
      "time": 0.13920831680297852,
      "error": null
    },
    "assert sum_three_smallest_nums([12, 21, 35, 37, 45, 56, 7]) == 40": {
      "result": true,
      "time": 0.13277029991149902,
      "error": null
    },
    "assert sum_three_smallest_nums([14, 24, 31, 35, 48, 63, 7]) == 45": {
      "result": true,
      "time": 0.13278770446777344,
      "error": null
    },
    "assert sum_three_smallest_nums([10, 24, 33, 42, 55, 63, 12]) == 46": {
      "result": true,
      "time": 0.14296340942382812,
      "error": null
    },
    "assert sum_three_smallest_nums([13, 16, 34, 44, 50, 56, 12]) == 41": {
      "result": true,
      "time": 0.13545536994934082,
      "error": null
    },
    "assert sum_three_smallest_nums([11, 25, 28, 35, 53, 61, 9]) == 45": {
      "result": true,
      "time": 0.13961410522460938,
      "error": null
    },
    "assert sum_three_smallest_nums([12, 22, 27, 45, 47, 63, 2]) == 36": {
      "result": true,
      "time": 0.1322016716003418,
      "error": null
    },
    "assert sum_three_smallest_nums([8, 19, 30, 45, 54, 58, 11]) == 38": {
      "result": true,
      "time": 0.15359973907470703,
      "error": null
    },
    "assert sum_three_smallest_nums([13, 25, 34, 45, 54, 58, 3]) == 41": {
      "result": true,
      "time": 0.1454305648803711,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 6, 2, 4, 4]) == 8": {
      "result": true,
      "time": 0.09216570854187012,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 4, 5, 8, 4]) == 9": {
      "result": true,
      "time": 0.12189459800720215,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 3, 5, 5, 8]) == 12": {
      "result": true,
      "time": 0.14089012145996094,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 5, 1, 9, 8]) == 10": {
      "result": true,
      "time": 0.14109158515930176,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 1, 2, 3, 9]) == 5": {
      "result": true,
      "time": 0.137451171875,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 7, 1, 1, 2]) == 4": {
      "result": true,
      "time": 0.15233874320983887,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 1, 7, 2, 1]) == 4": {
      "result": true,
      "time": 0.14590048789978027,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 1, 1, 6, 2]) == 4": {
      "result": true,
      "time": 0.14309144020080566,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 7, 5, 9, 8]) == 13": {
      "result": true,
      "time": 0.11669087409973145,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 7, 8, 3, 7]) == 15": {
      "result": true,
      "time": 0.1303269863128662,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 4, 6, 1, 1]) == 6": {
      "result": true,
      "time": 0.13526296615600586,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 6, 7, 7, 2]) == 11": {
      "result": true,
      "time": 0.12562203407287598,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 3, 3, 3, 8]) == 9": {
      "result": true,
      "time": 0.13178133964538574,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 3, 1, 8, 3]) == 7": {
      "result": true,
      "time": 0.13417315483093262,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 6, 3, 8, 5]) == 9": {
      "result": true,
      "time": 0.14222002029418945,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 2, 7, 1, 7]) == 8": {
      "result": true,
      "time": 0.15713739395141602,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 1, 6, 3, 1]) == 4": {
      "result": true,
      "time": 0.13416838645935059,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 7, 7, 8, 10]) == 15": {
      "result": true,
      "time": 0.12888240814208984,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 1, 7, 2, 4]) == 6": {
      "result": true,
      "time": 0.16370892524719238,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 1, 6, 3, 1]) == 5": {
      "result": true,
      "time": 0.11223578453063965,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 6, 7, 3, 8]) == 13": {
      "result": true,
      "time": 0.11499500274658203,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 3, 2, 4, 3]) == 8": {
      "result": true,
      "time": 0.12964916229248047,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 1, 4, 8, 2]) == 7": {
      "result": true,
      "time": 0.10772395133972168,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 3, 3, 7, 10]) == 11": {
      "result": true,
      "time": 0.14220070838928223,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 2, 1, 4, 6]) == 7": {
      "result": true,
      "time": 0.13037896156311035,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 7, 8, 6, 10]) == 14": {
      "result": true,
      "time": 0.1377418041229248,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 1, 6, 9, 8]) == 10": {
      "result": true,
      "time": 0.13654303550720215,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 2, 7, 8, 9]) == 12": {
      "result": true,
      "time": 0.13201212882995605,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 4, 2, 1, 4]) == 5": {
      "result": true,
      "time": 0.14026474952697754,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 5, 4, 9, 1]) == 7": {
      "result": true,
      "time": 0.15921831130981445,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 4, 8, 4, 6]) == 12": {
      "result": true,
      "time": 0.13013291358947754,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 1, 4, 1, 7]) == 6": {
      "result": true,
      "time": 0.14020729064941406,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 5, 3, 1, 9]) == 7": {
      "result": true,
      "time": 0.13977861404418945,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 2, 1, 4, 6, 10]) == 4": {
      "result": true,
      "time": 0.1453230381011963,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 2, 5, 7, 6, 7]) == 12": {
      "result": true,
      "time": 0.140974760055542,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 5, 2, 8, 7, 9]) == 11": {
      "result": true,
      "time": 0.13050436973571777,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 1, 5, 8, 9, 3]) == 5": {
      "result": true,
      "time": 0.15397953987121582,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 4, 7, 7, 9, 7]) == 14": {
      "result": true,
      "time": 0.14386439323425293,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 6, 1, 8, 4, 7]) == 7": {
      "result": true,
      "time": 0.09660458564758301,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 4, 1, 5, 6, 8]) == 7": {
      "result": true,
      "time": 0.12597107887268066,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 1, 6, 8, 7, 7]) == 12": {
      "result": true,
      "time": 0.15453410148620605,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 5, 7, 5, 1, 10]) == 11": {
      "result": true,
      "time": 0.12695789337158203,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 2, 5, 2, 9, 3]) == 7": {
      "result": true,
      "time": 0.15032100677490234,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 4, 7, 2, 8, 10]) == 11": {
      "result": true,
      "time": 0.11426091194152832,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 4, 3, 7, 2, 8]) == 9": {
      "result": true,
      "time": 0.11210751533508301,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 2, 5, 2, 2, 5]) == 6": {
      "result": true,
      "time": 0.13003087043762207,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 1, 1, 1, 6, 8]) == 3": {
      "result": true,
      "time": 0.13814520835876465,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 6, 5, 4, 7, 10]) == 14": {
      "result": true,
      "time": 0.11814451217651367,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 3, 6, 3, 6, 5]) == 11": {
      "result": true,
      "time": 0.1381235122680664,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 2, 4, 8, 2, 2]) == 6": {
      "result": true,
      "time": 0.12971901893615723,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 6, 1, 6, 4, 1]) == 3": {
      "result": true,
      "time": 0.14687395095825195,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 1, 6, 3, 4, 10]) == 8": {
      "result": true,
      "time": 0.12463712692260742,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 2, 1, 5, 9, 4]) == 4": {
      "result": true,
      "time": 0.11170363426208496,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 4, 4, 8, 2, 5]) == 10": {
      "result": true,
      "time": 0.12416219711303711,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 6, 4, 1, 5, 10]) == 6": {
      "result": true,
      "time": 0.12214255332946777,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 6, 2, 3, 6, 8]) == 10": {
      "result": true,
      "time": 0.11330461502075195,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 5, 6, 6, 2, 9]) == 11": {
      "result": true,
      "time": 0.12916851043701172,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 2, 2, 2, 5, 1]) == 4": {
      "result": true,
      "time": 0.1292712688446045,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 3, 6, 5, 8, 3]) == 7": {
      "result": true,
      "time": 0.13045287132263184,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 1, 1, 4, 8, 9]) == 4": {
      "result": true,
      "time": 0.14081478118896484,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 5, 6, 7, 6, 2]) == 10": {
      "result": true,
      "time": 0.1250159740447998,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 5, 7, 4, 4, 8]) == 11": {
      "result": true,
      "time": 0.11709976196289062,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 2, 1, 3, 2, 3]) == 5": {
      "result": true,
      "time": 0.12427496910095215,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 5, 4, 5, 7, 4]) == 9": {
      "result": true,
      "time": 0.125901460647583,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 2, 2, 3, 5, 8]) == 6": {
      "result": true,
      "time": 0.1448345184326172,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 1, 4, 3, 6, 5]) == 8": {
      "result": true,
      "time": 0.12633538246154785,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}