{
  "code": "def multiply_int(a, b):\n    result = 0\n    for _ in range(abs(b)):\n        result += a\n    return result if b > 0 else -result",
  "results": {
    "assert multiply_int(10,20)==200": {
      "result": true,
      "time": 0.045682430267333984,
      "error": null
    },
    "assert multiply_int(5,10)==50": {
      "result": true,
      "time": 0.04259610176086426,
      "error": null
    },
    "assert multiply_int(4,8)==32": {
      "result": true,
      "time": 0.042668819427490234,
      "error": null
    },
    "assert multiply_int(11, 25) == 275": {
      "result": true,
      "time": 0.050726890563964844,
      "error": null
    },
    "assert multiply_int(14, 19) == 266": {
      "result": true,
      "time": 0.04641127586364746,
      "error": null
    },
    "assert multiply_int(13, 18) == 234": {
      "result": true,
      "time": 0.042055606842041016,
      "error": null
    },
    "assert multiply_int(10, 21) == 210": {
      "result": true,
      "time": 0.04248619079589844,
      "error": null
    },
    "assert multiply_int(8, 19) == 152": {
      "result": true,
      "time": 0.04442930221557617,
      "error": null
    },
    "assert multiply_int(11, 15) == 165": {
      "result": true,
      "time": 0.04696941375732422,
      "error": null
    },
    "assert multiply_int(7, 16) == 112": {
      "result": true,
      "time": 0.04743504524230957,
      "error": null
    },
    "assert multiply_int(6, 21) == 126": {
      "result": true,
      "time": 0.03193354606628418,
      "error": null
    },
    "assert multiply_int(10, 20) == 200": {
      "result": true,
      "time": 0.0523686408996582,
      "error": null
    },
    "assert multiply_int(13, 20) == 260": {
      "result": true,
      "time": 0.0442204475402832,
      "error": null
    },
    "assert multiply_int(6, 16) == 96": {
      "result": true,
      "time": 0.038274526596069336,
      "error": null
    },
    "assert multiply_int(11, 21) == 231": {
      "result": true,
      "time": 0.04149508476257324,
      "error": null
    },
    "assert multiply_int(5, 18) == 90": {
      "result": true,
      "time": 0.04261040687561035,
      "error": null
    },
    "assert multiply_int(14, 21) == 294": {
      "result": true,
      "time": 0.0467987060546875,
      "error": null
    },
    "assert multiply_int(6, 23) == 138": {
      "result": true,
      "time": 0.0426633358001709,
      "error": null
    },
    "assert multiply_int(12, 21) == 252": {
      "result": true,
      "time": 0.03891563415527344,
      "error": null
    },
    "assert multiply_int(6, 17) == 102": {
      "result": true,
      "time": 0.04103207588195801,
      "error": null
    },
    "assert multiply_int(13, 24) == 312": {
      "result": true,
      "time": 0.0435025691986084,
      "error": null
    },
    "assert multiply_int(11, 20) == 220": {
      "result": true,
      "time": 0.04542350769042969,
      "error": null
    },
    "assert multiply_int(9, 24) == 216": {
      "result": true,
      "time": 0.04036664962768555,
      "error": null
    },
    "assert multiply_int(7, 17) == 119": {
      "result": true,
      "time": 0.05024385452270508,
      "error": null
    },
    "assert multiply_int(8, 22) == 176": {
      "result": true,
      "time": 0.03944253921508789,
      "error": null
    },
    "assert multiply_int(5, 15) == 75": {
      "result": true,
      "time": 0.04858875274658203,
      "error": null
    },
    "assert multiply_int(6, 22) == 132": {
      "result": true,
      "time": 0.048395395278930664,
      "error": null
    },
    "assert multiply_int(12, 15) == 180": {
      "result": true,
      "time": 0.04122114181518555,
      "error": null
    },
    "assert multiply_int(10, 25) == 250": {
      "result": true,
      "time": 0.04578876495361328,
      "error": null
    },
    "assert multiply_int(8, 16) == 128": {
      "result": true,
      "time": 0.03220796585083008,
      "error": null
    },
    "assert multiply_int(7, 6) == 42": {
      "result": true,
      "time": 0.04355359077453613,
      "error": null
    },
    "assert multiply_int(5, 14) == 70": {
      "result": true,
      "time": 0.049970149993896484,
      "error": null
    },
    "assert multiply_int(8, 6) == 48": {
      "result": true,
      "time": 0.046552419662475586,
      "error": null
    },
    "assert multiply_int(10, 12) == 120": {
      "result": true,
      "time": 0.04815793037414551,
      "error": null
    },
    "assert multiply_int(3, 8) == 24": {
      "result": true,
      "time": 0.03797292709350586,
      "error": null
    },
    "assert multiply_int(7, 11) == 77": {
      "result": true,
      "time": 0.04356694221496582,
      "error": null
    },
    "assert multiply_int(10, 13) == 130": {
      "result": true,
      "time": 0.046158552169799805,
      "error": null
    },
    "assert multiply_int(7, 5) == 35": {
      "result": true,
      "time": 0.04938530921936035,
      "error": null
    },
    "assert multiply_int(6, 10) == 60": {
      "result": true,
      "time": 0.044710397720336914,
      "error": null
    },
    "assert multiply_int(7, 9) == 63": {
      "result": true,
      "time": 0.040851593017578125,
      "error": null
    },
    "assert multiply_int(3, 7) == 21": {
      "result": true,
      "time": 0.054137468338012695,
      "error": null
    },
    "assert multiply_int(2, 8) == 16": {
      "result": true,
      "time": 0.04121279716491699,
      "error": null
    },
    "assert multiply_int(3, 12) == 36": {
      "result": true,
      "time": 0.03986954689025879,
      "error": null
    },
    "assert multiply_int(9, 13) == 117": {
      "result": true,
      "time": 0.05138421058654785,
      "error": null
    },
    "assert multiply_int(5, 6) == 30": {
      "result": true,
      "time": 0.03455305099487305,
      "error": null
    },
    "assert multiply_int(5, 7) == 35": {
      "result": true,
      "time": 0.05144095420837402,
      "error": null
    },
    "assert multiply_int(9, 11) == 99": {
      "result": true,
      "time": 0.04536175727844238,
      "error": null
    },
    "assert multiply_int(3, 6) == 18": {
      "result": true,
      "time": 0.03858613967895508,
      "error": null
    },
    "assert multiply_int(7, 8) == 56": {
      "result": true,
      "time": 0.043090105056762695,
      "error": null
    },
    "assert multiply_int(3, 11) == 33": {
      "result": true,
      "time": 0.04588747024536133,
      "error": null
    },
    "assert multiply_int(2, 13) == 26": {
      "result": true,
      "time": 0.0422971248626709,
      "error": null
    },
    "assert multiply_int(2, 12) == 24": {
      "result": true,
      "time": 0.03757596015930176,
      "error": null
    },
    "assert multiply_int(2, 11) == 22": {
      "result": true,
      "time": 0.053193092346191406,
      "error": null
    },
    "assert multiply_int(1, 11) == 11": {
      "result": true,
      "time": 0.036722421646118164,
      "error": null
    },
    "assert multiply_int(8, 10) == 80": {
      "result": true,
      "time": 0.04351472854614258,
      "error": null
    },
    "assert multiply_int(5, 9) == 45": {
      "result": true,
      "time": 0.048921823501586914,
      "error": null
    },
    "assert multiply_int(2, 14) == 28": {
      "result": true,
      "time": 0.04564094543457031,
      "error": null
    },
    "assert multiply_int(4, 10) == 40": {
      "result": true,
      "time": 0.049790382385253906,
      "error": null
    },
    "assert multiply_int(1, 9) == 9": {
      "result": true,
      "time": 0.0474088191986084,
      "error": null
    },
    "assert multiply_int(8, 8) == 64": {
      "result": true,
      "time": 0.043540239334106445,
      "error": null
    },
    "assert multiply_int(5, 5) == 25": {
      "result": true,
      "time": 0.040451765060424805,
      "error": null
    },
    "assert multiply_int(2, 4) == 8": {
      "result": true,
      "time": 0.040038347244262695,
      "error": null
    },
    "assert multiply_int(1, 8) == 8": {
      "result": true,
      "time": 0.04479622840881348,
      "error": null
    },
    "assert multiply_int(9, 5) == 45": {
      "result": true,
      "time": 0.047265052795410156,
      "error": null
    },
    "assert multiply_int(1, 12) == 12": {
      "result": true,
      "time": 0.04799151420593262,
      "error": null
    },
    "assert multiply_int(7, 13) == 91": {
      "result": true,
      "time": 0.035826683044433594,
      "error": null
    },
    "assert multiply_int(7, 4) == 28": {
      "result": true,
      "time": 0.054036617279052734,
      "error": null
    },
    "assert multiply_int(6, 8) == 48": {
      "result": true,
      "time": 0.045542240142822266,
      "error": null
    },
    "assert multiply_int(3, 4) == 12": {
      "result": true,
      "time": 0.04647254943847656,
      "error": null
    },
    "assert multiply_int(3, 9) == 27": {
      "result": true,
      "time": 0.045794010162353516,
      "error": null
    },
    "assert multiply_int(4, 4) == 16": {
      "result": true,
      "time": 0.045068979263305664,
      "error": null
    },
    "assert multiply_int(6, 13) == 78": {
      "result": true,
      "time": 0.047277212142944336,
      "error": null
    },
    "assert multiply_int(3, 13) == 39": {
      "result": true,
      "time": 0.04787850379943848,
      "error": null
    },
    "assert multiply_int(3, 10) == 30": {
      "result": true,
      "time": 0.039565324783325195,
      "error": null
    },
    "assert multiply_int(2, 5) == 10": {
      "result": true,
      "time": 0.0448918342590332,
      "error": null
    },
    "assert multiply_int(6, 4) == 24": {
      "result": true,
      "time": 0.03669619560241699,
      "error": null
    },
    "assert multiply_int(2, 3) == 6": {
      "result": true,
      "time": 0.048876285552978516,
      "error": null
    },
    "assert multiply_int(2, 6) == 12": {
      "result": true,
      "time": 0.04378843307495117,
      "error": null
    },
    "assert multiply_int(4, 5) == 20": {
      "result": true,
      "time": 0.034699440002441406,
      "error": null
    },
    "assert multiply_int(5, 13) == 65": {
      "result": true,
      "time": 0.04533791542053223,
      "error": null
    },
    "assert multiply_int(5, 3) == 15": {
      "result": true,
      "time": 0.04046320915222168,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}