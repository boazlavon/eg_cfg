{
  "code": "def counting_sort(arr):\n    if not arr:\n        return arr\n    \n    max_val = max(arr)\n    min_val = min(arr)\n    \n    count = [0] * (max_val - min_val + 1)\n    \n    for num in arr:\n        count[num - min_val] += 1\n    \n    sorted_arr = []\n    for i in range(len(count)):\n        sorted_arr.extend([i + min_val] * count[i])\n    \n    return sorted_arr",
  "results": {
    "assert counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]": {
      "result": true,
      "time": 0.0351872444152832,
      "error": null
    },
    "assert counting_sort([12, 9, 28, 33, 69, 45]) == [9, 12, 28, 33, 45, 69]": {
      "result": true,
      "time": 0.03723311424255371,
      "error": null
    },
    "assert counting_sort([8, 4, 14, 3, 2, 1]) == [1, 2, 3, 4, 8, 14]": {
      "result": true,
      "time": 0.03527379035949707,
      "error": null
    },
    "assert counting_sort([5, 18, 8, 3, 7, 11, 11]) == [3, 5, 7, 8, 11, 11, 18]": {
      "result": true,
      "time": 0.03627777099609375,
      "error": null
    },
    "assert counting_sort([2, 23, 5, 7, 7, 9, 10]) == [2, 5, 7, 7, 9, 10, 23]": {
      "result": true,
      "time": 0.03071737289428711,
      "error": null
    },
    "assert counting_sort([2, 23, 7, 4, 11, 12, 8]) == [2, 4, 7, 8, 11, 12, 23]": {
      "result": true,
      "time": 0.03211045265197754,
      "error": null
    },
    "assert counting_sort([3, 26, 6, 9, 5, 12, 10]) == [3, 5, 6, 9, 10, 12, 26]": {
      "result": true,
      "time": 0.03793501853942871,
      "error": null
    },
    "assert counting_sort([3, 27, 3, 7, 6, 9, 9]) == [3, 3, 6, 7, 9, 9, 27]": {
      "result": true,
      "time": 0.037226200103759766,
      "error": null
    },
    "assert counting_sort([2, 18, 9, 10, 9, 12, 6]) == [2, 6, 9, 9, 10, 12, 18]": {
      "result": true,
      "time": 0.03882169723510742,
      "error": null
    },
    "assert counting_sort([5, 24, 2, 8, 2, 8, 3]) == [2, 2, 3, 5, 8, 8, 24]": {
      "result": true,
      "time": 0.039832353591918945,
      "error": null
    },
    "assert counting_sort([1, 21, 9, 7, 4, 5, 11]) == [1, 4, 5, 7, 9, 11, 21]": {
      "result": true,
      "time": 0.033030033111572266,
      "error": null
    },
    "assert counting_sort([3, 19, 6, 5, 2, 5, 11]) == [2, 3, 5, 5, 6, 11, 19]": {
      "result": true,
      "time": 0.031055212020874023,
      "error": null
    },
    "assert counting_sort([1, 22, 4, 9, 7, 4, 4]) == [1, 4, 4, 4, 7, 9, 22]": {
      "result": true,
      "time": 0.03749442100524902,
      "error": null
    },
    "assert counting_sort([2, 21, 9, 4, 6, 3, 9]) == [2, 3, 4, 6, 9, 9, 21]": {
      "result": true,
      "time": 0.037046194076538086,
      "error": null
    },
    "assert counting_sort([6, 25, 8, 2, 6, 10, 7]) == [2, 6, 6, 7, 8, 10, 25]": {
      "result": true,
      "time": 0.03297591209411621,
      "error": null
    },
    "assert counting_sort([3, 26, 6, 8, 5, 2, 7]) == [2, 3, 5, 6, 7, 8, 26]": {
      "result": true,
      "time": 0.027906179428100586,
      "error": null
    },
    "assert counting_sort([5, 18, 8, 2, 8, 3, 5]) == [2, 3, 5, 5, 8, 8, 18]": {
      "result": true,
      "time": 0.04236102104187012,
      "error": null
    },
    "assert counting_sort([5, 22, 8, 3, 4, 12, 5]) == [3, 4, 5, 5, 8, 12, 22]": {
      "result": true,
      "time": 0.03871321678161621,
      "error": null
    },
    "assert counting_sort([3, 20, 3, 8, 6, 10, 13]) == [3, 3, 6, 8, 10, 13, 20]": {
      "result": true,
      "time": 0.03775358200073242,
      "error": null
    },
    "assert counting_sort([6, 23, 7, 1, 1, 10, 11]) == [1, 1, 6, 7, 10, 11, 23]": {
      "result": true,
      "time": 0.03851914405822754,
      "error": null
    },
    "assert counting_sort([4, 28, 7, 3, 11, 12, 11]) == [3, 4, 7, 11, 11, 12, 28]": {
      "result": true,
      "time": 0.0417327880859375,
      "error": null
    },
    "assert counting_sort([4, 28, 9, 3, 4, 4, 5]) == [3, 4, 4, 4, 5, 9, 28]": {
      "result": true,
      "time": 0.03795433044433594,
      "error": null
    },
    "assert counting_sort([6, 24, 7, 1, 10, 11, 9]) == [1, 6, 7, 9, 10, 11, 24]": {
      "result": true,
      "time": 0.03136777877807617,
      "error": null
    },
    "assert counting_sort([3, 23, 6, 1, 11, 11, 6]) == [1, 3, 6, 6, 11, 11, 23]": {
      "result": true,
      "time": 0.03481888771057129,
      "error": null
    },
    "assert counting_sort([3, 18, 9, 8, 2, 2, 7]) == [2, 2, 3, 7, 8, 9, 18]": {
      "result": true,
      "time": 0.038213491439819336,
      "error": null
    },
    "assert counting_sort([6, 21, 5, 4, 4, 9, 11]) == [4, 4, 5, 6, 9, 11, 21]": {
      "result": true,
      "time": 0.035264015197753906,
      "error": null
    },
    "assert counting_sort([4, 21, 1, 7, 6, 5, 5]) == [1, 4, 5, 5, 6, 7, 21]": {
      "result": true,
      "time": 0.03711652755737305,
      "error": null
    },
    "assert counting_sort([3, 21, 1, 6, 8, 4, 13]) == [1, 3, 4, 6, 8, 13, 21]": {
      "result": true,
      "time": 0.037706851959228516,
      "error": null
    },
    "assert counting_sort([2, 23, 8, 9, 1, 6, 12]) == [1, 2, 6, 8, 9, 12, 23]": {
      "result": true,
      "time": 0.036270856857299805,
      "error": null
    },
    "assert counting_sort([4, 19, 8, 9, 8, 11, 10]) == [4, 8, 8, 9, 10, 11, 19]": {
      "result": true,
      "time": 0.04176449775695801,
      "error": null
    },
    "assert counting_sort([3, 27, 8, 5, 2, 6, 13]) == [2, 3, 5, 6, 8, 13, 27]": {
      "result": true,
      "time": 0.03721809387207031,
      "error": null
    },
    "assert counting_sort([4, 20, 3, 7, 8, 10, 7]) == [3, 4, 7, 7, 8, 10, 20]": {
      "result": true,
      "time": 0.046534061431884766,
      "error": null
    },
    "assert counting_sort([4, 28, 4, 9, 1, 12, 12]) == [1, 4, 4, 9, 12, 12, 28]": {
      "result": true,
      "time": 0.034650325775146484,
      "error": null
    },
    "assert counting_sort([4, 22, 3, 4, 3, 10, 5]) == [3, 3, 4, 4, 5, 10, 22]": {
      "result": true,
      "time": 0.03706860542297363,
      "error": null
    },
    "assert counting_sort([6, 20, 1, 5, 3, 9, 10]) == [1, 3, 5, 6, 9, 10, 20]": {
      "result": true,
      "time": 0.04151201248168945,
      "error": null
    },
    "assert counting_sort([5, 24, 5, 10, 8, 12, 7]) == [5, 5, 7, 8, 10, 12, 24]": {
      "result": true,
      "time": 0.03956246376037598,
      "error": null
    },
    "assert counting_sort([15, 7, 25, 28, 68, 46]) == [7, 15, 25, 28, 46, 68]": {
      "result": true,
      "time": 0.03930497169494629,
      "error": null
    },
    "assert counting_sort([14, 10, 26, 30, 71, 41]) == [10, 14, 26, 30, 41, 71]": {
      "result": true,
      "time": 0.038335561752319336,
      "error": null
    },
    "assert counting_sort([7, 6, 30, 38, 69, 45]) == [6, 7, 30, 38, 45, 69]": {
      "result": true,
      "time": 0.031191587448120117,
      "error": null
    },
    "assert counting_sort([17, 13, 27, 28, 67, 40]) == [13, 17, 27, 28, 40, 67]": {
      "result": true,
      "time": 0.037603139877319336,
      "error": null
    },
    "assert counting_sort([8, 4, 23, 29, 71, 42]) == [4, 8, 23, 29, 42, 71]": {
      "result": true,
      "time": 0.03580427169799805,
      "error": null
    },
    "assert counting_sort([17, 6, 23, 38, 66, 50]) == [6, 17, 23, 38, 50, 66]": {
      "result": true,
      "time": 0.04079079627990723,
      "error": null
    },
    "assert counting_sort([13, 12, 28, 32, 69, 44]) == [12, 13, 28, 32, 44, 69]": {
      "result": true,
      "time": 0.03808236122131348,
      "error": null
    },
    "assert counting_sort([13, 13, 26, 37, 66, 41]) == [13, 13, 26, 37, 41, 66]": {
      "result": true,
      "time": 0.03320002555847168,
      "error": null
    },
    "assert counting_sort([14, 12, 31, 34, 73, 50]) == [12, 14, 31, 34, 50, 73]": {
      "result": true,
      "time": 0.03866457939147949,
      "error": null
    },
    "assert counting_sort([13, 6, 27, 29, 64, 42]) == [6, 13, 27, 29, 42, 64]": {
      "result": true,
      "time": 0.03646731376647949,
      "error": null
    },
    "assert counting_sort([12, 13, 27, 32, 71, 40]) == [12, 13, 27, 32, 40, 71]": {
      "result": true,
      "time": 0.03820228576660156,
      "error": null
    },
    "assert counting_sort([14, 5, 32, 36, 73, 47]) == [5, 14, 32, 36, 47, 73]": {
      "result": true,
      "time": 0.04707908630371094,
      "error": null
    },
    "assert counting_sort([15, 7, 27, 34, 71, 42]) == [7, 15, 27, 34, 42, 71]": {
      "result": true,
      "time": 0.03472709655761719,
      "error": null
    },
    "assert counting_sort([13, 8, 27, 35, 74, 44]) == [8, 13, 27, 35, 44, 74]": {
      "result": true,
      "time": 0.043213605880737305,
      "error": null
    },
    "assert counting_sort([8, 9, 29, 30, 64, 44]) == [8, 9, 29, 30, 44, 64]": {
      "result": true,
      "time": 0.038559675216674805,
      "error": null
    },
    "assert counting_sort([8, 10, 30, 32, 65, 41]) == [8, 10, 30, 32, 41, 65]": {
      "result": true,
      "time": 0.03814125061035156,
      "error": null
    },
    "assert counting_sort([13, 8, 24, 30, 74, 47]) == [8, 13, 24, 30, 47, 74]": {
      "result": true,
      "time": 0.03811216354370117,
      "error": null
    },
    "assert counting_sort([10, 6, 31, 38, 64, 48]) == [6, 10, 31, 38, 48, 64]": {
      "result": true,
      "time": 0.037812232971191406,
      "error": null
    },
    "assert counting_sort([8, 13, 24, 28, 67, 45]) == [8, 13, 24, 28, 45, 67]": {
      "result": true,
      "time": 0.04121851921081543,
      "error": null
    },
    "assert counting_sort([8, 8, 23, 30, 67, 42]) == [8, 8, 23, 30, 42, 67]": {
      "result": true,
      "time": 0.0397946834564209,
      "error": null
    },
    "assert counting_sort([13, 11, 28, 38, 64, 42]) == [11, 13, 28, 38, 42, 64]": {
      "result": true,
      "time": 0.030225276947021484,
      "error": null
    },
    "assert counting_sort([15, 13, 31, 29, 71, 48]) == [13, 15, 29, 31, 48, 71]": {
      "result": true,
      "time": 0.03755950927734375,
      "error": null
    },
    "assert counting_sort([13, 14, 32, 29, 72, 44]) == [13, 14, 29, 32, 44, 72]": {
      "result": true,
      "time": 0.042276859283447266,
      "error": null
    },
    "assert counting_sort([12, 10, 29, 32, 70, 47]) == [10, 12, 29, 32, 47, 70]": {
      "result": true,
      "time": 0.037087440490722656,
      "error": null
    },
    "assert counting_sort([9, 8, 32, 35, 74, 49]) == [8, 9, 32, 35, 49, 74]": {
      "result": true,
      "time": 0.03752255439758301,
      "error": null
    },
    "assert counting_sort([9, 11, 23, 30, 74, 43]) == [9, 11, 23, 30, 43, 74]": {
      "result": true,
      "time": 0.04101872444152832,
      "error": null
    },
    "assert counting_sort([8, 12, 32, 33, 66, 42]) == [8, 12, 32, 33, 42, 66]": {
      "result": true,
      "time": 0.03564023971557617,
      "error": null
    },
    "assert counting_sort([17, 14, 29, 32, 72, 45]) == [14, 17, 29, 32, 45, 72]": {
      "result": true,
      "time": 0.03906583786010742,
      "error": null
    },
    "assert counting_sort([10, 14, 28, 31, 64, 50]) == [10, 14, 28, 31, 50, 64]": {
      "result": true,
      "time": 0.04297018051147461,
      "error": null
    },
    "assert counting_sort([17, 7, 29, 38, 69, 48]) == [7, 17, 29, 38, 48, 69]": {
      "result": true,
      "time": 0.03571486473083496,
      "error": null
    },
    "assert counting_sort([8, 9, 30, 38, 71, 50]) == [8, 9, 30, 38, 50, 71]": {
      "result": true,
      "time": 0.0473933219909668,
      "error": null
    },
    "assert counting_sort([17, 13, 23, 37, 72, 46]) == [13, 17, 23, 37, 46, 72]": {
      "result": true,
      "time": 0.037108659744262695,
      "error": null
    },
    "assert counting_sort([17, 10, 31, 33, 74, 50]) == [10, 17, 31, 33, 50, 74]": {
      "result": true,
      "time": 0.03547859191894531,
      "error": null
    },
    "assert counting_sort([11, 1, 14, 4, 6, 2]) == [1, 2, 4, 6, 11, 14]": {
      "result": true,
      "time": 0.04499673843383789,
      "error": null
    },
    "assert counting_sort([11, 6, 14, 5, 7, 2]) == [2, 5, 6, 7, 11, 14]": {
      "result": true,
      "time": 0.043977975845336914,
      "error": null
    },
    "assert counting_sort([11, 1, 16, 1, 1, 6]) == [1, 1, 1, 6, 11, 16]": {
      "result": true,
      "time": 0.04166555404663086,
      "error": null
    },
    "assert counting_sort([12, 2, 15, 8, 6, 4]) == [2, 4, 6, 8, 12, 15]": {
      "result": true,
      "time": 0.03611183166503906,
      "error": null
    },
    "assert counting_sort([8, 8, 11, 3, 7, 4]) == [3, 4, 7, 8, 8, 11]": {
      "result": true,
      "time": 0.037447452545166016,
      "error": null
    },
    "assert counting_sort([12, 5, 12, 1, 3, 3]) == [1, 3, 3, 5, 12, 12]": {
      "result": true,
      "time": 0.037224531173706055,
      "error": null
    },
    "assert counting_sort([6, 8, 10, 4, 2, 3]) == [2, 3, 4, 6, 8, 10]": {
      "result": true,
      "time": 0.035160064697265625,
      "error": null
    },
    "assert counting_sort([6, 9, 12, 3, 7, 1]) == [1, 3, 6, 7, 9, 12]": {
      "result": true,
      "time": 0.03854060173034668,
      "error": null
    },
    "assert counting_sort([3, 4, 17, 8, 3, 3]) == [3, 3, 3, 4, 8, 17]": {
      "result": true,
      "time": 0.03964114189147949,
      "error": null
    },
    "assert counting_sort([11, 9, 13, 5, 3, 6]) == [3, 5, 6, 9, 11, 13]": {
      "result": true,
      "time": 0.037821054458618164,
      "error": null
    },
    "assert counting_sort([3, 9, 11, 4, 7, 4]) == [3, 4, 4, 7, 9, 11]": {
      "result": true,
      "time": 0.035608768463134766,
      "error": null
    },
    "assert counting_sort([5, 7, 11, 8, 3, 4]) == [3, 4, 5, 7, 8, 11]": {
      "result": true,
      "time": 0.033585548400878906,
      "error": null
    },
    "assert counting_sort([3, 9, 18, 4, 2, 5]) == [2, 3, 4, 5, 9, 18]": {
      "result": true,
      "time": 0.03766584396362305,
      "error": null
    },
    "assert counting_sort([8, 8, 9, 8, 4, 5]) == [4, 5, 8, 8, 8, 9]": {
      "result": true,
      "time": 0.04194903373718262,
      "error": null
    },
    "assert counting_sort([6, 6, 18, 3, 6, 1]) == [1, 3, 6, 6, 6, 18]": {
      "result": true,
      "time": 0.038427114486694336,
      "error": null
    },
    "assert counting_sort([4, 5, 19, 4, 5, 6]) == [4, 4, 5, 5, 6, 19]": {
      "result": true,
      "time": 0.03786325454711914,
      "error": null
    },
    "assert counting_sort([9, 6, 12, 8, 7, 3]) == [3, 6, 7, 8, 9, 12]": {
      "result": true,
      "time": 0.03498506546020508,
      "error": null
    },
    "assert counting_sort([4, 1, 9, 5, 5, 1]) == [1, 1, 4, 5, 5, 9]": {
      "result": true,
      "time": 0.03379368782043457,
      "error": null
    },
    "assert counting_sort([9, 5, 18, 1, 4, 2]) == [1, 2, 4, 5, 9, 18]": {
      "result": true,
      "time": 0.03724336624145508,
      "error": null
    },
    "assert counting_sort([5, 7, 10, 3, 7, 3]) == [3, 3, 5, 7, 7, 10]": {
      "result": true,
      "time": 0.03584027290344238,
      "error": null
    },
    "assert counting_sort([9, 5, 18, 5, 6, 2]) == [2, 5, 5, 6, 9, 18]": {
      "result": true,
      "time": 0.0393824577331543,
      "error": null
    },
    "assert counting_sort([13, 3, 12, 4, 2, 5]) == [2, 3, 4, 5, 12, 13]": {
      "result": true,
      "time": 0.03333640098571777,
      "error": null
    },
    "assert counting_sort([13, 3, 10, 1, 5, 3]) == [1, 3, 3, 5, 10, 13]": {
      "result": true,
      "time": 0.0401153564453125,
      "error": null
    },
    "assert counting_sort([6, 7, 12, 6, 7, 1]) == [1, 6, 6, 7, 7, 12]": {
      "result": true,
      "time": 0.03708600997924805,
      "error": null
    },
    "assert counting_sort([5, 8, 18, 7, 6, 5]) == [5, 5, 6, 7, 8, 18]": {
      "result": true,
      "time": 0.04412579536437988,
      "error": null
    },
    "assert counting_sort([8, 3, 14, 4, 1, 3]) == [1, 3, 3, 4, 8, 14]": {
      "result": true,
      "time": 0.035994529724121094,
      "error": null
    },
    "assert counting_sort([11, 7, 15, 4, 6, 3]) == [3, 4, 6, 7, 11, 15]": {
      "result": true,
      "time": 0.03609275817871094,
      "error": null
    },
    "assert counting_sort([3, 5, 10, 2, 6, 2]) == [2, 2, 3, 5, 6, 10]": {
      "result": true,
      "time": 0.04398751258850098,
      "error": null
    },
    "assert counting_sort([5, 5, 10, 7, 3, 5]) == [3, 5, 5, 5, 7, 10]": {
      "result": true,
      "time": 0.04430890083312988,
      "error": null
    },
    "assert counting_sort([4, 5, 18, 6, 2, 6]) == [2, 4, 5, 6, 6, 18]": {
      "result": true,
      "time": 0.03724861145019531,
      "error": null
    },
    "assert counting_sort([3, 8, 9, 2, 2, 1]) == [1, 2, 2, 3, 8, 9]": {
      "result": true,
      "time": 0.037872314453125,
      "error": null
    },
    "assert counting_sort([6, 2, 10, 5, 4, 3]) == [2, 3, 4, 5, 6, 10]": {
      "result": true,
      "time": 0.037110090255737305,
      "error": null
    },
    "assert counting_sort([3, 7, 14, 2, 5, 4]) == [2, 3, 4, 5, 7, 14]": {
      "result": true,
      "time": 0.04291534423828125,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}