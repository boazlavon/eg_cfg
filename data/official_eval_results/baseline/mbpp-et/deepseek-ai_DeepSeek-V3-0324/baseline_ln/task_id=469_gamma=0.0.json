{
  "code": "def max_profit(prices, k):\n    n = len(prices)\n    if n == 0 or k == 0:\n        return 0\n    \n    # If k is large enough, we can make as many transactions as we want\n    if k >= n // 2:\n        max_profit = 0\n        for i in range(1, n):\n            if prices[i] > prices[i-1]:\n                max_profit += prices[i] - prices[i-1]\n        return max_profit\n    \n    # Initialize DP tables\n    dp = [[0] * n for _ in range(k+1)]\n    \n    for t in range(1, k+1):\n        max_diff = -prices[0]\n        for i in range(1, n):\n            dp[t][i] = max(dp[t][i-1], prices[i] + max_diff)\n            max_diff = max(max_diff, dp[t-1][i] - prices[i])\n    \n    return dp[k][n-1]",
  "results": {
    "assert max_profit([1, 5, 2, 3, 7, 6, 4, 5], 3) == 10": {
      "result": true,
      "time": 0.040280818939208984,
      "error": null
    },
    "assert max_profit([2, 4, 7, 5, 4, 3, 5], 2) == 7": {
      "result": true,
      "time": 0.036702632904052734,
      "error": null
    },
    "assert max_profit([10, 6, 8, 4, 2], 2) == 2": {
      "result": true,
      "time": 0.03534078598022461,
      "error": null
    },
    "assert max_profit([1, 7, 2, 3, 3, 11, 6, 9], 8) == 18": {
      "result": true,
      "time": 0.03745269775390625,
      "error": null
    },
    "assert max_profit([5, 4, 7, 7, 4, 3, 5, 3], 2) == 5": {
      "result": true,
      "time": 0.038908958435058594,
      "error": null
    },
    "assert max_profit([4, 2, 1, 8, 7, 5, 9, 1], 3) == 11": {
      "result": true,
      "time": 0.03131246566772461,
      "error": null
    },
    "assert max_profit([1, 4, 3, 3, 2, 10, 7, 6], 2) == 11": {
      "result": true,
      "time": 0.03632831573486328,
      "error": null
    },
    "assert max_profit([6, 8, 4, 4, 3, 10, 3, 6], 2) == 10": {
      "result": true,
      "time": 0.0404210090637207,
      "error": null
    },
    "assert max_profit([5, 4, 3, 5, 9, 10, 7, 1], 6) == 7": {
      "result": true,
      "time": 0.03615570068359375,
      "error": null
    },
    "assert max_profit([4, 8, 5, 5, 8, 5, 1, 1], 3) == 7": {
      "result": true,
      "time": 0.03476238250732422,
      "error": null
    },
    "assert max_profit([6, 8, 6, 5, 5, 2, 7, 6], 7) == 7": {
      "result": true,
      "time": 0.03519868850708008,
      "error": null
    },
    "assert max_profit([6, 9, 2, 6, 5, 8, 4, 2], 7) == 10": {
      "result": true,
      "time": 0.040050506591796875,
      "error": null
    },
    "assert max_profit([6, 4, 2, 5, 2, 10, 1, 3], 7) == 13": {
      "result": true,
      "time": 0.03513669967651367,
      "error": null
    },
    "assert max_profit([1, 9, 7, 1, 5, 9, 6, 2], 7) == 16": {
      "result": true,
      "time": 0.03682589530944824,
      "error": null
    },
    "assert max_profit([2, 8, 5, 5, 12, 11, 9, 8], 6) == 13": {
      "result": true,
      "time": 0.03272294998168945,
      "error": null
    },
    "assert max_profit([4, 1, 3, 5, 9, 5, 9, 10], 1) == 9": {
      "result": true,
      "time": 0.038985252380371094,
      "error": null
    },
    "assert max_profit([5, 2, 6, 2, 12, 7, 4, 2], 5) == 14": {
      "result": true,
      "time": 0.03482413291931152,
      "error": null
    },
    "assert max_profit([5, 3, 2, 3, 4, 11, 3, 4], 1) == 9": {
      "result": true,
      "time": 0.04199862480163574,
      "error": null
    },
    "assert max_profit([4, 10, 1, 4, 8, 9, 2, 3], 6) == 15": {
      "result": true,
      "time": 0.038396358489990234,
      "error": null
    },
    "assert max_profit([3, 9, 3, 1, 11, 3, 4, 2], 7) == 17": {
      "result": true,
      "time": 0.03598523139953613,
      "error": null
    },
    "assert max_profit([4, 10, 2, 5, 7, 11, 9, 9], 4) == 15": {
      "result": true,
      "time": 0.03335165977478027,
      "error": null
    },
    "assert max_profit([6, 1, 5, 7, 4, 4, 4, 6], 7) == 8": {
      "result": true,
      "time": 0.039789676666259766,
      "error": null
    },
    "assert max_profit([2, 2, 3, 5, 2, 10, 8, 10], 1) == 8": {
      "result": true,
      "time": 0.03637981414794922,
      "error": null
    },
    "assert max_profit([2, 8, 7, 5, 6, 3, 2, 5], 8) == 10": {
      "result": true,
      "time": 0.032794952392578125,
      "error": null
    },
    "assert max_profit([3, 6, 6, 7, 9, 6, 6, 9], 8) == 9": {
      "result": true,
      "time": 0.04154396057128906,
      "error": null
    },
    "assert max_profit([5, 3, 4, 1, 7, 7, 7, 2], 2) == 7": {
      "result": true,
      "time": 0.04849100112915039,
      "error": null
    },
    "assert max_profit([4, 9, 6, 5, 9, 7, 1, 5], 6) == 13": {
      "result": true,
      "time": 0.04021859169006348,
      "error": null
    },
    "assert max_profit([2, 8, 7, 2, 6, 6, 1, 9], 2) == 14": {
      "result": true,
      "time": 0.05219388008117676,
      "error": null
    },
    "assert max_profit([3, 2, 4, 4, 5, 7, 6, 3], 7) == 5": {
      "result": true,
      "time": 0.04259300231933594,
      "error": null
    },
    "assert max_profit([6, 4, 5, 1, 7, 2, 1, 6], 3) == 12": {
      "result": true,
      "time": 0.040546417236328125,
      "error": null
    },
    "assert max_profit([2, 3, 5, 3, 11, 5, 9, 7], 5) == 15": {
      "result": true,
      "time": 0.05186891555786133,
      "error": null
    },
    "assert max_profit([5, 2, 4, 6, 10, 6, 8, 1], 8) == 10": {
      "result": true,
      "time": 0.03717184066772461,
      "error": null
    },
    "assert max_profit([5, 2, 2, 2, 7, 8, 7, 1], 3) == 6": {
      "result": true,
      "time": 0.03559136390686035,
      "error": null
    },
    "assert max_profit([3, 3, 6, 1, 5, 7, 7, 9], 5) == 11": {
      "result": true,
      "time": 0.03723454475402832,
      "error": null
    },
    "assert max_profit([5, 5, 3, 3, 8, 4, 1, 8], 1) == 7": {
      "result": true,
      "time": 0.032172441482543945,
      "error": null
    },
    "assert max_profit([1, 3, 1, 3, 9, 1, 2, 5], 6) == 14": {
      "result": true,
      "time": 0.034958600997924805,
      "error": null
    },
    "assert max_profit([3, 4, 8, 6, 7, 7, 1], 2) == 6": {
      "result": true,
      "time": 0.043062448501586914,
      "error": null
    },
    "assert max_profit([5, 8, 5, 7, 4, 8, 6], 3) == 9": {
      "result": true,
      "time": 0.03922677040100098,
      "error": null
    },
    "assert max_profit([4, 8, 8, 2, 9, 1, 7], 5) == 17": {
      "result": true,
      "time": 0.04310011863708496,
      "error": null
    },
    "assert max_profit([7, 7, 7, 6, 6, 4, 9], 2) == 5": {
      "result": true,
      "time": 0.04349708557128906,
      "error": null
    },
    "assert max_profit([1, 5, 7, 5, 3, 7, 9], 7) == 12": {
      "result": true,
      "time": 0.039098501205444336,
      "error": null
    },
    "assert max_profit([4, 5, 2, 2, 4, 4, 4], 6) == 3": {
      "result": true,
      "time": 0.04550886154174805,
      "error": null
    },
    "assert max_profit([3, 7, 8, 6, 2, 1, 7], 5) == 11": {
      "result": true,
      "time": 0.0443880558013916,
      "error": null
    },
    "assert max_profit([7, 7, 8, 5, 6, 1, 2], 4) == 3": {
      "result": true,
      "time": 0.04708552360534668,
      "error": null
    },
    "assert max_profit([7, 6, 9, 10, 6, 6, 7], 7) == 5": {
      "result": true,
      "time": 0.04304242134094238,
      "error": null
    },
    "assert max_profit([5, 9, 9, 10, 5, 4, 5], 5) == 6": {
      "result": true,
      "time": 0.046143293380737305,
      "error": null
    },
    "assert max_profit([6, 1, 9, 1, 6, 2, 2], 3) == 13": {
      "result": true,
      "time": 0.04986763000488281,
      "error": null
    },
    "assert max_profit([2, 5, 8, 7, 4, 7, 9], 7) == 11": {
      "result": true,
      "time": 0.038516998291015625,
      "error": null
    },
    "assert max_profit([7, 9, 8, 7, 9, 7, 7], 2) == 4": {
      "result": true,
      "time": 0.0464482307434082,
      "error": null
    },
    "assert max_profit([1, 9, 9, 1, 9, 6, 4], 1) == 8": {
      "result": true,
      "time": 0.04134964942932129,
      "error": null
    },
    "assert max_profit([1, 4, 11, 3, 7, 5, 4], 7) == 14": {
      "result": true,
      "time": 0.03971266746520996,
      "error": null
    },
    "assert max_profit([5, 1, 11, 10, 1, 4, 5], 2) == 14": {
      "result": true,
      "time": 0.03641867637634277,
      "error": null
    },
    "assert max_profit([1, 1, 2, 2, 8, 4, 4], 6) == 7": {
      "result": true,
      "time": 0.03637862205505371,
      "error": null
    },
    "assert max_profit([6, 7, 9, 6, 2, 4, 8], 2) == 9": {
      "result": true,
      "time": 0.03789258003234863,
      "error": null
    },
    "assert max_profit([5, 6, 7, 5, 2, 3, 8], 2) == 8": {
      "result": true,
      "time": 0.030822038650512695,
      "error": null
    },
    "assert max_profit([3, 4, 3, 4, 6, 1, 1], 7) == 4": {
      "result": true,
      "time": 0.03273439407348633,
      "error": null
    },
    "assert max_profit([4, 4, 4, 10, 6, 3, 8], 7) == 11": {
      "result": true,
      "time": 0.03271627426147461,
      "error": null
    },
    "assert max_profit([2, 2, 8, 2, 8, 2, 1], 6) == 12": {
      "result": true,
      "time": 0.03670191764831543,
      "error": null
    },
    "assert max_profit([2, 8, 8, 4, 1, 3, 4], 5) == 9": {
      "result": true,
      "time": 0.03365898132324219,
      "error": null
    },
    "assert max_profit([5, 3, 12, 9, 6, 4, 7], 1) == 9": {
      "result": true,
      "time": 0.03365135192871094,
      "error": null
    },
    "assert max_profit([4, 5, 7, 3, 2, 6, 2], 5) == 7": {
      "result": true,
      "time": 0.03686809539794922,
      "error": null
    },
    "assert max_profit([1, 7, 7, 6, 4, 4, 4], 4) == 6": {
      "result": true,
      "time": 0.03811764717102051,
      "error": null
    },
    "assert max_profit([7, 6, 3, 5, 6, 8, 7], 6) == 5": {
      "result": true,
      "time": 0.03846263885498047,
      "error": null
    },
    "assert max_profit([7, 1, 2, 9, 6, 6, 8], 3) == 10": {
      "result": true,
      "time": 0.03510284423828125,
      "error": null
    },
    "assert max_profit([2, 5, 12, 8, 2, 6, 7], 6) == 15": {
      "result": true,
      "time": 0.04214072227478027,
      "error": null
    },
    "assert max_profit([1, 8, 5, 10, 5, 2, 8], 1) == 9": {
      "result": true,
      "time": 0.042345285415649414,
      "error": null
    },
    "assert max_profit([1, 7, 9, 9, 7, 2, 2], 6) == 8": {
      "result": true,
      "time": 0.031447410583496094,
      "error": null
    },
    "assert max_profit([5, 3, 3, 8, 5, 5, 1], 1) == 5": {
      "result": true,
      "time": 0.03996419906616211,
      "error": null
    },
    "assert max_profit([1, 1, 4, 2, 2, 1, 1], 1) == 3": {
      "result": true,
      "time": 0.03527069091796875,
      "error": null
    },
    "assert max_profit([13, 3, 12, 8, 6], 3) == 9": {
      "result": true,
      "time": 0.03362083435058594,
      "error": null
    },
    "assert max_profit([10, 6, 9, 8, 2], 6) == 3": {
      "result": true,
      "time": 0.03895854949951172,
      "error": null
    },
    "assert max_profit([5, 10, 11, 6, 1], 6) == 6": {
      "result": true,
      "time": 0.03836321830749512,
      "error": null
    },
    "assert max_profit([15, 6, 7, 1, 3], 1) == 2": {
      "result": true,
      "time": 0.03291797637939453,
      "error": null
    },
    "assert max_profit([14, 7, 3, 1, 6], 5) == 5": {
      "result": true,
      "time": 0.0345454216003418,
      "error": null
    },
    "assert max_profit([8, 7, 6, 9, 5], 7) == 3": {
      "result": true,
      "time": 0.03470182418823242,
      "error": null
    },
    "assert max_profit([10, 10, 12, 1, 6], 4) == 7": {
      "result": true,
      "time": 0.03371453285217285,
      "error": null
    },
    "assert max_profit([11, 3, 10, 3, 4], 6) == 8": {
      "result": true,
      "time": 0.03684115409851074,
      "error": null
    },
    "assert max_profit([10, 3, 11, 4, 1], 6) == 8": {
      "result": true,
      "time": 0.03171825408935547,
      "error": null
    },
    "assert max_profit([5, 2, 7, 9, 5], 7) == 7": {
      "result": true,
      "time": 0.04053330421447754,
      "error": null
    },
    "assert max_profit([8, 4, 11, 4, 7], 4) == 10": {
      "result": true,
      "time": 0.033284664154052734,
      "error": null
    },
    "assert max_profit([9, 11, 11, 8, 6], 6) == 2": {
      "result": true,
      "time": 0.03905749320983887,
      "error": null
    },
    "assert max_profit([15, 11, 12, 2, 6], 5) == 5": {
      "result": true,
      "time": 0.03459620475769043,
      "error": null
    },
    "assert max_profit([15, 4, 9, 1, 2], 5) == 6": {
      "result": true,
      "time": 0.03678703308105469,
      "error": null
    },
    "assert max_profit([15, 9, 13, 7, 7], 3) == 4": {
      "result": true,
      "time": 0.03336334228515625,
      "error": null
    },
    "assert max_profit([9, 10, 13, 4, 1], 4) == 4": {
      "result": true,
      "time": 0.03445792198181152,
      "error": null
    },
    "assert max_profit([14, 11, 12, 1, 2], 4) == 2": {
      "result": true,
      "time": 0.03451657295227051,
      "error": null
    },
    "assert max_profit([15, 11, 9, 4, 3], 4) == 0": {
      "result": true,
      "time": 0.03675580024719238,
      "error": null
    },
    "assert max_profit([9, 1, 11, 9, 2], 3) == 10": {
      "result": true,
      "time": 0.03601479530334473,
      "error": null
    },
    "assert max_profit([9, 4, 13, 9, 5], 7) == 9": {
      "result": true,
      "time": 0.03650641441345215,
      "error": null
    },
    "assert max_profit([7, 7, 3, 8, 4], 1) == 5": {
      "result": true,
      "time": 0.03205561637878418,
      "error": null
    },
    "assert max_profit([5, 6, 5, 7, 7], 1) == 2": {
      "result": true,
      "time": 0.032655954360961914,
      "error": null
    },
    "assert max_profit([6, 6, 13, 2, 7], 2) == 12": {
      "result": true,
      "time": 0.03702545166015625,
      "error": null
    },
    "assert max_profit([10, 6, 12, 2, 5], 1) == 6": {
      "result": true,
      "time": 0.03547334671020508,
      "error": null
    },
    "assert max_profit([15, 8, 3, 5, 4], 3) == 2": {
      "result": true,
      "time": 0.03450274467468262,
      "error": null
    },
    "assert max_profit([5, 4, 10, 3, 6], 1) == 6": {
      "result": true,
      "time": 0.03576970100402832,
      "error": null
    },
    "assert max_profit([12, 10, 12, 2, 1], 2) == 2": {
      "result": true,
      "time": 0.038561105728149414,
      "error": null
    },
    "assert max_profit([5, 10, 12, 7, 1], 6) == 7": {
      "result": true,
      "time": 0.040929555892944336,
      "error": null
    },
    "assert max_profit([6, 5, 9, 2, 4], 4) == 6": {
      "result": true,
      "time": 0.037273406982421875,
      "error": null
    },
    "assert max_profit([14, 7, 7, 4, 1], 6) == 0": {
      "result": true,
      "time": 0.035971641540527344,
      "error": null
    },
    "assert max_profit([6, 1, 6, 6, 4], 3) == 5": {
      "result": true,
      "time": 0.039206504821777344,
      "error": null
    },
    "assert max_profit([6, 3, 12, 8, 4], 2) == 9": {
      "result": true,
      "time": 0.0356907844543457,
      "error": null
    },
    "assert max_profit([15, 8, 13, 2, 6], 6) == 9": {
      "result": true,
      "time": 0.036267757415771484,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}