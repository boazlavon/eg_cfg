{
  "code": "def count_Squares(m, n):\n    total = 0\n    min_dim = min(m, n)\n    for k in range(1, min_dim + 1):\n        total += (m - k + 1) * (n - k + 1)\n    return total",
  "results": {
    "assert count_Squares(4,3) == 20": {
      "result": true,
      "time": 0.045798540115356445,
      "error": null
    },
    "assert count_Squares(1,2) == 2": {
      "result": true,
      "time": 0.049924373626708984,
      "error": null
    },
    "assert count_Squares(2,2) == 5": {
      "result": true,
      "time": 0.0385737419128418,
      "error": null
    },
    "assert count_Squares(5, 2) == 10": {
      "result": false,
      "time": 0.04246640205383301,
      "error": null
    },
    "assert count_Squares(9, 8) == 240": {
      "result": true,
      "time": 0.0450742244720459,
      "error": null
    },
    "assert count_Squares(1, 2) == 2": {
      "result": true,
      "time": 0.04580807685852051,
      "error": null
    },
    "assert count_Squares(5, 4) == 40": {
      "result": true,
      "time": 0.04491114616394043,
      "error": null
    },
    "assert count_Squares(4, 5) == 40": {
      "result": true,
      "time": 0.04806327819824219,
      "error": null
    },
    "assert count_Squares(2, 3) == 8": {
      "result": true,
      "time": 0.04537701606750488,
      "error": null
    },
    "assert count_Squares(3, 2) == 8": {
      "result": true,
      "time": 0.03771400451660156,
      "error": null
    },
    "assert count_Squares(3, 7) == 28": {
      "result": false,
      "time": 0.04602241516113281,
      "error": null
    },
    "assert count_Squares(5, 3) == 25": {
      "result": false,
      "time": 0.04861187934875488,
      "error": null
    },
    "assert count_Squares(9, 5) == 105": {
      "result": false,
      "time": 0.04598641395568848,
      "error": null
    },
    "assert count_Squares(2, 8) == -12": {
      "result": false,
      "time": 0.05326223373413086,
      "error": null
    },
    "assert count_Squares(6, 8) == 132": {
      "result": false,
      "time": 0.06330537796020508,
      "error": null
    },
    "assert count_Squares(1, 4) == 0": {
      "result": false,
      "time": 0.060245513916015625,
      "error": null
    },
    "assert count_Squares(2, 2) == 5": {
      "result": true,
      "time": 0.05468153953552246,
      "error": null
    },
    "assert count_Squares(6, 1) == -14": {
      "result": false,
      "time": 0.06016063690185547,
      "error": null
    },
    "assert count_Squares(4, 1) == 0": {
      "result": false,
      "time": 0.06531691551208496,
      "error": null
    },
    "assert count_Squares(9, 3) == 15": {
      "result": false,
      "time": 0.05562305450439453,
      "error": null
    },
    "assert count_Squares(8, 7) == 168": {
      "result": true,
      "time": 0.05864310264587402,
      "error": null
    },
    "assert count_Squares(7, 7) == 140": {
      "result": true,
      "time": 0.05433201789855957,
      "error": null
    },
    "assert count_Squares(1, 1) == 1": {
      "result": true,
      "time": 0.053569793701171875,
      "error": null
    },
    "assert count_Squares(3, 4) == 20": {
      "result": true,
      "time": 0.0586552619934082,
      "error": null
    },
    "assert count_Squares(6, 3) == 28": {
      "result": false,
      "time": 0.04548335075378418,
      "error": null
    },
    "assert count_Squares(5, 5) == 55": {
      "result": true,
      "time": 0.06035566329956055,
      "error": null
    },
    "assert count_Squares(4, 7) == 56": {
      "result": false,
      "time": 0.054318904876708984,
      "error": null
    },
    "assert count_Squares(2, 1) == 2": {
      "result": true,
      "time": 0.04822421073913574,
      "error": null
    },
    "assert count_Squares(2, 6) == 7": {
      "result": false,
      "time": 0.0530393123626709,
      "error": null
    },
    "assert count_Squares(2, 4) == 10": {
      "result": false,
      "time": 0.04276680946350098,
      "error": null
    },
    "assert count_Squares(4, 6) == 49": {
      "result": false,
      "time": 0.046894073486328125,
      "error": null
    },
    "assert count_Squares(1, 6) == -14": {
      "result": false,
      "time": 0.0312802791595459,
      "error": null
    },
    "assert count_Squares(6, 4) == 49": {
      "result": false,
      "time": 0.037307024002075195,
      "error": null
    },
    "assert count_Squares(2, 7) == 0": {
      "result": false,
      "time": 0.04072451591491699,
      "error": null
    },
    "assert count_Squares(6, 5) == 70": {
      "result": true,
      "time": 0.035017967224121094,
      "error": null
    },
    "assert count_Squares(5, 1) == -5": {
      "result": false,
      "time": 0.058930397033691406,
      "error": null
    },
    "assert count_Squares(4, 2) == 10": {
      "result": false,
      "time": 0.05480146408081055,
      "error": null
    },
    "assert count_Squares(3, 3) == 14": {
      "result": true,
      "time": 0.05628156661987305,
      "error": null
    },
    "assert count_Squares(6, 6) == 91": {
      "result": true,
      "time": 0.059105634689331055,
      "error": null
    },
    "assert count_Squares(2, 5) == 10": {
      "result": false,
      "time": 0.054959774017333984,
      "error": null
    },
    "assert count_Squares(3, 5) == 25": {
      "result": false,
      "time": 0.05310416221618652,
      "error": null
    },
    "assert count_Squares(6, 2) == 7": {
      "result": false,
      "time": 0.05699276924133301,
      "error": null
    },
    "assert count_Squares(1, 7) == -28": {
      "result": false,
      "time": 0.048564910888671875,
      "error": null
    },
    "assert count_Squares(4, 4) == 30": {
      "result": true,
      "time": 0.06126880645751953,
      "error": null
    },
    "assert count_Squares(7, 3) == 28": {
      "result": false,
      "time": 0.060328006744384766,
      "error": null
    },
    "assert count_Squares(1, 5) == -5": {
      "result": false,
      "time": 0.04822897911071777,
      "error": null
    },
    "assert count_Squares(1, 3) == 2": {
      "result": false,
      "time": 0.06210589408874512,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.425531914893617,
  "general_error": "",
  "has_testcase_error": false
}