{
  "code": "def count_Hexadecimal(start, end):\n    count = 0\n    for num in range(start, end + 1):\n        hex_str = hex(num)[2:]  # Convert to hex and remove '0x' prefix\n        if all(c in 'abcdef' for c in hex_str.lower()):\n            count += 1\n    return count",
  "results": {
    "assert count_Hexadecimal(10,15) == 6": {
      "result": true,
      "time": 0.04420948028564453,
      "error": null
    },
    "assert count_Hexadecimal(2,4) == 0": {
      "result": true,
      "time": 0.04258584976196289,
      "error": null
    },
    "assert count_Hexadecimal(15,16) == 1": {
      "result": true,
      "time": 0.04070019721984863,
      "error": null
    },
    "assert count_Hexadecimal(7, 19) == 6": {
      "result": true,
      "time": 0.04239225387573242,
      "error": null
    },
    "assert count_Hexadecimal(10, 18) == 6": {
      "result": true,
      "time": 0.04078078269958496,
      "error": null
    },
    "assert count_Hexadecimal(5, 15) == 6": {
      "result": true,
      "time": 0.0368649959564209,
      "error": null
    },
    "assert count_Hexadecimal(6, 11) == 2": {
      "result": true,
      "time": 0.04357194900512695,
      "error": null
    },
    "assert count_Hexadecimal(14, 16) == 2": {
      "result": true,
      "time": 0.04288339614868164,
      "error": null
    },
    "assert count_Hexadecimal(15, 12) == 0": {
      "result": true,
      "time": 0.04684185981750488,
      "error": null
    },
    "assert count_Hexadecimal(6, 18) == 6": {
      "result": true,
      "time": 0.04580998420715332,
      "error": null
    },
    "assert count_Hexadecimal(12, 13) == 2": {
      "result": true,
      "time": 0.04050016403198242,
      "error": null
    },
    "assert count_Hexadecimal(8, 15) == 6": {
      "result": true,
      "time": 0.04085278511047363,
      "error": null
    },
    "assert count_Hexadecimal(14, 10) == 0": {
      "result": true,
      "time": 0.04754471778869629,
      "error": null
    },
    "assert count_Hexadecimal(8, 14) == 5": {
      "result": true,
      "time": 0.04747438430786133,
      "error": null
    },
    "assert count_Hexadecimal(7, 18) == 6": {
      "result": true,
      "time": 0.03910493850708008,
      "error": null
    },
    "assert count_Hexadecimal(5, 16) == 6": {
      "result": true,
      "time": 0.04452848434448242,
      "error": null
    },
    "assert count_Hexadecimal(10, 19) == 6": {
      "result": true,
      "time": 0.042279720306396484,
      "error": null
    },
    "assert count_Hexadecimal(10, 12) == 3": {
      "result": true,
      "time": 0.03888344764709473,
      "error": null
    },
    "assert count_Hexadecimal(11, 13) == 3": {
      "result": true,
      "time": 0.05321097373962402,
      "error": null
    },
    "assert count_Hexadecimal(13, 11) == 0": {
      "result": true,
      "time": 0.04155325889587402,
      "error": null
    },
    "assert count_Hexadecimal(8, 20) == 6": {
      "result": true,
      "time": 0.04187726974487305,
      "error": null
    },
    "assert count_Hexadecimal(11, 11) == 1": {
      "result": true,
      "time": 0.04748034477233887,
      "error": null
    },
    "assert count_Hexadecimal(7, 16) == 6": {
      "result": true,
      "time": 0.037526845932006836,
      "error": null
    },
    "assert count_Hexadecimal(11, 17) == 5": {
      "result": true,
      "time": 0.045655250549316406,
      "error": null
    },
    "assert count_Hexadecimal(5, 14) == 5": {
      "result": true,
      "time": 0.03920936584472656,
      "error": null
    },
    "assert count_Hexadecimal(12, 19) == 4": {
      "result": true,
      "time": 0.03793692588806152,
      "error": null
    },
    "assert count_Hexadecimal(11, 20) == 5": {
      "result": true,
      "time": 0.050594329833984375,
      "error": null
    },
    "assert count_Hexadecimal(12, 14) == 3": {
      "result": true,
      "time": 0.04013562202453613,
      "error": null
    },
    "assert count_Hexadecimal(11, 19) == 5": {
      "result": true,
      "time": 0.03830671310424805,
      "error": null
    },
    "assert count_Hexadecimal(15, 10) == 0": {
      "result": true,
      "time": 0.044008493423461914,
      "error": null
    },
    "assert count_Hexadecimal(14, 19) == 2": {
      "result": true,
      "time": 0.04020261764526367,
      "error": null
    },
    "assert count_Hexadecimal(6, 3) == 0": {
      "result": true,
      "time": 0.03937578201293945,
      "error": null
    },
    "assert count_Hexadecimal(5, 3) == 0": {
      "result": true,
      "time": 0.03828287124633789,
      "error": null
    },
    "assert count_Hexadecimal(2, 2) == 0": {
      "result": true,
      "time": 0.042932987213134766,
      "error": null
    },
    "assert count_Hexadecimal(5, 1) == 0": {
      "result": true,
      "time": 0.037592172622680664,
      "error": null
    },
    "assert count_Hexadecimal(2, 1) == 0": {
      "result": true,
      "time": 0.0482480525970459,
      "error": null
    },
    "assert count_Hexadecimal(5, 7) == 0": {
      "result": true,
      "time": 0.03971433639526367,
      "error": null
    },
    "assert count_Hexadecimal(4, 2) == 0": {
      "result": true,
      "time": 0.03363180160522461,
      "error": null
    },
    "assert count_Hexadecimal(4, 5) == 0": {
      "result": true,
      "time": 0.0389711856842041,
      "error": null
    },
    "assert count_Hexadecimal(5, 4) == 0": {
      "result": true,
      "time": 0.03442692756652832,
      "error": null
    },
    "assert count_Hexadecimal(1, 2) == 0": {
      "result": true,
      "time": 0.036002159118652344,
      "error": null
    },
    "assert count_Hexadecimal(1, 7) == 0": {
      "result": true,
      "time": 0.03731060028076172,
      "error": null
    },
    "assert count_Hexadecimal(3, 6) == 0": {
      "result": true,
      "time": 0.04470467567443848,
      "error": null
    },
    "assert count_Hexadecimal(5, 8) == 0": {
      "result": true,
      "time": 0.042563676834106445,
      "error": null
    },
    "assert count_Hexadecimal(1, 4) == 0": {
      "result": true,
      "time": 0.03638195991516113,
      "error": null
    },
    "assert count_Hexadecimal(4, 6) == 0": {
      "result": true,
      "time": 0.03215360641479492,
      "error": null
    },
    "assert count_Hexadecimal(1, 6) == 0": {
      "result": true,
      "time": 0.03695964813232422,
      "error": null
    },
    "assert count_Hexadecimal(4, 3) == 0": {
      "result": true,
      "time": 0.03536343574523926,
      "error": null
    },
    "assert count_Hexadecimal(3, 7) == 0": {
      "result": true,
      "time": 0.04237771034240723,
      "error": null
    },
    "assert count_Hexadecimal(1, 1) == 0": {
      "result": true,
      "time": 0.0413815975189209,
      "error": null
    },
    "assert count_Hexadecimal(3, 1) == 0": {
      "result": true,
      "time": 0.03261542320251465,
      "error": null
    },
    "assert count_Hexadecimal(2, 5) == 0": {
      "result": true,
      "time": 0.03410005569458008,
      "error": null
    },
    "assert count_Hexadecimal(7, 2) == 0": {
      "result": true,
      "time": 0.03237748146057129,
      "error": null
    },
    "assert count_Hexadecimal(3, 4) == 0": {
      "result": true,
      "time": 0.03786897659301758,
      "error": null
    },
    "assert count_Hexadecimal(4, 7) == 0": {
      "result": true,
      "time": 0.03812766075134277,
      "error": null
    },
    "assert count_Hexadecimal(2, 3) == 0": {
      "result": true,
      "time": 0.03743910789489746,
      "error": null
    },
    "assert count_Hexadecimal(7, 9) == 0": {
      "result": true,
      "time": 0.03655600547790527,
      "error": null
    },
    "assert count_Hexadecimal(19, 16) == 0": {
      "result": true,
      "time": 0.036269187927246094,
      "error": null
    },
    "assert count_Hexadecimal(12, 20) == 4": {
      "result": true,
      "time": 0.033893585205078125,
      "error": null
    },
    "assert count_Hexadecimal(17, 15) == 0": {
      "result": true,
      "time": 0.04462766647338867,
      "error": null
    },
    "assert count_Hexadecimal(20, 19) == 0": {
      "result": true,
      "time": 0.03119492530822754,
      "error": null
    },
    "assert count_Hexadecimal(10, 15) == 6": {
      "result": true,
      "time": 0.03576231002807617,
      "error": null
    },
    "assert count_Hexadecimal(16, 20) == 0": {
      "result": true,
      "time": 0.03595256805419922,
      "error": null
    },
    "assert count_Hexadecimal(14, 20) == 2": {
      "result": true,
      "time": 0.03973388671875,
      "error": null
    },
    "assert count_Hexadecimal(13, 14) == 2": {
      "result": true,
      "time": 0.03497028350830078,
      "error": null
    },
    "assert count_Hexadecimal(10, 11) == 2": {
      "result": true,
      "time": 0.0326690673828125,
      "error": null
    },
    "assert count_Hexadecimal(15, 13) == 0": {
      "result": true,
      "time": 0.03131747245788574,
      "error": null
    },
    "assert count_Hexadecimal(18, 21) == 0": {
      "result": true,
      "time": 0.04191184043884277,
      "error": null
    },
    "assert count_Hexadecimal(20, 21) == 0": {
      "result": true,
      "time": 0.034478187561035156,
      "error": null
    },
    "assert count_Hexadecimal(16, 21) == 0": {
      "result": true,
      "time": 0.037775516510009766,
      "error": null
    },
    "assert count_Hexadecimal(13, 20) == 3": {
      "result": true,
      "time": 0.040932416915893555,
      "error": null
    },
    "assert count_Hexadecimal(10, 17) == 6": {
      "result": true,
      "time": 0.032981157302856445,
      "error": null
    },
    "assert count_Hexadecimal(16, 19) == 0": {
      "result": true,
      "time": 0.03779411315917969,
      "error": null
    },
    "assert count_Hexadecimal(13, 13) == 1": {
      "result": true,
      "time": 0.03626298904418945,
      "error": null
    },
    "assert count_Hexadecimal(17, 13) == 0": {
      "result": true,
      "time": 0.03902745246887207,
      "error": null
    },
    "assert count_Hexadecimal(19, 15) == 0": {
      "result": true,
      "time": 0.03509855270385742,
      "error": null
    },
    "assert count_Hexadecimal(13, 21) == 3": {
      "result": true,
      "time": 0.0399174690246582,
      "error": null
    },
    "assert count_Hexadecimal(11, 18) == 5": {
      "result": true,
      "time": 0.03758668899536133,
      "error": null
    },
    "assert count_Hexadecimal(10, 14) == 5": {
      "result": true,
      "time": 0.04512500762939453,
      "error": null
    },
    "assert count_Hexadecimal(15, 20) == 1": {
      "result": true,
      "time": 0.0345003604888916,
      "error": null
    },
    "assert count_Hexadecimal(10, 21) == 6": {
      "result": true,
      "time": 0.03633904457092285,
      "error": null
    },
    "assert count_Hexadecimal(16, 13) == 0": {
      "result": true,
      "time": 0.037505388259887695,
      "error": null
    },
    "assert count_Hexadecimal(17, 16) == 0": {
      "result": true,
      "time": 0.03360104560852051,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}