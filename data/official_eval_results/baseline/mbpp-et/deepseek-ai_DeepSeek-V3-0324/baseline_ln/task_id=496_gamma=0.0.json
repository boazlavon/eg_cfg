{
  "code": "import heapq as hq\n\ndef heap_queue_smallest(nums, n):\n    smallest_nums = hq.nsmallest(n, nums)\n    return smallest_nums",
  "results": {
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],3)==[14, 22, 25] ": {
      "result": true,
      "time": 0.13840174674987793,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],2)==[14, 22]": {
      "result": true,
      "time": 0.1342935562133789,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 22, 58],5)==[14, 22, 22, 25, 35]": {
      "result": true,
      "time": 0.11014175415039062,
      "error": null
    },
    "assert heap_queue_smallest([22, 37, 21, 81, 12, 70, 70, 26, 63], 4) == [12, 21, 22, 26]": {
      "result": true,
      "time": 0.13579916954040527,
      "error": null
    },
    "assert heap_queue_smallest([26, 33, 23, 88, 18, 65, 75, 26, 57], 4) == [18, 23, 26, 26]": {
      "result": true,
      "time": 0.12197303771972656,
      "error": null
    },
    "assert heap_queue_smallest([21, 33, 17, 81, 18, 69, 79, 29, 59], 4) == [17, 18, 21, 29]": {
      "result": true,
      "time": 0.11478042602539062,
      "error": null
    },
    "assert heap_queue_smallest([24, 34, 26, 88, 11, 70, 79, 28, 56], 1) == [11]": {
      "result": true,
      "time": 0.11256718635559082,
      "error": null
    },
    "assert heap_queue_smallest([21, 31, 23, 83, 13, 64, 75, 25, 55], 6) == [13, 21, 23, 25, 31, 55]": {
      "result": true,
      "time": 0.12993979454040527,
      "error": null
    },
    "assert heap_queue_smallest([22, 31, 17, 88, 10, 63, 77, 27, 60], 3) == [10, 17, 22]": {
      "result": true,
      "time": 0.15346980094909668,
      "error": null
    },
    "assert heap_queue_smallest([23, 34, 24, 81, 16, 68, 79, 24, 61], 4) == [16, 23, 24, 24]": {
      "result": true,
      "time": 0.12321615219116211,
      "error": null
    },
    "assert heap_queue_smallest([28, 35, 27, 82, 15, 64, 71, 27, 54], 4) == [15, 27, 27, 28]": {
      "result": true,
      "time": 0.10667967796325684,
      "error": null
    },
    "assert heap_queue_smallest([29, 40, 24, 85, 12, 67, 73, 27, 63], 5) == [12, 24, 27, 29, 40]": {
      "result": true,
      "time": 0.1361370086669922,
      "error": null
    },
    "assert heap_queue_smallest([21, 38, 26, 80, 12, 61, 71, 26, 56], 2) == [12, 21]": {
      "result": true,
      "time": 0.11559939384460449,
      "error": null
    },
    "assert heap_queue_smallest([21, 35, 26, 86, 11, 68, 77, 23, 55], 1) == [11]": {
      "result": true,
      "time": 0.13982224464416504,
      "error": null
    },
    "assert heap_queue_smallest([22, 34, 19, 89, 14, 64, 72, 28, 61], 8) == [14, 19, 22, 28, 34, 61, 64, 72]": {
      "result": true,
      "time": 0.12931370735168457,
      "error": null
    },
    "assert heap_queue_smallest([27, 35, 18, 89, 18, 61, 75, 27, 54], 6) == [18, 18, 27, 27, 35, 54]": {
      "result": true,
      "time": 0.11510062217712402,
      "error": null
    },
    "assert heap_queue_smallest([25, 34, 22, 83, 15, 70, 75, 29, 62], 7) == [15, 22, 25, 29, 34, 62, 70]": {
      "result": true,
      "time": 0.12067556381225586,
      "error": null
    },
    "assert heap_queue_smallest([23, 31, 23, 81, 19, 61, 75, 23, 57], 1) == [19]": {
      "result": true,
      "time": 0.12910079956054688,
      "error": null
    },
    "assert heap_queue_smallest([23, 40, 23, 90, 14, 65, 79, 27, 63], 1) == [14]": {
      "result": true,
      "time": 0.12403655052185059,
      "error": null
    },
    "assert heap_queue_smallest([30, 39, 25, 83, 17, 69, 80, 27, 59], 2) == [17, 25]": {
      "result": true,
      "time": 0.15200138092041016,
      "error": null
    },
    "assert heap_queue_smallest([27, 35, 19, 84, 15, 69, 77, 30, 59], 6) == [15, 19, 27, 30, 35, 59]": {
      "result": true,
      "time": 0.11321783065795898,
      "error": null
    },
    "assert heap_queue_smallest([22, 33, 20, 89, 17, 65, 71, 23, 56], 8) == [17, 20, 22, 23, 33, 56, 65, 71]": {
      "result": true,
      "time": 0.12941265106201172,
      "error": null
    },
    "assert heap_queue_smallest([25, 30, 23, 87, 12, 66, 80, 23, 57], 1) == [12]": {
      "result": true,
      "time": 0.12315964698791504,
      "error": null
    },
    "assert heap_queue_smallest([22, 30, 23, 80, 11, 70, 70, 23, 61], 5) == [11, 22, 23, 23, 30]": {
      "result": true,
      "time": 0.13725638389587402,
      "error": null
    },
    "assert heap_queue_smallest([26, 33, 17, 84, 12, 63, 72, 30, 62], 8) == [12, 17, 26, 30, 33, 62, 63, 72]": {
      "result": true,
      "time": 0.1320815086364746,
      "error": null
    },
    "assert heap_queue_smallest([22, 31, 18, 83, 13, 60, 70, 25, 54], 2) == [13, 18]": {
      "result": true,
      "time": 0.13002920150756836,
      "error": null
    },
    "assert heap_queue_smallest([25, 31, 27, 84, 18, 69, 73, 29, 54], 6) == [18, 25, 27, 29, 31, 54]": {
      "result": true,
      "time": 0.12526679039001465,
      "error": null
    },
    "assert heap_queue_smallest([20, 30, 26, 81, 18, 69, 71, 30, 60], 2) == [18, 20]": {
      "result": true,
      "time": 0.15392208099365234,
      "error": null
    },
    "assert heap_queue_smallest([23, 32, 25, 89, 11, 66, 76, 26, 63], 4) == [11, 23, 25, 26]": {
      "result": true,
      "time": 0.14919734001159668,
      "error": null
    },
    "assert heap_queue_smallest([24, 35, 17, 85, 19, 60, 72, 26, 55], 4) == [17, 19, 24, 26]": {
      "result": true,
      "time": 0.11365699768066406,
      "error": null
    },
    "assert heap_queue_smallest([21, 32, 22, 81, 18, 60, 78, 28, 63], 2) == [18, 21]": {
      "result": true,
      "time": 0.13191962242126465,
      "error": null
    },
    "assert heap_queue_smallest([20, 37, 21, 86, 16, 61, 71, 30, 61], 4) == [16, 20, 21, 30]": {
      "result": true,
      "time": 0.114898681640625,
      "error": null
    },
    "assert heap_queue_smallest([20, 31, 23, 83, 16, 64, 79, 23, 61], 4) == [16, 20, 23, 23]": {
      "result": true,
      "time": 0.11623096466064453,
      "error": null
    },
    "assert heap_queue_smallest([24, 40, 23, 86, 15, 67, 77, 29, 55], 2) == [15, 23]": {
      "result": true,
      "time": 0.07134175300598145,
      "error": null
    },
    "assert heap_queue_smallest([20, 32, 26, 80, 10, 62, 70, 24, 61], 6) == [10, 20, 24, 26, 32, 61]": {
      "result": true,
      "time": 0.11856961250305176,
      "error": null
    },
    "assert heap_queue_smallest([29, 36, 25, 87, 18, 60, 73, 20, 62], 7) == [18, 20, 25, 29, 36, 60, 62]": {
      "result": true,
      "time": 0.12111091613769531,
      "error": null
    },
    "assert heap_queue_smallest([27, 34, 24, 80, 10, 64, 70, 23, 53], 3) == [10, 23, 24]": {
      "result": true,
      "time": 0.12192916870117188,
      "error": null
    },
    "assert heap_queue_smallest([25, 31, 23, 90, 10, 66, 73, 27, 61], 4) == [10, 23, 25, 27]": {
      "result": true,
      "time": 0.11914968490600586,
      "error": null
    },
    "assert heap_queue_smallest([21, 35, 20, 85, 17, 63, 74, 26, 53], 5) == [17, 20, 21, 26, 35]": {
      "result": true,
      "time": 0.13814187049865723,
      "error": null
    },
    "assert heap_queue_smallest([21, 34, 23, 86, 14, 60, 75, 28, 59], 7) == [14, 21, 23, 28, 34, 59, 60]": {
      "result": true,
      "time": 0.11251497268676758,
      "error": null
    },
    "assert heap_queue_smallest([23, 33, 18, 88, 19, 63, 78, 27, 57], 6) == [18, 19, 23, 27, 33, 57]": {
      "result": true,
      "time": 0.13113021850585938,
      "error": null
    },
    "assert heap_queue_smallest([27, 31, 25, 85, 10, 68, 80, 21, 55], 6) == [10, 21, 25, 27, 31, 55]": {
      "result": true,
      "time": 0.13237810134887695,
      "error": null
    },
    "assert heap_queue_smallest([26, 37, 21, 85, 18, 65, 79, 24, 53], 2) == [18, 21]": {
      "result": true,
      "time": 0.07209157943725586,
      "error": null
    },
    "assert heap_queue_smallest([27, 40, 20, 84, 9, 68, 74, 29, 62], 4) == [9, 20, 27, 29]": {
      "result": true,
      "time": 0.13048529624938965,
      "error": null
    },
    "assert heap_queue_smallest([27, 39, 19, 83, 12, 69, 79, 26, 54], 6) == [12, 19, 26, 27, 39, 54]": {
      "result": true,
      "time": 0.14173078536987305,
      "error": null
    },
    "assert heap_queue_smallest([23, 31, 26, 90, 16, 62, 70, 20, 59], 7) == [16, 20, 23, 26, 31, 59, 62]": {
      "result": true,
      "time": 0.14038610458374023,
      "error": null
    },
    "assert heap_queue_smallest([29, 35, 22, 84, 17, 66, 77, 20, 59], 1) == [17]": {
      "result": true,
      "time": 0.1307811737060547,
      "error": null
    },
    "assert heap_queue_smallest([21, 32, 25, 85, 15, 62, 76, 27, 54], 2) == [15, 21]": {
      "result": true,
      "time": 0.13138628005981445,
      "error": null
    },
    "assert heap_queue_smallest([25, 36, 26, 80, 13, 64, 72, 23, 56], 2) == [13, 23]": {
      "result": true,
      "time": 0.13248968124389648,
      "error": null
    },
    "assert heap_queue_smallest([21, 40, 22, 80, 16, 68, 78, 23, 56], 7) == [16, 21, 22, 23, 40, 56, 68]": {
      "result": true,
      "time": 0.10307860374450684,
      "error": null
    },
    "assert heap_queue_smallest([29, 30, 22, 85, 9, 70, 74, 29, 62], 7) == [9, 22, 29, 29, 30, 62, 70]": {
      "result": true,
      "time": 0.11798691749572754,
      "error": null
    },
    "assert heap_queue_smallest([27, 37, 23, 81, 10, 70, 70, 30, 63], 3) == [10, 23, 27]": {
      "result": true,
      "time": 0.15153193473815918,
      "error": null
    },
    "assert heap_queue_smallest([30, 33, 17, 88, 17, 64, 72, 22, 57], 2) == [17, 17]": {
      "result": true,
      "time": 0.1342458724975586,
      "error": null
    },
    "assert heap_queue_smallest([20, 38, 25, 80, 13, 61, 75, 25, 55], 5) == [13, 20, 25, 25, 38]": {
      "result": true,
      "time": 0.11953091621398926,
      "error": null
    },
    "assert heap_queue_smallest([25, 33, 27, 89, 14, 62, 80, 30, 61], 2) == [14, 25]": {
      "result": true,
      "time": 0.12453675270080566,
      "error": null
    },
    "assert heap_queue_smallest([23, 40, 26, 85, 17, 69, 76, 28, 61], 5) == [17, 23, 26, 28, 40]": {
      "result": true,
      "time": 0.15787935256958008,
      "error": null
    },
    "assert heap_queue_smallest([20, 38, 20, 83, 16, 65, 80, 22, 63], 4) == [16, 20, 20, 22]": {
      "result": true,
      "time": 0.14529943466186523,
      "error": null
    },
    "assert heap_queue_smallest([23, 40, 17, 82, 13, 61, 73, 27, 54], 3) == [13, 17, 23]": {
      "result": true,
      "time": 0.13306927680969238,
      "error": null
    },
    "assert heap_queue_smallest([22, 30, 21, 90, 17, 64, 76, 24, 55], 2) == [17, 21]": {
      "result": true,
      "time": 0.13149166107177734,
      "error": null
    },
    "assert heap_queue_smallest([27, 40, 19, 83, 13, 63, 79, 23, 63], 1) == [13]": {
      "result": true,
      "time": 0.14371871948242188,
      "error": null
    },
    "assert heap_queue_smallest([30, 37, 24, 85, 10, 67, 72, 21, 60], 3) == [10, 21, 24]": {
      "result": true,
      "time": 0.12640833854675293,
      "error": null
    },
    "assert heap_queue_smallest([23, 38, 21, 86, 17, 70, 70, 20, 56], 4) == [17, 20, 21, 23]": {
      "result": true,
      "time": 0.12770533561706543,
      "error": null
    },
    "assert heap_queue_smallest([30, 37, 24, 81, 15, 70, 78, 26, 63], 6) == [15, 24, 26, 30, 37, 63]": {
      "result": true,
      "time": 0.13612008094787598,
      "error": null
    },
    "assert heap_queue_smallest([30, 30, 27, 80, 10, 68, 72, 25, 60], 4) == [10, 25, 27, 30]": {
      "result": true,
      "time": 0.15210318565368652,
      "error": null
    },
    "assert heap_queue_smallest([26, 37, 17, 84, 15, 61, 74, 30, 53], 7) == [15, 17, 26, 30, 37, 53, 61]": {
      "result": true,
      "time": 0.12534642219543457,
      "error": null
    },
    "assert heap_queue_smallest([23, 32, 19, 86, 14, 62, 74, 29, 56], 4) == [14, 19, 23, 29]": {
      "result": true,
      "time": 0.14897799491882324,
      "error": null
    },
    "assert heap_queue_smallest([29, 38, 19, 84, 15, 61, 76, 20, 54], 7) == [15, 19, 20, 29, 38, 54, 61]": {
      "result": true,
      "time": 0.11237311363220215,
      "error": null
    },
    "assert heap_queue_smallest([29, 38, 26, 82, 18, 62, 70, 26, 58], 6) == [18, 26, 26, 29, 38, 58]": {
      "result": true,
      "time": 0.12560391426086426,
      "error": null
    },
    "assert heap_queue_smallest([22, 37, 26, 86, 9, 68, 75, 29, 61], 5) == [9, 22, 26, 29, 37]": {
      "result": true,
      "time": 0.1324014663696289,
      "error": null
    },
    "assert heap_queue_smallest([21, 39, 23, 80, 12, 63, 72, 24, 59], 9) == [12, 21, 23, 24, 39, 59, 63, 72, 80]": {
      "result": true,
      "time": 0.10628104209899902,
      "error": null
    },
    "assert heap_queue_smallest([26, 39, 17, 89, 17, 70, 70, 25, 59], 4) == [17, 17, 25, 26]": {
      "result": true,
      "time": 0.14427566528320312,
      "error": null
    },
    "assert heap_queue_smallest([29, 40, 26, 85, 16, 62, 78, 22, 61], 2) == [16, 22]": {
      "result": true,
      "time": 0.10939264297485352,
      "error": null
    },
    "assert heap_queue_smallest([30, 34, 20, 90, 15, 60, 73, 23, 58], 8) == [15, 20, 23, 30, 34, 58, 60, 73]": {
      "result": true,
      "time": 0.12955856323242188,
      "error": null
    },
    "assert heap_queue_smallest([27, 30, 27, 90, 11, 67, 74, 19, 60], 3) == [11, 19, 27]": {
      "result": true,
      "time": 0.11218070983886719,
      "error": null
    },
    "assert heap_queue_smallest([25, 39, 18, 90, 15, 65, 75, 22, 56], 6) == [15, 18, 22, 25, 39, 56]": {
      "result": true,
      "time": 0.11056947708129883,
      "error": null
    },
    "assert heap_queue_smallest([29, 37, 17, 88, 9, 70, 74, 19, 59], 7) == [9, 17, 19, 29, 37, 59, 70]": {
      "result": true,
      "time": 0.13061070442199707,
      "error": null
    },
    "assert heap_queue_smallest([30, 35, 18, 82, 13, 69, 75, 18, 57], 10) == [13, 18, 18, 30, 35, 57, 69, 75, 82]": {
      "result": true,
      "time": 0.11604571342468262,
      "error": null
    },
    "assert heap_queue_smallest([25, 33, 21, 86, 12, 60, 72, 21, 56], 9) == [12, 21, 21, 25, 33, 56, 60, 72, 86]": {
      "result": true,
      "time": 0.11638736724853516,
      "error": null
    },
    "assert heap_queue_smallest([29, 36, 27, 86, 14, 65, 75, 21, 60], 6) == [14, 21, 27, 29, 36, 60]": {
      "result": true,
      "time": 0.13938069343566895,
      "error": null
    },
    "assert heap_queue_smallest([23, 36, 26, 80, 9, 63, 76, 23, 55], 9) == [9, 23, 23, 26, 36, 55, 63, 76, 80]": {
      "result": true,
      "time": 0.12446808815002441,
      "error": null
    },
    "assert heap_queue_smallest([23, 39, 21, 83, 12, 61, 71, 24, 55], 8) == [12, 21, 23, 24, 39, 55, 61, 71]": {
      "result": true,
      "time": 0.1312880516052246,
      "error": null
    },
    "assert heap_queue_smallest([29, 38, 26, 86, 18, 62, 79, 24, 62], 3) == [18, 24, 26]": {
      "result": true,
      "time": 0.11674141883850098,
      "error": null
    },
    "assert heap_queue_smallest([24, 39, 23, 83, 18, 63, 77, 26, 55], 4) == [18, 23, 24, 26]": {
      "result": true,
      "time": 0.13526463508605957,
      "error": null
    },
    "assert heap_queue_smallest([24, 31, 27, 83, 13, 69, 72, 23, 58], 1) == [13]": {
      "result": true,
      "time": 0.12277054786682129,
      "error": null
    },
    "assert heap_queue_smallest([20, 33, 22, 83, 9, 62, 71, 18, 59], 9) == [9, 18, 20, 22, 33, 59, 62, 71, 83]": {
      "result": true,
      "time": 0.12478399276733398,
      "error": null
    },
    "assert heap_queue_smallest([28, 31, 25, 85, 14, 69, 80, 20, 55], 3) == [14, 20, 25]": {
      "result": true,
      "time": 0.15155482292175293,
      "error": null
    },
    "assert heap_queue_smallest([22, 31, 22, 83, 16, 70, 78, 24, 59], 2) == [16, 22]": {
      "result": true,
      "time": 0.13184666633605957,
      "error": null
    },
    "assert heap_queue_smallest([20, 40, 21, 80, 14, 67, 76, 26, 54], 6) == [14, 20, 21, 26, 40, 54]": {
      "result": true,
      "time": 0.14749884605407715,
      "error": null
    },
    "assert heap_queue_smallest([29, 38, 21, 81, 14, 69, 75, 19, 61], 8) == [14, 19, 21, 29, 38, 61, 69, 75]": {
      "result": true,
      "time": 0.14668655395507812,
      "error": null
    },
    "assert heap_queue_smallest([21, 33, 19, 90, 15, 67, 71, 22, 56], 3) == [15, 19, 21]": {
      "result": true,
      "time": 0.13799524307250977,
      "error": null
    },
    "assert heap_queue_smallest([23, 38, 25, 89, 10, 63, 79, 17, 63], 2) == [10, 17]": {
      "result": true,
      "time": 0.13456225395202637,
      "error": null
    },
    "assert heap_queue_smallest([22, 35, 22, 85, 12, 62, 74, 26, 56], 5) == [12, 22, 22, 26, 35]": {
      "result": true,
      "time": 0.14637398719787598,
      "error": null
    },
    "assert heap_queue_smallest([22, 31, 17, 88, 15, 68, 76, 17, 57], 6) == [15, 17, 17, 22, 31, 57]": {
      "result": true,
      "time": 0.13017821311950684,
      "error": null
    },
    "assert heap_queue_smallest([24, 33, 24, 80, 11, 70, 70, 27, 57], 4) == [11, 24, 24, 27]": {
      "result": true,
      "time": 0.13752532005310059,
      "error": null
    },
    "assert heap_queue_smallest([21, 35, 17, 85, 18, 70, 75, 24, 54], 4) == [17, 18, 21, 24]": {
      "result": true,
      "time": 0.13918328285217285,
      "error": null
    },
    "assert heap_queue_smallest([21, 30, 22, 87, 15, 60, 80, 27, 53], 7) == [15, 21, 22, 27, 30, 53, 60]": {
      "result": true,
      "time": 0.12613368034362793,
      "error": null
    },
    "assert heap_queue_smallest([26, 37, 19, 82, 14, 68, 75, 24, 55], 2) == [14, 19]": {
      "result": true,
      "time": 0.12689876556396484,
      "error": null
    },
    "assert heap_queue_smallest([25, 31, 21, 84, 12, 64, 79, 26, 56], 4) == [12, 21, 25, 26]": {
      "result": true,
      "time": 0.11626291275024414,
      "error": null
    },
    "assert heap_queue_smallest([30, 36, 22, 86, 16, 62, 79, 26, 57], 4) == [16, 22, 26, 30]": {
      "result": true,
      "time": 0.11954879760742188,
      "error": null
    },
    "assert heap_queue_smallest([29, 32, 18, 81, 16, 64, 79, 17, 53], 10) == [16, 17, 18, 29, 32, 53, 64, 79, 81]": {
      "result": true,
      "time": 0.11263036727905273,
      "error": null
    },
    "assert heap_queue_smallest([29, 35, 18, 86, 17, 61, 79, 27, 59], 5) == [17, 18, 27, 29, 35]": {
      "result": true,
      "time": 0.12032294273376465,
      "error": null
    },
    "assert heap_queue_smallest([28, 38, 24, 84, 17, 64, 74, 22, 57], 4) == [17, 22, 24, 28]": {
      "result": true,
      "time": 0.13961410522460938,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}