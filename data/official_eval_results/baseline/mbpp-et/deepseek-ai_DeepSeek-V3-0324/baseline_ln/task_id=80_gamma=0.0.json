{
  "code": "def tetrahedral_number(n):\n    return n * (n + 1) * (n + 2) / 6",
  "results": {
    "assert tetrahedral_number(5) == 35.0": {
      "result": true,
      "time": 0.0373082160949707,
      "error": null
    },
    "assert tetrahedral_number(6) == 56.0": {
      "result": true,
      "time": 0.037970542907714844,
      "error": null
    },
    "assert tetrahedral_number(7) == 84.0": {
      "result": true,
      "time": 0.04167747497558594,
      "error": null
    },
    "assert tetrahedral_number(2) == 4.0": {
      "result": true,
      "time": 0.03640460968017578,
      "error": null
    },
    "assert tetrahedral_number(4) == 20.0": {
      "result": true,
      "time": 0.03759455680847168,
      "error": null
    },
    "assert tetrahedral_number(1) == 1.0": {
      "result": true,
      "time": 0.040755271911621094,
      "error": null
    },
    "assert tetrahedral_number(9) == 165.0": {
      "result": true,
      "time": 0.03656911849975586,
      "error": null
    },
    "assert tetrahedral_number(3) == 10.0": {
      "result": true,
      "time": 0.0410151481628418,
      "error": null
    },
    "assert tetrahedral_number(10) == 220.0": {
      "result": true,
      "time": 0.03837275505065918,
      "error": null
    },
    "assert tetrahedral_number(8) == 120.0": {
      "result": true,
      "time": 0.041565895080566406,
      "error": null
    },
    "assert tetrahedral_number(11) == 286.0": {
      "result": true,
      "time": 0.0365147590637207,
      "error": null
    },
    "assert tetrahedral_number(12) == 364.0": {
      "result": true,
      "time": 0.03698873519897461,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}