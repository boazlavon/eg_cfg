{
  "code": "def rotate_left(lst, n, k):\n    \"\"\"\n    Rotate the list to the left by 'n' items, 'k' times.\n    \n    Parameters:\n    lst (list): The input list to be rotated.\n    n (int): The number of items to rotate left each time.\n    k (int): The number of times to perform the rotation.\n    \n    Returns:\n    list: The rotated list.\n    \"\"\"\n    for _ in range(k):\n        if len(lst) == 0:\n            break  # Avoid division by zero if the list is empty\n        n = n % len(lst)  # Handle cases where n is larger than the list length\n        lst = lst[n:] + lst[:n]\n    return lst",
  "results": {
    "assert rotate_left([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],3,4)==[4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4]": {
      "result": false,
      "time": 0.05183219909667969,
      "error": null
    },
    "assert rotate_left([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],2,2)==[3, 4, 5, 6, 7, 8, 9, 10, 1, 2]": {
      "result": false,
      "time": 0.056818246841430664,
      "error": null
    },
    "assert rotate_left([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],5,2)==[6, 7, 8, 9, 10, 1, 2]": {
      "result": false,
      "time": 0.05218243598937988,
      "error": null
    },
    "assert rotate_left([6, 1, 5, 1, 1, 4, 5, 10, 9, 15], 3, 1) == [1, 1, 4, 5, 10, 9, 15, 6]": {
      "result": false,
      "time": 0.06589961051940918,
      "error": null
    },
    "assert rotate_left([1, 4, 1, 7, 9, 1, 7, 10, 12, 10], 2, 8) == [1, 7, 9, 1, 7, 10, 12, 10, 1, 4, 1, 7, 9, 1, 7, 10]": {
      "result": false,
      "time": 0.05389118194580078,
      "error": null
    },
    "assert rotate_left([1, 5, 1, 9, 9, 1, 7, 10, 8, 11], 3, 7) == [9, 9, 1, 7, 10, 8, 11, 1, 5, 1, 9, 9, 1, 7]": {
      "result": false,
      "time": 0.054769039154052734,
      "error": null
    },
    "assert rotate_left([5, 3, 5, 1, 2, 2, 8, 13, 9, 8], 5, 7) == [2, 8, 13, 9, 8, 5, 3, 5, 1, 2, 2, 8]": {
      "result": false,
      "time": 0.05670475959777832,
      "error": null
    },
    "assert rotate_left([3, 6, 1, 8, 7, 3, 10, 4, 4, 9], 7, 5) == [4, 4, 9, 3, 6, 1, 8, 7]": {
      "result": false,
      "time": 0.053540706634521484,
      "error": null
    },
    "assert rotate_left([1, 4, 3, 7, 8, 2, 6, 3, 8, 8], 7, 9) == [3, 8, 8, 1, 4, 3, 7, 8, 2, 6, 3, 8]": {
      "result": false,
      "time": 0.06256628036499023,
      "error": null
    },
    "assert rotate_left([4, 5, 2, 2, 2, 4, 7, 11, 12, 14], 2, 4) == [2, 2, 2, 4, 7, 11, 12, 14, 4, 5, 2, 2]": {
      "result": false,
      "time": 0.05218696594238281,
      "error": null
    },
    "assert rotate_left([5, 5, 4, 1, 6, 9, 5, 6, 10, 7], 8, 7) == [10, 7, 5, 5, 4, 1, 6, 9, 5]": {
      "result": false,
      "time": 0.059259653091430664,
      "error": null
    },
    "assert rotate_left([3, 1, 5, 6, 5, 9, 7, 8, 5, 9], 1, 4) == [1, 5, 6, 5, 9, 7, 8, 5, 9, 3, 1, 5, 6]": {
      "result": false,
      "time": 0.06122899055480957,
      "error": null
    },
    "assert rotate_left([5, 1, 1, 9, 7, 1, 4, 4, 8, 8], 2, 5) == [1, 9, 7, 1, 4, 4, 8, 8, 5, 1, 1, 9, 7]": {
      "result": false,
      "time": 0.05546927452087402,
      "error": null
    },
    "assert rotate_left([3, 5, 4, 7, 6, 2, 12, 7, 9, 15], 3, 3) == [7, 6, 2, 12, 7, 9, 15, 3, 5, 4]": {
      "result": false,
      "time": 0.06499075889587402,
      "error": null
    },
    "assert rotate_left([1, 3, 3, 1, 2, 10, 12, 12, 10, 5], 1, 9) == [3, 3, 1, 2, 10, 12, 12, 10, 5, 1, 3, 3, 1, 2, 10, 12, 12, 10]": {
      "result": false,
      "time": 0.052724361419677734,
      "error": null
    },
    "assert rotate_left([4, 7, 5, 4, 5, 3, 9, 12, 4, 15], 3, 8) == [4, 5, 3, 9, 12, 4, 15, 4, 7, 5, 4, 5, 3, 9, 12]": {
      "result": false,
      "time": 0.048378944396972656,
      "error": null
    },
    "assert rotate_left([5, 6, 5, 8, 4, 9, 11, 13, 7, 15], 6, 7) == [11, 13, 7, 15, 5, 6, 5, 8, 4, 9, 11]": {
      "result": false,
      "time": 0.04059600830078125,
      "error": null
    },
    "assert rotate_left([1, 3, 1, 5, 6, 5, 3, 13, 8, 8], 2, 7) == [1, 5, 6, 5, 3, 13, 8, 8, 1, 3, 1, 5, 6, 5, 3]": {
      "result": false,
      "time": 0.04215431213378906,
      "error": null
    },
    "assert rotate_left([4, 6, 1, 2, 1, 3, 6, 10, 4, 12], 3, 3) == [2, 1, 3, 6, 10, 4, 12, 4, 6, 1]": {
      "result": false,
      "time": 0.048528432846069336,
      "error": null
    },
    "assert rotate_left([4, 7, 7, 2, 2, 6, 7, 3, 6, 10], 5, 9) == [6, 7, 3, 6, 10, 4, 7, 7, 2, 2, 6, 7, 3, 6]": {
      "result": false,
      "time": 0.044118404388427734,
      "error": null
    },
    "assert rotate_left([1, 1, 1, 7, 5, 1, 4, 13, 14, 8], 4, 8) == [5, 1, 4, 13, 14, 8, 1, 1, 1, 7, 5, 1, 4, 13]": {
      "result": false,
      "time": 0.051691293716430664,
      "error": null
    },
    "assert rotate_left([5, 2, 1, 4, 2, 7, 7, 5, 7, 11], 2, 6) == [1, 4, 2, 7, 7, 5, 7, 11, 5, 2, 1, 4, 2, 7]": {
      "result": false,
      "time": 0.050766944885253906,
      "error": null
    },
    "assert rotate_left([6, 6, 5, 9, 5, 7, 9, 4, 11, 8], 3, 6) == [9, 5, 7, 9, 4, 11, 8, 6, 6, 5, 9, 5, 7]": {
      "result": false,
      "time": 0.05088376998901367,
      "error": null
    },
    "assert rotate_left([1, 7, 1, 7, 9, 11, 4, 7, 5, 11], 8, 4) == [5, 11, 1, 7, 1, 7]": {
      "result": false,
      "time": 0.04555463790893555,
      "error": null
    },
    "assert rotate_left([4, 6, 4, 7, 3, 8, 2, 4, 5, 12], 5, 6) == [8, 2, 4, 5, 12, 4, 6, 4, 7, 3, 8]": {
      "result": false,
      "time": 0.054477691650390625,
      "error": null
    },
    "assert rotate_left([3, 6, 7, 1, 2, 2, 3, 12, 9, 14], 1, 8) == [6, 7, 1, 2, 2, 3, 12, 9, 14, 3, 6, 7, 1, 2, 2, 3, 12]": {
      "result": false,
      "time": 0.04225015640258789,
      "error": null
    },
    "assert rotate_left([2, 4, 8, 9, 3, 5, 10, 8, 13, 11], 6, 4) == [10, 8, 13, 11, 2, 4, 8, 9]": {
      "result": false,
      "time": 0.049009084701538086,
      "error": null
    },
    "assert rotate_left([4, 5, 3, 1, 7, 1, 4, 4, 14, 15], 8, 9) == [14, 15, 4, 5, 3, 1, 7, 1, 4, 4, 14]": {
      "result": false,
      "time": 0.04518556594848633,
      "error": null
    },
    "assert rotate_left([2, 7, 2, 5, 8, 3, 7, 4, 6, 13], 7, 1) == [4, 6, 13, 2]": {
      "result": false,
      "time": 0.046858787536621094,
      "error": null
    },
    "assert rotate_left([1, 5, 8, 6, 9, 7, 2, 12, 14, 15], 7, 3) == [12, 14, 15, 1, 5, 8]": {
      "result": false,
      "time": 0.046036481857299805,
      "error": null
    },
    "assert rotate_left([3, 6, 6, 7, 10, 3, 4, 8, 5, 9], 5, 5) == [3, 4, 8, 5, 9, 3, 6, 6, 7, 10]": {
      "result": true,
      "time": 0.03842735290527344,
      "error": null
    },
    "assert rotate_left([5, 3, 5, 4, 1, 7, 6, 3, 10, 10], 2, 9) == [5, 4, 1, 7, 6, 3, 10, 10, 5, 3, 5, 4, 1, 7, 6, 3, 10]": {
      "result": false,
      "time": 0.04732704162597656,
      "error": null
    },
    "assert rotate_left([5, 7, 2, 7, 4, 7, 7, 8, 10, 11], 7, 2) == [8, 10, 11, 5, 7]": {
      "result": false,
      "time": 0.0533444881439209,
      "error": null
    },
    "assert rotate_left([5, 2, 1, 5, 5, 9, 8, 11, 5, 11], 7, 9) == [11, 5, 11, 5, 2, 1, 5, 5, 9, 8, 11, 5]": {
      "result": false,
      "time": 0.041871070861816406,
      "error": null
    },
    "assert rotate_left([2, 1, 4, 9, 1, 10, 9, 10, 12, 11], 6, 3) == [9, 10, 12, 11, 2, 1, 4]": {
      "result": false,
      "time": 0.05920290946960449,
      "error": null
    },
    "assert rotate_left([6, 6, 6, 7, 3, 3, 8, 4, 7, 7], 6, 7) == [8, 4, 7, 7, 6, 6, 6, 7, 3, 3, 8]": {
      "result": false,
      "time": 0.04937553405761719,
      "error": null
    },
    "assert rotate_left([3, 3, 6, 9, 5, 11, 2, 4, 11, 7], 2, 1) == [6, 9, 5, 11, 2, 4, 11, 7, 3]": {
      "result": false,
      "time": 0.04481101036071777,
      "error": null
    },
    "assert rotate_left([4, 7, 6, 2, 4, 11, 4, 13, 14, 9], 4, 2) == [4, 11, 4, 13, 14, 9, 4, 7]": {
      "result": false,
      "time": 0.05018115043640137,
      "error": null
    },
    "assert rotate_left([6, 2, 8, 5, 7, 1, 5, 7, 9, 11], 3, 6) == [5, 7, 1, 5, 7, 9, 11, 6, 2, 8, 5, 7, 1]": {
      "result": false,
      "time": 0.04028630256652832,
      "error": null
    },
    "assert rotate_left([4, 6, 4, 6, 7, 1, 7, 8, 6, 13], 3, 4) == [6, 7, 1, 7, 8, 6, 13, 4, 6, 4, 6]": {
      "result": false,
      "time": 0.042203426361083984,
      "error": null
    },
    "assert rotate_left([2, 2, 3, 5, 2, 7, 12, 8, 6, 12], 1, 4) == [2, 3, 5, 2, 7, 12, 8, 6, 12, 2, 2, 3, 5]": {
      "result": false,
      "time": 0.054163217544555664,
      "error": null
    },
    "assert rotate_left([5, 6, 4, 6, 6, 5, 6, 4, 13, 15], 1, 2) == [6, 4, 6, 6, 5, 6, 4, 13, 15, 5, 6]": {
      "result": false,
      "time": 0.05463385581970215,
      "error": null
    },
    "assert rotate_left([5, 1, 8, 9, 2, 8, 9, 11, 5, 13], 6, 4) == [9, 11, 5, 13, 5, 1, 8, 9]": {
      "result": false,
      "time": 0.047148942947387695,
      "error": null
    },
    "assert rotate_left([4, 4, 6, 7, 2, 1, 11, 6, 10, 15], 5, 6) == [1, 11, 6, 10, 15, 4, 4, 6, 7, 2, 1]": {
      "result": false,
      "time": 0.057659149169921875,
      "error": null
    },
    "assert rotate_left([6, 5, 6, 5, 5, 1, 8, 7, 14, 12], 5, 1) == [1, 8, 7, 14, 12, 6]": {
      "result": false,
      "time": 0.04749250411987305,
      "error": null
    },
    "assert rotate_left([1, 3, 2, 5, 1, 9, 6, 10, 9, 8], 3, 2) == [5, 1, 9, 6, 10, 9, 8, 1, 3]": {
      "result": false,
      "time": 0.046550750732421875,
      "error": null
    },
    "assert rotate_left([3, 6, 7, 6, 8, 2, 8, 9, 5, 11], 1, 2) == [6, 7, 6, 8, 2, 8, 9, 5, 11, 3, 6]": {
      "result": false,
      "time": 0.05761003494262695,
      "error": null
    },
    "assert rotate_left([4, 4, 4, 9, 1, 9, 11, 6, 12, 9], 4, 7) == [1, 9, 11, 6, 12, 9, 4, 4, 4, 9, 1, 9, 11]": {
      "result": false,
      "time": 0.05264878273010254,
      "error": null
    },
    "assert rotate_left([3, 7, 5, 9, 4, 1, 6, 4, 5, 5], 7, 3) == [4, 5, 5, 3, 7, 5]": {
      "result": false,
      "time": 0.05323219299316406,
      "error": null
    },
    "assert rotate_left([3, 4, 2, 5, 5, 1, 2, 9, 14, 6], 5, 1) == [1, 2, 9, 14, 6, 3]": {
      "result": false,
      "time": 0.046319007873535156,
      "error": null
    },
    "assert rotate_left([5, 5, 3, 5, 5, 2, 7, 10, 11, 10], 2, 3) == [3, 5, 5, 2, 7, 10, 11, 10, 5, 5, 3]": {
      "result": false,
      "time": 0.047419071197509766,
      "error": null
    },
    "assert rotate_left([2, 6, 7, 7, 7, 1, 3, 13, 14, 13], 4, 2) == [7, 1, 3, 13, 14, 13, 2, 6]": {
      "result": false,
      "time": 0.046036720275878906,
      "error": null
    },
    "assert rotate_left([1, 6, 1, 3, 7, 5, 7, 6, 13, 11], 4, 5) == [7, 5, 7, 6, 13, 11, 1, 6, 1, 3, 7]": {
      "result": false,
      "time": 0.054424285888671875,
      "error": null
    },
    "assert rotate_left([3, 1, 5, 8, 6, 5, 9, 6, 8, 7], 4, 6) == [6, 5, 9, 6, 8, 7, 3, 1, 5, 8, 6, 5]": {
      "result": false,
      "time": 0.05025124549865723,
      "error": null
    },
    "assert rotate_left([2, 5, 6, 1, 4, 11, 4, 6, 7, 6], 1, 1) == [5, 6, 1, 4, 11, 4, 6, 7, 6, 2]": {
      "result": true,
      "time": 0.058052778244018555,
      "error": null
    },
    "assert rotate_left([2, 3, 7, 1, 2, 10, 12, 13, 14, 10], 4, 7) == [2, 10, 12, 13, 14, 10, 2, 3, 7, 1, 2, 10, 12]": {
      "result": false,
      "time": 0.05387282371520996,
      "error": null
    },
    "assert rotate_left([4, 7, 8, 5, 5, 1, 7, 7, 4, 8], 6, 2) == [7, 7, 4, 8, 4, 7]": {
      "result": false,
      "time": 0.0650794506072998,
      "error": null
    },
    "assert rotate_left([4, 2, 8, 2, 10, 3, 9, 13, 6, 15], 3, 6) == [2, 10, 3, 9, 13, 6, 15, 4, 2, 8, 2, 10, 3]": {
      "result": false,
      "time": 0.04954838752746582,
      "error": null
    },
    "assert rotate_left([4, 5, 2, 7, 5, 4, 11, 10, 4, 5], 1, 3) == [5, 2, 7, 5, 4, 11, 10, 4, 5, 4, 5, 2]": {
      "result": false,
      "time": 0.05907106399536133,
      "error": null
    },
    "assert rotate_left([3, 3, 6, 4, 9, 4, 2, 8, 13, 14], 4, 6) == [9, 4, 2, 8, 13, 14, 3, 3, 6, 4, 9, 4]": {
      "result": false,
      "time": 0.05032801628112793,
      "error": null
    },
    "assert rotate_left([3, 6, 5, 5, 7, 11, 8, 10, 4, 11], 1, 6) == [6, 5, 5, 7, 11, 8, 10, 4, 11, 3, 6, 5, 5, 7, 11]": {
      "result": false,
      "time": 0.054221391677856445,
      "error": null
    },
    "assert rotate_left([5, 6, 6, 5, 8, 3, 7, 3, 5, 5], 4, 3) == [8, 3, 7, 3, 5, 5, 5, 6, 6]": {
      "result": false,
      "time": 0.05092048645019531,
      "error": null
    },
    "assert rotate_left([1, 6, 6, 9, 4, 8, 6, 5, 8, 14], 4, 5) == [4, 8, 6, 5, 8, 14, 1, 6, 6, 9, 4]": {
      "result": false,
      "time": 0.0676720142364502,
      "error": null
    },
    "assert rotate_left([4, 7, 7, 9, 1, 9, 10, 3, 9, 10], 5, 6) == [9, 10, 3, 9, 10, 4, 7, 7, 9, 1, 9]": {
      "result": false,
      "time": 0.05414581298828125,
      "error": null
    },
    "assert rotate_left([1, 7, 8, 7, 2, 4, 6, 13, 14, 5], 5, 7) == [4, 6, 13, 14, 5, 1, 7, 8, 7, 2, 4, 6]": {
      "result": false,
      "time": 0.04515361785888672,
      "error": null
    },
    "assert rotate_left([6, 3, 1, 4, 1, 4, 9, 3, 14, 5], 4, 1) == [1, 4, 9, 3, 14, 5, 6]": {
      "result": false,
      "time": 0.05834531784057617,
      "error": null
    },
    "assert rotate_left([4, 1, 8, 6, 7, 5, 5, 6, 9, 12], 3, 4) == [6, 7, 5, 5, 6, 9, 12, 4, 1, 8, 6]": {
      "result": false,
      "time": 0.058083534240722656,
      "error": null
    },
    "assert rotate_left([4, 6, 6, 6, 7, 1, 8, 3, 14, 14], 6, 1) == [8, 3, 14, 14, 4]": {
      "result": false,
      "time": 0.07349538803100586,
      "error": null
    },
    "assert rotate_left([1, 6, 1, 3, 8, 9, 12, 3, 4, 7], 2, 5) == [1, 3, 8, 9, 12, 3, 4, 7, 1, 6, 1, 3, 8]": {
      "result": false,
      "time": 0.059348106384277344,
      "error": null
    },
    "assert rotate_left([6, 1, 7, 5, 3, 1, 8, 10, 13, 5], 5, 5) == [1, 8, 10, 13, 5, 6, 1, 7, 5, 3]": {
      "result": true,
      "time": 0.059297800064086914,
      "error": null
    },
    "assert rotate_left([2, 2, 3, 5, 4, 2, 3, 5, 11, 9], 3, 3) == [5, 4, 2, 3, 5, 11, 9, 2, 2, 3]": {
      "result": false,
      "time": 0.05496406555175781,
      "error": null
    },
    "assert rotate_left([4, 6, 4, 8, 7, 3, 12, 13, 4, 11], 10, 7) == [4, 6, 4, 8, 7, 3, 12]": {
      "result": false,
      "time": 0.05782508850097656,
      "error": null
    },
    "assert rotate_left([2, 7, 5, 2, 8, 10, 12, 9, 9, 11], 1, 6) == [7, 5, 2, 8, 10, 12, 9, 9, 11, 2, 7, 5, 2, 8, 10]": {
      "result": false,
      "time": 0.054414987564086914,
      "error": null
    },
    "assert rotate_left([2, 5, 4, 5, 8, 6, 7, 11, 9, 11], 6, 1) == [7, 11, 9, 11, 2]": {
      "result": false,
      "time": 0.06853556632995605,
      "error": null
    },
    "assert rotate_left([5, 5, 2, 5, 7, 6, 12, 11, 14, 12], 8, 1) == [14, 12, 5]": {
      "result": false,
      "time": 0.04590654373168945,
      "error": null
    },
    "assert rotate_left([2, 1, 8, 3, 7, 10, 10, 3, 14, 10], 2, 6) == [8, 3, 7, 10, 10, 3, 14, 10, 2, 1, 8, 3, 7, 10]": {
      "result": false,
      "time": 0.04408669471740723,
      "error": null
    },
    "assert rotate_left([5, 1, 2, 3, 4, 5, 10, 12, 13, 9], 10, 5) == [5, 1, 2, 3, 4]": {
      "result": false,
      "time": 0.04289531707763672,
      "error": null
    },
    "assert rotate_left([2, 4, 3, 4, 5, 3, 10, 7, 4, 13], 4, 2) == [5, 3, 10, 7, 4, 13, 2, 4]": {
      "result": false,
      "time": 0.07107877731323242,
      "error": null
    },
    "assert rotate_left([2, 5, 6, 4, 9, 9, 10, 8, 8, 15], 7, 1) == [8, 8, 15, 2]": {
      "result": false,
      "time": 0.0692291259765625,
      "error": null
    },
    "assert rotate_left([2, 6, 1, 6, 4, 10, 9, 4, 12, 12], 1, 6) == [6, 1, 6, 4, 10, 9, 4, 12, 12, 2, 6, 1, 6, 4, 10]": {
      "result": false,
      "time": 0.05005931854248047,
      "error": null
    },
    "assert rotate_left([3, 3, 3, 5, 7, 10, 4, 11, 8, 12], 5, 3) == [10, 4, 11, 8, 12, 3, 3, 3]": {
      "result": false,
      "time": 0.06632566452026367,
      "error": null
    },
    "assert rotate_left([1, 5, 1, 1, 8, 7, 10, 5, 11, 12], 9, 6) == [12, 1, 5, 1, 1, 8, 7]": {
      "result": false,
      "time": 0.05929827690124512,
      "error": null
    },
    "assert rotate_left([1, 5, 3, 7, 10, 2, 11, 11, 6, 8], 6, 5) == [11, 11, 6, 8, 1, 5, 3, 7, 10]": {
      "result": false,
      "time": 0.05592513084411621,
      "error": null
    },
    "assert rotate_left([3, 3, 2, 8, 7, 1, 6, 6, 5, 6], 3, 6) == [8, 7, 1, 6, 6, 5, 6, 3, 3, 2, 8, 7, 1]": {
      "result": false,
      "time": 0.05000638961791992,
      "error": null
    },
    "assert rotate_left([6, 4, 5, 1, 4, 10, 5, 13, 13, 12], 3, 2) == [1, 4, 10, 5, 13, 13, 12, 6, 4]": {
      "result": false,
      "time": 0.062154293060302734,
      "error": null
    },
    "assert rotate_left([5, 4, 6, 1, 7, 5, 7, 9, 14, 8], 6, 3) == [7, 9, 14, 8, 5, 4, 6]": {
      "result": false,
      "time": 0.048180580139160156,
      "error": null
    },
    "assert rotate_left([6, 2, 8, 6, 4, 9, 10, 8, 6, 11], 3, 2) == [6, 4, 9, 10, 8, 6, 11, 6, 2]": {
      "result": false,
      "time": 0.05559515953063965,
      "error": null
    },
    "assert rotate_left([6, 5, 7, 2, 2, 9, 4, 5, 5, 8], 7, 6) == [5, 5, 8, 6, 5, 7, 2, 2, 9]": {
      "result": false,
      "time": 0.05727100372314453,
      "error": null
    },
    "assert rotate_left([1, 2, 7, 1, 7, 6, 5, 8, 13, 11], 5, 4) == [6, 5, 8, 13, 11, 1, 2, 7, 1]": {
      "result": false,
      "time": 0.06443023681640625,
      "error": null
    },
    "assert rotate_left([4, 1, 6, 6, 4, 1, 9, 9, 12, 8], 5, 3) == [1, 9, 9, 12, 8, 4, 1, 6]": {
      "result": false,
      "time": 0.050495147705078125,
      "error": null
    },
    "assert rotate_left([1, 4, 3, 9, 1, 8, 7, 7, 12, 6], 8, 7) == [12, 6, 1, 4, 3, 9, 1, 8, 7]": {
      "result": false,
      "time": 0.05085182189941406,
      "error": null
    },
    "assert rotate_left([1, 6, 6, 9, 4, 9, 8, 11, 14, 8], 5, 6) == [9, 8, 11, 14, 8, 1, 6, 6, 9, 4, 9]": {
      "result": false,
      "time": 0.055512189865112305,
      "error": null
    },
    "assert rotate_left([4, 6, 6, 2, 5, 3, 7, 3, 7, 8], 3, 1) == [2, 5, 3, 7, 3, 7, 8, 4]": {
      "result": false,
      "time": 0.05728459358215332,
      "error": null
    },
    "assert rotate_left([4, 7, 7, 9, 4, 11, 3, 12, 8, 7], 9, 3) == [7, 4, 7, 7]": {
      "result": false,
      "time": 0.05560493469238281,
      "error": null
    },
    "assert rotate_left([5, 7, 2, 6, 9, 8, 11, 11, 14, 5], 4, 2) == [9, 8, 11, 11, 14, 5, 5, 7]": {
      "result": false,
      "time": 0.05730175971984863,
      "error": null
    },
    "assert rotate_left([6, 6, 3, 9, 8, 10, 4, 11, 7, 7], 5, 6) == [10, 4, 11, 7, 7, 6, 6, 3, 9, 8, 10]": {
      "result": false,
      "time": 0.0577692985534668,
      "error": null
    },
    "assert rotate_left([1, 3, 4, 9, 2, 1, 5, 9, 4, 10], 1, 3) == [3, 4, 9, 2, 1, 5, 9, 4, 10, 1, 3, 4]": {
      "result": false,
      "time": 0.06278753280639648,
      "error": null
    },
    "assert rotate_left([2, 6, 1, 8, 2, 7, 10, 12, 10, 11], 6, 6) == [10, 12, 10, 11, 2, 6, 1, 8, 2, 7]": {
      "result": true,
      "time": 0.050264835357666016,
      "error": null
    },
    "assert rotate_left([6, 4, 7, 6, 7, 4, 6, 12, 12, 6], 8, 7) == [12, 6, 6, 4, 7, 6, 7, 4, 6]": {
      "result": false,
      "time": 0.05137753486633301,
      "error": null
    },
    "assert rotate_left([4, 5, 6, 5, 4, 5, 4, 9, 7, 8], 2, 3) == [6, 5, 4, 5, 4, 9, 7, 8, 4, 5, 6]": {
      "result": false,
      "time": 0.05045580863952637,
      "error": null
    },
    "assert rotate_left([1, 3, 4, 7, 4, 9, 10, 4, 8, 9], 2, 5) == [4, 7, 4, 9, 10, 4, 8, 9, 1, 3, 4, 7, 4]": {
      "result": false,
      "time": 0.03790688514709473,
      "error": null
    },
    "assert rotate_left([3, 4, 7, 2, 7, 1, 5, 12, 4, 10], 3, 2) == [2, 7, 1, 5, 12, 4, 10, 3, 4]": {
      "result": false,
      "time": 0.04903149604797363,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0392156862745098,
  "general_error": "",
  "has_testcase_error": false
}