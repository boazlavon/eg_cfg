{
  "code": "from collections import defaultdict\n\ndef first_Element(arr, n, k):\n    freq = defaultdict(int)\n    for num in arr:\n        freq[num] += 1\n        if freq[num] == k:\n            return num\n    return -1  # in case no element occurs k times",
  "results": {
    "assert first_Element([0,1,2,3,4,5],6,1) == 0": {
      "result": true,
      "time": 0.2779858112335205,
      "error": null
    },
    "assert first_Element([1,2,1,3,4],5,2) == 1": {
      "result": true,
      "time": 0.28312063217163086,
      "error": null
    },
    "assert first_Element([2,3,4,3,5,7,1,2,3,5],10,2) == 2": {
      "result": false,
      "time": 0.3208441734313965,
      "error": null
    },
    "assert first_Element([2, 4, 4, 4, 1, 5], 1, 3) == -1": {
      "result": false,
      "time": 0.28253650665283203,
      "error": null
    },
    "assert first_Element([4, 2, 1, 2, 6, 7], 1, 1) == 4": {
      "result": true,
      "time": 0.2889072895050049,
      "error": null
    },
    "assert first_Element([4, 2, 2, 4, 8, 5], 3, 3) == -1": {
      "result": true,
      "time": 0.287517786026001,
      "error": null
    },
    "assert first_Element([3, 4, 1, 8, 9, 7], 4, 2) == -1": {
      "result": true,
      "time": 0.2850496768951416,
      "error": null
    },
    "assert first_Element([5, 6, 5, 1, 9, 5], 1, 3) == -1": {
      "result": false,
      "time": 0.2727367877960205,
      "error": null
    },
    "assert first_Element([5, 5, 4, 7, 7, 8], 4, 6) == -1": {
      "result": true,
      "time": 0.2798922061920166,
      "error": null
    },
    "assert first_Element([1, 1, 5, 8, 3, 5], 4, 3) == -1": {
      "result": true,
      "time": 0.2703976631164551,
      "error": null
    },
    "assert first_Element([2, 4, 3, 6, 9, 2], 2, 2) == -1": {
      "result": false,
      "time": 0.2945725917816162,
      "error": null
    },
    "assert first_Element([5, 4, 6, 1, 3, 5], 3, 1) == 5": {
      "result": true,
      "time": 0.26526546478271484,
      "error": null
    },
    "assert first_Element([5, 4, 6, 7, 1, 1], 5, 1) == 5": {
      "result": true,
      "time": 0.3124849796295166,
      "error": null
    },
    "assert first_Element([4, 6, 4, 6, 3, 10], 4, 4) == -1": {
      "result": true,
      "time": 0.18421697616577148,
      "error": null
    },
    "assert first_Element([3, 6, 6, 7, 8, 2], 2, 6) == -1": {
      "result": true,
      "time": 0.2662944793701172,
      "error": null
    },
    "assert first_Element([3, 3, 4, 1, 7, 10], 4, 2) == 3": {
      "result": true,
      "time": 0.25255417823791504,
      "error": null
    },
    "assert first_Element([4, 1, 7, 6, 7, 5], 4, 6) == -1": {
      "result": true,
      "time": 0.285672664642334,
      "error": null
    },
    "assert first_Element([1, 4, 1, 3, 8, 2], 2, 6) == -1": {
      "result": true,
      "time": 0.306659460067749,
      "error": null
    },
    "assert first_Element([2, 4, 7, 7, 2, 6], 4, 1) == 2": {
      "result": true,
      "time": 0.28377223014831543,
      "error": null
    },
    "assert first_Element([1, 4, 6, 3, 8, 5], 1, 6) == -1": {
      "result": true,
      "time": 0.23854899406433105,
      "error": null
    },
    "assert first_Element([5, 4, 6, 3, 3, 9], 4, 4) == -1": {
      "result": true,
      "time": 0.2944958209991455,
      "error": null
    },
    "assert first_Element([4, 1, 1, 2, 7, 8], 3, 5) == -1": {
      "result": true,
      "time": 0.2882072925567627,
      "error": null
    },
    "assert first_Element([2, 6, 7, 2, 1, 4], 3, 3) == -1": {
      "result": true,
      "time": 0.28240966796875,
      "error": null
    },
    "assert first_Element([5, 1, 5, 1, 1, 8], 3, 2) == 5": {
      "result": true,
      "time": 0.2724003791809082,
      "error": null
    },
    "assert first_Element([2, 3, 2, 2, 6, 2], 5, 3) == 2": {
      "result": true,
      "time": 0.29627013206481934,
      "error": null
    },
    "assert first_Element([4, 1, 4, 6, 9, 6], 6, 4) == -1": {
      "result": true,
      "time": 0.27287793159484863,
      "error": null
    },
    "assert first_Element([1, 2, 4, 8, 5, 4], 2, 3) == -1": {
      "result": true,
      "time": 0.2751791477203369,
      "error": null
    },
    "assert first_Element([3, 2, 7, 1, 6, 8], 6, 1) == 3": {
      "result": true,
      "time": 0.2754199504852295,
      "error": null
    },
    "assert first_Element([4, 2, 2, 8, 8, 3], 4, 2) == 2": {
      "result": true,
      "time": 0.28748154640197754,
      "error": null
    },
    "assert first_Element([5, 3, 1, 2, 8, 7], 3, 6) == -1": {
      "result": true,
      "time": 0.2865931987762451,
      "error": null
    },
    "assert first_Element([5, 6, 3, 1, 9, 1], 2, 5) == -1": {
      "result": true,
      "time": 0.2935764789581299,
      "error": null
    },
    "assert first_Element([1, 2, 1, 2, 3, 9], 1, 4) == -1": {
      "result": true,
      "time": 0.30440282821655273,
      "error": null
    },
    "assert first_Element([2, 3, 7, 3, 5, 3], 5, 6) == -1": {
      "result": true,
      "time": 0.2726907730102539,
      "error": null
    },
    "assert first_Element([5, 3, 7, 1, 1, 1], 6, 3) == 1": {
      "result": true,
      "time": 0.26149988174438477,
      "error": null
    },
    "assert first_Element([4, 4, 7, 3, 6, 9], 6, 1) == 7": {
      "result": false,
      "time": 0.2776799201965332,
      "error": null
    },
    "assert first_Element([1, 1, 4, 2, 7, 6], 1, 1) == 1": {
      "result": true,
      "time": 0.26291966438293457,
      "error": null
    },
    "assert first_Element([3, 2, 4, 6, 8], 4, 1) == 3": {
      "result": true,
      "time": 0.2725532054901123,
      "error": null
    },
    "assert first_Element([4, 6, 4, 1, 4], 1, 2) == -1": {
      "result": false,
      "time": 0.2823195457458496,
      "error": null
    },
    "assert first_Element([5, 1, 1, 6, 7], 4, 2) == 1": {
      "result": true,
      "time": 0.27667999267578125,
      "error": null
    },
    "assert first_Element([6, 2, 6, 8, 9], 5, 4) == -1": {
      "result": true,
      "time": 0.3163895606994629,
      "error": null
    },
    "assert first_Element([2, 7, 5, 3, 6], 1, 7) == -1": {
      "result": true,
      "time": 0.30460119247436523,
      "error": null
    },
    "assert first_Element([4, 6, 1, 1, 8], 2, 6) == -1": {
      "result": true,
      "time": 0.27503442764282227,
      "error": null
    },
    "assert first_Element([2, 1, 1, 3, 3], 1, 5) == -1": {
      "result": true,
      "time": 0.28294849395751953,
      "error": null
    },
    "assert first_Element([1, 3, 2, 3, 8], 5, 7) == -1": {
      "result": true,
      "time": 0.3112602233886719,
      "error": null
    },
    "assert first_Element([4, 5, 3, 8, 8], 3, 5) == -1": {
      "result": true,
      "time": 0.25469541549682617,
      "error": null
    },
    "assert first_Element([3, 1, 5, 7, 3], 1, 1) == 3": {
      "result": true,
      "time": 0.27825355529785156,
      "error": null
    },
    "assert first_Element([1, 7, 3, 2, 4], 4, 2) == -1": {
      "result": true,
      "time": 0.278256893157959,
      "error": null
    },
    "assert first_Element([4, 3, 4, 8, 4], 3, 2) == 4": {
      "result": true,
      "time": 0.29358959197998047,
      "error": null
    },
    "assert first_Element([1, 4, 2, 8, 8], 1, 1) == 1": {
      "result": true,
      "time": 0.2935678958892822,
      "error": null
    },
    "assert first_Element([6, 5, 2, 1, 9], 2, 3) == -1": {
      "result": true,
      "time": 0.19631695747375488,
      "error": null
    },
    "assert first_Element([3, 1, 1, 6, 2], 1, 3) == -1": {
      "result": true,
      "time": 0.28032565116882324,
      "error": null
    },
    "assert first_Element([1, 7, 2, 3, 8], 1, 6) == -1": {
      "result": true,
      "time": 0.2786087989807129,
      "error": null
    },
    "assert first_Element([5, 1, 3, 6, 4], 1, 3) == -1": {
      "result": true,
      "time": 0.2957625389099121,
      "error": null
    },
    "assert first_Element([5, 7, 4, 1, 8], 3, 2) == -1": {
      "result": true,
      "time": 0.2717413902282715,
      "error": null
    },
    "assert first_Element([3, 4, 1, 2, 9], 2, 7) == -1": {
      "result": true,
      "time": 0.27147746086120605,
      "error": null
    },
    "assert first_Element([5, 2, 2, 4, 2], 3, 3) == -1": {
      "result": false,
      "time": 0.27001070976257324,
      "error": null
    },
    "assert first_Element([1, 4, 3, 4, 4], 1, 1) == 1": {
      "result": true,
      "time": 0.2745647430419922,
      "error": null
    },
    "assert first_Element([1, 5, 4, 6, 7], 4, 6) == -1": {
      "result": true,
      "time": 0.28708910942077637,
      "error": null
    },
    "assert first_Element([4, 3, 5, 1, 6], 4, 2) == -1": {
      "result": true,
      "time": 0.2709803581237793,
      "error": null
    },
    "assert first_Element([6, 5, 4, 2, 8], 2, 6) == -1": {
      "result": true,
      "time": 0.2921428680419922,
      "error": null
    },
    "assert first_Element([3, 4, 4, 6, 5], 5, 2) == 4": {
      "result": true,
      "time": 0.27608609199523926,
      "error": null
    },
    "assert first_Element([4, 7, 1, 2, 2], 1, 7) == -1": {
      "result": true,
      "time": 0.24013066291809082,
      "error": null
    },
    "assert first_Element([1, 6, 6, 7, 1], 4, 7) == -1": {
      "result": true,
      "time": 0.2947971820831299,
      "error": null
    },
    "assert first_Element([2, 7, 4, 3, 3], 3, 1) == 2": {
      "result": true,
      "time": 0.26550889015197754,
      "error": null
    },
    "assert first_Element([6, 4, 5, 6, 9], 4, 2) == 6": {
      "result": true,
      "time": 0.279080867767334,
      "error": null
    },
    "assert first_Element([1, 3, 5, 3, 9], 2, 2) == -1": {
      "result": false,
      "time": 0.2683224678039551,
      "error": null
    },
    "assert first_Element([3, 3, 3, 7, 7], 2, 6) == -1": {
      "result": true,
      "time": 0.28894829750061035,
      "error": null
    },
    "assert first_Element([2, 1, 5, 3, 2], 5, 7) == -1": {
      "result": true,
      "time": 0.30014944076538086,
      "error": null
    },
    "assert first_Element([2, 2, 4, 8, 6], 2, 7) == -1": {
      "result": true,
      "time": 0.28238821029663086,
      "error": null
    },
    "assert first_Element([6, 5, 9, 2, 8, 9, 4, 3, 6, 10], 7, 6) == -1": {
      "result": true,
      "time": 0.2695913314819336,
      "error": null
    },
    "assert first_Element([5, 2, 2, 8, 4, 3, 1, 7, 6, 3], 7, 6) == -1": {
      "result": true,
      "time": 0.2780623435974121,
      "error": null
    },
    "assert first_Element([7, 5, 3, 1, 3, 10, 5, 1, 5, 8], 5, 3) == -1": {
      "result": false,
      "time": 0.2707240581512451,
      "error": null
    },
    "assert first_Element([5, 5, 7, 2, 4, 10, 6, 2, 5, 3], 10, 3) == 5": {
      "result": true,
      "time": 0.26166796684265137,
      "error": null
    },
    "assert first_Element([3, 5, 5, 1, 9, 11, 3, 2, 2, 5], 5, 3) == -1": {
      "result": false,
      "time": 0.2851526737213135,
      "error": null
    },
    "assert first_Element([5, 5, 6, 8, 1, 8, 6, 5, 1, 1], 9, 5) == -1": {
      "result": true,
      "time": 0.2993490695953369,
      "error": null
    },
    "assert first_Element([6, 1, 5, 5, 2, 6, 6, 3, 1, 6], 5, 1) == 6": {
      "result": true,
      "time": 0.2708265781402588,
      "error": null
    },
    "assert first_Element([3, 5, 9, 5, 8, 11, 2, 1, 1, 3], 5, 2) == 5": {
      "result": true,
      "time": 0.28206324577331543,
      "error": null
    },
    "assert first_Element([3, 5, 8, 7, 4, 4, 6, 6, 8, 2], 7, 2) == 4": {
      "result": true,
      "time": 0.28430795669555664,
      "error": null
    },
    "assert first_Element([6, 6, 6, 1, 8, 7, 3, 6, 5, 10], 8, 2) == -1": {
      "result": false,
      "time": 0.2970151901245117,
      "error": null
    },
    "assert first_Element([4, 5, 8, 1, 7, 4, 4, 7, 1, 8], 7, 2) == -1": {
      "result": false,
      "time": 0.292161226272583,
      "error": null
    },
    "assert first_Element([2, 6, 4, 6, 3, 9, 4, 2, 1, 2], 7, 5) == -1": {
      "result": true,
      "time": 0.2608067989349365,
      "error": null
    },
    "assert first_Element([6, 1, 8, 5, 5, 3, 3, 2, 1, 2], 6, 2) == 5": {
      "result": true,
      "time": 0.2662196159362793,
      "error": null
    },
    "assert first_Element([2, 1, 2, 4, 7, 9, 5, 5, 7, 9], 7, 5) == -1": {
      "result": true,
      "time": 0.252734899520874,
      "error": null
    },
    "assert first_Element([3, 2, 1, 8, 7, 7, 2, 7, 3, 8], 8, 1) == 3": {
      "result": true,
      "time": 0.2852206230163574,
      "error": null
    },
    "assert first_Element([2, 6, 4, 4, 8, 8, 4, 5, 5, 8], 6, 6) == -1": {
      "result": true,
      "time": 0.3081080913543701,
      "error": null
    },
    "assert first_Element([1, 3, 3, 2, 4, 6, 1, 4, 8, 4], 7, 1) == 2": {
      "result": false,
      "time": 0.29210448265075684,
      "error": null
    },
    "assert first_Element([4, 3, 9, 7, 10, 11, 2, 2, 2, 8], 7, 7) == -1": {
      "result": true,
      "time": 0.2892327308654785,
      "error": null
    },
    "assert first_Element([4, 3, 9, 3, 3, 9, 1, 1, 6, 7], 9, 6) == -1": {
      "result": true,
      "time": 0.20617890357971191,
      "error": null
    },
    "assert first_Element([3, 3, 4, 1, 9, 8, 1, 4, 3, 3], 9, 7) == -1": {
      "result": true,
      "time": 0.3077421188354492,
      "error": null
    },
    "assert first_Element([2, 2, 4, 7, 5, 3, 4, 6, 8, 10], 7, 4) == -1": {
      "result": true,
      "time": 0.28244709968566895,
      "error": null
    },
    "assert first_Element([5, 5, 9, 5, 5, 7, 3, 1, 5, 6], 6, 5) == -1": {
      "result": false,
      "time": 0.30565619468688965,
      "error": null
    },
    "assert first_Element([2, 7, 6, 5, 4, 9, 3, 3, 8, 7], 10, 6) == -1": {
      "result": true,
      "time": 0.30051302909851074,
      "error": null
    },
    "assert first_Element([2, 3, 9, 6, 4, 3, 6, 5, 6, 7], 7, 6) == -1": {
      "result": true,
      "time": 0.2920522689819336,
      "error": null
    },
    "assert first_Element([3, 1, 1, 8, 2, 6, 3, 5, 8, 5], 9, 2) == 3": {
      "result": false,
      "time": 0.2885580062866211,
      "error": null
    },
    "assert first_Element([1, 8, 8, 6, 7, 7, 1, 2, 1, 5], 9, 7) == -1": {
      "result": true,
      "time": 0.28707122802734375,
      "error": null
    },
    "assert first_Element([4, 8, 5, 2, 3, 4, 6, 6, 2, 1], 5, 7) == -1": {
      "result": true,
      "time": 0.281402587890625,
      "error": null
    },
    "assert first_Element([3, 6, 4, 3, 8, 4, 2, 7, 1, 4], 10, 4) == -1": {
      "result": true,
      "time": 0.2742323875427246,
      "error": null
    },
    "assert first_Element([1, 8, 4, 6, 5, 3, 6, 2, 2, 7], 9, 5) == -1": {
      "result": true,
      "time": 0.2873258590698242,
      "error": null
    },
    "assert first_Element([6, 2, 2, 4, 5, 9, 6, 1, 1, 3], 9, 3) == -1": {
      "result": true,
      "time": 0.2989494800567627,
      "error": null
    },
    "assert first_Element([7, 6, 8, 6, 7, 12, 2, 2, 8, 1], 7, 5) == -1": {
      "result": true,
      "time": 0.28788232803344727,
      "error": null
    },
    "assert first_Element([6, 7, 8, 5, 1, 2, 1, 7, 6, 6], 8, 1) == 6": {
      "result": true,
      "time": 0.3217482566833496,
      "error": null
    },
    "assert first_Element([5, 4, 8, 7, 4, 6, 2, 6, 4, 5], 5, 1) == 5": {
      "result": true,
      "time": 0.26584696769714355,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.8529411764705882,
  "general_error": "",
  "has_testcase_error": false
}