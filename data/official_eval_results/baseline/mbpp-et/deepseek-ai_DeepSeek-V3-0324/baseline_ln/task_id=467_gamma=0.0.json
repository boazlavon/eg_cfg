{
  "code": "def decimal_to_Octal(decimal_num):\n    octal_num = 0\n    i = 1\n    while decimal_num != 0:\n        octal_num += (decimal_num % 8) * i\n        decimal_num = decimal_num // 8\n        i *= 10\n    return octal_num",
  "results": {
    "assert decimal_to_Octal(10) == 12": {
      "result": true,
      "time": 0.031659841537475586,
      "error": null
    },
    "assert decimal_to_Octal(2) == 2": {
      "result": true,
      "time": 0.039215803146362305,
      "error": null
    },
    "assert decimal_to_Octal(33) == 41": {
      "result": true,
      "time": 0.03621792793273926,
      "error": null
    },
    "assert decimal_to_Octal(15) == 17": {
      "result": true,
      "time": 0.040963172912597656,
      "error": null
    },
    "assert decimal_to_Octal(11) == 13": {
      "result": true,
      "time": 0.039685964584350586,
      "error": null
    },
    "assert decimal_to_Octal(6) == 6": {
      "result": true,
      "time": 0.04134798049926758,
      "error": null
    },
    "assert decimal_to_Octal(9) == 11": {
      "result": true,
      "time": 0.04241585731506348,
      "error": null
    },
    "assert decimal_to_Octal(14) == 16": {
      "result": true,
      "time": 0.037535905838012695,
      "error": null
    },
    "assert decimal_to_Octal(12) == 14": {
      "result": true,
      "time": 0.03879046440124512,
      "error": null
    },
    "assert decimal_to_Octal(8) == 10": {
      "result": true,
      "time": 0.04439949989318848,
      "error": null
    },
    "assert decimal_to_Octal(13) == 15": {
      "result": true,
      "time": 0.029956817626953125,
      "error": null
    },
    "assert decimal_to_Octal(1) == 1": {
      "result": true,
      "time": 0.0409090518951416,
      "error": null
    },
    "assert decimal_to_Octal(4) == 4": {
      "result": true,
      "time": 0.035813093185424805,
      "error": null
    },
    "assert decimal_to_Octal(5) == 5": {
      "result": true,
      "time": 0.049688100814819336,
      "error": null
    },
    "assert decimal_to_Octal(7) == 7": {
      "result": true,
      "time": 0.043253421783447266,
      "error": null
    },
    "assert decimal_to_Octal(3) == 3": {
      "result": true,
      "time": 0.03688955307006836,
      "error": null
    },
    "assert decimal_to_Octal(28) == 34": {
      "result": true,
      "time": 0.03560471534729004,
      "error": null
    },
    "assert decimal_to_Octal(38) == 46": {
      "result": true,
      "time": 0.03697609901428223,
      "error": null
    },
    "assert decimal_to_Octal(37) == 45": {
      "result": true,
      "time": 0.031139135360717773,
      "error": null
    },
    "assert decimal_to_Octal(32) == 40": {
      "result": true,
      "time": 0.03823566436767578,
      "error": null
    },
    "assert decimal_to_Octal(29) == 35": {
      "result": true,
      "time": 0.03542804718017578,
      "error": null
    },
    "assert decimal_to_Octal(30) == 36": {
      "result": true,
      "time": 0.038118839263916016,
      "error": null
    },
    "assert decimal_to_Octal(35) == 43": {
      "result": true,
      "time": 0.03183269500732422,
      "error": null
    },
    "assert decimal_to_Octal(31) == 37": {
      "result": true,
      "time": 0.0334630012512207,
      "error": null
    },
    "assert decimal_to_Octal(36) == 44": {
      "result": true,
      "time": 0.03737497329711914,
      "error": null
    },
    "assert decimal_to_Octal(34) == 42": {
      "result": true,
      "time": 0.03746485710144043,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}