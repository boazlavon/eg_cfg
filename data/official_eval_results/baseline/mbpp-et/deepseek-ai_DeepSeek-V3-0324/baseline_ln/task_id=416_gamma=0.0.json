{
  "code": "def breakSum(n):\n    if n == 0 or n == 1:\n        return n\n    return max(n, breakSum(n // 2) + breakSum(n // 3) + breakSum(n // 4))",
  "results": {
    "assert breakSum(12) == 13": {
      "result": true,
      "time": 0.052701711654663086,
      "error": null
    },
    "assert breakSum(24) == 27": {
      "result": true,
      "time": 0.04589581489562988,
      "error": null
    },
    "assert breakSum(23) == 23": {
      "result": true,
      "time": 0.05509757995605469,
      "error": null
    },
    "assert breakSum(17) == 17": {
      "result": true,
      "time": 0.06924057006835938,
      "error": null
    },
    "assert breakSum(7) == 7": {
      "result": true,
      "time": 0.05678987503051758,
      "error": null
    },
    "assert breakSum(14) == 14": {
      "result": true,
      "time": 0.057824134826660156,
      "error": null
    },
    "assert breakSum(10) == 10": {
      "result": true,
      "time": 0.06618928909301758,
      "error": null
    },
    "assert breakSum(13) == 13": {
      "result": true,
      "time": 0.05821347236633301,
      "error": null
    },
    "assert breakSum(16) == 17": {
      "result": true,
      "time": 0.05317807197570801,
      "error": null
    },
    "assert breakSum(15) == 15": {
      "result": true,
      "time": 0.06265807151794434,
      "error": null
    },
    "assert breakSum(11) == 11": {
      "result": true,
      "time": 0.06807136535644531,
      "error": null
    },
    "assert breakSum(8) == 8": {
      "result": true,
      "time": 0.05084824562072754,
      "error": null
    },
    "assert breakSum(19) == 19": {
      "result": true,
      "time": 0.05195331573486328,
      "error": null
    },
    "assert breakSum(20) == 21": {
      "result": true,
      "time": 0.06262636184692383,
      "error": null
    },
    "assert breakSum(21) == 22": {
      "result": true,
      "time": 0.04683566093444824,
      "error": null
    },
    "assert breakSum(27) == 28": {
      "result": true,
      "time": 0.05386710166931152,
      "error": null
    },
    "assert breakSum(22) == 23": {
      "result": true,
      "time": 0.04138612747192383,
      "error": null
    },
    "assert breakSum(25) == 27": {
      "result": true,
      "time": 0.05483698844909668,
      "error": null
    },
    "assert breakSum(28) == 30": {
      "result": true,
      "time": 0.06575608253479004,
      "error": null
    },
    "assert breakSum(29) == 30": {
      "result": true,
      "time": 0.05684375762939453,
      "error": null
    },
    "assert breakSum(26) == 27": {
      "result": true,
      "time": 0.056435585021972656,
      "error": null
    },
    "assert breakSum(18) == 19": {
      "result": true,
      "time": 0.05566906929016113,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}