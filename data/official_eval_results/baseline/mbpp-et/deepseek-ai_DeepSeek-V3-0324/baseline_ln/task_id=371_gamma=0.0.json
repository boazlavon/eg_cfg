{
  "code": "def smallest_missing(arr, low, high):\n    if arr[low] != 0:\n        return 0\n    while low <= high:\n        mid = (low + high) // 2\n        if arr[mid] == mid:\n            low = mid + 1\n        else:\n            high = mid - 1\n    return low",
  "results": {
    "assert smallest_missing([0, 1, 2, 3, 4, 5, 6], 0, 6) == 7": {
      "result": true,
      "time": 0.05800461769104004,
      "error": null
    },
    "assert smallest_missing([0, 1, 2, 6, 9, 11, 15], 0, 6) == 3": {
      "result": true,
      "time": 0.047956228256225586,
      "error": null
    },
    "assert smallest_missing([1, 2, 3, 4, 6, 9, 11, 15], 0, 7) == 0": {
      "result": true,
      "time": 0.04692792892456055,
      "error": null
    },
    "assert smallest_missing([4, 6, 4, 5, 2, 4, 5], 4, 3) == 4": {
      "result": false,
      "time": 0.0384519100189209,
      "error": null
    },
    "assert smallest_missing([4, 5, 6, 2, 8, 9, 11], 1, 8) == 1": {
      "result": false,
      "time": 0.04601120948791504,
      "error": null
    },
    "assert smallest_missing([4, 4, 7, 4, 5, 10, 7], 2, 9) == 2": {
      "result": false,
      "time": 0.0486140251159668,
      "error": null
    },
    "assert smallest_missing([1, 4, 6, 6, 3, 8, 5], 3, 6) == 3": {
      "result": false,
      "time": 0.040557146072387695,
      "error": null
    },
    "assert smallest_missing([2, 3, 5, 8, 9, 6, 8], 4, 9) == 4": {
      "result": false,
      "time": 0.05532670021057129,
      "error": null
    },
    "assert smallest_missing([3, 2, 4, 4, 5, 8, 1], 2, 7) == 2": {
      "result": false,
      "time": 0.04572486877441406,
      "error": null
    },
    "assert smallest_missing([3, 5, 4, 2, 4, 7, 1], 5, 4) == 5": {
      "result": false,
      "time": 0.052774906158447266,
      "error": null
    },
    "assert smallest_missing([4, 1, 1, 7, 1, 1, 8], 4, 9) == 4": {
      "result": false,
      "time": 0.04368901252746582,
      "error": null
    },
    "assert smallest_missing([3, 2, 5, 7, 5, 4, 5], 3, 3) == 3": {
      "result": false,
      "time": 0.05426192283630371,
      "error": null
    },
    "assert smallest_missing([4, 5, 1, 7, 8, 10, 3], 4, 7) == 4": {
      "result": false,
      "time": 0.05518221855163574,
      "error": null
    },
    "assert smallest_missing([4, 6, 3, 4, 6, 9, 2], 2, 8) == 2": {
      "result": false,
      "time": 0.058875322341918945,
      "error": null
    },
    "assert smallest_missing([4, 4, 2, 4, 6, 4, 8], 1, 3) == 3": {
      "result": false,
      "time": 0.04341769218444824,
      "error": null
    },
    "assert smallest_missing([4, 5, 4, 6, 2, 9, 2], 3, 2) == 3": {
      "result": false,
      "time": 0.05045461654663086,
      "error": null
    },
    "assert smallest_missing([1, 4, 6, 1, 1, 6, 11], 2, 3) == 2": {
      "result": false,
      "time": 0.04405403137207031,
      "error": null
    },
    "assert smallest_missing([3, 3, 5, 8, 4, 1, 2], 4, 1) == 4": {
      "result": false,
      "time": 0.0458216667175293,
      "error": null
    },
    "assert smallest_missing([2, 2, 2, 1, 3, 7, 9], 5, 1) == 5": {
      "result": false,
      "time": 0.047957420349121094,
      "error": null
    },
    "assert smallest_missing([5, 4, 2, 2, 2, 9, 9], 3, 6) == 3": {
      "result": false,
      "time": 0.04546523094177246,
      "error": null
    },
    "assert smallest_missing([5, 4, 4, 2, 1, 7, 1], 1, 3) == 1": {
      "result": false,
      "time": 0.05788230895996094,
      "error": null
    },
    "assert smallest_missing([2, 4, 6, 3, 6, 6, 10], 4, 4) == 4": {
      "result": false,
      "time": 0.04499197006225586,
      "error": null
    },
    "assert smallest_missing([5, 4, 4, 1, 7, 5, 9], 2, 2) == 2": {
      "result": false,
      "time": 0.04930996894836426,
      "error": null
    },
    "assert smallest_missing([1, 2, 3, 5, 8, 7, 9], 1, 6) == 1": {
      "result": false,
      "time": 0.04519486427307129,
      "error": null
    },
    "assert smallest_missing([4, 3, 3, 1, 3, 10, 3], 3, 7) == 3": {
      "result": false,
      "time": 0.047934532165527344,
      "error": null
    },
    "assert smallest_missing([3, 1, 1, 2, 4, 6, 2], 4, 6) == 5": {
      "result": false,
      "time": 0.05461621284484863,
      "error": null
    },
    "assert smallest_missing([3, 3, 3, 4, 2, 6, 11], 4, 3) == 4": {
      "result": false,
      "time": 0.04846477508544922,
      "error": null
    },
    "assert smallest_missing([2, 1, 5, 3, 7, 7, 10], 2, 6) == 2": {
      "result": false,
      "time": 0.05347704887390137,
      "error": null
    },
    "assert smallest_missing([1, 5, 6, 1, 4, 9, 8], 1, 3) == 1": {
      "result": false,
      "time": 0.05038285255432129,
      "error": null
    },
    "assert smallest_missing([4, 1, 4, 4, 5, 6, 1], 5, 4) == 5": {
      "result": false,
      "time": 0.06254148483276367,
      "error": null
    },
    "assert smallest_missing([1, 5, 4, 5, 8, 5, 3], 4, 6) == 6": {
      "result": false,
      "time": 0.05078887939453125,
      "error": null
    },
    "assert smallest_missing([1, 4, 4, 1, 5, 1, 4], 5, 1) == 5": {
      "result": false,
      "time": 0.05786466598510742,
      "error": null
    },
    "assert smallest_missing([4, 5, 6, 3, 6, 9, 6], 1, 2) == 1": {
      "result": false,
      "time": 0.04552769660949707,
      "error": null
    },
    "assert smallest_missing([1, 6, 7, 4, 1, 3, 3], 1, 7) == 1": {
      "result": false,
      "time": 0.04936385154724121,
      "error": null
    },
    "assert smallest_missing([4, 6, 4, 4, 7, 6, 3], 3, 3) == 3": {
      "result": false,
      "time": 0.04344749450683594,
      "error": null
    },
    "assert smallest_missing([1, 4, 5, 6, 6, 4, 10], 4, 3) == 4": {
      "result": false,
      "time": 0.05557966232299805,
      "error": null
    },
    "assert smallest_missing([1, 3, 5, 8, 13, 15, 18], 1, 6) == 1": {
      "result": false,
      "time": 0.045375823974609375,
      "error": null
    },
    "assert smallest_missing([1, 5, 4, 7, 6, 6, 14], 2, 2) == 2": {
      "result": false,
      "time": 0.0570526123046875,
      "error": null
    },
    "assert smallest_missing([4, 4, 6, 1, 8, 9, 16], 3, 4) == 3": {
      "result": false,
      "time": 0.037539005279541016,
      "error": null
    },
    "assert smallest_missing([1, 1, 5, 8, 9, 12, 14], 1, 8) == 2": {
      "result": false,
      "time": 0.045795440673828125,
      "error": null
    },
    "assert smallest_missing([5, 6, 7, 10, 7, 15, 11], 5, 3) == 5": {
      "result": false,
      "time": 0.04306530952453613,
      "error": null
    },
    "assert smallest_missing([1, 6, 6, 4, 6, 15, 11], 3, 3) == 3": {
      "result": false,
      "time": 0.03576159477233887,
      "error": null
    },
    "assert smallest_missing([3, 4, 2, 7, 7, 7, 16], 1, 7) == 3": {
      "result": false,
      "time": 0.04096102714538574,
      "error": null
    },
    "assert smallest_missing([1, 6, 3, 1, 8, 15, 17], 1, 5) == 1": {
      "result": false,
      "time": 0.05021071434020996,
      "error": null
    },
    "assert smallest_missing([1, 2, 3, 2, 10, 10, 14], 4, 4) == 4": {
      "result": false,
      "time": 0.05297064781188965,
      "error": null
    },
    "assert smallest_missing([1, 6, 6, 11, 12, 15, 14], 3, 9) == 3": {
      "result": false,
      "time": 0.04221749305725098,
      "error": null
    },
    "assert smallest_missing([1, 1, 6, 11, 6, 6, 13], 4, 7) == 4": {
      "result": false,
      "time": 0.04320836067199707,
      "error": null
    },
    "assert smallest_missing([5, 2, 5, 9, 4, 15, 12], 5, 4) == 5": {
      "result": false,
      "time": 0.043665170669555664,
      "error": null
    },
    "assert smallest_missing([4, 2, 4, 1, 8, 14, 17], 1, 4) == 1": {
      "result": false,
      "time": 0.04842734336853027,
      "error": null
    },
    "assert smallest_missing([5, 4, 7, 7, 12, 16, 16], 3, 5) == 3": {
      "result": false,
      "time": 0.04246234893798828,
      "error": null
    },
    "assert smallest_missing([1, 2, 4, 11, 13, 14, 19], 4, 5) == 4": {
      "result": false,
      "time": 0.051126956939697266,
      "error": null
    },
    "assert smallest_missing([1, 1, 7, 2, 7, 14, 18], 1, 7) == 2": {
      "result": false,
      "time": 0.04049205780029297,
      "error": null
    },
    "assert smallest_missing([1, 1, 4, 5, 12, 16, 12], 2, 8) == 2": {
      "result": false,
      "time": 0.044138193130493164,
      "error": null
    },
    "assert smallest_missing([3, 3, 4, 10, 12, 11, 16], 2, 6) == 2": {
      "result": false,
      "time": 0.061959028244018555,
      "error": null
    },
    "assert smallest_missing([5, 2, 2, 3, 12, 6, 16], 5, 6) == 5": {
      "result": false,
      "time": 0.05039787292480469,
      "error": null
    },
    "assert smallest_missing([1, 3, 6, 11, 4, 6, 16], 5, 5) == 5": {
      "result": false,
      "time": 0.03130173683166504,
      "error": null
    },
    "assert smallest_missing([4, 5, 5, 4, 7, 12, 11], 5, 7) == 5": {
      "result": false,
      "time": 0.04121756553649902,
      "error": null
    },
    "assert smallest_missing([1, 6, 1, 1, 10, 12, 10], 1, 9) == 1": {
      "result": false,
      "time": 0.03369712829589844,
      "error": null
    },
    "assert smallest_missing([5, 5, 6, 3, 4, 14, 10], 3, 2) == 3": {
      "result": false,
      "time": 0.040657997131347656,
      "error": null
    },
    "assert smallest_missing([3, 2, 3, 8, 7, 16, 12], 1, 1) == 1": {
      "result": false,
      "time": 0.03779172897338867,
      "error": null
    },
    "assert smallest_missing([2, 4, 6, 3, 9, 8, 19], 2, 10) == 4": {
      "result": false,
      "time": 0.033820390701293945,
      "error": null
    },
    "assert smallest_missing([2, 1, 4, 2, 6, 10, 15], 4, 7) == 4": {
      "result": false,
      "time": 0.0358889102935791,
      "error": null
    },
    "assert smallest_missing([4, 2, 4, 8, 11, 8, 10], 4, 7) == 4": {
      "result": false,
      "time": 0.04852175712585449,
      "error": null
    },
    "assert smallest_missing([3, 5, 2, 11, 11, 13, 13], 1, 8) == 3": {
      "result": false,
      "time": 0.042417049407958984,
      "error": null
    },
    "assert smallest_missing([5, 3, 7, 8, 10, 13, 20], 5, 1) == 5": {
      "result": false,
      "time": 0.05359339714050293,
      "error": null
    },
    "assert smallest_missing([2, 3, 7, 3, 14, 12, 16], 5, 7) == 5": {
      "result": false,
      "time": 0.0462031364440918,
      "error": null
    },
    "assert smallest_missing([5, 3, 1, 11, 14, 16, 17], 1, 11) == 1": {
      "result": false,
      "time": 0.052845001220703125,
      "error": null
    },
    "assert smallest_missing([3, 3, 1, 1, 11, 10, 10], 2, 5) == 2": {
      "result": false,
      "time": 0.05141305923461914,
      "error": null
    },
    "assert smallest_missing([5, 3, 7, 11, 5, 9, 18], 3, 2) == 3": {
      "result": false,
      "time": 0.050234079360961914,
      "error": null
    },
    "assert smallest_missing([1, 5, 7, 1, 7, 6, 11, 12], 2, 4) == 2": {
      "result": false,
      "time": 0.03632235527038574,
      "error": null
    },
    "assert smallest_missing([1, 1, 5, 6, 2, 8, 8, 18], 2, 9) == 2": {
      "result": false,
      "time": 0.040462493896484375,
      "error": null
    },
    "assert smallest_missing([2, 2, 4, 4, 11, 6, 8, 20], 2, 7) == 2": {
      "result": false,
      "time": 0.0425112247467041,
      "error": null
    },
    "assert smallest_missing([3, 4, 4, 3, 8, 8, 10, 16], 2, 3) == 2": {
      "result": false,
      "time": 0.04046344757080078,
      "error": null
    },
    "assert smallest_missing([1, 2, 7, 8, 3, 13, 10, 19], 2, 11) == 2": {
      "result": false,
      "time": 0.04300832748413086,
      "error": null
    },
    "assert smallest_missing([2, 6, 8, 6, 11, 4, 9, 13], 2, 3) == 2": {
      "result": false,
      "time": 0.055608272552490234,
      "error": null
    },
    "assert smallest_missing([5, 1, 7, 6, 10, 6, 11, 15], 2, 4) == 2": {
      "result": false,
      "time": 0.03570985794067383,
      "error": null
    },
    "assert smallest_missing([6, 6, 7, 2, 9, 5, 15, 17], 5, 7) == 6": {
      "result": false,
      "time": 0.04477500915527344,
      "error": null
    },
    "assert smallest_missing([5, 4, 7, 1, 6, 12, 15, 19], 3, 7) == 3": {
      "result": false,
      "time": 0.03400397300720215,
      "error": null
    },
    "assert smallest_missing([3, 5, 6, 8, 7, 4, 16, 17], 5, 4) == 5": {
      "result": false,
      "time": 0.03713345527648926,
      "error": null
    },
    "assert smallest_missing([2, 7, 7, 8, 5, 6, 7, 20], 3, 2) == 3": {
      "result": false,
      "time": 0.038156747817993164,
      "error": null
    },
    "assert smallest_missing([3, 2, 1, 6, 11, 12, 16, 12], 2, 12) == 2": {
      "result": false,
      "time": 0.045187950134277344,
      "error": null
    },
    "assert smallest_missing([2, 3, 2, 8, 10, 6, 16, 14], 2, 2) == 3": {
      "result": false,
      "time": 0.03850674629211426,
      "error": null
    },
    "assert smallest_missing([4, 3, 3, 6, 2, 6, 13, 17], 3, 5) == 3": {
      "result": false,
      "time": 0.044853925704956055,
      "error": null
    },
    "assert smallest_missing([1, 1, 6, 9, 1, 11, 16, 12], 1, 12) == 2": {
      "result": false,
      "time": 0.045691728591918945,
      "error": null
    },
    "assert smallest_missing([4, 1, 8, 3, 3, 4, 12, 20], 3, 7) == 4": {
      "result": false,
      "time": 0.04200148582458496,
      "error": null
    },
    "assert smallest_missing([3, 3, 4, 9, 2, 10, 13, 17], 1, 3) == 1": {
      "result": false,
      "time": 0.044936180114746094,
      "error": null
    },
    "assert smallest_missing([2, 6, 8, 5, 9, 9, 10, 16], 4, 3) == 4": {
      "result": false,
      "time": 0.047223806381225586,
      "error": null
    },
    "assert smallest_missing([1, 1, 6, 4, 11, 6, 6, 13], 2, 3) == 2": {
      "result": false,
      "time": 0.046888113021850586,
      "error": null
    },
    "assert smallest_missing([2, 3, 3, 5, 1, 9, 7, 12], 5, 6) == 5": {
      "result": false,
      "time": 0.04401588439941406,
      "error": null
    },
    "assert smallest_missing([6, 1, 3, 4, 7, 8, 16, 18], 2, 4) == 2": {
      "result": false,
      "time": 0.09078431129455566,
      "error": null
    },
    "assert smallest_missing([1, 1, 5, 4, 8, 11, 8, 20], 5, 2) == 5": {
      "result": false,
      "time": 0.043676137924194336,
      "error": null
    },
    "assert smallest_missing([6, 6, 1, 2, 4, 10, 15, 16], 2, 12) == 5": {
      "result": false,
      "time": 0.0372161865234375,
      "error": null
    },
    "assert smallest_missing([2, 7, 2, 7, 8, 8, 10, 19], 5, 10) == 5": {
      "result": false,
      "time": 0.038983821868896484,
      "error": null
    },
    "assert smallest_missing([1, 5, 2, 3, 8, 8, 7, 13], 1, 8) == 4": {
      "result": false,
      "time": 0.03885650634765625,
      "error": null
    },
    "assert smallest_missing([4, 6, 8, 7, 2, 6, 7, 17], 2, 7) == 2": {
      "result": false,
      "time": 0.03719019889831543,
      "error": null
    },
    "assert smallest_missing([2, 4, 7, 8, 3, 10, 15, 13], 3, 11) == 3": {
      "result": false,
      "time": 0.041409969329833984,
      "error": null
    },
    "assert smallest_missing([1, 4, 3, 3, 4, 10, 14, 17], 4, 4) == 5": {
      "result": false,
      "time": 0.04346919059753418,
      "error": null
    },
    "assert smallest_missing([3, 3, 2, 6, 1, 4, 14, 19], 3, 12) == 3": {
      "result": false,
      "time": 0.04308915138244629,
      "error": null
    },
    "assert smallest_missing([6, 2, 5, 2, 8, 9, 12, 20], 1, 6) == 1": {
      "result": false,
      "time": 0.03980445861816406,
      "error": null
    },
    "assert smallest_missing([5, 3, 2, 7, 11, 5, 13, 17], 5, 7) == 6": {
      "result": false,
      "time": 0.043558597564697266,
      "error": null
    },
    "assert smallest_missing([6, 2, 5, 4, 11, 9, 16, 17], 1, 12) == 1": {
      "result": false,
      "time": 0.045313358306884766,
      "error": null
    },
    "assert smallest_missing([4, 2, 4, 8, 7, 11, 8, 16], 5, 2) == 5": {
      "result": false,
      "time": 0.05324888229370117,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.029411764705882353,
  "general_error": "",
  "has_testcase_error": false
}