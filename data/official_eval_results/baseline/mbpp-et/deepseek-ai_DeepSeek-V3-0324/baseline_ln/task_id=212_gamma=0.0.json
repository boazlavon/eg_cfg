{
  "code": "def fourth_Power_Sum(n):\n    return sum(i**4 for i in range(1, n+1))",
  "results": {
    "assert fourth_Power_Sum(2) == 17": {
      "result": true,
      "time": 0.0647115707397461,
      "error": null
    },
    "assert fourth_Power_Sum(4) == 354": {
      "result": true,
      "time": 0.07646441459655762,
      "error": null
    },
    "assert fourth_Power_Sum(6) == 2275": {
      "result": true,
      "time": 0.0722808837890625,
      "error": null
    },
    "assert fourth_Power_Sum(1) == 1": {
      "result": true,
      "time": 0.052248239517211914,
      "error": null
    },
    "assert fourth_Power_Sum(5) == 979": {
      "result": true,
      "time": 0.07310605049133301,
      "error": null
    },
    "assert fourth_Power_Sum(3) == 98": {
      "result": true,
      "time": 0.06434059143066406,
      "error": null
    },
    "assert fourth_Power_Sum(7) == 4676": {
      "result": true,
      "time": 0.07319092750549316,
      "error": null
    },
    "assert fourth_Power_Sum(8) == 8772": {
      "result": true,
      "time": 0.05507659912109375,
      "error": null
    },
    "assert fourth_Power_Sum(9) == 15333": {
      "result": true,
      "time": 0.07072663307189941,
      "error": null
    },
    "assert fourth_Power_Sum(10) == 25333": {
      "result": true,
      "time": 0.06226229667663574,
      "error": null
    },
    "assert fourth_Power_Sum(11) == 39974": {
      "result": true,
      "time": 0.07601380348205566,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}