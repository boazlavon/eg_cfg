{
  "code": "from collections import Counter\n\ndef max_occurrences(lst):\n    if not lst:\n        return None  # Handle empty list case\n    \n    count = Counter(lst)\n    max_count = max(count.values())\n    max_items = [item for item, cnt in count.items() if cnt == max_count]\n    \n    if len(max_items) == 1:\n        return max_items[0]\n    else:\n        return tuple(max_items)  # Return as a tuple if multiple items have the same max count",
  "results": {
    "assert max_occurrences([1,2,3,1,2,3,12,4,2]) ==  2": {
      "result": true,
      "time": 0.28064990043640137,
      "error": null
    },
    "assert max_occurrences([1,2,6,7,0,1,0,1,0]) == 1,0": {
      "result": false,
      "time": 0.17044639587402344,
      "error": null
    },
    "assert max_occurrences([1,2,3,1,2,4,1]) == 1": {
      "result": true,
      "time": 0.29033446311950684,
      "error": null
    },
    "assert max_occurrences([1, 6, 4, 3, 1, 3, 13, 7, 4]) == 1": {
      "result": false,
      "time": 0.28125929832458496,
      "error": null
    },
    "assert max_occurrences([5, 1, 2, 6, 5, 3, 12, 9, 6]) == 5": {
      "result": false,
      "time": 0.2864234447479248,
      "error": null
    },
    "assert max_occurrences([5, 3, 8, 3, 5, 6, 17, 6, 3]) == 3": {
      "result": true,
      "time": 0.2667684555053711,
      "error": null
    },
    "assert max_occurrences([5, 2, 8, 1, 5, 2, 17, 9, 1]) == 5": {
      "result": false,
      "time": 0.2976069450378418,
      "error": null
    },
    "assert max_occurrences([1, 1, 8, 2, 7, 6, 16, 9, 3]) == 1": {
      "result": true,
      "time": 0.2663705348968506,
      "error": null
    },
    "assert max_occurrences([5, 7, 7, 6, 7, 2, 11, 3, 2]) == 7": {
      "result": true,
      "time": 0.28123044967651367,
      "error": null
    },
    "assert max_occurrences([2, 5, 7, 2, 7, 7, 11, 3, 1]) == 7": {
      "result": true,
      "time": 0.26329970359802246,
      "error": null
    },
    "assert max_occurrences([3, 5, 6, 1, 6, 6, 11, 2, 7]) == 6": {
      "result": true,
      "time": 0.27512502670288086,
      "error": null
    },
    "assert max_occurrences([5, 6, 4, 2, 2, 8, 14, 9, 2]) == 2": {
      "result": true,
      "time": 0.29918646812438965,
      "error": null
    },
    "assert max_occurrences([1, 4, 7, 4, 7, 6, 9, 5, 1]) == 1": {
      "result": false,
      "time": 0.27245426177978516,
      "error": null
    },
    "assert max_occurrences([5, 2, 5, 5, 3, 3, 7, 5, 4]) == 5": {
      "result": true,
      "time": 0.28017354011535645,
      "error": null
    },
    "assert max_occurrences([5, 4, 7, 3, 4, 3, 12, 5, 2]) == 5": {
      "result": false,
      "time": 0.27640318870544434,
      "error": null
    },
    "assert max_occurrences([5, 4, 5, 2, 4, 8, 7, 8, 3]) == 5": {
      "result": false,
      "time": 0.2935521602630615,
      "error": null
    },
    "assert max_occurrences([6, 7, 5, 5, 5, 1, 11, 2, 7]) == 5": {
      "result": true,
      "time": 0.27379679679870605,
      "error": null
    },
    "assert max_occurrences([2, 4, 8, 4, 1, 8, 16, 2, 4]) == 4": {
      "result": true,
      "time": 0.2680525779724121,
      "error": null
    },
    "assert max_occurrences([4, 4, 1, 1, 4, 3, 12, 8, 2]) == 4": {
      "result": true,
      "time": 0.2693448066711426,
      "error": null
    },
    "assert max_occurrences([4, 3, 6, 6, 7, 7, 9, 1, 1]) == 6": {
      "result": false,
      "time": 0.287858247756958,
      "error": null
    },
    "assert max_occurrences([3, 2, 7, 2, 3, 2, 10, 3, 3]) == 3": {
      "result": true,
      "time": 0.27611684799194336,
      "error": null
    },
    "assert max_occurrences([1, 5, 6, 5, 6, 2, 8, 4, 7]) == 5": {
      "result": false,
      "time": 0.2674081325531006,
      "error": null
    },
    "assert max_occurrences([5, 1, 2, 1, 4, 8, 11, 2, 2]) == 2": {
      "result": true,
      "time": 0.28851985931396484,
      "error": null
    },
    "assert max_occurrences([5, 3, 5, 3, 7, 4, 8, 8, 1]) == 5": {
      "result": false,
      "time": 0.28568387031555176,
      "error": null
    },
    "assert max_occurrences([6, 1, 6, 5, 6, 7, 16, 3, 6]) == 6": {
      "result": true,
      "time": 0.272672176361084,
      "error": null
    },
    "assert max_occurrences([4, 3, 4, 3, 4, 4, 10, 1, 1]) == 4": {
      "result": true,
      "time": 0.28970932960510254,
      "error": null
    },
    "assert max_occurrences([6, 5, 2, 2, 7, 7, 16, 3, 5]) == 5": {
      "result": false,
      "time": 0.2699143886566162,
      "error": null
    },
    "assert max_occurrences([6, 6, 6, 5, 3, 7, 16, 8, 4]) == 6": {
      "result": true,
      "time": 0.286287784576416,
      "error": null
    },
    "assert max_occurrences([5, 1, 1, 5, 1, 6, 17, 3, 4]) == 1": {
      "result": true,
      "time": 0.2778055667877197,
      "error": null
    },
    "assert max_occurrences([5, 4, 7, 6, 2, 3, 8, 1, 1]) == 1": {
      "result": true,
      "time": 0.2867164611816406,
      "error": null
    },
    "assert max_occurrences([4, 7, 8, 6, 2, 3, 14, 6, 2]) == 6": {
      "result": false,
      "time": 0.28037571907043457,
      "error": null
    },
    "assert max_occurrences([4, 3, 5, 6, 3, 5, 15, 7, 1]) == 3": {
      "result": false,
      "time": 0.26581454277038574,
      "error": null
    },
    "assert max_occurrences([1, 7, 1, 3, 1, 7, 9, 7, 5]) == 1": {
      "result": false,
      "time": 0.27127742767333984,
      "error": null
    },
    "assert max_occurrences([2, 7, 4, 6, 2, 7, 12, 8, 1]) == 2": {
      "result": false,
      "time": 0.27055811882019043,
      "error": null
    },
    "assert max_occurrences([4, 3, 7, 4, 6, 1, 9, 5, 6]) == 4": {
      "result": false,
      "time": 0.29143214225769043,
      "error": null
    },
    "assert max_occurrences([6, 4, 1, 6, 3, 2, 14, 4, 4]) == 4": {
      "result": true,
      "time": 0.28483057022094727,
      "error": null
    },
    "assert max_occurrences([3, 1, 1, 5, 3, 5, 4, 4, 4]) == 4": {
      "result": true,
      "time": 0.29140233993530273,
      "error": null
    },
    "assert max_occurrences([3, 6, 4, 5, 5, 3, 4, 1, 1]) == 3": {
      "result": false,
      "time": 0.2868373394012451,
      "error": null
    },
    "assert max_occurrences([5, 2, 3, 2, 1, 5, 1, 5, 1]) == 5": {
      "result": false,
      "time": 0.28286218643188477,
      "error": null
    },
    "assert max_occurrences([5, 3, 2, 12, 4, 2, 5, 6, 1]) == 5": {
      "result": false,
      "time": 0.29309678077697754,
      "error": null
    },
    "assert max_occurrences([3, 6, 11, 2, 1, 4, 4, 1, 4]) == 4": {
      "result": true,
      "time": 0.2857391834259033,
      "error": null
    },
    "assert max_occurrences([1, 2, 8, 6, 5, 4, 1, 2, 1]) == 1": {
      "result": true,
      "time": 0.29816532135009766,
      "error": null
    },
    "assert max_occurrences([4, 3, 6, 8, 2, 1, 2, 6, 2]) == 2": {
      "result": true,
      "time": 0.2934229373931885,
      "error": null
    },
    "assert max_occurrences([6, 4, 5, 11, 1, 1, 4, 3, 1]) == 1": {
      "result": true,
      "time": 0.2958981990814209,
      "error": null
    },
    "assert max_occurrences([4, 3, 1, 8, 1, 3, 1, 1, 3]) == 1": {
      "result": true,
      "time": 0.26845812797546387,
      "error": null
    },
    "assert max_occurrences([3, 4, 1, 9, 5, 3, 4, 6, 1]) == 3": {
      "result": false,
      "time": 0.2763495445251465,
      "error": null
    },
    "assert max_occurrences([2, 5, 6, 5, 4, 3, 3, 4, 4]) == 4": {
      "result": true,
      "time": 0.27672910690307617,
      "error": null
    },
    "assert max_occurrences([3, 2, 7, 9, 2, 4, 3, 3, 3]) == 3": {
      "result": true,
      "time": 0.3109133243560791,
      "error": null
    },
    "assert max_occurrences([2, 3, 1, 5, 2, 2, 4, 3, 5]) == 2": {
      "result": true,
      "time": 0.285106897354126,
      "error": null
    },
    "assert max_occurrences([3, 3, 4, 10, 3, 1, 1, 5, 2]) == 3": {
      "result": true,
      "time": 0.2993166446685791,
      "error": null
    },
    "assert max_occurrences([3, 6, 1, 11, 3, 2, 3, 3, 4]) == 3": {
      "result": true,
      "time": 0.2751755714416504,
      "error": null
    },
    "assert max_occurrences([5, 6, 2, 9, 5, 2, 5, 5, 5]) == 5": {
      "result": true,
      "time": 0.28460121154785156,
      "error": null
    },
    "assert max_occurrences([3, 4, 4, 6, 5, 1, 5, 4, 2]) == 4": {
      "result": true,
      "time": 0.30658793449401855,
      "error": null
    },
    "assert max_occurrences([4, 4, 4, 9, 3, 6, 3, 3, 3]) == 3": {
      "result": true,
      "time": 0.2783632278442383,
      "error": null
    },
    "assert max_occurrences([6, 4, 6, 2, 5, 1, 3, 4, 2]) == 6": {
      "result": false,
      "time": 0.30778050422668457,
      "error": null
    },
    "assert max_occurrences([6, 1, 6, 4, 5, 4, 1, 2, 2]) == 6": {
      "result": false,
      "time": 0.28879237174987793,
      "error": null
    },
    "assert max_occurrences([5, 5, 1, 12, 1, 4, 4, 3, 2]) == 5": {
      "result": false,
      "time": 0.275723934173584,
      "error": null
    },
    "assert max_occurrences([6, 5, 8, 3, 1, 2, 5, 5, 5]) == 5": {
      "result": true,
      "time": 0.27936768531799316,
      "error": null
    },
    "assert max_occurrences([6, 6, 9, 10, 1, 6, 2, 3, 2]) == 6": {
      "result": true,
      "time": 0.2671024799346924,
      "error": null
    },
    "assert max_occurrences([6, 2, 8, 8, 3, 1, 2, 4, 2]) == 2": {
      "result": true,
      "time": 0.26752376556396484,
      "error": null
    },
    "assert max_occurrences([2, 3, 5, 10, 1, 6, 1, 3, 1]) == 1": {
      "result": true,
      "time": 0.2674388885498047,
      "error": null
    },
    "assert max_occurrences([4, 2, 3, 8, 3, 4, 2, 1, 4]) == 4": {
      "result": true,
      "time": 0.25818800926208496,
      "error": null
    },
    "assert max_occurrences([2, 4, 8, 3, 2, 6, 1, 6, 3]) == 2": {
      "result": false,
      "time": 0.2673821449279785,
      "error": null
    },
    "assert max_occurrences([1, 4, 2, 4, 4, 2, 5, 6, 5]) == 4": {
      "result": true,
      "time": 0.27710628509521484,
      "error": null
    },
    "assert max_occurrences([2, 5, 5, 9, 5, 5, 5, 1, 4]) == 5": {
      "result": true,
      "time": 0.28644442558288574,
      "error": null
    },
    "assert max_occurrences([3, 7, 3, 11, 1, 3, 1, 5, 1]) == 3": {
      "result": false,
      "time": 0.2772212028503418,
      "error": null
    },
    "assert max_occurrences([1, 2, 5, 10, 3, 1, 2, 2, 2]) == 2": {
      "result": true,
      "time": 0.2731962203979492,
      "error": null
    },
    "assert max_occurrences([4, 1, 3, 6, 1, 3, 3, 1, 2]) == 1": {
      "result": false,
      "time": 0.3005845546722412,
      "error": null
    },
    "assert max_occurrences([2, 2, 10, 8, 1, 3, 2, 5, 2]) == 2": {
      "result": true,
      "time": 0.28579020500183105,
      "error": null
    },
    "assert max_occurrences([5, 2, 6, 5, 3, 9, 1]) == 5": {
      "result": true,
      "time": 0.2785942554473877,
      "error": null
    },
    "assert max_occurrences([1, 7, 4, 2, 7, 9, 4]) == 7": {
      "result": false,
      "time": 0.2757132053375244,
      "error": null
    },
    "assert max_occurrences([6, 7, 6, 4, 3, 5, 6]) == 6": {
      "result": true,
      "time": 0.2726297378540039,
      "error": null
    },
    "assert max_occurrences([5, 7, 4, 1, 1, 4, 6]) == 4": {
      "result": false,
      "time": 0.2793445587158203,
      "error": null
    },
    "assert max_occurrences([5, 7, 7, 5, 3, 1, 5]) == 5": {
      "result": true,
      "time": 0.26682186126708984,
      "error": null
    },
    "assert max_occurrences([2, 6, 3, 5, 6, 7, 2]) == 2": {
      "result": false,
      "time": 0.27761149406433105,
      "error": null
    },
    "assert max_occurrences([2, 4, 3, 6, 3, 4, 3]) == 3": {
      "result": true,
      "time": 0.29275083541870117,
      "error": null
    },
    "assert max_occurrences([6, 4, 5, 6, 1, 6, 1]) == 6": {
      "result": true,
      "time": 0.2676582336425781,
      "error": null
    },
    "assert max_occurrences([3, 7, 1, 2, 4, 4, 6]) == 4": {
      "result": true,
      "time": 0.2727346420288086,
      "error": null
    },
    "assert max_occurrences([6, 2, 1, 1, 5, 6, 3]) == 6": {
      "result": false,
      "time": 0.28413844108581543,
      "error": null
    },
    "assert max_occurrences([3, 1, 5, 1, 7, 6, 2]) == 1": {
      "result": true,
      "time": 0.281186580657959,
      "error": null
    },
    "assert max_occurrences([2, 5, 8, 1, 5, 3, 3]) == 5": {
      "result": false,
      "time": 0.268308162689209,
      "error": null
    },
    "assert max_occurrences([5, 3, 8, 1, 7, 6, 6]) == 6": {
      "result": true,
      "time": 0.2562723159790039,
      "error": null
    },
    "assert max_occurrences([2, 6, 6, 2, 6, 5, 5]) == 6": {
      "result": true,
      "time": 0.2670888900756836,
      "error": null
    },
    "assert max_occurrences([1, 6, 6, 2, 5, 3, 3]) == 6": {
      "result": false,
      "time": 0.27836012840270996,
      "error": null
    },
    "assert max_occurrences([2, 2, 6, 6, 4, 7, 2]) == 2": {
      "result": true,
      "time": 0.25235700607299805,
      "error": null
    },
    "assert max_occurrences([6, 1, 6, 6, 2, 8, 3]) == 6": {
      "result": true,
      "time": 0.2683408260345459,
      "error": null
    },
    "assert max_occurrences([5, 5, 2, 3, 6, 3, 6]) == 5": {
      "result": false,
      "time": 0.26593828201293945,
      "error": null
    },
    "assert max_occurrences([6, 4, 1, 4, 2, 8, 1]) == 4": {
      "result": false,
      "time": 0.27057743072509766,
      "error": null
    },
    "assert max_occurrences([2, 4, 1, 2, 1, 8, 6]) == 2": {
      "result": false,
      "time": 0.2796781063079834,
      "error": null
    },
    "assert max_occurrences([6, 7, 1, 1, 5, 2, 3]) == 1": {
      "result": true,
      "time": 0.28105998039245605,
      "error": null
    },
    "assert max_occurrences([5, 2, 7, 6, 2, 6, 6]) == 6": {
      "result": true,
      "time": 0.2884371280670166,
      "error": null
    },
    "assert max_occurrences([1, 7, 5, 3, 4, 6, 1]) == 1": {
      "result": true,
      "time": 0.27028799057006836,
      "error": null
    },
    "assert max_occurrences([4, 2, 4, 4, 1, 3, 4]) == 4": {
      "result": true,
      "time": 0.26657891273498535,
      "error": null
    },
    "assert max_occurrences([5, 6, 3, 3, 7, 6, 2]) == 6": {
      "result": false,
      "time": 0.265714168548584,
      "error": null
    },
    "assert max_occurrences([2, 4, 1, 2, 5, 6, 5]) == 2": {
      "result": false,
      "time": 0.2749063968658447,
      "error": null
    },
    "assert max_occurrences([3, 2, 3, 1, 4, 3, 2]) == 3": {
      "result": true,
      "time": 0.2684650421142578,
      "error": null
    },
    "assert max_occurrences([2, 5, 2, 1, 4, 8, 3]) == 2": {
      "result": true,
      "time": 0.2697169780731201,
      "error": null
    },
    "assert max_occurrences([4, 2, 7, 2, 4, 5, 2]) == 2": {
      "result": true,
      "time": 0.26347947120666504,
      "error": null
    },
    "assert max_occurrences([3, 6, 2, 6, 6, 7, 2]) == 6": {
      "result": true,
      "time": 0.2810842990875244,
      "error": null
    },
    "assert max_occurrences([6, 6, 2, 4, 6, 8, 1]) == 6": {
      "result": true,
      "time": 0.2589991092681885,
      "error": null
    },
    "assert max_occurrences([3, 4, 5, 2, 3, 3, 2]) == 3": {
      "result": true,
      "time": 0.26079750061035156,
      "error": null
    },
    "assert max_occurrences([4, 2, 8, 1, 3, 9, 2]) == 2": {
      "result": true,
      "time": 0.25669312477111816,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6372549019607843,
  "general_error": "",
  "has_testcase_error": false
}