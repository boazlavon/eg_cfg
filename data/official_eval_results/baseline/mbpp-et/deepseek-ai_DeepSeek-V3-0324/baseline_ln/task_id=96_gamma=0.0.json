{
  "code": "import math\n\ndef divisor(n):\n    if n == 0:\n        return 0\n    count = 0\n    sqrt_n = int(math.sqrt(n))\n    for i in range(1, sqrt_n + 1):\n        if n % i == 0:\n            if i * i == n:\n                count += 1\n            else:\n                count += 2\n    return count",
  "results": {
    "assert divisor(15) == 4 ": {
      "result": true,
      "time": 0.08774542808532715,
      "error": null
    },
    "assert divisor(12) == 6": {
      "result": true,
      "time": 0.09778237342834473,
      "error": null
    },
    "assert divisor(9) == 3": {
      "result": true,
      "time": 0.10150456428527832,
      "error": null
    },
    "assert divisor(11) == 2": {
      "result": true,
      "time": 0.11215567588806152,
      "error": null
    },
    "assert divisor(13) == 2": {
      "result": true,
      "time": 0.09913158416748047,
      "error": null
    },
    "assert divisor(19) == 2": {
      "result": true,
      "time": 0.08586812019348145,
      "error": null
    },
    "assert divisor(15) == 4": {
      "result": true,
      "time": 0.09101271629333496,
      "error": null
    },
    "assert divisor(10) == 4": {
      "result": true,
      "time": 0.09038734436035156,
      "error": null
    },
    "assert divisor(14) == 4": {
      "result": true,
      "time": 0.08411955833435059,
      "error": null
    },
    "assert divisor(16) == 5": {
      "result": true,
      "time": 0.08294939994812012,
      "error": null
    },
    "assert divisor(20) == 6": {
      "result": true,
      "time": 0.10800790786743164,
      "error": null
    },
    "assert divisor(18) == 6": {
      "result": true,
      "time": 0.11245131492614746,
      "error": null
    },
    "assert divisor(17) == 2": {
      "result": true,
      "time": 0.08563470840454102,
      "error": null
    },
    "assert divisor(8) == 4": {
      "result": true,
      "time": 0.08838224411010742,
      "error": null
    },
    "assert divisor(7) == 2": {
      "result": true,
      "time": 0.086151123046875,
      "error": null
    },
    "assert divisor(6) == 4": {
      "result": true,
      "time": 0.08458161354064941,
      "error": null
    },
    "assert divisor(4) == 3": {
      "result": true,
      "time": 0.09251189231872559,
      "error": null
    },
    "assert divisor(5) == 2": {
      "result": true,
      "time": 0.08077216148376465,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}