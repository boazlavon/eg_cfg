{
  "code": "def count_pairs(arr, n, k):\n    count = 0\n    seen = set()\n    for num in arr:\n        if num + k in seen:\n            count += 1\n        if num - k in seen:\n            count += 1\n        seen.add(num)\n    return count",
  "results": {
    "assert count_pairs([1, 5, 3, 4, 2], 5, 3) == 2": {
      "result": true,
      "time": 0.05729365348815918,
      "error": null
    },
    "assert count_pairs([8, 12, 16, 4, 0, 20], 6, 4) == 5": {
      "result": true,
      "time": 0.0483403205871582,
      "error": null
    },
    "assert count_pairs([2, 4, 1, 3, 4], 5, 2) == 3": {
      "result": true,
      "time": 0.047972917556762695,
      "error": null
    },
    "assert count_pairs([6, 5, 4, 6, 5], 1, 7) == 0": {
      "result": true,
      "time": 0.04337143898010254,
      "error": null
    },
    "assert count_pairs([2, 4, 1, 5, 5], 3, 5) == 0": {
      "result": true,
      "time": 0.052451372146606445,
      "error": null
    },
    "assert count_pairs([6, 2, 4, 8, 4], 1, 8) == 0": {
      "result": true,
      "time": 0.04210853576660156,
      "error": null
    },
    "assert count_pairs([4, 6, 8, 2, 7], 3, 7) == 0": {
      "result": true,
      "time": 0.0471341609954834,
      "error": null
    },
    "assert count_pairs([2, 5, 4, 1, 3], 1, 7) == 0": {
      "result": true,
      "time": 0.04950666427612305,
      "error": null
    },
    "assert count_pairs([5, 5, 7, 5, 7], 5, 4) == 0": {
      "result": true,
      "time": 0.04746270179748535,
      "error": null
    },
    "assert count_pairs([6, 2, 5, 3, 3], 2, 6) == 0": {
      "result": true,
      "time": 0.0494842529296875,
      "error": null
    },
    "assert count_pairs([3, 7, 1, 4, 5], 4, 6) == 1": {
      "result": true,
      "time": 0.04213857650756836,
      "error": null
    },
    "assert count_pairs([3, 2, 6, 7, 2], 2, 1) == 1": {
      "result": false,
      "time": 0.037259578704833984,
      "error": null
    },
    "assert count_pairs([3, 3, 8, 8, 4], 3, 7) == 0": {
      "result": true,
      "time": 0.0515899658203125,
      "error": null
    },
    "assert count_pairs([6, 8, 5, 5, 7], 5, 1) == 4": {
      "result": true,
      "time": 0.041518449783325195,
      "error": null
    },
    "assert count_pairs([1, 2, 7, 2, 2], 2, 6) == 0": {
      "result": false,
      "time": 0.037459373474121094,
      "error": null
    },
    "assert count_pairs([3, 2, 2, 1, 4], 5, 4) == 0": {
      "result": true,
      "time": 0.049652814865112305,
      "error": null
    },
    "assert count_pairs([1, 4, 7, 9, 5], 2, 7) == 0": {
      "result": true,
      "time": 0.04590749740600586,
      "error": null
    },
    "assert count_pairs([2, 3, 2, 1, 1], 5, 8) == 0": {
      "result": true,
      "time": 0.04148435592651367,
      "error": null
    },
    "assert count_pairs([3, 8, 5, 1, 2], 5, 6) == 1": {
      "result": true,
      "time": 0.03933262825012207,
      "error": null
    },
    "assert count_pairs([1, 8, 3, 9, 4], 4, 7) == 1": {
      "result": true,
      "time": 0.03453350067138672,
      "error": null
    },
    "assert count_pairs([6, 8, 5, 5, 3], 4, 1) == 2": {
      "result": true,
      "time": 0.05243802070617676,
      "error": null
    },
    "assert count_pairs([4, 5, 1, 5, 7], 3, 2) == 0": {
      "result": false,
      "time": 0.06674933433532715,
      "error": null
    },
    "assert count_pairs([1, 1, 3, 8, 7], 3, 7) == 0": {
      "result": false,
      "time": 0.05489683151245117,
      "error": null
    },
    "assert count_pairs([6, 6, 5, 8, 7], 2, 2) == 0": {
      "result": false,
      "time": 0.06332159042358398,
      "error": null
    },
    "assert count_pairs([2, 8, 6, 6, 3], 2, 6) == 1": {
      "result": true,
      "time": 0.06449055671691895,
      "error": null
    },
    "assert count_pairs([6, 4, 7, 7, 5], 3, 3) == 1": {
      "result": false,
      "time": 0.052573442459106445,
      "error": null
    },
    "assert count_pairs([1, 10, 1, 5, 5], 2, 7) == 0": {
      "result": true,
      "time": 0.0681464672088623,
      "error": null
    },
    "assert count_pairs([1, 8, 6, 3, 1], 3, 4) == 0": {
      "result": true,
      "time": 0.04232215881347656,
      "error": null
    },
    "assert count_pairs([6, 4, 6, 4, 3], 5, 3) == 2": {
      "result": false,
      "time": 0.0405426025390625,
      "error": null
    },
    "assert count_pairs([2, 10, 6, 8, 2], 3, 6) == 0": {
      "result": false,
      "time": 0.03935718536376953,
      "error": null
    },
    "assert count_pairs([1, 10, 7, 6, 5], 3, 3) == 1": {
      "result": true,
      "time": 0.03397083282470703,
      "error": null
    },
    "assert count_pairs([6, 2, 5, 1, 2], 4, 8) == 0": {
      "result": true,
      "time": 0.03937506675720215,
      "error": null
    },
    "assert count_pairs([4, 6, 4, 1, 4], 4, 1) == 0": {
      "result": true,
      "time": 0.040326833724975586,
      "error": null
    },
    "assert count_pairs([4, 5, 4, 3, 4], 4, 5) == 0": {
      "result": true,
      "time": 0.03966498374938965,
      "error": null
    },
    "assert count_pairs([3, 6, 3, 7, 2], 5, 5) == 1": {
      "result": true,
      "time": 0.040029287338256836,
      "error": null
    },
    "assert count_pairs([3, 9, 3, 6, 5], 1, 3) == 0": {
      "result": false,
      "time": 0.04016590118408203,
      "error": null
    },
    "assert count_pairs([11, 15, 15, 1, 5, 18], 6, 2) == 0": {
      "result": true,
      "time": 0.03362703323364258,
      "error": null
    },
    "assert count_pairs([12, 14, 17, 3, 1, 25], 1, 6) == 0": {
      "result": true,
      "time": 0.0450592041015625,
      "error": null
    },
    "assert count_pairs([6, 7, 17, 2, 4, 24], 5, 1) == 1": {
      "result": true,
      "time": 0.036036014556884766,
      "error": null
    },
    "assert count_pairs([6, 13, 20, 7, 3, 22], 6, 2) == 1": {
      "result": true,
      "time": 0.03583884239196777,
      "error": null
    },
    "assert count_pairs([8, 16, 17, 3, 5, 16], 2, 6) == 0": {
      "result": true,
      "time": 0.03830981254577637,
      "error": null
    },
    "assert count_pairs([12, 17, 15, 7, 5, 17], 1, 2) == 0": {
      "result": false,
      "time": 0.038790225982666016,
      "error": null
    },
    "assert count_pairs([7, 10, 20, 3, 5, 21], 5, 1) == 0": {
      "result": false,
      "time": 0.03775191307067871,
      "error": null
    },
    "assert count_pairs([5, 9, 18, 7, 4, 18], 4, 4) == 1": {
      "result": true,
      "time": 0.0409848690032959,
      "error": null
    },
    "assert count_pairs([7, 9, 14, 1, 3, 25], 6, 2) == 2": {
      "result": true,
      "time": 0.04169750213623047,
      "error": null
    },
    "assert count_pairs([10, 15, 14, 2, 3, 21], 4, 4) == 1": {
      "result": true,
      "time": 0.03809642791748047,
      "error": null
    },
    "assert count_pairs([6, 7, 18, 2, 4, 23], 2, 7) == 0": {
      "result": true,
      "time": 0.03754377365112305,
      "error": null
    },
    "assert count_pairs([8, 7, 17, 1, 4, 23], 1, 8) == 0": {
      "result": true,
      "time": 0.035788774490356445,
      "error": null
    },
    "assert count_pairs([3, 15, 19, 1, 3, 15], 6, 7) == 0": {
      "result": true,
      "time": 0.03877091407775879,
      "error": null
    },
    "assert count_pairs([3, 10, 15, 9, 3, 18], 3, 6) == 0": {
      "result": false,
      "time": 0.04240083694458008,
      "error": null
    },
    "assert count_pairs([11, 9, 14, 3, 4, 21], 4, 9) == 0": {
      "result": true,
      "time": 0.0411074161529541,
      "error": null
    },
    "assert count_pairs([11, 17, 19, 2, 2, 17], 1, 9) == 0": {
      "result": false,
      "time": 0.04775428771972656,
      "error": null
    },
    "assert count_pairs([12, 14, 19, 6, 4, 18], 5, 4) == 0": {
      "result": false,
      "time": 0.04683327674865723,
      "error": null
    },
    "assert count_pairs([11, 8, 19, 6, 4, 22], 1, 6) == 0": {
      "result": true,
      "time": 0.0394437313079834,
      "error": null
    },
    "assert count_pairs([5, 13, 13, 2, 2, 25], 1, 8) == 0": {
      "result": false,
      "time": 0.04944562911987305,
      "error": null
    },
    "assert count_pairs([4, 7, 12, 4, 1, 15], 4, 1) == 0": {
      "result": true,
      "time": 0.039952754974365234,
      "error": null
    },
    "assert count_pairs([13, 8, 15, 2, 3, 16], 2, 9) == 0": {
      "result": true,
      "time": 0.05526447296142578,
      "error": null
    },
    "assert count_pairs([7, 7, 20, 5, 3, 24], 1, 5) == 0": {
      "result": true,
      "time": 0.04420280456542969,
      "error": null
    },
    "assert count_pairs([12, 12, 21, 9, 3, 16], 1, 4) == 0": {
      "result": false,
      "time": 0.05905747413635254,
      "error": null
    },
    "assert count_pairs([9, 10, 17, 9, 4, 24], 6, 6) == 1": {
      "result": true,
      "time": 0.05580925941467285,
      "error": null
    },
    "assert count_pairs([9, 10, 21, 3, 1, 23], 2, 3) == 0": {
      "result": true,
      "time": 0.06530284881591797,
      "error": null
    },
    "assert count_pairs([8, 17, 19, 5, 1, 25], 4, 4) == 0": {
      "result": false,
      "time": 0.04883432388305664,
      "error": null
    },
    "assert count_pairs([3, 13, 20, 1, 2, 21], 4, 2) == 1": {
      "result": true,
      "time": 0.06003975868225098,
      "error": null
    },
    "assert count_pairs([12, 14, 20, 6, 2, 21], 5, 8) == 2": {
      "result": true,
      "time": 0.0466008186340332,
      "error": null
    },
    "assert count_pairs([5, 8, 18, 2, 5, 19], 2, 6) == 0": {
      "result": false,
      "time": 0.06525993347167969,
      "error": null
    },
    "assert count_pairs([10, 13, 20, 1, 4, 17], 6, 2) == 0": {
      "result": true,
      "time": 0.06348586082458496,
      "error": null
    },
    "assert count_pairs([13, 12, 19, 7, 5, 16], 4, 1) == 1": {
      "result": true,
      "time": 0.043895721435546875,
      "error": null
    },
    "assert count_pairs([6, 17, 13, 3, 2, 24], 4, 7) == 1": {
      "result": false,
      "time": 0.04997539520263672,
      "error": null
    },
    "assert count_pairs([8, 12, 12, 1, 2, 24], 5, 3) == 0": {
      "result": true,
      "time": 0.04598379135131836,
      "error": null
    },
    "assert count_pairs([4, 4, 5, 1, 3], 3, 5) == 0": {
      "result": true,
      "time": 0.0577549934387207,
      "error": null
    },
    "assert count_pairs([4, 6, 5, 3, 8], 1, 1) == 0": {
      "result": false,
      "time": 0.057057857513427734,
      "error": null
    },
    "assert count_pairs([6, 3, 5, 1, 7], 4, 4) == 1": {
      "result": false,
      "time": 0.04691576957702637,
      "error": null
    },
    "assert count_pairs([1, 5, 3, 1, 4], 2, 7) == 0": {
      "result": true,
      "time": 0.04901742935180664,
      "error": null
    },
    "assert count_pairs([6, 7, 6, 6, 2], 5, 2) == 0": {
      "result": true,
      "time": 0.03968453407287598,
      "error": null
    },
    "assert count_pairs([1, 9, 3, 3, 9], 5, 6) == 4": {
      "result": false,
      "time": 0.04624629020690918,
      "error": null
    },
    "assert count_pairs([4, 2, 6, 4, 3], 1, 4) == 0": {
      "result": false,
      "time": 0.03727006912231445,
      "error": null
    },
    "assert count_pairs([2, 5, 3, 6, 2], 4, 6) == 0": {
      "result": true,
      "time": 0.04867362976074219,
      "error": null
    },
    "assert count_pairs([3, 2, 3, 3, 1], 5, 3) == 0": {
      "result": true,
      "time": 0.037047624588012695,
      "error": null
    },
    "assert count_pairs([7, 4, 2, 6, 3], 2, 1) == 0": {
      "result": false,
      "time": 0.0395970344543457,
      "error": null
    },
    "assert count_pairs([6, 5, 2, 3, 2], 3, 7) == 0": {
      "result": true,
      "time": 0.04451775550842285,
      "error": null
    },
    "assert count_pairs([3, 2, 6, 6, 2], 1, 6) == 0": {
      "result": true,
      "time": 0.03565573692321777,
      "error": null
    },
    "assert count_pairs([2, 7, 6, 2, 7], 3, 7) == 0": {
      "result": true,
      "time": 0.055583953857421875,
      "error": null
    },
    "assert count_pairs([3, 1, 6, 8, 2], 2, 1) == 0": {
      "result": false,
      "time": 0.0525965690612793,
      "error": null
    },
    "assert count_pairs([3, 9, 4, 5, 4], 3, 4) == 0": {
      "result": false,
      "time": 0.049242496490478516,
      "error": null
    },
    "assert count_pairs([4, 2, 1, 6, 6], 1, 5) == 0": {
      "result": false,
      "time": 0.05157184600830078,
      "error": null
    },
    "assert count_pairs([2, 3, 2, 1, 2], 5, 6) == 0": {
      "result": true,
      "time": 0.058313846588134766,
      "error": null
    },
    "assert count_pairs([7, 4, 6, 1, 2], 5, 6) == 1": {
      "result": true,
      "time": 0.04618072509765625,
      "error": null
    },
    "assert count_pairs([7, 2, 5, 7, 6], 5, 7) == 0": {
      "result": true,
      "time": 0.04216766357421875,
      "error": null
    },
    "assert count_pairs([1, 2, 1, 6, 8], 3, 7) == 0": {
      "result": false,
      "time": 0.05119943618774414,
      "error": null
    },
    "assert count_pairs([4, 2, 2, 5, 9], 1, 6) == 0": {
      "result": true,
      "time": 0.04771780967712402,
      "error": null
    },
    "assert count_pairs([4, 8, 6, 6, 4], 3, 3) == 0": {
      "result": true,
      "time": 0.06027793884277344,
      "error": null
    },
    "assert count_pairs([4, 9, 3, 7, 4], 5, 1) == 2": {
      "result": true,
      "time": 0.05075526237487793,
      "error": null
    },
    "assert count_pairs([7, 3, 5, 7, 1], 4, 2) == 3": {
      "result": false,
      "time": 0.05426597595214844,
      "error": null
    },
    "assert count_pairs([1, 2, 6, 5, 6], 5, 7) == 0": {
      "result": true,
      "time": 0.04877448081970215,
      "error": null
    },
    "assert count_pairs([7, 2, 3, 5, 4], 3, 3) == 0": {
      "result": false,
      "time": 0.05416250228881836,
      "error": null
    },
    "assert count_pairs([4, 6, 1, 1, 2], 4, 3) == 2": {
      "result": true,
      "time": 0.053891897201538086,
      "error": null
    },
    "assert count_pairs([7, 5, 3, 2, 1], 3, 6) == 0": {
      "result": false,
      "time": 0.043395280838012695,
      "error": null
    },
    "assert count_pairs([7, 2, 3, 8, 3], 4, 5) == 2": {
      "result": false,
      "time": 0.03861403465270996,
      "error": null
    },
    "assert count_pairs([5, 6, 3, 3, 7], 4, 1) == 1": {
      "result": false,
      "time": 0.05562639236450195,
      "error": null
    },
    "assert count_pairs([7, 4, 4, 4, 5], 5, 6) == 0": {
      "result": true,
      "time": 0.04825544357299805,
      "error": null
    },
    "assert count_pairs([5, 3, 2, 7, 4], 3, 2) == 1": {
      "result": false,
      "time": 0.041785478591918945,
      "error": null
    },
    "assert count_pairs([1, 5, 6, 6, 6], 3, 1) == 1": {
      "result": false,
      "time": 0.045255184173583984,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6568627450980392,
  "general_error": "",
  "has_testcase_error": false
}