{
  "code": "def find_peak(arr, n):\n    for i in range(n):\n        # Check if the current element is a peak\n        if (i == 0 or arr[i] >= arr[i - 1]) and (i == n - 1 or arr[i] >= arr[i + 1]):\n            return i\n    return -1  # No peak found (shouldn't happen as per problem constraints)",
  "results": {
    "assert find_peak([1, 3, 20, 4, 1, 0], 6) == 2": {
      "result": true,
      "time": 0.038140296936035156,
      "error": null
    },
    "assert find_peak([2, 3, 4, 5, 6], 5) == 4": {
      "result": true,
      "time": 0.036811113357543945,
      "error": null
    },
    "assert find_peak([8, 9, 11, 12, 14, 15], 6) == 5 ": {
      "result": true,
      "time": 0.03798985481262207,
      "error": null
    },
    "assert find_peak([2, 1, 20, 1, 3, 1], 9) == 4": {
      "result": false,
      "time": 0.036984920501708984,
      "error": null
    },
    "assert find_peak([1, 7, 22, 8, 6, 3], 3) == 2": {
      "result": true,
      "time": 0.03219437599182129,
      "error": null
    },
    "assert find_peak([5, 2, 24, 9, 5, 3], 4) == 0": {
      "result": true,
      "time": 0.03506302833557129,
      "error": null
    },
    "assert find_peak([5, 5, 25, 9, 5, 1], 6) == 2": {
      "result": false,
      "time": 0.03266191482543945,
      "error": null
    },
    "assert find_peak([6, 2, 15, 9, 2, 5], 5) == 2": {
      "result": false,
      "time": 0.03480958938598633,
      "error": null
    },
    "assert find_peak([6, 8, 17, 1, 5, 4], 9) == 4": {
      "result": false,
      "time": 0.03195023536682129,
      "error": null
    },
    "assert find_peak([6, 2, 25, 7, 3, 4], 1) == 0": {
      "result": true,
      "time": 0.03460264205932617,
      "error": null
    },
    "assert find_peak([6, 2, 25, 8, 6, 4], 4) == 0": {
      "result": true,
      "time": 0.03202414512634277,
      "error": null
    },
    "assert find_peak([1, 7, 22, 4, 4, 1], 3) == 2": {
      "result": true,
      "time": 0.02929520606994629,
      "error": null
    },
    "assert find_peak([4, 3, 24, 7, 3, 2], 8) == 0": {
      "result": true,
      "time": 0.04432559013366699,
      "error": null
    },
    "assert find_peak([3, 8, 18, 9, 6, 5], 9) == 2": {
      "result": true,
      "time": 0.03192758560180664,
      "error": null
    },
    "assert find_peak([5, 5, 20, 2, 5, 3], 4) == 2": {
      "result": false,
      "time": 0.03393149375915527,
      "error": null
    },
    "assert find_peak([3, 4, 25, 4, 2, 4], 10) == 2": {
      "result": true,
      "time": 0.032181501388549805,
      "error": null
    },
    "assert find_peak([5, 2, 25, 7, 2, 2], 4) == 0": {
      "result": true,
      "time": 0.035547494888305664,
      "error": null
    },
    "assert find_peak([6, 1, 20, 1, 4, 3], 5) == 2": {
      "result": false,
      "time": 0.03819108009338379,
      "error": null
    },
    "assert find_peak([3, 6, 18, 6, 5, 2], 9) == 2": {
      "result": true,
      "time": 0.03314685821533203,
      "error": null
    },
    "assert find_peak([3, 3, 22, 6, 5, 4], 1) == 0": {
      "result": true,
      "time": 0.034421443939208984,
      "error": null
    },
    "assert find_peak([4, 5, 23, 2, 2, 3], 1) == 0": {
      "result": true,
      "time": 0.032961368560791016,
      "error": null
    },
    "assert find_peak([1, 7, 24, 7, 6, 3], 10) == 2": {
      "result": true,
      "time": 0.03560781478881836,
      "error": null
    },
    "assert find_peak([3, 5, 22, 6, 3, 3], 5) == 2": {
      "result": true,
      "time": 0.0352177619934082,
      "error": null
    },
    "assert find_peak([1, 1, 25, 5, 5, 3], 8) == 2": {
      "result": false,
      "time": 0.03478384017944336,
      "error": null
    },
    "assert find_peak([5, 1, 15, 8, 2, 5], 3) == 0": {
      "result": true,
      "time": 0.035153865814208984,
      "error": null
    },
    "assert find_peak([5, 1, 16, 9, 5, 4], 9) == 0": {
      "result": true,
      "time": 0.03563094139099121,
      "error": null
    },
    "assert find_peak([3, 7, 16, 9, 4, 5], 10) == 2": {
      "result": true,
      "time": 0.042256832122802734,
      "error": null
    },
    "assert find_peak([1, 1, 17, 9, 5, 3], 8) == 2": {
      "result": false,
      "time": 0.042238712310791016,
      "error": null
    },
    "assert find_peak([3, 6, 19, 8, 2, 5], 3) == 2": {
      "result": true,
      "time": 0.038173675537109375,
      "error": null
    },
    "assert find_peak([1, 1, 18, 1, 4, 5], 6) == 2": {
      "result": false,
      "time": 0.04115009307861328,
      "error": null
    },
    "assert find_peak([5, 1, 21, 9, 2, 3], 7) == 0": {
      "result": true,
      "time": 0.03280353546142578,
      "error": null
    },
    "assert find_peak([3, 3, 17, 2, 2, 5], 1) == 0": {
      "result": true,
      "time": 0.036634206771850586,
      "error": null
    },
    "assert find_peak([1, 4, 17, 8, 2, 5], 4) == 2": {
      "result": true,
      "time": 0.04044151306152344,
      "error": null
    },
    "assert find_peak([4, 2, 19, 6, 2, 2], 6) == 2": {
      "result": false,
      "time": 0.04078865051269531,
      "error": null
    },
    "assert find_peak([3, 1, 21, 9, 1, 5], 6) == 2": {
      "result": false,
      "time": 0.03586912155151367,
      "error": null
    },
    "assert find_peak([3, 2, 20, 2, 4, 1], 10) == 4": {
      "result": false,
      "time": 0.03733015060424805,
      "error": null
    },
    "assert find_peak([2, 6, 2, 7, 11], 1) == 0": {
      "result": true,
      "time": 0.041516780853271484,
      "error": null
    },
    "assert find_peak([1, 2, 6, 6, 3], 1) == 0": {
      "result": true,
      "time": 0.04196619987487793,
      "error": null
    },
    "assert find_peak([7, 3, 8, 9, 8], 2) == 0": {
      "result": true,
      "time": 0.042244911193847656,
      "error": null
    },
    "assert find_peak([3, 4, 9, 1, 11], 3) == 2": {
      "result": true,
      "time": 0.038642168045043945,
      "error": null
    },
    "assert find_peak([6, 1, 4, 3, 2], 4) == 0": {
      "result": true,
      "time": 0.04355764389038086,
      "error": null
    },
    "assert find_peak([5, 6, 9, 3, 7], 1) == 0": {
      "result": true,
      "time": 0.04111027717590332,
      "error": null
    },
    "assert find_peak([4, 2, 8, 1, 8], 8) == 0": {
      "result": true,
      "time": 0.043851375579833984,
      "error": null
    },
    "assert find_peak([2, 1, 2, 8, 8], 1) == 0": {
      "result": true,
      "time": 0.04684329032897949,
      "error": null
    },
    "assert find_peak([2, 5, 9, 8, 2], 8) == 2": {
      "result": true,
      "time": 0.04340076446533203,
      "error": null
    },
    "assert find_peak([1, 6, 9, 5, 9], 1) == 0": {
      "result": true,
      "time": 0.04025745391845703,
      "error": null
    },
    "assert find_peak([6, 2, 3, 1, 6], 1) == 0": {
      "result": true,
      "time": 0.036879539489746094,
      "error": null
    },
    "assert find_peak([3, 3, 9, 5, 6], 7) == 2": {
      "result": false,
      "time": 0.047148704528808594,
      "error": null
    },
    "assert find_peak([6, 4, 1, 7, 7], 7) == 3": {
      "result": false,
      "time": 0.03724169731140137,
      "error": null
    },
    "assert find_peak([6, 6, 9, 4, 1], 8) == 2": {
      "result": false,
      "time": 0.04184603691101074,
      "error": null
    },
    "assert find_peak([5, 5, 6, 6, 10], 1) == 0": {
      "result": true,
      "time": 0.04234027862548828,
      "error": null
    },
    "assert find_peak([2, 7, 6, 9, 4], 2) == 1": {
      "result": true,
      "time": 0.03867769241333008,
      "error": null
    },
    "assert find_peak([2, 5, 6, 2, 6], 5) == 2": {
      "result": true,
      "time": 0.03969621658325195,
      "error": null
    },
    "assert find_peak([1, 8, 6, 9, 6], 10) == 1": {
      "result": true,
      "time": 0.033841609954833984,
      "error": null
    },
    "assert find_peak([5, 4, 8, 6, 5], 5) == 2": {
      "result": false,
      "time": 0.03779006004333496,
      "error": null
    },
    "assert find_peak([4, 8, 1, 2, 2], 4) == 1": {
      "result": true,
      "time": 0.03769946098327637,
      "error": null
    },
    "assert find_peak([2, 1, 4, 8, 2], 3) == 0": {
      "result": true,
      "time": 0.04058265686035156,
      "error": null
    },
    "assert find_peak([6, 5, 3, 10, 1], 7) == 3": {
      "result": false,
      "time": 0.04556989669799805,
      "error": null
    },
    "assert find_peak([1, 7, 3, 4, 7], 2) == 1": {
      "result": true,
      "time": 0.036093950271606445,
      "error": null
    },
    "assert find_peak([3, 1, 5, 10, 9], 5) == 3": {
      "result": false,
      "time": 0.0367128849029541,
      "error": null
    },
    "assert find_peak([2, 6, 6, 9, 6], 2) == 1": {
      "result": true,
      "time": 0.03776907920837402,
      "error": null
    },
    "assert find_peak([2, 6, 1, 4, 4], 3) == 1": {
      "result": true,
      "time": 0.033588409423828125,
      "error": null
    },
    "assert find_peak([1, 4, 4, 6, 1], 6) == 3": {
      "result": false,
      "time": 0.03528714179992676,
      "error": null
    },
    "assert find_peak([5, 7, 1, 2, 11], 2) == 1": {
      "result": true,
      "time": 0.04418373107910156,
      "error": null
    },
    "assert find_peak([5, 3, 2, 9, 4], 6) == 0": {
      "result": true,
      "time": 0.03450465202331543,
      "error": null
    },
    "assert find_peak([1, 1, 6, 8, 3], 2) == 0": {
      "result": true,
      "time": 0.03656935691833496,
      "error": null
    },
    "assert find_peak([6, 6, 6, 10, 1], 10) == 1": {
      "result": false,
      "time": 0.04426741600036621,
      "error": null
    },
    "assert find_peak([1, 4, 2, 5, 1], 10) == 1": {
      "result": true,
      "time": 0.045907020568847656,
      "error": null
    },
    "assert find_peak([1, 6, 5, 7, 5], 1) == 0": {
      "result": true,
      "time": 0.038897037506103516,
      "error": null
    },
    "assert find_peak([9, 13, 9, 17, 17, 18], 3) == 1": {
      "result": true,
      "time": 0.03717541694641113,
      "error": null
    },
    "assert find_peak([9, 6, 16, 9, 13, 11], 6) == 2": {
      "result": false,
      "time": 0.03498530387878418,
      "error": null
    },
    "assert find_peak([12, 7, 7, 17, 11, 10], 9) == 0": {
      "result": true,
      "time": 0.036450862884521484,
      "error": null
    },
    "assert find_peak([6, 8, 11, 16, 14, 10], 6) == 3": {
      "result": true,
      "time": 0.032779693603515625,
      "error": null
    },
    "assert find_peak([5, 11, 6, 10, 19, 16], 10) == 4": {
      "result": false,
      "time": 0.033356428146362305,
      "error": null
    },
    "assert find_peak([6, 4, 15, 14, 15, 14], 5) == 2": {
      "result": false,
      "time": 0.032608985900878906,
      "error": null
    },
    "assert find_peak([4, 8, 8, 11, 15, 12], 4) == 1": {
      "result": true,
      "time": 0.03232455253601074,
      "error": null
    },
    "assert find_peak([5, 11, 8, 17, 14, 16], 2) == 1": {
      "result": true,
      "time": 0.03243398666381836,
      "error": null
    },
    "assert find_peak([6, 6, 9, 8, 11, 18], 5) == 2": {
      "result": false,
      "time": 0.03703188896179199,
      "error": null
    },
    "assert find_peak([5, 9, 11, 9, 16, 13], 6) == 2": {
      "result": true,
      "time": 0.03841066360473633,
      "error": null
    },
    "assert find_peak([6, 11, 16, 13, 12, 13], 4) == 2": {
      "result": true,
      "time": 0.03986215591430664,
      "error": null
    },
    "assert find_peak([13, 4, 14, 17, 11, 20], 6) == 3": {
      "result": false,
      "time": 0.041526079177856445,
      "error": null
    },
    "assert find_peak([6, 12, 10, 9, 9, 19], 1) == 0": {
      "result": true,
      "time": 0.03486776351928711,
      "error": null
    },
    "assert find_peak([6, 13, 16, 15, 11, 11], 1) == 0": {
      "result": true,
      "time": 0.032494306564331055,
      "error": null
    },
    "assert find_peak([11, 12, 12, 14, 12, 13], 2) == 1": {
      "result": true,
      "time": 0.03490638732910156,
      "error": null
    },
    "assert find_peak([8, 4, 14, 13, 17, 18], 2) == 0": {
      "result": true,
      "time": 0.034245967864990234,
      "error": null
    },
    "assert find_peak([11, 12, 9, 13, 16, 13], 9) == 4": {
      "result": false,
      "time": 0.027943134307861328,
      "error": null
    },
    "assert find_peak([13, 8, 9, 9, 15, 10], 7) == 4": {
      "result": false,
      "time": 0.03449845314025879,
      "error": null
    },
    "assert find_peak([7, 5, 14, 17, 15, 11], 2) == 0": {
      "result": true,
      "time": 0.03731417655944824,
      "error": null
    },
    "assert find_peak([13, 11, 7, 17, 11, 18], 8) == 3": {
      "result": false,
      "time": 0.03515958786010742,
      "error": null
    },
    "assert find_peak([6, 14, 15, 13, 12, 14], 4) == 2": {
      "result": true,
      "time": 0.04062771797180176,
      "error": null
    },
    "assert find_peak([12, 4, 9, 7, 9, 19], 3) == 0": {
      "result": true,
      "time": 0.03440737724304199,
      "error": null
    },
    "assert find_peak([4, 9, 16, 17, 16, 20], 8) == 3": {
      "result": true,
      "time": 0.03513908386230469,
      "error": null
    },
    "assert find_peak([4, 12, 13, 11, 10, 20], 3) == 2": {
      "result": true,
      "time": 0.040376901626586914,
      "error": null
    },
    "assert find_peak([10, 8, 9, 8, 19, 18], 2) == 0": {
      "result": true,
      "time": 0.03783226013183594,
      "error": null
    },
    "assert find_peak([11, 10, 9, 14, 17, 13], 11) == 0": {
      "result": true,
      "time": 0.03501725196838379,
      "error": null
    },
    "assert find_peak([10, 6, 8, 14, 15, 16], 1) == 0": {
      "result": true,
      "time": 0.03682303428649902,
      "error": null
    },
    "assert find_peak([10, 7, 12, 7, 10, 10], 6) == 2": {
      "result": false,
      "time": 0.03447461128234863,
      "error": null
    },
    "assert find_peak([10, 7, 15, 13, 17, 14], 8) == 0": {
      "result": true,
      "time": 0.030730009078979492,
      "error": null
    },
    "assert find_peak([6, 4, 9, 13, 11, 12], 4) == 0": {
      "result": true,
      "time": 0.038504838943481445,
      "error": null
    },
    "assert find_peak([13, 6, 10, 7, 13, 15], 8) == 0": {
      "result": true,
      "time": 0.03471183776855469,
      "error": null
    },
    "assert find_peak([9, 10, 16, 17, 11, 12], 8) == 3": {
      "result": true,
      "time": 0.04011225700378418,
      "error": null
    },
    "assert find_peak([3, 8, 8, 10, 16, 17], 2) == 1": {
      "result": true,
      "time": 0.03226613998413086,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.7156862745098039,
  "general_error": "",
  "has_testcase_error": false
}