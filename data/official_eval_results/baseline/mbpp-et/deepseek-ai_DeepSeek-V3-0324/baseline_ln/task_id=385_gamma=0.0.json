{
  "code": "def get_perrin(n):\n    if n == 0:\n        return 3\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 2\n    else:\n        return get_perrin(n - 2) + get_perrin(n - 3)",
  "results": {
    "assert get_perrin(9) == 12": {
      "result": true,
      "time": 0.04047226905822754,
      "error": null
    },
    "assert get_perrin(4) == 2": {
      "result": true,
      "time": 0.04480576515197754,
      "error": null
    },
    "assert get_perrin(6) == 5": {
      "result": true,
      "time": 0.04243922233581543,
      "error": null
    },
    "assert get_perrin(7) == 7": {
      "result": true,
      "time": 0.0469052791595459,
      "error": null
    },
    "assert get_perrin(8) == 10": {
      "result": true,
      "time": 0.04083728790283203,
      "error": null
    },
    "assert get_perrin(11) == 22": {
      "result": true,
      "time": 0.040546417236328125,
      "error": null
    },
    "assert get_perrin(14) == 51": {
      "result": true,
      "time": 0.04100799560546875,
      "error": null
    },
    "assert get_perrin(10) == 17": {
      "result": true,
      "time": 0.04310798645019531,
      "error": null
    },
    "assert get_perrin(13) == 39": {
      "result": true,
      "time": 0.04755806922912598,
      "error": null
    },
    "assert get_perrin(5) == 5": {
      "result": true,
      "time": 0.050676584243774414,
      "error": null
    },
    "assert get_perrin(2) == 2": {
      "result": true,
      "time": 0.04683947563171387,
      "error": null
    },
    "assert get_perrin(3) == 3": {
      "result": true,
      "time": 0.047518253326416016,
      "error": null
    },
    "assert get_perrin(1) == 0": {
      "result": true,
      "time": 0.057927846908569336,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}