{
  "code": "def zero_count(nums):\n    count = nums.count(0)\n    total = len(nums)\n    ratio = count / total if total != 0 else 0.0\n    return round(ratio, 2)",
  "results": {
    "assert zero_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8])==0.15": {
      "result": true,
      "time": 0.03903675079345703,
      "error": null
    },
    "assert zero_count([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8])==0.00": {
      "result": true,
      "time": 0.04220986366271973,
      "error": null
    },
    "assert zero_count([2, 4, -6, -9, 11, -12, 14, -5, 17])==0.00": {
      "result": true,
      "time": 0.03351712226867676,
      "error": null
    },
    "assert zero_count([1, 4, 2, -3, -5, 7, 5, -6, 1, 8, 3, 8, 9]) == 0.0": {
      "result": true,
      "time": 0.03787422180175781,
      "error": null
    },
    "assert zero_count([5, 5, 5, -1, -6, 11, 1, -1, -2, 5, 8, 4, 7]) == 0.0": {
      "result": true,
      "time": 0.03721356391906738,
      "error": null
    },
    "assert zero_count([4, 6, 7, -1, -9, 1, 1, -8, 3, 6, 8, 5, 4]) == 0.0": {
      "result": true,
      "time": 0.03717780113220215,
      "error": null
    },
    "assert zero_count([1, 1, 4, 2, -1, 10, 1, -2, 2, 6, 3, 1, 3]) == 0.0": {
      "result": true,
      "time": 0.037270307540893555,
      "error": null
    },
    "assert zero_count([4, 3, 5, 3, -4, 8, 3, 2, -2, 5, 5, 3, 9]) == 0.0": {
      "result": true,
      "time": 0.03384113311767578,
      "error": null
    },
    "assert zero_count([3, 2, 6, -3, -5, 1, 3, -1, -3, 5, 3, 8, 6]) == 0.0": {
      "result": true,
      "time": 0.04196596145629883,
      "error": null
    },
    "assert zero_count([4, 5, 1, -6, -2, 5, 5, -8, 1, 7, 4, 6, 4]) == 0.0": {
      "result": true,
      "time": 0.03419041633605957,
      "error": null
    },
    "assert zero_count([2, 1, 7, -6, -10, 9, 2, -5, -4, 4, 4, 11, 4]) == 0.0": {
      "result": true,
      "time": 0.04070687294006348,
      "error": null
    },
    "assert zero_count([4, 5, 2, 2, -1, 7, 2, -7, 3, 3, 8, 6, 4]) == 0.0": {
      "result": true,
      "time": 0.03833961486816406,
      "error": null
    },
    "assert zero_count([2, 6, 1, 1, 0, 5, 5, -3, 3, 4, 4, 4, 12]) == 0.08": {
      "result": true,
      "time": 0.04178309440612793,
      "error": null
    },
    "assert zero_count([4, 5, 5, -3, 0, 4, 3, -8, -5, 2, 5, 9, 9]) == 0.08": {
      "result": true,
      "time": 0.0319972038269043,
      "error": null
    },
    "assert zero_count([1, 2, 6, 0, -5, 7, 3, -3, -6, 3, 8, 4, 5]) == 0.08": {
      "result": true,
      "time": 0.036315202713012695,
      "error": null
    },
    "assert zero_count([4, 5, 5, -6, -1, 10, 1, -4, -2, 7, 1, 3, 5]) == 0.0": {
      "result": true,
      "time": 0.03739809989929199,
      "error": null
    },
    "assert zero_count([5, 2, 4, -5, -10, 2, 5, -1, -7, 1, 5, 10, 6]) == 0.0": {
      "result": true,
      "time": 0.03433871269226074,
      "error": null
    },
    "assert zero_count([5, 3, 4, -3, -5, 2, 4, -1, -6, 5, 3, 7, 4]) == 0.0": {
      "result": true,
      "time": 0.03476738929748535,
      "error": null
    },
    "assert zero_count([3, 4, 6, -6, 0, 8, 1, -8, 3, 8, 8, 9, 11]) == 0.08": {
      "result": true,
      "time": 0.03331184387207031,
      "error": null
    },
    "assert zero_count([2, 4, 4, -2, -6, 3, 1, -6, -1, 2, 4, 6, 13]) == 0.0": {
      "result": true,
      "time": 0.03325700759887695,
      "error": null
    },
    "assert zero_count([4, 2, 2, 4, -8, 1, 5, 2, -5, 6, 9, 1, 11]) == 0.0": {
      "result": true,
      "time": 0.0324704647064209,
      "error": null
    },
    "assert zero_count([1, 5, 3, 0, -10, 6, 3, -8, -3, 5, 5, 7, 10]) == 0.08": {
      "result": true,
      "time": 0.03695392608642578,
      "error": null
    },
    "assert zero_count([2, 3, 6, 3, -8, 4, 4, -3, -3, 7, 4, 9, 9]) == 0.0": {
      "result": true,
      "time": 0.04081535339355469,
      "error": null
    },
    "assert zero_count([4, 1, 3, -2, -9, 3, 3, 2, -1, 4, 3, 8, 11]) == 0.0": {
      "result": true,
      "time": 0.03473043441772461,
      "error": null
    },
    "assert zero_count([3, 3, 2, -3, -10, 8, 3, -8, 0, 7, 1, 2, 8]) == 0.08": {
      "result": true,
      "time": 0.03223991394042969,
      "error": null
    },
    "assert zero_count([2, 2, 3, 1, -3, 2, 1, -8, 3, 6, 6, 6, 10]) == 0.0": {
      "result": true,
      "time": 0.03456282615661621,
      "error": null
    },
    "assert zero_count([3, 4, 7, 2, -6, 6, 1, -8, 0, 1, 3, 5, 6]) == 0.08": {
      "result": true,
      "time": 0.03316307067871094,
      "error": null
    },
    "assert zero_count([1, 5, 1, -5, -8, 11, 1, -5, -5, 5, 1, 5, 11]) == 0.0": {
      "result": true,
      "time": 0.03235602378845215,
      "error": null
    },
    "assert zero_count([4, 1, 4, -6, -9, 4, 4, -3, -7, 3, 5, 7, 3]) == 0.0": {
      "result": true,
      "time": 0.030477046966552734,
      "error": null
    },
    "assert zero_count([5, 4, 4, 4, -10, 3, 1, -5, -3, 2, 1, 4, 11]) == 0.0": {
      "result": true,
      "time": 0.030550479888916016,
      "error": null
    },
    "assert zero_count([5, 1, 5, -4, -1, 8, 2, -7, -7, 7, 2, 5, 6]) == 0.0": {
      "result": true,
      "time": 0.03673744201660156,
      "error": null
    },
    "assert zero_count([1, 6, 7, -4, -4, 10, 3, -2, 1, 7, 8, 3, 10]) == 0.0": {
      "result": true,
      "time": 0.03277015686035156,
      "error": null
    },
    "assert zero_count([3, 5, 1, -2, -6, 10, 4, -5, -2, 8, 5, 10, 7]) == 0.0": {
      "result": true,
      "time": 0.0330204963684082,
      "error": null
    },
    "assert zero_count([3, 6, 6, 4, -4, 11, 1, 1, -5, 1, 9, 11, 4]) == 0.0": {
      "result": true,
      "time": 0.03413248062133789,
      "error": null
    },
    "assert zero_count([3, 5, 6, 4, -6, 4, 5, -7, 1, 3, 1, 4, 3]) == 0.0": {
      "result": true,
      "time": 0.0367431640625,
      "error": null
    },
    "assert zero_count([4, 5, 7, 4, -3, 9, 2, 1, 3, 7, 2, 1, 9]) == 0.0": {
      "result": true,
      "time": 0.0341486930847168,
      "error": null
    },
    "assert zero_count([2, 4, 6, -5, -1, 11, 2, -8, -1, 1, 8, 8, 10]) == 0.0": {
      "result": true,
      "time": 0.03190445899963379,
      "error": null
    },
    "assert zero_count([7, 2, 4, -5, -1, 1, 3, -3, 1, 1, 9, 2, 11]) == 0.0": {
      "result": true,
      "time": 0.0371396541595459,
      "error": null
    },
    "assert zero_count([5, 1, 5, 2, -6, 10, 6, -1, 1, 8, 2, 1, 3]) == 0.0": {
      "result": true,
      "time": 0.033860206604003906,
      "error": null
    },
    "assert zero_count([6, 6, 7, 4, -6, 2, 2, 2, -5, 1, 6, 3, 13]) == 0.0": {
      "result": true,
      "time": 0.03242993354797363,
      "error": null
    },
    "assert zero_count([1, 5, 5, 4, -1, 9, 9, 1, 2, 6, 1, 9, 10]) == 0.0": {
      "result": true,
      "time": 0.03841423988342285,
      "error": null
    },
    "assert zero_count([4, 5, 7, -5, -10, 10, 1, 0, -3, 1, 2, 4, 12]) == 0.08": {
      "result": true,
      "time": 0.03356504440307617,
      "error": null
    },
    "assert zero_count([6, 2, 6, 1, -3, 7, 3, -8, 2, 2, 2, 4, 11]) == 0.0": {
      "result": true,
      "time": 0.03731250762939453,
      "error": null
    },
    "assert zero_count([5, 6, 3, 0, -6, 1, 9, -4, -4, 4, 5, 3, 3]) == 0.08": {
      "result": true,
      "time": 0.0359647274017334,
      "error": null
    },
    "assert zero_count([4, 2, 7, -3, -1, 7, 8, 1, -7, 5, 4, 8, 4]) == 0.0": {
      "result": true,
      "time": 0.03448891639709473,
      "error": null
    },
    "assert zero_count([6, 1, 5, 3, -3, 11, 4, -5, 2, 1, 1, 3, 12]) == 0.0": {
      "result": true,
      "time": 0.03386116027832031,
      "error": null
    },
    "assert zero_count([1, 3, 5, -2, -2, 8, 8, -7, -4, 3, 3, 3, 3]) == 0.0": {
      "result": true,
      "time": 0.0345301628112793,
      "error": null
    },
    "assert zero_count([2, 4, 6, -3, -6, 4, 1, 1, -6, 1, 1, 3, 11]) == 0.0": {
      "result": true,
      "time": 0.029851436614990234,
      "error": null
    },
    "assert zero_count([1, 5, 6, 1, -7, 5, 7, -5, -2, 2, 7, 4, 5]) == 0.0": {
      "result": true,
      "time": 0.03314828872680664,
      "error": null
    },
    "assert zero_count([6, 6, 3, 0, -1, 11, 2, 1, 0, 4, 3, 1, 12]) == 0.15": {
      "result": true,
      "time": 0.038495540618896484,
      "error": null
    },
    "assert zero_count([7, 4, 6, -1, -10, 3, 7, -1, -1, 3, 5, 2, 13]) == 0.0": {
      "result": true,
      "time": 0.0350337028503418,
      "error": null
    },
    "assert zero_count([6, 4, 5, 0, -8, 1, 8, 0, -1, 2, 7, 2, 4]) == 0.15": {
      "result": true,
      "time": 0.03705859184265137,
      "error": null
    },
    "assert zero_count([7, 2, 4, -4, -4, 4, 1, -6, -3, 3, 5, 6, 3]) == 0.0": {
      "result": true,
      "time": 0.03834080696105957,
      "error": null
    },
    "assert zero_count([3, 5, 7, -2, -8, 3, 4, -1, 1, 1, 9, 9, 13]) == 0.0": {
      "result": true,
      "time": 0.0330202579498291,
      "error": null
    },
    "assert zero_count([4, 4, 4, -5, -9, 11, 6, 0, 2, 1, 4, 6, 6]) == 0.08": {
      "result": true,
      "time": 0.029442548751831055,
      "error": null
    },
    "assert zero_count([5, 3, 6, 0, -6, 10, 8, -4, 0, 6, 4, 6, 12]) == 0.15": {
      "result": true,
      "time": 0.03187990188598633,
      "error": null
    },
    "assert zero_count([7, 1, 3, -4, -2, 6, 8, -4, -1, 1, 8, 6, 13]) == 0.0": {
      "result": true,
      "time": 0.02747058868408203,
      "error": null
    },
    "assert zero_count([3, 3, 4, 1, -3, 6, 6, -6, 1, 8, 6, 8, 7]) == 0.0": {
      "result": true,
      "time": 0.03271174430847168,
      "error": null
    },
    "assert zero_count([2, 4, 7, -4, -7, 6, 1, -1, 1, 5, 4, 2, 4]) == 0.0": {
      "result": true,
      "time": 0.030076265335083008,
      "error": null
    },
    "assert zero_count([6, 2, 5, -3, -6, 10, 4, -2, -1, 8, 5, 1, 7]) == 0.0": {
      "result": true,
      "time": 0.03560638427734375,
      "error": null
    },
    "assert zero_count([7, 5, 2, -2, -2, 1, 6, 2, 2, 3, 9, 2, 4]) == 0.0": {
      "result": true,
      "time": 0.037665367126464844,
      "error": null
    },
    "assert zero_count([3, 5, 4, -4, -7, 5, 8, 0, -3, 8, 5, 6, 9]) == 0.08": {
      "result": true,
      "time": 0.03379368782043457,
      "error": null
    },
    "assert zero_count([2, 1, 4, 3, -6, 2, 1, 0, -6, 8, 2, 7, 6]) == 0.08": {
      "result": true,
      "time": 0.030944347381591797,
      "error": null
    },
    "assert zero_count([5, 3, 6, 3, -2, 11, 3, -4, -5, 5, 9, 8, 3]) == 0.0": {
      "result": true,
      "time": 0.03690385818481445,
      "error": null
    },
    "assert zero_count([7, 6, 4, -5, -2, 4, 8, -1, -2, 2, 9, 4, 10]) == 0.0": {
      "result": true,
      "time": 0.03219747543334961,
      "error": null
    },
    "assert zero_count([1, 6, 4, -3, -9, 11, 2, -7, 1, 6, 7, 9, 9]) == 0.0": {
      "result": true,
      "time": 0.029073715209960938,
      "error": null
    },
    "assert zero_count([6, 6, 3, -3, -10, 1, 2, -6, 2, 3, 2, 1, 4]) == 0.0": {
      "result": true,
      "time": 0.034172773361206055,
      "error": null
    },
    "assert zero_count([7, 1, 3, 3, -5, 8, 1, -7, 0, 7, 3, 10, 8]) == 0.08": {
      "result": true,
      "time": 0.03892350196838379,
      "error": null
    },
    "assert zero_count([5, 5, 1, 4, -5, 3, 9, -4, -7, 2, 1, 7, 10]) == 0.0": {
      "result": true,
      "time": 0.03780102729797363,
      "error": null
    },
    "assert zero_count([2, 9, -6, -14, 10, -9, 9, -6, 12]) == 0.0": {
      "result": true,
      "time": 0.04018568992614746,
      "error": null
    },
    "assert zero_count([1, 1, -10, -10, 6, -12, 10, -4, 21]) == 0.0": {
      "result": true,
      "time": 0.0343775749206543,
      "error": null
    },
    "assert zero_count([7, 3, -11, -7, 14, -12, 10, -8, 22]) == 0.0": {
      "result": true,
      "time": 0.03540349006652832,
      "error": null
    },
    "assert zero_count([4, 8, -7, -13, 11, -8, 19, -5, 15]) == 0.0": {
      "result": true,
      "time": 0.03492426872253418,
      "error": null
    },
    "assert zero_count([7, 5, -11, -4, 8, -11, 18, -3, 18]) == 0.0": {
      "result": true,
      "time": 0.03189802169799805,
      "error": null
    },
    "assert zero_count([6, 1, -1, -4, 6, -13, 13, -8, 14]) == 0.0": {
      "result": true,
      "time": 0.031804561614990234,
      "error": null
    },
    "assert zero_count([2, 6, -4, -8, 8, -10, 17, -2, 18]) == 0.0": {
      "result": true,
      "time": 0.03256845474243164,
      "error": null
    },
    "assert zero_count([2, 7, -8, -14, 13, -11, 16, -9, 18]) == 0.0": {
      "result": true,
      "time": 0.03525042533874512,
      "error": null
    },
    "assert zero_count([2, 9, -7, -7, 8, -17, 18, -6, 15]) == 0.0": {
      "result": true,
      "time": 0.03553128242492676,
      "error": null
    },
    "assert zero_count([5, 5, -8, -14, 10, -10, 10, -5, 12]) == 0.0": {
      "result": true,
      "time": 0.03343605995178223,
      "error": null
    },
    "assert zero_count([4, 1, -7, -8, 13, -12, 9, -5, 13]) == 0.0": {
      "result": true,
      "time": 0.034033775329589844,
      "error": null
    },
    "assert zero_count([1, 4, -10, -5, 7, -8, 11, -7, 13]) == 0.0": {
      "result": true,
      "time": 0.03259754180908203,
      "error": null
    },
    "assert zero_count([1, 4, -11, -7, 9, -9, 14, -4, 21]) == 0.0": {
      "result": true,
      "time": 0.036386966705322266,
      "error": null
    },
    "assert zero_count([6, 5, -9, -12, 16, -17, 12, -3, 12]) == 0.0": {
      "result": true,
      "time": 0.03279852867126465,
      "error": null
    },
    "assert zero_count([6, 5, -8, -4, 8, -9, 19, -8, 13]) == 0.0": {
      "result": true,
      "time": 0.03815317153930664,
      "error": null
    },
    "assert zero_count([2, 8, -5, -13, 9, -17, 10, -3, 20]) == 0.0": {
      "result": true,
      "time": 0.03784990310668945,
      "error": null
    },
    "assert zero_count([1, 9, -6, -9, 9, -8, 17, -8, 21]) == 0.0": {
      "result": true,
      "time": 0.030664443969726562,
      "error": null
    },
    "assert zero_count([4, 1, -8, -11, 10, -12, 17, -6, 17]) == 0.0": {
      "result": true,
      "time": 0.032894134521484375,
      "error": null
    },
    "assert zero_count([2, 6, -7, -14, 10, -11, 9, -4, 16]) == 0.0": {
      "result": true,
      "time": 0.03493547439575195,
      "error": null
    },
    "assert zero_count([4, 7, -6, -13, 14, -8, 17, -8, 17]) == 0.0": {
      "result": true,
      "time": 0.035135507583618164,
      "error": null
    },
    "assert zero_count([3, 4, -5, -7, 15, -17, 16, -3, 22]) == 0.0": {
      "result": true,
      "time": 0.03848075866699219,
      "error": null
    },
    "assert zero_count([2, 3, -8, -10, 7, -13, 19, -5, 18]) == 0.0": {
      "result": true,
      "time": 0.04413270950317383,
      "error": null
    },
    "assert zero_count([6, 3, -5, -14, 16, -10, 13, -7, 13]) == 0.0": {
      "result": true,
      "time": 0.02916717529296875,
      "error": null
    },
    "assert zero_count([6, 8, -10, -11, 9, -17, 14, -8, 12]) == 0.0": {
      "result": true,
      "time": 0.03311276435852051,
      "error": null
    },
    "assert zero_count([7, 5, -6, -4, 8, -9, 15, -2, 13]) == 0.0": {
      "result": true,
      "time": 0.04047536849975586,
      "error": null
    },
    "assert zero_count([1, 4, -6, -14, 10, -13, 14, -10, 20]) == 0.0": {
      "result": true,
      "time": 0.03201460838317871,
      "error": null
    },
    "assert zero_count([6, 1, -1, -13, 12, -10, 16, -4, 19]) == 0.0": {
      "result": true,
      "time": 0.03750443458557129,
      "error": null
    },
    "assert zero_count([6, 2, -1, -4, 10, -12, 13, -9, 22]) == 0.0": {
      "result": true,
      "time": 0.04156947135925293,
      "error": null
    },
    "assert zero_count([6, 9, -5, -11, 14, -7, 17, -9, 12]) == 0.0": {
      "result": true,
      "time": 0.03224682807922363,
      "error": null
    },
    "assert zero_count([1, 7, -6, -11, 10, -15, 18, -6, 22]) == 0.0": {
      "result": true,
      "time": 0.04071664810180664,
      "error": null
    },
    "assert zero_count([3, 9, -6, -8, 15, -9, 11, -7, 12]) == 0.0": {
      "result": true,
      "time": 0.0332789421081543,
      "error": null
    },
    "assert zero_count([2, 9, -4, -7, 11, -14, 16, -6, 22]) == 0.0": {
      "result": true,
      "time": 0.03578042984008789,
      "error": null
    },
    "assert zero_count([3, 9, -8, -10, 13, -16, 10, 0, 22]) == 0.11": {
      "result": true,
      "time": 0.04535961151123047,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}