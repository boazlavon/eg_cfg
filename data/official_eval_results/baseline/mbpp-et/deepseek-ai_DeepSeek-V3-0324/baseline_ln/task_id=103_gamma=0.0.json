{
  "code": "def eulerian_num(n, m):\n    if m >= n or n == 0:\n        return 0\n    if m == 0:\n        return 1\n    \n    # Create a DP table initialized to 0\n    dp = [[0] * (m + 1) for _ in range(n + 1)]\n    \n    # Base cases\n    for i in range(1, n + 1):\n        dp[i][0] = 1\n    \n    for i in range(2, n + 1):\n        for j in range(1, m + 1):\n            dp[i][j] = (i - j) * dp[i-1][j-1] + (j + 1) * dp[i-1][j]\n    \n    return dp[n][m]",
  "results": {
    "assert eulerian_num(3, 1) == 4": {
      "result": true,
      "time": 0.04204607009887695,
      "error": null
    },
    "assert eulerian_num(4, 1) == 11": {
      "result": true,
      "time": 0.03569293022155762,
      "error": null
    },
    "assert eulerian_num(5, 3) == 26": {
      "result": true,
      "time": 0.036371707916259766,
      "error": null
    },
    "assert eulerian_num(4, 3) == 1": {
      "result": true,
      "time": 0.04412531852722168,
      "error": null
    },
    "assert eulerian_num(7, 3) == 2416": {
      "result": true,
      "time": 0.03799581527709961,
      "error": null
    },
    "assert eulerian_num(1, 3) == 0": {
      "result": true,
      "time": 0.0441431999206543,
      "error": null
    },
    "assert eulerian_num(7, 2) == 1191": {
      "result": true,
      "time": 0.03565573692321777,
      "error": null
    },
    "assert eulerian_num(3, 4) == 0": {
      "result": true,
      "time": 0.048455238342285156,
      "error": null
    },
    "assert eulerian_num(4, 4) == 0": {
      "result": true,
      "time": 0.04426932334899902,
      "error": null
    },
    "assert eulerian_num(2, 2) == 0": {
      "result": true,
      "time": 0.04260516166687012,
      "error": null
    },
    "assert eulerian_num(6, 1) == 57": {
      "result": true,
      "time": 0.039880990982055664,
      "error": null
    },
    "assert eulerian_num(5, 2) == 66": {
      "result": true,
      "time": 0.041797637939453125,
      "error": null
    },
    "assert eulerian_num(8, 5) == 4293": {
      "result": true,
      "time": 0.040930986404418945,
      "error": null
    },
    "assert eulerian_num(6, 2) == 302": {
      "result": true,
      "time": 0.04782390594482422,
      "error": null
    },
    "assert eulerian_num(7, 4) == 1191": {
      "result": true,
      "time": 0.039910316467285156,
      "error": null
    },
    "assert eulerian_num(7, 1) == 120": {
      "result": true,
      "time": 0.04766845703125,
      "error": null
    },
    "assert eulerian_num(5, 5) == 0": {
      "result": true,
      "time": 0.03942418098449707,
      "error": null
    },
    "assert eulerian_num(6, 5) == 1": {
      "result": true,
      "time": 0.04029440879821777,
      "error": null
    },
    "assert eulerian_num(6, 3) == 302": {
      "result": true,
      "time": 0.05132126808166504,
      "error": null
    },
    "assert eulerian_num(5, 4) == 1": {
      "result": true,
      "time": 0.04249382019042969,
      "error": null
    },
    "assert eulerian_num(8, 3) == 15619": {
      "result": true,
      "time": 0.04122328758239746,
      "error": null
    },
    "assert eulerian_num(1, 6) == 0": {
      "result": true,
      "time": 0.039295196533203125,
      "error": null
    },
    "assert eulerian_num(2, 5) == 0": {
      "result": true,
      "time": 0.0448300838470459,
      "error": null
    },
    "assert eulerian_num(4, 5) == 0": {
      "result": true,
      "time": 0.04050612449645996,
      "error": null
    },
    "assert eulerian_num(1, 1) == 0": {
      "result": true,
      "time": 0.0444948673248291,
      "error": null
    },
    "assert eulerian_num(8, 2) == 4293": {
      "result": true,
      "time": 0.036836862564086914,
      "error": null
    },
    "assert eulerian_num(2, 4) == 0": {
      "result": true,
      "time": 0.04265618324279785,
      "error": null
    },
    "assert eulerian_num(1, 4) == 0": {
      "result": true,
      "time": 0.04705977439880371,
      "error": null
    },
    "assert eulerian_num(9, 3) == 88234": {
      "result": true,
      "time": 0.040463924407958984,
      "error": null
    },
    "assert eulerian_num(9, 2) == 14608": {
      "result": true,
      "time": 0.038839101791381836,
      "error": null
    },
    "assert eulerian_num(9, 6) == 14608": {
      "result": true,
      "time": 0.046167850494384766,
      "error": null
    },
    "assert eulerian_num(3, 6) == 0": {
      "result": true,
      "time": 0.04357576370239258,
      "error": null
    },
    "assert eulerian_num(1, 2) == 0": {
      "result": true,
      "time": 0.04283261299133301,
      "error": null
    },
    "assert eulerian_num(3, 5) == 0": {
      "result": true,
      "time": 0.042821645736694336,
      "error": null
    },
    "assert eulerian_num(2, 3) == 0": {
      "result": true,
      "time": 0.04077768325805664,
      "error": null
    },
    "assert eulerian_num(8, 6) == 247": {
      "result": true,
      "time": 0.0408177375793457,
      "error": null
    },
    "assert eulerian_num(9, 1) == 502": {
      "result": true,
      "time": 0.0433652400970459,
      "error": null
    },
    "assert eulerian_num(6, 4) == 57": {
      "result": true,
      "time": 0.04072451591491699,
      "error": null
    },
    "assert eulerian_num(5, 1) == 26": {
      "result": true,
      "time": 0.041107177734375,
      "error": null
    },
    "assert eulerian_num(2, 1) == 1": {
      "result": true,
      "time": 0.03825712203979492,
      "error": null
    },
    "assert eulerian_num(2, 6) == 0": {
      "result": true,
      "time": 0.037114858627319336,
      "error": null
    },
    "assert eulerian_num(5, 7) == 0": {
      "result": true,
      "time": 0.03664660453796387,
      "error": null
    },
    "assert eulerian_num(1, 5) == 0": {
      "result": true,
      "time": 0.043648719787597656,
      "error": null
    },
    "assert eulerian_num(10, 1) == 1013": {
      "result": true,
      "time": 0.04088616371154785,
      "error": null
    },
    "assert eulerian_num(6, 7) == 0": {
      "result": true,
      "time": 0.03289937973022461,
      "error": null
    },
    "assert eulerian_num(10, 5) == 1310354": {
      "result": true,
      "time": 0.036869049072265625,
      "error": null
    },
    "assert eulerian_num(2, 8) == 0": {
      "result": true,
      "time": 0.03579092025756836,
      "error": null
    },
    "assert eulerian_num(4, 6) == 0": {
      "result": true,
      "time": 0.036112308502197266,
      "error": null
    },
    "assert eulerian_num(5, 8) == 0": {
      "result": true,
      "time": 0.03732132911682129,
      "error": null
    },
    "assert eulerian_num(10, 8) == 1013": {
      "result": true,
      "time": 0.03245735168457031,
      "error": null
    },
    "assert eulerian_num(8, 1) == 247": {
      "result": true,
      "time": 0.03674745559692383,
      "error": null
    },
    "assert eulerian_num(5, 6) == 0": {
      "result": true,
      "time": 0.03134036064147949,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}