{
  "code": "import math\n\ndef count_Primes_nums(n):\n    if n <= 2:\n        return 0\n    \n    is_prime = [True] * n\n    is_prime[0] = is_prime[1] = False\n    \n    for i in range(2, int(math.sqrt(n)) + 1):\n        if is_prime[i]:\n            for j in range(i*i, n, i):\n                is_prime[j] = False\n    \n    return sum(is_prime)",
  "results": {
    "assert count_Primes_nums(5) == 2": {
      "result": true,
      "time": 0.08888053894042969,
      "error": null
    },
    "assert count_Primes_nums(10) == 4": {
      "result": true,
      "time": 0.08316349983215332,
      "error": null
    },
    "assert count_Primes_nums(100) == 25": {
      "result": true,
      "time": 0.09653735160827637,
      "error": null
    },
    "assert count_Primes_nums(2) == 0": {
      "result": true,
      "time": 0.07810091972351074,
      "error": null
    },
    "assert count_Primes_nums(3) == 1": {
      "result": true,
      "time": 0.07706141471862793,
      "error": null
    },
    "assert count_Primes_nums(9) == 4": {
      "result": true,
      "time": 0.08037686347961426,
      "error": null
    },
    "assert count_Primes_nums(7) == 3": {
      "result": true,
      "time": 0.08191442489624023,
      "error": null
    },
    "assert count_Primes_nums(1) == 0": {
      "result": true,
      "time": 0.0835270881652832,
      "error": null
    },
    "assert count_Primes_nums(8) == 4": {
      "result": true,
      "time": 0.09846186637878418,
      "error": null
    },
    "assert count_Primes_nums(4) == 2": {
      "result": true,
      "time": 0.07610750198364258,
      "error": null
    },
    "assert count_Primes_nums(6) == 3": {
      "result": true,
      "time": 0.08606982231140137,
      "error": null
    },
    "assert count_Primes_nums(15) == 6": {
      "result": true,
      "time": 0.07999777793884277,
      "error": null
    },
    "assert count_Primes_nums(11) == 4": {
      "result": true,
      "time": 0.10832715034484863,
      "error": null
    },
    "assert count_Primes_nums(14) == 6": {
      "result": true,
      "time": 0.0847923755645752,
      "error": null
    },
    "assert count_Primes_nums(13) == 5": {
      "result": true,
      "time": 0.07439637184143066,
      "error": null
    },
    "assert count_Primes_nums(12) == 5": {
      "result": true,
      "time": 0.07930779457092285,
      "error": null
    },
    "assert count_Primes_nums(98) == 25": {
      "result": true,
      "time": 0.07457304000854492,
      "error": null
    },
    "assert count_Primes_nums(99) == 25": {
      "result": true,
      "time": 0.09088253974914551,
      "error": null
    },
    "assert count_Primes_nums(104) == 27": {
      "result": true,
      "time": 0.08135080337524414,
      "error": null
    },
    "assert count_Primes_nums(101) == 25": {
      "result": true,
      "time": 0.07999658584594727,
      "error": null
    },
    "assert count_Primes_nums(103) == 26": {
      "result": true,
      "time": 0.1039283275604248,
      "error": null
    },
    "assert count_Primes_nums(97) == 24": {
      "result": true,
      "time": 0.08345365524291992,
      "error": null
    },
    "assert count_Primes_nums(95) == 24": {
      "result": true,
      "time": 0.07715272903442383,
      "error": null
    },
    "assert count_Primes_nums(96) == 24": {
      "result": true,
      "time": 0.09106111526489258,
      "error": null
    },
    "assert count_Primes_nums(102) == 26": {
      "result": true,
      "time": 0.08770608901977539,
      "error": null
    },
    "assert count_Primes_nums(105) == 27": {
      "result": true,
      "time": 0.08152103424072266,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}