{
  "code": "def bitwise_xor(tup1, tup2):\n    return tuple(a ^ b for a, b in zip(tup1, tup2))",
  "results": {
    "assert bitwise_xor((10, 4, 6, 9), (5, 2, 3, 3)) == (15, 6, 5, 10)": {
      "result": true,
      "time": 0.042792320251464844,
      "error": null
    },
    "assert bitwise_xor((11, 5, 7, 10), (6, 3, 4, 4)) == (13, 6, 3, 14)": {
      "result": true,
      "time": 0.04346609115600586,
      "error": null
    },
    "assert bitwise_xor((12, 6, 8, 11), (7, 4, 5, 6)) == (11, 2, 13, 13)": {
      "result": true,
      "time": 0.04597926139831543,
      "error": null
    },
    "assert bitwise_xor((9, 2, 11, 12), (3, 1, 2, 1)) == (10, 3, 9, 13)": {
      "result": true,
      "time": 0.0437779426574707,
      "error": null
    },
    "assert bitwise_xor((12, 7, 8, 11), (3, 2, 4, 2)) == (15, 5, 12, 9)": {
      "result": true,
      "time": 0.05360913276672363,
      "error": null
    },
    "assert bitwise_xor((9, 2, 6, 8), (2, 5, 6, 8)) == (11, 7, 0, 0)": {
      "result": true,
      "time": 0.05348515510559082,
      "error": null
    },
    "assert bitwise_xor((6, 6, 6, 11), (1, 5, 8, 4)) == (7, 3, 14, 15)": {
      "result": true,
      "time": 0.05563807487487793,
      "error": null
    },
    "assert bitwise_xor((9, 2, 7, 11), (2, 5, 6, 2)) == (11, 7, 1, 9)": {
      "result": true,
      "time": 0.04099607467651367,
      "error": null
    },
    "assert bitwise_xor((12, 7, 6, 12), (1, 7, 6, 2)) == (13, 0, 0, 14)": {
      "result": true,
      "time": 0.04251575469970703,
      "error": null
    },
    "assert bitwise_xor((14, 1, 5, 10), (2, 6, 3, 3)) == (12, 7, 6, 9)": {
      "result": true,
      "time": 0.04292559623718262,
      "error": null
    },
    "assert bitwise_xor((9, 5, 4, 7), (10, 5, 4, 8)) == (3, 0, 0, 15)": {
      "result": true,
      "time": 0.054795265197753906,
      "error": null
    },
    "assert bitwise_xor((5, 2, 1, 13), (10, 4, 3, 6)) == (15, 6, 2, 11)": {
      "result": true,
      "time": 0.04694318771362305,
      "error": null
    },
    "assert bitwise_xor((8, 8, 3, 9), (5, 2, 3, 2)) == (13, 10, 0, 11)": {
      "result": true,
      "time": 0.0568394660949707,
      "error": null
    },
    "assert bitwise_xor((5, 7, 6, 4), (1, 1, 1, 2)) == (4, 6, 7, 6)": {
      "result": true,
      "time": 0.04432535171508789,
      "error": null
    },
    "assert bitwise_xor((15, 1, 10, 14), (1, 2, 3, 1)) == (14, 3, 9, 15)": {
      "result": true,
      "time": 0.04123401641845703,
      "error": null
    },
    "assert bitwise_xor((8, 2, 3, 8), (2, 2, 6, 8)) == (10, 0, 5, 0)": {
      "result": true,
      "time": 0.0535733699798584,
      "error": null
    },
    "assert bitwise_xor((8, 1, 3, 10), (7, 6, 7, 1)) == (15, 7, 4, 11)": {
      "result": true,
      "time": 0.0538630485534668,
      "error": null
    },
    "assert bitwise_xor((8, 3, 10, 10), (7, 6, 8, 8)) == (15, 5, 2, 2)": {
      "result": true,
      "time": 0.04938650131225586,
      "error": null
    },
    "assert bitwise_xor((14, 5, 10, 11), (1, 4, 5, 5)) == (15, 1, 15, 14)": {
      "result": true,
      "time": 0.04681205749511719,
      "error": null
    },
    "assert bitwise_xor((8, 7, 7, 10), (4, 2, 5, 8)) == (12, 5, 2, 2)": {
      "result": true,
      "time": 0.04106736183166504,
      "error": null
    },
    "assert bitwise_xor((5, 9, 9, 6), (5, 3, 7, 3)) == (0, 10, 14, 5)": {
      "result": true,
      "time": 0.05570340156555176,
      "error": null
    },
    "assert bitwise_xor((8, 8, 11, 4), (7, 2, 7, 8)) == (15, 10, 12, 12)": {
      "result": true,
      "time": 0.0715475082397461,
      "error": null
    },
    "assert bitwise_xor((15, 1, 10, 5), (1, 6, 7, 2)) == (14, 7, 13, 7)": {
      "result": true,
      "time": 0.061472415924072266,
      "error": null
    },
    "assert bitwise_xor((7, 9, 7, 6), (2, 4, 5, 5)) == (5, 13, 2, 3)": {
      "result": true,
      "time": 0.057825326919555664,
      "error": null
    },
    "assert bitwise_xor((15, 3, 6, 6), (7, 3, 4, 6)) == (8, 0, 2, 0)": {
      "result": true,
      "time": 0.0524904727935791,
      "error": null
    },
    "assert bitwise_xor((13, 5, 7, 9), (3, 1, 1, 6)) == (14, 4, 6, 15)": {
      "result": true,
      "time": 0.0610048770904541,
      "error": null
    },
    "assert bitwise_xor((10, 9, 6, 14), (3, 5, 8, 5)) == (9, 12, 14, 11)": {
      "result": true,
      "time": 0.04330778121948242,
      "error": null
    },
    "assert bitwise_xor((15, 1, 8, 4), (10, 1, 4, 5)) == (5, 0, 12, 1)": {
      "result": true,
      "time": 0.04820418357849121,
      "error": null
    },
    "assert bitwise_xor((10, 6, 4, 10), (7, 5, 8, 6)) == (13, 3, 12, 12)": {
      "result": true,
      "time": 0.04185986518859863,
      "error": null
    },
    "assert bitwise_xor((5, 8, 6, 6), (7, 6, 1, 4)) == (2, 14, 7, 2)": {
      "result": true,
      "time": 0.04496049880981445,
      "error": null
    },
    "assert bitwise_xor((14, 9, 6, 5), (2, 6, 1, 4)) == (12, 15, 7, 1)": {
      "result": true,
      "time": 0.04947018623352051,
      "error": null
    },
    "assert bitwise_xor((12, 5, 9, 6), (6, 1, 4, 1)) == (10, 4, 13, 7)": {
      "result": true,
      "time": 0.0399022102355957,
      "error": null
    },
    "assert bitwise_xor((12, 5, 2, 13), (4, 7, 5, 1)) == (8, 2, 7, 12)": {
      "result": true,
      "time": 0.04925274848937988,
      "error": null
    },
    "assert bitwise_xor((11, 8, 6, 11), (8, 5, 8, 3)) == (3, 13, 14, 8)": {
      "result": true,
      "time": 0.0431821346282959,
      "error": null
    },
    "assert bitwise_xor((15, 6, 6, 5), (3, 1, 4, 8)) == (12, 7, 2, 13)": {
      "result": true,
      "time": 0.04511904716491699,
      "error": null
    },
    "assert bitwise_xor((8, 9, 2, 8), (6, 6, 8, 5)) == (14, 15, 10, 13)": {
      "result": true,
      "time": 0.04944324493408203,
      "error": null
    },
    "assert bitwise_xor((13, 4, 8, 15), (8, 2, 3, 4)) == (5, 6, 11, 11)": {
      "result": true,
      "time": 0.05191969871520996,
      "error": null
    },
    "assert bitwise_xor((16, 3, 10, 15), (7, 2, 6, 8)) == (23, 1, 12, 7)": {
      "result": true,
      "time": 0.05889630317687988,
      "error": null
    },
    "assert bitwise_xor((14, 10, 2, 10), (8, 7, 8, 8)) == (6, 13, 10, 2)": {
      "result": true,
      "time": 0.0424349308013916,
      "error": null
    },
    "assert bitwise_xor((15, 6, 10, 5), (1, 3, 5, 8)) == (14, 5, 15, 13)": {
      "result": true,
      "time": 0.04666566848754883,
      "error": null
    },
    "assert bitwise_xor((8, 2, 10, 11), (2, 7, 9, 2)) == (10, 5, 3, 9)": {
      "result": true,
      "time": 0.041483402252197266,
      "error": null
    },
    "assert bitwise_xor((12, 9, 5, 11), (6, 4, 1, 4)) == (10, 13, 4, 15)": {
      "result": true,
      "time": 0.04845166206359863,
      "error": null
    },
    "assert bitwise_xor((16, 3, 7, 9), (8, 7, 7, 3)) == (24, 4, 0, 10)": {
      "result": true,
      "time": 0.04937434196472168,
      "error": null
    },
    "assert bitwise_xor((14, 5, 10, 15), (4, 8, 9, 1)) == (10, 13, 3, 14)": {
      "result": true,
      "time": 0.04136848449707031,
      "error": null
    },
    "assert bitwise_xor((16, 1, 7, 12), (7, 1, 5, 8)) == (23, 0, 2, 4)": {
      "result": true,
      "time": 0.03818678855895996,
      "error": null
    },
    "assert bitwise_xor((10, 7, 10, 5), (7, 1, 8, 3)) == (13, 6, 2, 6)": {
      "result": true,
      "time": 0.04621171951293945,
      "error": null
    },
    "assert bitwise_xor((14, 2, 2, 14), (6, 6, 9, 4)) == (8, 4, 11, 10)": {
      "result": true,
      "time": 0.04851269721984863,
      "error": null
    },
    "assert bitwise_xor((8, 9, 9, 7), (1, 3, 9, 6)) == (9, 10, 0, 1)": {
      "result": true,
      "time": 0.054343461990356445,
      "error": null
    },
    "assert bitwise_xor((10, 2, 2, 5), (10, 6, 3, 6)) == (0, 4, 1, 3)": {
      "result": true,
      "time": 0.04481101036071777,
      "error": null
    },
    "assert bitwise_xor((8, 2, 7, 6), (3, 2, 5, 5)) == (11, 0, 2, 3)": {
      "result": true,
      "time": 0.0659635066986084,
      "error": null
    },
    "assert bitwise_xor((10, 10, 2, 5), (10, 2, 2, 8)) == (0, 8, 0, 13)": {
      "result": true,
      "time": 0.05116438865661621,
      "error": null
    },
    "assert bitwise_xor((9, 2, 12, 11), (3, 2, 1, 2)) == (10, 0, 13, 9)": {
      "result": true,
      "time": 0.04375147819519043,
      "error": null
    },
    "assert bitwise_xor((12, 3, 4, 5), (2, 4, 1, 4)) == (14, 7, 5, 1)": {
      "result": true,
      "time": 0.05068802833557129,
      "error": null
    },
    "assert bitwise_xor((7, 2, 10, 11), (4, 1, 5, 8)) == (3, 3, 15, 3)": {
      "result": true,
      "time": 0.04767918586730957,
      "error": null
    },
    "assert bitwise_xor((7, 1, 12, 12), (6, 2, 3, 8)) == (1, 3, 15, 4)": {
      "result": true,
      "time": 0.04773306846618652,
      "error": null
    },
    "assert bitwise_xor((16, 9, 6, 8), (8, 5, 8, 1)) == (24, 12, 14, 9)": {
      "result": true,
      "time": 0.055622100830078125,
      "error": null
    },
    "assert bitwise_xor((15, 7, 2, 10), (1, 3, 5, 1)) == (14, 4, 7, 11)": {
      "result": true,
      "time": 0.07166481018066406,
      "error": null
    },
    "assert bitwise_xor((16, 9, 12, 9), (9, 3, 5, 4)) == (25, 10, 9, 13)": {
      "result": true,
      "time": 0.0481112003326416,
      "error": null
    },
    "assert bitwise_xor((14, 10, 12, 6), (3, 4, 3, 8)) == (13, 14, 15, 14)": {
      "result": true,
      "time": 0.04995989799499512,
      "error": null
    },
    "assert bitwise_xor((9, 3, 5, 15), (6, 6, 1, 5)) == (15, 5, 4, 10)": {
      "result": true,
      "time": 0.05616593360900879,
      "error": null
    },
    "assert bitwise_xor((6, 6, 5, 13), (7, 1, 4, 7)) == (1, 7, 1, 10)": {
      "result": true,
      "time": 0.049190521240234375,
      "error": null
    },
    "assert bitwise_xor((16, 9, 8, 7), (10, 4, 9, 7)) == (26, 13, 1, 0)": {
      "result": true,
      "time": 0.0484614372253418,
      "error": null
    },
    "assert bitwise_xor((13, 4, 10, 5), (3, 7, 2, 6)) == (14, 3, 8, 3)": {
      "result": true,
      "time": 0.04392743110656738,
      "error": null
    },
    "assert bitwise_xor((15, 3, 9, 6), (1, 3, 3, 7)) == (14, 0, 10, 1)": {
      "result": true,
      "time": 0.04398798942565918,
      "error": null
    },
    "assert bitwise_xor((10, 4, 11, 10), (10, 4, 4, 1)) == (0, 0, 15, 11)": {
      "result": true,
      "time": 0.04588484764099121,
      "error": null
    },
    "assert bitwise_xor((7, 7, 3, 7), (1, 5, 9, 3)) == (6, 2, 10, 4)": {
      "result": true,
      "time": 0.05019235610961914,
      "error": null
    },
    "assert bitwise_xor((6, 4, 9, 11), (6, 6, 7, 3)) == (0, 2, 14, 8)": {
      "result": true,
      "time": 0.04095578193664551,
      "error": null
    },
    "assert bitwise_xor((6, 5, 10, 13), (6, 1, 4, 3)) == (0, 4, 14, 14)": {
      "result": true,
      "time": 0.04011106491088867,
      "error": null
    },
    "assert bitwise_xor((7, 3, 7, 5), (8, 1, 7, 4)) == (15, 2, 0, 1)": {
      "result": true,
      "time": 0.046525001525878906,
      "error": null
    },
    "assert bitwise_xor((8, 10, 5, 12), (6, 5, 8, 2)) == (14, 15, 13, 14)": {
      "result": true,
      "time": 0.0460660457611084,
      "error": null
    },
    "assert bitwise_xor((8, 5, 5, 12), (8, 6, 7, 5)) == (0, 3, 2, 9)": {
      "result": true,
      "time": 0.0410151481628418,
      "error": null
    },
    "assert bitwise_xor((17, 9, 4, 6), (3, 3, 2, 2)) == (18, 10, 6, 4)": {
      "result": true,
      "time": 0.044567108154296875,
      "error": null
    },
    "assert bitwise_xor((16, 11, 9, 9), (11, 3, 4, 1)) == (27, 8, 13, 8)": {
      "result": true,
      "time": 0.03811478614807129,
      "error": null
    },
    "assert bitwise_xor((9, 1, 7, 15), (3, 6, 5, 3)) == (10, 7, 2, 12)": {
      "result": true,
      "time": 0.04600954055786133,
      "error": null
    },
    "assert bitwise_xor((15, 9, 8, 9), (8, 8, 8, 11)) == (7, 1, 0, 2)": {
      "result": true,
      "time": 0.054332733154296875,
      "error": null
    },
    "assert bitwise_xor((9, 5, 6, 9), (12, 8, 3, 4)) == (5, 13, 5, 13)": {
      "result": true,
      "time": 0.042458295822143555,
      "error": null
    },
    "assert bitwise_xor((7, 2, 3, 16), (5, 1, 9, 3)) == (2, 3, 10, 19)": {
      "result": true,
      "time": 0.03818774223327637,
      "error": null
    },
    "assert bitwise_xor((16, 4, 11, 9), (7, 4, 2, 8)) == (23, 0, 9, 1)": {
      "result": true,
      "time": 0.03705191612243652,
      "error": null
    },
    "assert bitwise_xor((12, 10, 6, 14), (7, 1, 10, 5)) == (11, 11, 12, 11)": {
      "result": true,
      "time": 0.037893056869506836,
      "error": null
    },
    "assert bitwise_xor((12, 4, 3, 10), (5, 4, 4, 6)) == (9, 0, 7, 12)": {
      "result": true,
      "time": 0.04343867301940918,
      "error": null
    },
    "assert bitwise_xor((15, 10, 13, 14), (11, 8, 10, 9)) == (4, 2, 7, 7)": {
      "result": true,
      "time": 0.0380856990814209,
      "error": null
    },
    "assert bitwise_xor((17, 3, 10, 9), (7, 4, 1, 8)) == (22, 7, 11, 1)": {
      "result": true,
      "time": 0.04167628288269043,
      "error": null
    },
    "assert bitwise_xor((9, 5, 3, 7), (3, 2, 10, 8)) == (10, 7, 9, 15)": {
      "result": true,
      "time": 0.04288125038146973,
      "error": null
    },
    "assert bitwise_xor((16, 9, 8, 13), (11, 3, 7, 10)) == (27, 10, 15, 7)": {
      "result": true,
      "time": 0.04047584533691406,
      "error": null
    },
    "assert bitwise_xor((17, 3, 8, 16), (5, 3, 8, 6)) == (20, 0, 0, 22)": {
      "result": true,
      "time": 0.03973388671875,
      "error": null
    },
    "assert bitwise_xor((13, 8, 7, 9), (2, 9, 4, 1)) == (15, 1, 3, 8)": {
      "result": true,
      "time": 0.03803372383117676,
      "error": null
    },
    "assert bitwise_xor((15, 11, 11, 6), (7, 6, 9, 5)) == (8, 13, 2, 3)": {
      "result": true,
      "time": 0.03546547889709473,
      "error": null
    },
    "assert bitwise_xor((16, 4, 5, 10), (12, 1, 1, 11)) == (28, 5, 4, 1)": {
      "result": true,
      "time": 0.03884696960449219,
      "error": null
    },
    "assert bitwise_xor((7, 11, 4, 16), (2, 6, 1, 8)) == (5, 13, 5, 24)": {
      "result": true,
      "time": 0.03770160675048828,
      "error": null
    },
    "assert bitwise_xor((16, 9, 8, 14), (3, 9, 6, 8)) == (19, 0, 14, 6)": {
      "result": true,
      "time": 0.04168510437011719,
      "error": null
    },
    "assert bitwise_xor((7, 1, 6, 9), (7, 5, 3, 1)) == (0, 4, 5, 8)": {
      "result": true,
      "time": 0.03777790069580078,
      "error": null
    },
    "assert bitwise_xor((14, 3, 6, 16), (10, 8, 5, 2)) == (4, 11, 3, 18)": {
      "result": true,
      "time": 0.04819941520690918,
      "error": null
    },
    "assert bitwise_xor((17, 3, 6, 7), (5, 5, 7, 6)) == (20, 6, 1, 1)": {
      "result": true,
      "time": 0.050434112548828125,
      "error": null
    },
    "assert bitwise_xor((12, 1, 10, 13), (9, 2, 4, 11)) == (5, 3, 14, 6)": {
      "result": true,
      "time": 0.04812979698181152,
      "error": null
    },
    "assert bitwise_xor((12, 11, 10, 9), (4, 5, 3, 9)) == (8, 14, 9, 0)": {
      "result": true,
      "time": 0.04241371154785156,
      "error": null
    },
    "assert bitwise_xor((15, 1, 10, 12), (8, 7, 7, 2)) == (7, 6, 13, 14)": {
      "result": true,
      "time": 0.04579949378967285,
      "error": null
    },
    "assert bitwise_xor((8, 5, 3, 8), (6, 6, 4, 8)) == (14, 3, 7, 0)": {
      "result": true,
      "time": 0.04704689979553223,
      "error": null
    },
    "assert bitwise_xor((10, 3, 4, 10), (10, 9, 9, 11)) == (0, 10, 13, 1)": {
      "result": true,
      "time": 0.04534554481506348,
      "error": null
    },
    "assert bitwise_xor((16, 3, 3, 9), (5, 1, 4, 4)) == (21, 2, 7, 13)": {
      "result": true,
      "time": 0.052628517150878906,
      "error": null
    },
    "assert bitwise_xor((10, 7, 11, 10), (8, 9, 1, 7)) == (2, 14, 10, 13)": {
      "result": true,
      "time": 0.05733966827392578,
      "error": null
    },
    "assert bitwise_xor((10, 6, 6, 16), (2, 9, 2, 4)) == (8, 15, 4, 20)": {
      "result": true,
      "time": 0.0379183292388916,
      "error": null
    },
    "assert bitwise_xor((16, 11, 4, 14), (4, 7, 2, 8)) == (20, 12, 6, 6)": {
      "result": true,
      "time": 0.03767871856689453,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}