{
  "code": "def count_Occurrence(tup, lst):\n    count = 0\n    for element in tup:\n        if element in lst:\n            count += 1\n    return count",
  "results": {
    "assert count_Occurrence(('a', 'a', 'c', 'b', 'd'),['a', 'b'] ) == 3": {
      "result": true,
      "time": 0.04254460334777832,
      "error": null
    },
    "assert count_Occurrence((1, 2, 3, 1, 4, 6, 7, 1, 4),[1, 4, 7]) == 6": {
      "result": true,
      "time": 0.04434943199157715,
      "error": null
    },
    "assert count_Occurrence((1,2,3,4,5,6),[1,2]) == 2": {
      "result": true,
      "time": 0.04030585289001465,
      "error": null
    },
    "assert count_Occurrence(('y', 'k', 'a', 'b', 'd'), ['l', 'l']) == 0": {
      "result": true,
      "time": 0.041866302490234375,
      "error": null
    },
    "assert count_Occurrence(('y', 'm', 'e', 'b', 'l'), ['f', 'n']) == 0": {
      "result": true,
      "time": 0.046781063079833984,
      "error": null
    },
    "assert count_Occurrence(('o', 'f', 'j', 'm', 'm'), ['y', 'e']) == 0": {
      "result": true,
      "time": 0.03547334671020508,
      "error": null
    },
    "assert count_Occurrence(('u', 'q', 'h', 'f', 'r'), ['m', 'c']) == 0": {
      "result": true,
      "time": 0.03778243064880371,
      "error": null
    },
    "assert count_Occurrence(('v', 'g', 'r', 'f', 'y'), ['r', 'g']) == 2": {
      "result": true,
      "time": 0.0355226993560791,
      "error": null
    },
    "assert count_Occurrence(('a', 'w', 'l', 'o', 'b'), ['g', 's']) == 0": {
      "result": true,
      "time": 0.03963327407836914,
      "error": null
    },
    "assert count_Occurrence(('u', 'p', 'g', 'q', 'a'), ['k', 'w']) == 0": {
      "result": true,
      "time": 0.041956186294555664,
      "error": null
    },
    "assert count_Occurrence(('q', 'w', 'o', 'b', 'u'), ['b', 'm']) == 1": {
      "result": true,
      "time": 0.04304623603820801,
      "error": null
    },
    "assert count_Occurrence(('o', 'h', 'q', 'n', 'v'), ['y', 'l']) == 0": {
      "result": true,
      "time": 0.040819406509399414,
      "error": null
    },
    "assert count_Occurrence(('p', 'f', 'e', 'l', 'v'), ['v', 'g']) == 1": {
      "result": true,
      "time": 0.04405665397644043,
      "error": null
    },
    "assert count_Occurrence(('j', 'u', 'c', 'u', 'r'), ['f', 't']) == 0": {
      "result": true,
      "time": 0.038146257400512695,
      "error": null
    },
    "assert count_Occurrence(('h', 'q', 'w', 'r', 'z'), ['b', 'l']) == 0": {
      "result": true,
      "time": 0.036418914794921875,
      "error": null
    },
    "assert count_Occurrence(('m', 'u', 'a', 'z', 's'), ['g', 's']) == 1": {
      "result": true,
      "time": 0.03791046142578125,
      "error": null
    },
    "assert count_Occurrence(('x', 'v', 'x', 't', 'l'), ['g', 'o']) == 0": {
      "result": true,
      "time": 0.03812694549560547,
      "error": null
    },
    "assert count_Occurrence(('z', 'o', 's', 'v', 'g'), ['u', 'k']) == 0": {
      "result": true,
      "time": 0.032494306564331055,
      "error": null
    },
    "assert count_Occurrence(('p', 'w', 'm', 'f', 'b'), ['w', 'f']) == 2": {
      "result": true,
      "time": 0.04531383514404297,
      "error": null
    },
    "assert count_Occurrence(('w', 'u', 'e', 'd', 'v'), ['x', 'o']) == 0": {
      "result": true,
      "time": 0.031627655029296875,
      "error": null
    },
    "assert count_Occurrence(('c', 'k', 'y', 'k', 'v'), ['n', 'f']) == 0": {
      "result": true,
      "time": 0.03769183158874512,
      "error": null
    },
    "assert count_Occurrence(('t', 'l', 'h', 'l', 'i'), ['n', 'o']) == 0": {
      "result": true,
      "time": 0.037606000900268555,
      "error": null
    },
    "assert count_Occurrence(('y', 'a', 'd', 'a', 'z'), ['y', 'w']) == 1": {
      "result": true,
      "time": 0.04175996780395508,
      "error": null
    },
    "assert count_Occurrence(('f', 't', 'q', 'm', 'x'), ['f', 'l']) == 1": {
      "result": true,
      "time": 0.0441594123840332,
      "error": null
    },
    "assert count_Occurrence(('n', 'c', 'v', 'h', 'r'), ['u', 'a']) == 0": {
      "result": true,
      "time": 0.03346872329711914,
      "error": null
    },
    "assert count_Occurrence(('p', 'c', 'k', 'f', 'i'), ['p', 'r']) == 1": {
      "result": true,
      "time": 0.038776397705078125,
      "error": null
    },
    "assert count_Occurrence(('p', 'i', 'g', 't', 'q'), ['e', 'k']) == 0": {
      "result": true,
      "time": 0.036345481872558594,
      "error": null
    },
    "assert count_Occurrence(('f', 'c', 'p', 'q', 'r'), ['g', 'a']) == 0": {
      "result": true,
      "time": 0.03768777847290039,
      "error": null
    },
    "assert count_Occurrence(('m', 's', 'i', 'o', 'x'), ['z', 'e']) == 0": {
      "result": true,
      "time": 0.04293322563171387,
      "error": null
    },
    "assert count_Occurrence(('y', 'q', 'w', 'q', 'm'), ['y', 'v']) == 1": {
      "result": true,
      "time": 0.03227376937866211,
      "error": null
    },
    "assert count_Occurrence(('y', 'r', 'l', 'k', 'c'), ['a', 'p']) == 0": {
      "result": true,
      "time": 0.033032894134521484,
      "error": null
    },
    "assert count_Occurrence(('f', 'y', 's', 'c', 'x'), ['n', 'z']) == 0": {
      "result": true,
      "time": 0.03618669509887695,
      "error": null
    },
    "assert count_Occurrence(('j', 'u', 'n', 'b', 'u'), ['t', 'a']) == 0": {
      "result": true,
      "time": 0.039765119552612305,
      "error": null
    },
    "assert count_Occurrence(('x', 'x', 'f', 'a', 'l'), ['r', 'j']) == 0": {
      "result": true,
      "time": 0.04471015930175781,
      "error": null
    },
    "assert count_Occurrence(('d', 'g', 'w', 'i', 'e'), ['h', 'e']) == 1": {
      "result": true,
      "time": 0.039246320724487305,
      "error": null
    },
    "assert count_Occurrence(('s', 't', 'h', 'c', 'm'), ['r', 'p']) == 0": {
      "result": true,
      "time": 0.04210710525512695,
      "error": null
    },
    "assert count_Occurrence((1, 5, 1, 1, 3, 9, 5, 2, 4), [1, 1, 2]) == 4": {
      "result": true,
      "time": 0.041516780853271484,
      "error": null
    },
    "assert count_Occurrence((4, 5, 7, 3, 4, 9, 8, 5, 4), [3, 9, 11]) == 2": {
      "result": true,
      "time": 0.03791189193725586,
      "error": null
    },
    "assert count_Occurrence((3, 4, 3, 2, 3, 6, 6, 4, 6), [4, 1, 4]) == 2": {
      "result": true,
      "time": 0.04383397102355957,
      "error": null
    },
    "assert count_Occurrence((1, 4, 1, 4, 9, 10, 4, 1, 9), [3, 1, 2]) == 3": {
      "result": true,
      "time": 0.04157876968383789,
      "error": null
    },
    "assert count_Occurrence((4, 5, 8, 2, 2, 6, 5, 2, 1), [1, 2, 5]) == 6": {
      "result": true,
      "time": 0.03947281837463379,
      "error": null
    },
    "assert count_Occurrence((6, 6, 7, 3, 1, 6, 6, 4, 9), [3, 4, 5]) == 2": {
      "result": true,
      "time": 0.04786491394042969,
      "error": null
    },
    "assert count_Occurrence((4, 2, 6, 6, 8, 2, 7, 5, 6), [1, 7, 6]) == 4": {
      "result": true,
      "time": 0.042252302169799805,
      "error": null
    },
    "assert count_Occurrence((5, 7, 5, 4, 5, 11, 8, 2, 5), [5, 9, 9]) == 4": {
      "result": true,
      "time": 0.045762062072753906,
      "error": null
    },
    "assert count_Occurrence((1, 3, 3, 4, 5, 3, 11, 1, 8), [2, 5, 8]) == 2": {
      "result": true,
      "time": 0.03849482536315918,
      "error": null
    },
    "assert count_Occurrence((1, 6, 3, 2, 9, 7, 4, 4, 9), [5, 3, 8]) == 1": {
      "result": true,
      "time": 0.04024004936218262,
      "error": null
    },
    "assert count_Occurrence((2, 6, 5, 5, 8, 3, 12, 6, 3), [2, 5, 10]) == 3": {
      "result": true,
      "time": 0.04737687110900879,
      "error": null
    },
    "assert count_Occurrence((5, 5, 7, 3, 9, 11, 3, 4, 5), [4, 1, 2]) == 1": {
      "result": true,
      "time": 0.040879249572753906,
      "error": null
    },
    "assert count_Occurrence((6, 5, 6, 2, 3, 3, 8, 3, 7), [4, 5, 9]) == 1": {
      "result": true,
      "time": 0.032224178314208984,
      "error": null
    },
    "assert count_Occurrence((2, 5, 7, 1, 2, 7, 10, 2, 4), [4, 8, 4]) == 1": {
      "result": true,
      "time": 0.03504180908203125,
      "error": null
    },
    "assert count_Occurrence((2, 7, 3, 5, 2, 11, 5, 2, 5), [6, 3, 6]) == 1": {
      "result": true,
      "time": 0.03298759460449219,
      "error": null
    },
    "assert count_Occurrence((1, 7, 2, 4, 1, 1, 3, 3, 3), [5, 1, 7]) == 4": {
      "result": true,
      "time": 0.04569196701049805,
      "error": null
    },
    "assert count_Occurrence((4, 3, 6, 6, 5, 5, 11, 2, 2), [3, 8, 6]) == 3": {
      "result": true,
      "time": 0.042243003845214844,
      "error": null
    },
    "assert count_Occurrence((6, 4, 7, 5, 6, 6, 12, 1, 4), [6, 7, 6]) == 4": {
      "result": true,
      "time": 0.04490208625793457,
      "error": null
    },
    "assert count_Occurrence((5, 6, 7, 1, 4, 5, 5, 6, 7), [2, 6, 7]) == 4": {
      "result": true,
      "time": 0.03560590744018555,
      "error": null
    },
    "assert count_Occurrence((5, 3, 3, 4, 5, 4, 3, 6, 2), [1, 3, 4]) == 5": {
      "result": true,
      "time": 0.04089856147766113,
      "error": null
    },
    "assert count_Occurrence((2, 2, 5, 6, 6, 8, 9, 5, 4), [3, 9, 8]) == 2": {
      "result": true,
      "time": 0.0431666374206543,
      "error": null
    },
    "assert count_Occurrence((4, 6, 3, 1, 9, 3, 3, 5, 9), [4, 9, 10]) == 3": {
      "result": true,
      "time": 0.0421442985534668,
      "error": null
    },
    "assert count_Occurrence((4, 7, 3, 4, 4, 6, 5, 2, 2), [6, 2, 4]) == 6": {
      "result": true,
      "time": 0.03904318809509277,
      "error": null
    },
    "assert count_Occurrence((6, 4, 5, 3, 5, 6, 7, 6, 8), [6, 3, 5]) == 6": {
      "result": true,
      "time": 0.04587292671203613,
      "error": null
    },
    "assert count_Occurrence((5, 5, 3, 6, 5, 8, 9, 2, 2), [2, 1, 9]) == 3": {
      "result": true,
      "time": 0.0378115177154541,
      "error": null
    },
    "assert count_Occurrence((3, 1, 4, 2, 7, 3, 4, 4, 9), [5, 5, 4]) == 3": {
      "result": true,
      "time": 0.04054903984069824,
      "error": null
    },
    "assert count_Occurrence((5, 7, 8, 1, 4, 10, 2, 5, 5), [5, 8, 11]) == 4": {
      "result": true,
      "time": 0.04110836982727051,
      "error": null
    },
    "assert count_Occurrence((5, 6, 5, 1, 9, 11, 10, 6, 7), [6, 5, 7]) == 5": {
      "result": true,
      "time": 0.04332470893859863,
      "error": null
    },
    "assert count_Occurrence((3, 3, 6, 1, 9, 1, 4, 3, 5), [5, 1, 4]) == 4": {
      "result": true,
      "time": 0.03621220588684082,
      "error": null
    },
    "assert count_Occurrence((5, 2, 6, 4, 8, 6, 8, 6, 3), [1, 1, 12]) == 0": {
      "result": true,
      "time": 0.03791022300720215,
      "error": null
    },
    "assert count_Occurrence((6, 2, 5, 3, 8, 8, 6, 4, 2), [6, 7, 3]) == 3": {
      "result": true,
      "time": 0.044693708419799805,
      "error": null
    },
    "assert count_Occurrence((5, 2, 7, 5, 9, 10, 6, 2, 9), [6, 4, 3]) == 1": {
      "result": true,
      "time": 0.0414881706237793,
      "error": null
    },
    "assert count_Occurrence((4, 6, 7, 2, 3, 2, 2, 6, 4), [4, 5, 4]) == 2": {
      "result": true,
      "time": 0.037516117095947266,
      "error": null
    },
    "assert count_Occurrence((1, 4, 2, 5, 3, 7), [3, 3]) == 1": {
      "result": true,
      "time": 0.044179439544677734,
      "error": null
    },
    "assert count_Occurrence((2, 4, 8, 2, 6, 2), [3, 5]) == 0": {
      "result": true,
      "time": 0.04217529296875,
      "error": null
    },
    "assert count_Occurrence((4, 7, 3, 9, 10, 5), [3, 3]) == 1": {
      "result": true,
      "time": 0.039895057678222656,
      "error": null
    },
    "assert count_Occurrence((3, 3, 2, 8, 6, 7), [1, 3]) == 2": {
      "result": true,
      "time": 0.03976130485534668,
      "error": null
    },
    "assert count_Occurrence((3, 3, 1, 7, 7, 4), [6, 6]) == 0": {
      "result": true,
      "time": 0.04047870635986328,
      "error": null
    },
    "assert count_Occurrence((4, 3, 3, 7, 6, 5), [3, 4]) == 3": {
      "result": true,
      "time": 0.03938460350036621,
      "error": null
    },
    "assert count_Occurrence((1, 1, 7, 7, 9, 9), [2, 5]) == 0": {
      "result": true,
      "time": 0.04142189025878906,
      "error": null
    },
    "assert count_Occurrence((6, 7, 2, 2, 4, 11), [1, 7]) == 1": {
      "result": true,
      "time": 0.030171632766723633,
      "error": null
    },
    "assert count_Occurrence((4, 5, 6, 3, 5, 4), [2, 3]) == 1": {
      "result": true,
      "time": 0.035286664962768555,
      "error": null
    },
    "assert count_Occurrence((6, 6, 2, 9, 10, 3), [4, 1]) == 0": {
      "result": true,
      "time": 0.035736083984375,
      "error": null
    },
    "assert count_Occurrence((4, 3, 3, 2, 4, 6), [4, 6]) == 3": {
      "result": true,
      "time": 0.033730506896972656,
      "error": null
    },
    "assert count_Occurrence((4, 7, 2, 9, 5, 7), [3, 6]) == 0": {
      "result": true,
      "time": 0.036888837814331055,
      "error": null
    },
    "assert count_Occurrence((1, 6, 1, 3, 1, 2), [3, 5]) == 1": {
      "result": true,
      "time": 0.03151082992553711,
      "error": null
    },
    "assert count_Occurrence((5, 4, 7, 7, 3, 10), [4, 2]) == 1": {
      "result": true,
      "time": 0.03625655174255371,
      "error": null
    },
    "assert count_Occurrence((3, 2, 1, 4, 3, 6), [6, 6]) == 1": {
      "result": true,
      "time": 0.053995609283447266,
      "error": null
    },
    "assert count_Occurrence((2, 2, 7, 3, 5, 8), [5, 1]) == 1": {
      "result": true,
      "time": 0.04209470748901367,
      "error": null
    },
    "assert count_Occurrence((2, 2, 7, 4, 9, 10), [6, 6]) == 0": {
      "result": true,
      "time": 0.04826617240905762,
      "error": null
    },
    "assert count_Occurrence((6, 2, 1, 3, 7, 10), [5, 2]) == 1": {
      "result": true,
      "time": 0.046946048736572266,
      "error": null
    },
    "assert count_Occurrence((3, 7, 8, 8, 10, 4), [5, 6]) == 0": {
      "result": true,
      "time": 0.03998923301696777,
      "error": null
    },
    "assert count_Occurrence((5, 7, 2, 4, 6, 6), [5, 4]) == 2": {
      "result": true,
      "time": 0.04542660713195801,
      "error": null
    },
    "assert count_Occurrence((3, 6, 3, 2, 7, 6), [3, 3]) == 2": {
      "result": true,
      "time": 0.04054379463195801,
      "error": null
    },
    "assert count_Occurrence((5, 3, 1, 5, 1, 10), [2, 3]) == 1": {
      "result": true,
      "time": 0.04581856727600098,
      "error": null
    },
    "assert count_Occurrence((1, 6, 2, 5, 4, 3), [2, 1]) == 2": {
      "result": true,
      "time": 0.0414433479309082,
      "error": null
    },
    "assert count_Occurrence((6, 4, 5, 8, 1, 5), [4, 3]) == 1": {
      "result": true,
      "time": 0.046370506286621094,
      "error": null
    },
    "assert count_Occurrence((4, 1, 1, 5, 9, 6), [4, 5]) == 2": {
      "result": true,
      "time": 0.042899370193481445,
      "error": null
    },
    "assert count_Occurrence((4, 3, 8, 3, 8, 8), [3, 4]) == 3": {
      "result": true,
      "time": 0.04356551170349121,
      "error": null
    },
    "assert count_Occurrence((2, 7, 3, 9, 2, 3), [1, 5]) == 0": {
      "result": true,
      "time": 0.04262590408325195,
      "error": null
    },
    "assert count_Occurrence((4, 5, 6, 4, 9, 2), [4, 5]) == 3": {
      "result": true,
      "time": 0.050807952880859375,
      "error": null
    },
    "assert count_Occurrence((3, 4, 3, 5, 5, 10), [4, 1]) == 1": {
      "result": true,
      "time": 0.03870868682861328,
      "error": null
    },
    "assert count_Occurrence((5, 3, 7, 3, 1, 3), [1, 7]) == 2": {
      "result": true,
      "time": 0.036748647689819336,
      "error": null
    },
    "assert count_Occurrence((2, 6, 3, 9, 1, 5), [4, 3]) == 1": {
      "result": true,
      "time": 0.051756858825683594,
      "error": null
    },
    "assert count_Occurrence((3, 5, 7, 1, 1, 6), [1, 4]) == 2": {
      "result": true,
      "time": 0.05196523666381836,
      "error": null
    },
    "assert count_Occurrence((3, 7, 6, 3, 4, 4), [3, 6]) == 3": {
      "result": true,
      "time": 0.04050588607788086,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}