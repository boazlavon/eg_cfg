{
  "code": "def count_Squares(m, n):\n    total = 0\n    k = 1\n    while k <= m and k <= n:\n        total += (m - k + 1) * (n - k + 1)\n        k += 1\n    return total",
  "results": {
    "assert count_Squares(4,3) == 20": {
      "result": true,
      "time": 0.056427001953125,
      "error": null
    },
    "assert count_Squares(2,2) == 5": {
      "result": true,
      "time": 0.04102826118469238,
      "error": null
    },
    "assert count_Squares(1,1) == 1": {
      "result": true,
      "time": 0.04117703437805176,
      "error": null
    },
    "assert count_Squares(1, 5) == 5.0": {
      "result": true,
      "time": 0.044759511947631836,
      "error": null
    },
    "assert count_Squares(9, 4) == 80.0": {
      "result": true,
      "time": 0.03550863265991211,
      "error": null
    },
    "assert count_Squares(6, 8) == 133.0": {
      "result": true,
      "time": 0.04619908332824707,
      "error": null
    },
    "assert count_Squares(2, 1) == 2.0": {
      "result": true,
      "time": 0.04480290412902832,
      "error": null
    },
    "assert count_Squares(7, 2) == 20.0": {
      "result": true,
      "time": 0.04793739318847656,
      "error": null
    },
    "assert count_Squares(7, 1) == 7.0": {
      "result": true,
      "time": 0.0513453483581543,
      "error": null
    },
    "assert count_Squares(9, 7) == 196.0": {
      "result": true,
      "time": 0.04460501670837402,
      "error": null
    },
    "assert count_Squares(6, 7) == 112.0": {
      "result": true,
      "time": 0.04768967628479004,
      "error": null
    },
    "assert count_Squares(3, 3) == 14.0": {
      "result": true,
      "time": 0.04477548599243164,
      "error": null
    },
    "assert count_Squares(9, 6) == 154.0": {
      "result": true,
      "time": 0.04391336441040039,
      "error": null
    },
    "assert count_Squares(8, 1) == 8.0": {
      "result": true,
      "time": 0.04294228553771973,
      "error": null
    },
    "assert count_Squares(1, 8) == 8.0": {
      "result": true,
      "time": 0.0443270206451416,
      "error": null
    },
    "assert count_Squares(7, 7) == 140.0": {
      "result": true,
      "time": 0.03923439979553223,
      "error": null
    },
    "assert count_Squares(2, 6) == 17.0": {
      "result": true,
      "time": 0.04469704627990723,
      "error": null
    },
    "assert count_Squares(8, 3) == 44.0": {
      "result": true,
      "time": 0.04738211631774902,
      "error": null
    },
    "assert count_Squares(3, 8) == 44.0": {
      "result": true,
      "time": 0.04650688171386719,
      "error": null
    },
    "assert count_Squares(2, 2) == 5.0": {
      "result": true,
      "time": 0.046681880950927734,
      "error": null
    },
    "assert count_Squares(3, 2) == 8.0": {
      "result": true,
      "time": 0.042999267578125,
      "error": null
    },
    "assert count_Squares(2, 3) == 8.0": {
      "result": true,
      "time": 0.04207658767700195,
      "error": null
    },
    "assert count_Squares(5, 2) == 14.0": {
      "result": true,
      "time": 0.04357123374938965,
      "error": null
    },
    "assert count_Squares(1, 2) == 2.0": {
      "result": true,
      "time": 0.0422515869140625,
      "error": null
    },
    "assert count_Squares(6, 1) == 6.0": {
      "result": true,
      "time": 0.04475736618041992,
      "error": null
    },
    "assert count_Squares(4, 6) == 50.0": {
      "result": true,
      "time": 0.040189266204833984,
      "error": null
    },
    "assert count_Squares(5, 4) == 40.0": {
      "result": true,
      "time": 0.03647041320800781,
      "error": null
    },
    "assert count_Squares(6, 6) == 91.0": {
      "result": true,
      "time": 0.047509193420410156,
      "error": null
    },
    "assert count_Squares(6, 2) == 17.0": {
      "result": true,
      "time": 0.04728531837463379,
      "error": null
    },
    "assert count_Squares(1, 4) == 4.0": {
      "result": true,
      "time": 0.05041098594665527,
      "error": null
    },
    "assert count_Squares(4, 5) == 40.0": {
      "result": true,
      "time": 0.044595956802368164,
      "error": null
    },
    "assert count_Squares(5, 6) == 70.0": {
      "result": true,
      "time": 0.05152320861816406,
      "error": null
    },
    "assert count_Squares(1, 1) == 1.0": {
      "result": true,
      "time": 0.03992152214050293,
      "error": null
    },
    "assert count_Squares(7, 6) == 112.0": {
      "result": true,
      "time": 0.04172086715698242,
      "error": null
    },
    "assert count_Squares(2, 4) == 11.0": {
      "result": true,
      "time": 0.0420992374420166,
      "error": null
    },
    "assert count_Squares(3, 6) == 32.0": {
      "result": true,
      "time": 0.039424896240234375,
      "error": null
    },
    "assert count_Squares(6, 4) == 50.0": {
      "result": true,
      "time": 0.044400691986083984,
      "error": null
    },
    "assert count_Squares(6, 5) == 70.0": {
      "result": true,
      "time": 0.04600024223327637,
      "error": null
    },
    "assert count_Squares(5, 5) == 55.0": {
      "result": true,
      "time": 0.041548728942871094,
      "error": null
    },
    "assert count_Squares(5, 3) == 26.0": {
      "result": true,
      "time": 0.042542219161987305,
      "error": null
    },
    "assert count_Squares(2, 5) == 14.0": {
      "result": true,
      "time": 0.04340791702270508,
      "error": null
    },
    "assert count_Squares(3, 5) == 26.0": {
      "result": true,
      "time": 0.04483485221862793,
      "error": null
    },
    "assert count_Squares(4, 2) == 11.0": {
      "result": true,
      "time": 0.041913509368896484,
      "error": null
    },
    "assert count_Squares(3, 4) == 20.0": {
      "result": true,
      "time": 0.04877805709838867,
      "error": null
    },
    "assert count_Squares(5, 7) == 85.0": {
      "result": true,
      "time": 0.04107356071472168,
      "error": null
    },
    "assert count_Squares(4, 7) == 60.0": {
      "result": true,
      "time": 0.03240013122558594,
      "error": null
    },
    "assert count_Squares(4, 3) == 20.0": {
      "result": true,
      "time": 0.03531217575073242,
      "error": null
    },
    "assert count_Squares(6, 3) == 32.0": {
      "result": true,
      "time": 0.04134774208068848,
      "error": null
    },
    "assert count_Squares(4, 1) == 4.0": {
      "result": true,
      "time": 0.03515338897705078,
      "error": null
    },
    "assert count_Squares(1, 6) == 6.0": {
      "result": true,
      "time": 0.03763270378112793,
      "error": null
    },
    "assert count_Squares(1, 3) == 3.0": {
      "result": true,
      "time": 0.03702259063720703,
      "error": null
    },
    "assert count_Squares(3, 1) == 3.0": {
      "result": true,
      "time": 0.045226335525512695,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}