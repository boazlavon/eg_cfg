{
  "code": "def re_arrange(arr, n):\n    # Separate positive and negative numbers\n    pos = [x for x in arr if x >= 0]\n    neg = [x for x in arr if x < 0]\n    \n    # Initialize pointers for pos and neg arrays\n    i = j = k = 0\n    \n    # Merge the arrays in alternating fashion\n    while i < len(neg) and j < len(pos):\n        arr[k] = neg[i]\n        k += 1\n        i += 1\n        arr[k] = pos[j]\n        k += 1\n        j += 1\n    \n    # Add remaining negative numbers if any\n    while i < len(neg):\n        arr[k] = neg[i]\n        k += 1\n        i += 1\n    \n    # Add remaining positive numbers if any\n    while j < len(pos):\n        arr[k] = pos[j]\n        k += 1\n        j += 1\n    \n    return arr",
  "results": {
    "assert re_arrange([-5, -2, 5, 2, 4,\t7, 1, 8, 0, -8], 10) == [-5, 5, -2, 2, -8, 4, 7, 1, 8, 0]": {
      "result": true,
      "time": 0.05603218078613281,
      "error": null
    },
    "assert re_arrange([1, 2, 3, -4, -1, 4], 6) == [-4, 1, -1, 2, 3, 4]": {
      "result": true,
      "time": 0.06468749046325684,
      "error": null
    },
    "assert re_arrange([4, 7, 9, 77, -4, 5, -3, -9], 8) == [-4, 4, -3, 7, -9, 9, 77, 5]": {
      "result": true,
      "time": 0.04714012145996094,
      "error": null
    },
    "assert re_arrange([-7, -7, 10, 7, 5, 11, 3, 13, 4, -8], 5) == [-7, 10, -7, 7, 5, 11, 3, 13, 4, -8]": {
      "result": false,
      "time": 0.05114459991455078,
      "error": null
    },
    "assert re_arrange([-1, -2, 7, 4, 8, 12, 2, 9, 2, -12], 7) == [-1, 7, -2, 4, 8, 12, 2, 9, 2, -12]": {
      "result": false,
      "time": 0.06202292442321777,
      "error": null
    },
    "assert re_arrange([-2, 0, 7, 6, 4, 7, 6, 4, 1, -11], 10) == [-2, 0, -11, 7, 6, 4, 7, 6, 4, 1]": {
      "result": true,
      "time": 0.0564727783203125,
      "error": null
    },
    "assert re_arrange([-6, -3, 4, 6, 6, 12, 2, 3, 3, -4], 8) == [-6, 4, -3, 6, 6, 12, 2, 3, 3, -4]": {
      "result": false,
      "time": 0.04887509346008301,
      "error": null
    },
    "assert re_arrange([-10, -5, 4, 2, 2, 7, 6, 10, 4, -6], 8) == [-10, 4, -5, 2, 2, 7, 6, 10, 4, -6]": {
      "result": false,
      "time": 0.05649161338806152,
      "error": null
    },
    "assert re_arrange([-5, -6, 3, 4, 3, 8, 6, 4, 5, -6], 7) == [-5, 3, -6, 4, 3, 8, 6, 4, 5, -6]": {
      "result": false,
      "time": 0.05628037452697754,
      "error": null
    },
    "assert re_arrange([-5, -3, 8, 5, 8, 5, 2, 7, 3, -4], 7) == [-5, 8, -3, 5, 8, 5, 2, 7, 3, -4]": {
      "result": false,
      "time": 0.06617307662963867,
      "error": null
    },
    "assert re_arrange([-6, -5, 8, 3, 9, 4, 1, 7, 2, -8], 10) == [-6, 8, -5, 3, -8, 9, 4, 1, 7, 2]": {
      "result": true,
      "time": 0.06798171997070312,
      "error": null
    },
    "assert re_arrange([-10, -2, 1, 4, 1, 11, 1, 3, 1, -7], 8) == [-10, 1, -2, 4, 1, 11, 1, 3, 1, -7]": {
      "result": false,
      "time": 0.06001424789428711,
      "error": null
    },
    "assert re_arrange([-10, -3, 3, 5, 6, 6, 6, 6, 5, -6], 7) == [-10, 3, -3, 5, 6, 6, 6, 6, 5, -6]": {
      "result": false,
      "time": 0.05075979232788086,
      "error": null
    },
    "assert re_arrange([-2, -1, 8, 6, 3, 5, 6, 12, 5, -13], 8) == [-2, 8, -1, 6, 3, 5, 6, 12, 5, -13]": {
      "result": false,
      "time": 0.04196977615356445,
      "error": null
    },
    "assert re_arrange([-6, -5, 6, 6, 3, 10, 1, 13, 2, -13], 7) == [-6, 6, -5, 6, 3, 10, 1, 13, 2, -13]": {
      "result": false,
      "time": 0.0549623966217041,
      "error": null
    },
    "assert re_arrange([-1, 0, 4, 2, 2, 11, 5, 4, 1, -12], 6) == [-1, 0, 4, 2, 2, 11, 5, 4, 1, -12]": {
      "result": false,
      "time": 0.06119084358215332,
      "error": null
    },
    "assert re_arrange([-6, -4, 6, 7, 1, 9, 4, 12, 2, -4], 6) == [-6, 6, -4, 7, 1, 9, 4, 12, 2, -4]": {
      "result": false,
      "time": 0.05845761299133301,
      "error": null
    },
    "assert re_arrange([-5, -2, 5, 4, 5, 12, 4, 6, 3, -6], 9) == [-5, 5, -2, 4, 5, 12, 4, 6, 3, -6]": {
      "result": false,
      "time": 0.05176973342895508,
      "error": null
    },
    "assert re_arrange([-1, -5, 3, 7, 7, 9, 1, 5, 3, -9], 7) == [-1, 3, -5, 7, 7, 9, 1, 5, 3, -9]": {
      "result": false,
      "time": 0.05154585838317871,
      "error": null
    },
    "assert re_arrange([-7, 1, 4, 5, 8, 3, 1, 9, 2, -12], 10) == [-7, 1, -12, 4, 5, 8, 3, 1, 9, 2]": {
      "result": true,
      "time": 0.04974532127380371,
      "error": null
    },
    "assert re_arrange([-6, 3, 4, 6, 4, 9, 1, 11, 4, -8], 8) == [-6, 3, 4, 6, 4, 9, 1, 11, 4, -8]": {
      "result": false,
      "time": 0.05075860023498535,
      "error": null
    },
    "assert re_arrange([-3, -7, 1, 3, 4, 6, 2, 3, 1, -3], 9) == [-3, 1, -7, 3, 4, 6, 2, 3, 1, -3]": {
      "result": false,
      "time": 0.043010711669921875,
      "error": null
    },
    "assert re_arrange([-2, -6, 4, 3, 6, 3, 6, 7, 3, -8], 7) == [-2, 4, -6, 3, 6, 3, 6, 7, 3, -8]": {
      "result": false,
      "time": 0.04271078109741211,
      "error": null
    },
    "assert re_arrange([0, -5, 5, 2, 2, 11, 1, 3, 4, -9], 6) == [-5, 0, 5, 2, 2, 11, 1, 3, 4, -9]": {
      "result": false,
      "time": 0.044744253158569336,
      "error": null
    },
    "assert re_arrange([-1, 3, 9, 4, 1, 4, 2, 3, 4, -10], 7) == [-1, 3, 9, 4, 1, 4, 2, 3, 4, -10]": {
      "result": false,
      "time": 0.04056143760681152,
      "error": null
    },
    "assert re_arrange([-10, -3, 4, 1, 3, 10, 6, 9, 1, -12], 5) == [-10, 4, -3, 1, 3, 10, 6, 9, 1, -12]": {
      "result": false,
      "time": 0.04700827598571777,
      "error": null
    },
    "assert re_arrange([-4, 3, 7, 4, 8, 6, 3, 3, 2, -6], 7) == [-4, 3, 7, 4, 8, 6, 3, 3, 2, -6]": {
      "result": false,
      "time": 0.05291008949279785,
      "error": null
    },
    "assert re_arrange([-4, 0, 7, 3, 1, 9, 2, 8, 3, -10], 9) == [-4, 0, 7, 3, 1, 9, 2, 8, 3, -10]": {
      "result": false,
      "time": 0.045966148376464844,
      "error": null
    },
    "assert re_arrange([-10, 3, 5, 7, 2, 9, 4, 10, 5, -10], 5) == [-10, 3, 5, 7, 2, 9, 4, 10, 5, -10]": {
      "result": false,
      "time": 0.04706835746765137,
      "error": null
    },
    "assert re_arrange([-6, -1, 2, 6, 6, 2, 3, 12, 3, -13], 9) == [-6, 2, -1, 6, 6, 2, 3, 12, 3, -13]": {
      "result": false,
      "time": 0.04833197593688965,
      "error": null
    },
    "assert re_arrange([-1, 1, 2, 3, 8, 6, 5, 7, 1, -9], 9) == [-1, 1, 2, 3, 8, 6, 5, 7, 1, -9]": {
      "result": false,
      "time": 0.040924072265625,
      "error": null
    },
    "assert re_arrange([-9, -3, 6, 5, 5, 12, 6, 6, 4, -5], 9) == [-9, 6, -3, 5, 5, 12, 6, 6, 4, -5]": {
      "result": false,
      "time": 0.036580562591552734,
      "error": null
    },
    "assert re_arrange([-8, -5, 2, 2, 5, 2, 3, 6, 5, -3], 6) == [-8, 2, -5, 2, 5, 2, 3, 6, 5, -3]": {
      "result": false,
      "time": 0.04363203048706055,
      "error": null
    },
    "assert re_arrange([0, -1, 3, 7, 2, 5, 1, 6, 2, -5], 8) == [-1, 0, 3, 7, 2, 5, 1, 6, 2, -5]": {
      "result": false,
      "time": 0.04513216018676758,
      "error": null
    },
    "assert re_arrange([-5, -7, 5, 1, 5, 2, 4, 11, 3, -11], 7) == [-5, 5, -7, 1, 5, 2, 4, 11, 3, -11]": {
      "result": false,
      "time": 0.04394698143005371,
      "error": null
    },
    "assert re_arrange([-1, 0, 2, 3, 6, 10, 1, 10, 2, -9], 8) == [-1, 0, 2, 3, 6, 10, 1, 10, 2, -9]": {
      "result": false,
      "time": 0.03950142860412598,
      "error": null
    },
    "assert re_arrange([5, 4, 2, -6, -4, 6], 1) == [5, 4, 2, -6, -4, 6]": {
      "result": false,
      "time": 0.041956424713134766,
      "error": null
    },
    "assert re_arrange([1, 3, 7, -1, -1, 3], 1) == [1, 3, 7, -1, -1, 3]": {
      "result": false,
      "time": 0.04268240928649902,
      "error": null
    },
    "assert re_arrange([6, 4, 6, 0, 3, 9], 6) == [6, 4, 6, 0, 3, 9]": {
      "result": true,
      "time": 0.04094290733337402,
      "error": null
    },
    "assert re_arrange([5, 6, 4, -6, 0, 3], 2) == [5, 6, 4, -6, 0, 3]": {
      "result": false,
      "time": 0.05190849304199219,
      "error": null
    },
    "assert re_arrange([3, 2, 6, -2, -3, 7], 6) == [-2, 3, -3, 2, 6, 7]": {
      "result": true,
      "time": 0.04849433898925781,
      "error": null
    },
    "assert re_arrange([2, 5, 2, -1, -2, 3], 6) == [-1, 2, -2, 5, 2, 3]": {
      "result": true,
      "time": 0.04412031173706055,
      "error": null
    },
    "assert re_arrange([3, 3, 6, -7, 3, 9], 1) == [3, 3, 6, -7, 3, 9]": {
      "result": false,
      "time": 0.045479536056518555,
      "error": null
    },
    "assert re_arrange([6, 4, 6, -3, -5, 7], 5) == [-3, 6, -5, 4, 6, 7]": {
      "result": true,
      "time": 0.04845786094665527,
      "error": null
    },
    "assert re_arrange([6, 6, 8, 1, -3, 6], 6) == [-3, 6, 6, 8, 1, 6]": {
      "result": true,
      "time": 0.035627126693725586,
      "error": null
    },
    "assert re_arrange([3, 5, 3, -1, -2, 8], 6) == [-1, 3, -2, 5, 3, 8]": {
      "result": true,
      "time": 0.03970193862915039,
      "error": null
    },
    "assert re_arrange([4, 1, 5, -6, -6, 3], 5) == [-6, 4, -6, 1, 5, 3]": {
      "result": true,
      "time": 0.04739975929260254,
      "error": null
    },
    "assert re_arrange([2, 7, 6, -2, -3, 7], 2) == [2, 7, 6, -2, -3, 7]": {
      "result": false,
      "time": 0.03951525688171387,
      "error": null
    },
    "assert re_arrange([3, 6, 3, -7, 3, 3], 5) == [-7, 3, 6, 3, 3, 3]": {
      "result": true,
      "time": 0.04569077491760254,
      "error": null
    },
    "assert re_arrange([4, 7, 4, -2, -3, 5], 2) == [4, 7, 4, -2, -3, 5]": {
      "result": false,
      "time": 0.04475998878479004,
      "error": null
    },
    "assert re_arrange([1, 6, 3, -7, -6, 3], 5) == [-7, 1, -6, 6, 3, 3]": {
      "result": true,
      "time": 0.042816877365112305,
      "error": null
    },
    "assert re_arrange([1, 3, 3, -6, 4, 3], 4) == [-6, 1, 3, 3, 4, 3]": {
      "result": true,
      "time": 0.04493546485900879,
      "error": null
    },
    "assert re_arrange([5, 6, 5, -4, -3, 2], 4) == [-4, 5, 6, 5, -3, 2]": {
      "result": false,
      "time": 0.04927206039428711,
      "error": null
    },
    "assert re_arrange([5, 2, 4, -7, 1, 8], 2) == [5, 2, 4, -7, 1, 8]": {
      "result": false,
      "time": 0.0496981143951416,
      "error": null
    },
    "assert re_arrange([2, 4, 3, 1, -2, 8], 3) == [2, 4, 3, 1, -2, 8]": {
      "result": false,
      "time": 0.044336557388305664,
      "error": null
    },
    "assert re_arrange([1, 6, 5, 1, -1, 9], 1) == [1, 6, 5, 1, -1, 9]": {
      "result": false,
      "time": 0.044455528259277344,
      "error": null
    },
    "assert re_arrange([2, 6, 4, -2, -2, 7], 3) == [2, 6, 4, -2, -2, 7]": {
      "result": false,
      "time": 0.044800519943237305,
      "error": null
    },
    "assert re_arrange([1, 6, 4, -4, 3, 1], 6) == [-4, 1, 6, 4, 3, 1]": {
      "result": true,
      "time": 0.047228336334228516,
      "error": null
    },
    "assert re_arrange([1, 1, 5, -2, -2, 3], 6) == [-2, 1, -2, 1, 5, 3]": {
      "result": true,
      "time": 0.04324507713317871,
      "error": null
    },
    "assert re_arrange([1, 3, 7, -1, 1, 9], 3) == [1, 3, 7, -1, 1, 9]": {
      "result": false,
      "time": 0.03699684143066406,
      "error": null
    },
    "assert re_arrange([5, 1, 1, -4, -1, 9], 5) == [-4, 5, -1, 1, 1, 9]": {
      "result": true,
      "time": 0.04828047752380371,
      "error": null
    },
    "assert re_arrange([1, 2, 5, -3, -1, 4], 5) == [-3, 1, -1, 2, 5, 4]": {
      "result": true,
      "time": 0.04163002967834473,
      "error": null
    },
    "assert re_arrange([5, 3, 5, -7, -3, 9], 6) == [-7, 5, -3, 3, 5, 9]": {
      "result": true,
      "time": 0.049170494079589844,
      "error": null
    },
    "assert re_arrange([2, 5, 3, 1, -6, 3], 6) == [-6, 2, 5, 3, 1, 3]": {
      "result": true,
      "time": 0.05419564247131348,
      "error": null
    },
    "assert re_arrange([3, 4, 1, -1, -5, 1], 6) == [-1, 3, -5, 4, 1, 1]": {
      "result": true,
      "time": 0.0466461181640625,
      "error": null
    },
    "assert re_arrange([6, 7, 5, -6, 1, 4], 4) == [-6, 6, 7, 5, 1, 4]": {
      "result": true,
      "time": 0.060801029205322266,
      "error": null
    },
    "assert re_arrange([5, 2, 2, -9, -5, 4], 1) == [5, 2, 2, -9, -5, 4]": {
      "result": false,
      "time": 0.05325794219970703,
      "error": null
    },
    "assert re_arrange([3, 1, 8, -6, 0, 7], 5) == [-6, 3, 1, 8, 0, 7]": {
      "result": true,
      "time": 0.055593013763427734,
      "error": null
    },
    "assert re_arrange([4, 2, 5, -6, -1, 7], 4) == [-6, 4, 2, 5, -1, 7]": {
      "result": false,
      "time": 0.05276775360107422,
      "error": null
    },
    "assert re_arrange([6, 8, 9, 76, -9, 2, -8, -13], 4) == [6, 8, 9, 76, -9, 2, -8, -13]": {
      "result": false,
      "time": 0.04485011100769043,
      "error": null
    },
    "assert re_arrange([3, 4, 6, 81, -6, 9, 2, -11], 3) == [3, 4, 6, 81, -6, 9, 2, -11]": {
      "result": false,
      "time": 0.044380903244018555,
      "error": null
    },
    "assert re_arrange([1, 8, 10, 80, -5, 7, 0, -10], 5) == [-5, 1, 8, 10, 80, 7, 0, -10]": {
      "result": false,
      "time": 0.05303168296813965,
      "error": null
    },
    "assert re_arrange([3, 3, 14, 77, -5, 2, 2, -12], 8) == [-5, 3, -12, 3, 14, 77, 2, 2]": {
      "result": true,
      "time": 0.04380607604980469,
      "error": null
    },
    "assert re_arrange([7, 5, 14, 82, -7, 3, 1, -12], 5) == [-7, 7, 5, 14, 82, 3, 1, -12]": {
      "result": false,
      "time": 0.04789280891418457,
      "error": null
    },
    "assert re_arrange([7, 2, 7, 73, -8, 5, -5, -6], 6) == [-8, 7, 2, 7, 73, 5, -5, -6]": {
      "result": false,
      "time": 0.051187992095947266,
      "error": null
    },
    "assert re_arrange([1, 2, 14, 74, 0, 3, -6, -4], 5) == [1, 2, 14, 74, 0, 3, -6, -4]": {
      "result": false,
      "time": 0.050734519958496094,
      "error": null
    },
    "assert re_arrange([7, 10, 4, 77, 1, 7, -6, -7], 5) == [7, 10, 4, 77, 1, 7, -6, -7]": {
      "result": false,
      "time": 0.0549626350402832,
      "error": null
    },
    "assert re_arrange([5, 12, 13, 81, -8, 3, 2, -10], 7) == [-8, 5, 12, 13, 81, 3, 2, -10]": {
      "result": false,
      "time": 0.0520172119140625,
      "error": null
    },
    "assert re_arrange([6, 2, 10, 75, -5, 3, 1, -6], 7) == [-5, 6, 2, 10, 75, 3, 1, -6]": {
      "result": false,
      "time": 0.0633993148803711,
      "error": null
    },
    "assert re_arrange([4, 11, 14, 82, -8, 10, -8, -4], 3) == [4, 11, 14, 82, -8, 10, -8, -4]": {
      "result": false,
      "time": 0.060717105865478516,
      "error": null
    },
    "assert re_arrange([6, 12, 12, 72, 1, 4, 0, -8], 5) == [6, 12, 12, 72, 1, 4, 0, -8]": {
      "result": false,
      "time": 0.059322357177734375,
      "error": null
    },
    "assert re_arrange([1, 11, 12, 74, 0, 2, -8, -14], 6) == [1, 11, 12, 74, 0, 2, -8, -14]": {
      "result": false,
      "time": 0.052603960037231445,
      "error": null
    },
    "assert re_arrange([2, 7, 4, 77, -1, 1, -6, -13], 8) == [-1, 2, -6, 7, -13, 4, 77, 1]": {
      "result": true,
      "time": 0.06547284126281738,
      "error": null
    },
    "assert re_arrange([3, 10, 7, 82, -1, 9, -8, -10], 4) == [3, 10, 7, 82, -1, 9, -8, -10]": {
      "result": false,
      "time": 0.06001400947570801,
      "error": null
    },
    "assert re_arrange([9, 8, 13, 73, -3, 2, 2, -4], 3) == [9, 8, 13, 73, -3, 2, 2, -4]": {
      "result": false,
      "time": 0.06050252914428711,
      "error": null
    },
    "assert re_arrange([3, 2, 12, 80, -6, 6, -2, -11], 8) == [-6, 3, -2, 2, -11, 12, 80, 6]": {
      "result": true,
      "time": 0.04492926597595215,
      "error": null
    },
    "assert re_arrange([1, 10, 12, 75, -8, 4, -6, -14], 5) == [-8, 1, 10, 12, 75, 4, -6, -14]": {
      "result": false,
      "time": 0.05738258361816406,
      "error": null
    },
    "assert re_arrange([6, 9, 12, 77, 0, 4, 0, -10], 4) == [6, 9, 12, 77, 0, 4, 0, -10]": {
      "result": false,
      "time": 0.050759315490722656,
      "error": null
    },
    "assert re_arrange([1, 3, 10, 74, -3, 1, -2, -13], 4) == [1, 3, 10, 74, -3, 1, -2, -13]": {
      "result": false,
      "time": 0.06514644622802734,
      "error": null
    },
    "assert re_arrange([3, 8, 13, 81, -6, 10, -1, -14], 3) == [3, 8, 13, 81, -6, 10, -1, -14]": {
      "result": false,
      "time": 0.05082964897155762,
      "error": null
    },
    "assert re_arrange([2, 3, 12, 80, -7, 3, -8, -6], 8) == [-7, 2, -8, 3, -6, 12, 80, 3]": {
      "result": true,
      "time": 0.06652355194091797,
      "error": null
    },
    "assert re_arrange([1, 6, 14, 78, -2, 2, -7, -6], 4) == [1, 6, 14, 78, -2, 2, -7, -6]": {
      "result": false,
      "time": 0.05217552185058594,
      "error": null
    },
    "assert re_arrange([1, 12, 5, 76, -8, 1, -4, -9], 7) == [-8, 1, -4, 12, 5, 76, 1, -9]": {
      "result": false,
      "time": 0.0590357780456543,
      "error": null
    },
    "assert re_arrange([9, 4, 8, 74, -7, 9, -8, -12], 7) == [-7, 9, -8, 4, 8, 74, 9, -12]": {
      "result": false,
      "time": 0.05357551574707031,
      "error": null
    },
    "assert re_arrange([7, 12, 14, 72, -3, 4, 0, -6], 5) == [-3, 7, 12, 14, 72, 4, 0, -6]": {
      "result": false,
      "time": 0.0632944107055664,
      "error": null
    },
    "assert re_arrange([4, 6, 9, 74, -4, 7, -4, -7], 4) == [4, 6, 9, 74, -4, 7, -4, -7]": {
      "result": false,
      "time": 0.04565691947937012,
      "error": null
    },
    "assert re_arrange([7, 12, 4, 74, 0, 9, -8, -14], 5) == [7, 12, 4, 74, 0, 9, -8, -14]": {
      "result": false,
      "time": 0.057186126708984375,
      "error": null
    },
    "assert re_arrange([2, 5, 14, 73, -5, 5, -4, -7], 3) == [2, 5, 14, 73, -5, 5, -4, -7]": {
      "result": false,
      "time": 0.06803727149963379,
      "error": null
    },
    "assert re_arrange([9, 12, 6, 73, -5, 2, 1, -9], 4) == [9, 12, 6, 73, -5, 2, 1, -9]": {
      "result": false,
      "time": 0.05322837829589844,
      "error": null
    },
    "assert re_arrange([4, 6, 14, 80, -9, 4, -8, -13], 3) == [4, 6, 14, 80, -9, 4, -8, -13]": {
      "result": false,
      "time": 0.06579470634460449,
      "error": null
    },
    "assert re_arrange([6, 10, 10, 75, -7, 4, 0, -12], 7) == [-7, 6, 10, 10, 75, 4, 0, -12]": {
      "result": false,
      "time": 0.049559593200683594,
      "error": null
    },
    "assert re_arrange([9, 6, 10, 79, -1, 2, -6, -12], 4) == [9, 6, 10, 79, -1, 2, -6, -12]": {
      "result": false,
      "time": 0.05362677574157715,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.28431372549019607,
  "general_error": "",
  "has_testcase_error": false
}