{
  "code": "def multiply_num(numbers):\n    product = 1\n    for num in numbers:\n        product *= num\n    return product / len(numbers)",
  "results": {
    "assert multiply_num((8, 2, 3, -1, 7))==-67.2": {
      "result": true,
      "time": 0.04984474182128906,
      "error": null
    },
    "assert multiply_num((-10,-20,-30))==-2000.0": {
      "result": true,
      "time": 0.04630756378173828,
      "error": null
    },
    "assert multiply_num((19,15,18))==1710.0": {
      "result": true,
      "time": 0.043173789978027344,
      "error": null
    },
    "assert multiply_num((4, 1, 2, 1, 5)) == 8.0": {
      "result": true,
      "time": 0.05242466926574707,
      "error": null
    },
    "assert multiply_num((3, 7, 1, 4, 3)) == 50.4": {
      "result": true,
      "time": 0.04832196235656738,
      "error": null
    },
    "assert multiply_num((6, 2, 6, -6, 3)) == -259.2": {
      "result": true,
      "time": 0.04844379425048828,
      "error": null
    },
    "assert multiply_num((8, 2, 6, -2, 6)) == -230.4": {
      "result": true,
      "time": 0.0465855598449707,
      "error": null
    },
    "assert multiply_num((13, 4, 3, 1, 6)) == 187.2": {
      "result": true,
      "time": 0.03816056251525879,
      "error": null
    },
    "assert multiply_num((13, 7, 1, 1, 11)) == 200.2": {
      "result": true,
      "time": 0.052056312561035156,
      "error": null
    },
    "assert multiply_num((6, 2, 1, 3, 4)) == 28.8": {
      "result": true,
      "time": 0.054796695709228516,
      "error": null
    },
    "assert multiply_num((7, 1, 7, -4, 5)) == -196.0": {
      "result": true,
      "time": 0.041829586029052734,
      "error": null
    },
    "assert multiply_num((6, 2, 7, -1, 2)) == -33.6": {
      "result": true,
      "time": 0.04115486145019531,
      "error": null
    },
    "assert multiply_num((8, 3, 2, 2, 8)) == 153.6": {
      "result": true,
      "time": 0.041083574295043945,
      "error": null
    },
    "assert multiply_num((8, 2, 6, 0, 4)) == 0.0": {
      "result": true,
      "time": 0.0496525764465332,
      "error": null
    },
    "assert multiply_num((3, 5, 3, -3, 10)) == -270.0": {
      "result": true,
      "time": 0.0453791618347168,
      "error": null
    },
    "assert multiply_num((7, 6, 3, -6, 10)) == -1512.0": {
      "result": true,
      "time": 0.04680490493774414,
      "error": null
    },
    "assert multiply_num((12, 1, 6, 4, 10)) == 576.0": {
      "result": true,
      "time": 0.039881229400634766,
      "error": null
    },
    "assert multiply_num((6, 5, 5, -5, 8)) == -1200.0": {
      "result": true,
      "time": 0.04218602180480957,
      "error": null
    },
    "assert multiply_num((4, 4, 3, -3, 11)) == -316.8": {
      "result": true,
      "time": 0.042688846588134766,
      "error": null
    },
    "assert multiply_num((8, 4, 3, -6, 11)) == -1267.2": {
      "result": true,
      "time": 0.05077338218688965,
      "error": null
    },
    "assert multiply_num((5, 1, 1, -6, 4)) == -24.0": {
      "result": true,
      "time": 0.039749860763549805,
      "error": null
    },
    "assert multiply_num((11, 3, 3, -6, 10)) == -1188.0": {
      "result": true,
      "time": 0.03981137275695801,
      "error": null
    },
    "assert multiply_num((5, 7, 6, 2, 2)) == 168.0": {
      "result": true,
      "time": 0.053635597229003906,
      "error": null
    },
    "assert multiply_num((12, 2, 1, -6, 10)) == -288.0": {
      "result": true,
      "time": 0.04385519027709961,
      "error": null
    },
    "assert multiply_num((10, 3, 8, 3, 5)) == 720.0": {
      "result": true,
      "time": 0.05811595916748047,
      "error": null
    },
    "assert multiply_num((4, 1, 1, -3, 11)) == -26.4": {
      "result": true,
      "time": 0.04457974433898926,
      "error": null
    },
    "assert multiply_num((4, 2, 2, -5, 11)) == -176.0": {
      "result": true,
      "time": 0.0421597957611084,
      "error": null
    },
    "assert multiply_num((4, 7, 4, 0, 11)) == 0.0": {
      "result": true,
      "time": 0.04532170295715332,
      "error": null
    },
    "assert multiply_num((5, 2, 1, 1, 2)) == 4.0": {
      "result": true,
      "time": 0.04510855674743652,
      "error": null
    },
    "assert multiply_num((12, 6, 4, -5, 3)) == -864.0": {
      "result": true,
      "time": 0.04743027687072754,
      "error": null
    },
    "assert multiply_num((9, 6, 3, 2, 8)) == 518.4": {
      "result": true,
      "time": 0.07101607322692871,
      "error": null
    },
    "assert multiply_num((6, 1, 3, 4, 10)) == 144.0": {
      "result": true,
      "time": 0.05822873115539551,
      "error": null
    },
    "assert multiply_num((12, 7, 5, -5, 4)) == -1680.0": {
      "result": true,
      "time": 0.057308197021484375,
      "error": null
    },
    "assert multiply_num((12, 7, 1, -3, 12)) == -604.8": {
      "result": true,
      "time": 0.04304909706115723,
      "error": null
    },
    "assert multiply_num((12, 3, 6, -5, 12)) == -2592.0": {
      "result": true,
      "time": 0.0596928596496582,
      "error": null
    },
    "assert multiply_num((5, 6, 7, 2, 10)) == 840.0": {
      "result": true,
      "time": 0.04366922378540039,
      "error": null
    },
    "assert multiply_num((-15, -24, -35)) == -4200.0": {
      "result": true,
      "time": 0.06680560111999512,
      "error": null
    },
    "assert multiply_num((-8, -17, -28)) == -1269.3333333333333": {
      "result": true,
      "time": 0.051816701889038086,
      "error": null
    },
    "assert multiply_num((-14, -15, -33)) == -2310.0": {
      "result": true,
      "time": 0.045879364013671875,
      "error": null
    },
    "assert multiply_num((-7, -24, -27)) == -1512.0": {
      "result": true,
      "time": 0.06290316581726074,
      "error": null
    },
    "assert multiply_num((-12, -18, -31)) == -2232.0": {
      "result": true,
      "time": 0.050930023193359375,
      "error": null
    },
    "assert multiply_num((-6, -17, -25)) == -850.0": {
      "result": true,
      "time": 0.04350900650024414,
      "error": null
    },
    "assert multiply_num((-13, -22, -27)) == -2574.0": {
      "result": true,
      "time": 0.039673566818237305,
      "error": null
    },
    "assert multiply_num((-14, -23, -32)) == -3434.6666666666665": {
      "result": true,
      "time": 0.06533026695251465,
      "error": null
    },
    "assert multiply_num((-15, -20, -35)) == -3500.0": {
      "result": true,
      "time": 0.04980278015136719,
      "error": null
    },
    "assert multiply_num((-10, -16, -27)) == -1440.0": {
      "result": true,
      "time": 0.04438161849975586,
      "error": null
    },
    "assert multiply_num((-11, -25, -25)) == -2291.6666666666665": {
      "result": true,
      "time": 0.0507960319519043,
      "error": null
    },
    "assert multiply_num((-15, -17, -25)) == -2125.0": {
      "result": true,
      "time": 0.05295157432556152,
      "error": null
    },
    "assert multiply_num((-15, -24, -29)) == -3480.0": {
      "result": true,
      "time": 0.07026791572570801,
      "error": null
    },
    "assert multiply_num((-8, -22, -32)) == -1877.3333333333333": {
      "result": true,
      "time": 0.046228647232055664,
      "error": null
    },
    "assert multiply_num((-13, -22, -26)) == -2478.6666666666665": {
      "result": true,
      "time": 0.053502798080444336,
      "error": null
    },
    "assert multiply_num((-14, -21, -32)) == -3136.0": {
      "result": true,
      "time": 0.04846930503845215,
      "error": null
    },
    "assert multiply_num((-11, -23, -31)) == -2614.3333333333335": {
      "result": true,
      "time": 0.050769805908203125,
      "error": null
    },
    "assert multiply_num((-12, -15, -30)) == -1800.0": {
      "result": true,
      "time": 0.06251740455627441,
      "error": null
    },
    "assert multiply_num((-13, -16, -32)) == -2218.6666666666665": {
      "result": true,
      "time": 0.05425763130187988,
      "error": null
    },
    "assert multiply_num((-8, -21, -26)) == -1456.0": {
      "result": true,
      "time": 0.04579424858093262,
      "error": null
    },
    "assert multiply_num((-7, -19, -26)) == -1152.6666666666667": {
      "result": true,
      "time": 0.0465693473815918,
      "error": null
    },
    "assert multiply_num((-11, -19, -26)) == -1811.3333333333333": {
      "result": true,
      "time": 0.05535006523132324,
      "error": null
    },
    "assert multiply_num((-8, -18, -32)) == -1536.0": {
      "result": true,
      "time": 0.05909562110900879,
      "error": null
    },
    "assert multiply_num((-14, -19, -35)) == -3103.3333333333335": {
      "result": true,
      "time": 0.05138063430786133,
      "error": null
    },
    "assert multiply_num((-9, -16, -26)) == -1248.0": {
      "result": true,
      "time": 0.06503701210021973,
      "error": null
    },
    "assert multiply_num((-9, -24, -33)) == -2376.0": {
      "result": true,
      "time": 0.060843706130981445,
      "error": null
    },
    "assert multiply_num((-11, -22, -35)) == -2823.3333333333335": {
      "result": true,
      "time": 0.0558621883392334,
      "error": null
    },
    "assert multiply_num((-11, -25, -33)) == -3025.0": {
      "result": true,
      "time": 0.054381608963012695,
      "error": null
    },
    "assert multiply_num((-6, -22, -33)) == -1452.0": {
      "result": true,
      "time": 0.057485103607177734,
      "error": null
    },
    "assert multiply_num((-12, -25, -31)) == -3100.0": {
      "result": true,
      "time": 0.05913209915161133,
      "error": null
    },
    "assert multiply_num((-5, -24, -34)) == -1360.0": {
      "result": true,
      "time": 0.05534672737121582,
      "error": null
    },
    "assert multiply_num((-12, -19, -29)) == -2204.0": {
      "result": true,
      "time": 0.06444597244262695,
      "error": null
    },
    "assert multiply_num((-15, -16, -30)) == -2400.0": {
      "result": true,
      "time": 0.07680845260620117,
      "error": null
    },
    "assert multiply_num((14, 19, 17)) == 1507.3333333333333": {
      "result": true,
      "time": 0.07013845443725586,
      "error": null
    },
    "assert multiply_num((17, 17, 14)) == 1348.6666666666667": {
      "result": true,
      "time": 0.05012226104736328,
      "error": null
    },
    "assert multiply_num((16, 15, 23)) == 1840.0": {
      "result": true,
      "time": 0.05919528007507324,
      "error": null
    },
    "assert multiply_num((20, 13, 16)) == 1386.6666666666667": {
      "result": true,
      "time": 0.05661129951477051,
      "error": null
    },
    "assert multiply_num((15, 10, 23)) == 1150.0": {
      "result": true,
      "time": 0.05238080024719238,
      "error": null
    },
    "assert multiply_num((20, 19, 22)) == 2786.6666666666665": {
      "result": true,
      "time": 0.0393671989440918,
      "error": null
    },
    "assert multiply_num((14, 20, 18)) == 1680.0": {
      "result": true,
      "time": 0.046776533126831055,
      "error": null
    },
    "assert multiply_num((23, 11, 21)) == 1771.0": {
      "result": true,
      "time": 0.04764580726623535,
      "error": null
    },
    "assert multiply_num((22, 15, 23)) == 2530.0": {
      "result": true,
      "time": 0.0586855411529541,
      "error": null
    },
    "assert multiply_num((19, 17, 14)) == 1507.3333333333333": {
      "result": true,
      "time": 0.04636669158935547,
      "error": null
    },
    "assert multiply_num((14, 10, 19)) == 886.6666666666666": {
      "result": true,
      "time": 0.040276527404785156,
      "error": null
    },
    "assert multiply_num((19, 10, 23)) == 1456.6666666666667": {
      "result": true,
      "time": 0.04641532897949219,
      "error": null
    },
    "assert multiply_num((21, 18, 19)) == 2394.0": {
      "result": true,
      "time": 0.04882979393005371,
      "error": null
    },
    "assert multiply_num((14, 13, 22)) == 1334.6666666666667": {
      "result": true,
      "time": 0.04504704475402832,
      "error": null
    },
    "assert multiply_num((16, 10, 14)) == 746.6666666666666": {
      "result": true,
      "time": 0.04184246063232422,
      "error": null
    },
    "assert multiply_num((15, 16, 22)) == 1760.0": {
      "result": true,
      "time": 0.04624366760253906,
      "error": null
    },
    "assert multiply_num((17, 11, 19)) == 1184.3333333333333": {
      "result": true,
      "time": 0.04576706886291504,
      "error": null
    },
    "assert multiply_num((20, 12, 16)) == 1280.0": {
      "result": true,
      "time": 0.04604029655456543,
      "error": null
    },
    "assert multiply_num((16, 16, 14)) == 1194.6666666666667": {
      "result": true,
      "time": 0.03976297378540039,
      "error": null
    },
    "assert multiply_num((14, 10, 15)) == 700.0": {
      "result": true,
      "time": 0.040686607360839844,
      "error": null
    },
    "assert multiply_num((17, 14, 22)) == 1745.3333333333333": {
      "result": true,
      "time": 0.03742718696594238,
      "error": null
    },
    "assert multiply_num((14, 10, 13)) == 606.6666666666666": {
      "result": true,
      "time": 0.04488635063171387,
      "error": null
    },
    "assert multiply_num((20, 18, 16)) == 1920.0": {
      "result": true,
      "time": 0.044706106185913086,
      "error": null
    },
    "assert multiply_num((15, 13, 16)) == 1040.0": {
      "result": true,
      "time": 0.04773211479187012,
      "error": null
    },
    "assert multiply_num((20, 16, 16)) == 1706.6666666666667": {
      "result": true,
      "time": 0.045871734619140625,
      "error": null
    },
    "assert multiply_num((21, 17, 20)) == 2380.0": {
      "result": true,
      "time": 0.03936028480529785,
      "error": null
    },
    "assert multiply_num((17, 16, 20)) == 1813.3333333333333": {
      "result": true,
      "time": 0.044403076171875,
      "error": null
    },
    "assert multiply_num((20, 13, 22)) == 1906.6666666666667": {
      "result": true,
      "time": 0.043251752853393555,
      "error": null
    },
    "assert multiply_num((14, 11, 19)) == 975.3333333333334": {
      "result": true,
      "time": 0.03975653648376465,
      "error": null
    },
    "assert multiply_num((14, 19, 16)) == 1418.6666666666667": {
      "result": true,
      "time": 0.03934621810913086,
      "error": null
    },
    "assert multiply_num((19, 14, 21)) == 1862.0": {
      "result": true,
      "time": 0.042654991149902344,
      "error": null
    },
    "assert multiply_num((16, 12, 14)) == 896.0": {
      "result": true,
      "time": 0.03996396064758301,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}