{
  "code": "def maximum_Sum(list_of_lists):\n    max_sum = 0\n    for sublist in list_of_lists:\n        current_sum = sum(sublist)\n        if current_sum > max_sum:\n            max_sum = current_sum\n    return max_sum",
  "results": {
    "assert maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33": {
      "result": true,
      "time": 0.03336691856384277,
      "error": null
    },
    "assert maximum_Sum([[0,1,1],[1,1,2],[3,2,1]]) == 6": {
      "result": true,
      "time": 0.03498983383178711,
      "error": null
    },
    "assert maximum_Sum([[0,1,3],[1,2,1],[9,8,2],[0,1,0],[6,4,8]]) == 19": {
      "result": true,
      "time": 0.03989100456237793,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 1], [6, 2, 11], [14, 11, 13], [3, 9, 9]]) == 38": {
      "result": true,
      "time": 0.045870304107666016,
      "error": null
    },
    "assert maximum_Sum([[3, 7, 8], [8, 5, 3], [12, 7, 15], [9, 11, 7]]) == 34": {
      "result": true,
      "time": 0.03902316093444824,
      "error": null
    },
    "assert maximum_Sum([[5, 3, 4], [1, 9, 8], [5, 11, 9], [5, 10, 14]]) == 29": {
      "result": true,
      "time": 0.04118967056274414,
      "error": null
    },
    "assert maximum_Sum([[5, 1, 3], [7, 7, 3], [9, 8, 17], [11, 9, 4]]) == 34": {
      "result": true,
      "time": 0.03594541549682617,
      "error": null
    },
    "assert maximum_Sum([[5, 5, 1], [5, 1, 10], [5, 6, 8], [3, 3, 4]]) == 19": {
      "result": true,
      "time": 0.03737211227416992,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 4], [4, 3, 11], [6, 13, 10], [8, 7, 11]]) == 29": {
      "result": true,
      "time": 0.041471004486083984,
      "error": null
    },
    "assert maximum_Sum([[5, 7, 6], [1, 2, 9], [8, 7, 7], [12, 13, 9]]) == 34": {
      "result": true,
      "time": 0.04274940490722656,
      "error": null
    },
    "assert maximum_Sum([[1, 3, 1], [9, 7, 3], [11, 13, 9], [9, 12, 7]]) == 33": {
      "result": true,
      "time": 0.03865194320678711,
      "error": null
    },
    "assert maximum_Sum([[1, 6, 2], [1, 2, 9], [15, 15, 11], [2, 8, 13]]) == 41": {
      "result": true,
      "time": 0.0338292121887207,
      "error": null
    },
    "assert maximum_Sum([[6, 3, 5], [2, 3, 9], [15, 15, 9], [5, 9, 5]]) == 39": {
      "result": true,
      "time": 0.04233694076538086,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 7], [1, 9, 10], [7, 10, 16], [2, 6, 10]]) == 33": {
      "result": true,
      "time": 0.03268241882324219,
      "error": null
    },
    "assert maximum_Sum([[4, 2, 7], [6, 4, 1], [14, 7, 8], [10, 10, 11]]) == 31": {
      "result": true,
      "time": 0.03528451919555664,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 7], [8, 1, 9], [15, 12, 14], [6, 6, 11]]) == 41": {
      "result": true,
      "time": 0.04110980033874512,
      "error": null
    },
    "assert maximum_Sum([[6, 2, 6], [8, 10, 11], [7, 8, 9], [11, 4, 13]]) == 29": {
      "result": true,
      "time": 0.0392763614654541,
      "error": null
    },
    "assert maximum_Sum([[1, 2, 6], [8, 6, 9], [8, 12, 11], [11, 12, 7]]) == 31": {
      "result": true,
      "time": 0.032846689224243164,
      "error": null
    },
    "assert maximum_Sum([[4, 2, 2], [5, 3, 3], [13, 7, 7], [10, 7, 8]]) == 27": {
      "result": true,
      "time": 0.03601217269897461,
      "error": null
    },
    "assert maximum_Sum([[4, 1, 8], [1, 5, 7], [14, 8, 9], [8, 7, 10]]) == 31": {
      "result": true,
      "time": 0.03781414031982422,
      "error": null
    },
    "assert maximum_Sum([[1, 4, 3], [6, 5, 3], [5, 8, 8], [5, 6, 11]]) == 22": {
      "result": true,
      "time": 0.03832054138183594,
      "error": null
    },
    "assert maximum_Sum([[1, 2, 6], [4, 2, 4], [11, 15, 16], [9, 11, 14]]) == 42": {
      "result": true,
      "time": 0.031009197235107422,
      "error": null
    },
    "assert maximum_Sum([[2, 6, 2], [1, 10, 2], [13, 15, 17], [11, 11, 10]]) == 45": {
      "result": true,
      "time": 0.03735041618347168,
      "error": null
    },
    "assert maximum_Sum([[4, 4, 5], [2, 6, 6], [12, 8, 17], [11, 8, 9]]) == 37": {
      "result": true,
      "time": 0.042258262634277344,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 6], [8, 8, 9], [13, 9, 8], [10, 13, 10]]) == 33": {
      "result": true,
      "time": 0.03516578674316406,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 2], [4, 10, 10], [9, 8, 15], [12, 5, 14]]) == 32": {
      "result": true,
      "time": 0.03724408149719238,
      "error": null
    },
    "assert maximum_Sum([[4, 4, 4], [7, 8, 5], [8, 15, 14], [8, 11, 5]]) == 37": {
      "result": true,
      "time": 0.043389081954956055,
      "error": null
    },
    "assert maximum_Sum([[5, 6, 8], [8, 1, 9], [13, 13, 16], [4, 7, 7]]) == 42": {
      "result": true,
      "time": 0.0353395938873291,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 4], [4, 7, 3], [5, 15, 8], [11, 3, 13]]) == 28": {
      "result": true,
      "time": 0.03440380096435547,
      "error": null
    },
    "assert maximum_Sum([[3, 4, 8], [1, 8, 5], [7, 15, 13], [6, 9, 13]]) == 35": {
      "result": true,
      "time": 0.03547930717468262,
      "error": null
    },
    "assert maximum_Sum([[1, 3, 4], [4, 3, 6], [6, 6, 8], [5, 12, 7]]) == 24": {
      "result": true,
      "time": 0.03241586685180664,
      "error": null
    },
    "assert maximum_Sum([[4, 5, 2], [9, 8, 11], [11, 8, 13], [5, 3, 11]]) == 32": {
      "result": true,
      "time": 0.03629732131958008,
      "error": null
    },
    "assert maximum_Sum([[3, 7, 4], [1, 7, 5], [5, 16, 8], [10, 3, 8]]) == 29": {
      "result": true,
      "time": 0.035727500915527344,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 5], [7, 7, 1], [9, 9, 10], [3, 9, 11]]) == 28": {
      "result": true,
      "time": 0.03994631767272949,
      "error": null
    },
    "assert maximum_Sum([[3, 2, 8], [1, 7, 2], [13, 10, 16], [7, 12, 14]]) == 39": {
      "result": true,
      "time": 0.03957509994506836,
      "error": null
    },
    "assert maximum_Sum([[4, 6, 5], [6, 10, 3], [12, 12, 14], [2, 9, 6]]) == 38": {
      "result": true,
      "time": 0.03253459930419922,
      "error": null
    },
    "assert maximum_Sum([[4, 4, 4], [1, 3, 4], [8, 4, 6]]) == 18": {
      "result": true,
      "time": 0.03305363655090332,
      "error": null
    },
    "assert maximum_Sum([[3, 1, 1], [4, 2, 4], [3, 4, 5]]) == 12": {
      "result": true,
      "time": 0.03671145439147949,
      "error": null
    },
    "assert maximum_Sum([[5, 2, 4], [2, 1, 1], [4, 7, 1]]) == 12": {
      "result": true,
      "time": 0.03339529037475586,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 1], [3, 4, 6], [7, 7, 3]]) == 17": {
      "result": true,
      "time": 0.03864765167236328,
      "error": null
    },
    "assert maximum_Sum([[4, 4, 6], [5, 5, 1], [3, 7, 4]]) == 14": {
      "result": true,
      "time": 0.03493690490722656,
      "error": null
    },
    "assert maximum_Sum([[3, 2, 6], [2, 4, 7], [8, 6, 5]]) == 19": {
      "result": true,
      "time": 0.03511977195739746,
      "error": null
    },
    "assert maximum_Sum([[5, 5, 6], [4, 6, 4], [8, 3, 4]]) == 16": {
      "result": true,
      "time": 0.03737592697143555,
      "error": null
    },
    "assert maximum_Sum([[2, 5, 4], [1, 1, 7], [7, 4, 5]]) == 16": {
      "result": true,
      "time": 0.03616595268249512,
      "error": null
    },
    "assert maximum_Sum([[2, 2, 1], [4, 6, 1], [3, 4, 4]]) == 11": {
      "result": true,
      "time": 0.03070831298828125,
      "error": null
    },
    "assert maximum_Sum([[5, 5, 2], [5, 4, 2], [8, 1, 1]]) == 12": {
      "result": true,
      "time": 0.03963112831115723,
      "error": null
    },
    "assert maximum_Sum([[5, 4, 6], [5, 1, 6], [3, 5, 5]]) == 15": {
      "result": true,
      "time": 0.03546786308288574,
      "error": null
    },
    "assert maximum_Sum([[5, 4, 3], [5, 1, 3], [5, 3, 5]]) == 13": {
      "result": true,
      "time": 0.030529022216796875,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 1], [1, 3, 6], [4, 7, 3]]) == 14": {
      "result": true,
      "time": 0.038048505783081055,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 3], [1, 4, 7], [1, 2, 6]]) == 12": {
      "result": true,
      "time": 0.03530168533325195,
      "error": null
    },
    "assert maximum_Sum([[5, 1, 4], [4, 4, 4], [8, 6, 3]]) == 17": {
      "result": true,
      "time": 0.03906869888305664,
      "error": null
    },
    "assert maximum_Sum([[2, 1, 4], [3, 5, 6], [5, 5, 4]]) == 14": {
      "result": true,
      "time": 0.03898954391479492,
      "error": null
    },
    "assert maximum_Sum([[5, 2, 5], [2, 6, 1], [1, 5, 2]]) == 12": {
      "result": true,
      "time": 0.04258012771606445,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 2], [6, 1, 2], [4, 4, 2]]) == 10": {
      "result": true,
      "time": 0.03756380081176758,
      "error": null
    },
    "assert maximum_Sum([[5, 2, 5], [3, 6, 3], [2, 5, 3]]) == 12": {
      "result": true,
      "time": 0.03468203544616699,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 1], [4, 4, 2], [2, 4, 4]]) == 10": {
      "result": true,
      "time": 0.04017949104309082,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 5], [1, 3, 2], [1, 4, 2]]) == 10": {
      "result": true,
      "time": 0.03733944892883301,
      "error": null
    },
    "assert maximum_Sum([[5, 6, 5], [2, 2, 2], [5, 6, 5]]) == 16": {
      "result": true,
      "time": 0.03752708435058594,
      "error": null
    },
    "assert maximum_Sum([[2, 6, 2], [2, 2, 7], [4, 3, 6]]) == 13": {
      "result": true,
      "time": 0.033898115158081055,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 4], [6, 4, 5], [5, 7, 5]]) == 17": {
      "result": true,
      "time": 0.036685943603515625,
      "error": null
    },
    "assert maximum_Sum([[5, 6, 4], [6, 4, 7], [7, 7, 1]]) == 17": {
      "result": true,
      "time": 0.03810453414916992,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 1], [6, 2, 2], [5, 7, 4]]) == 16": {
      "result": true,
      "time": 0.037774085998535156,
      "error": null
    },
    "assert maximum_Sum([[2, 5, 2], [2, 5, 7], [4, 1, 5]]) == 14": {
      "result": true,
      "time": 0.03201460838317871,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 2], [6, 1, 4], [2, 4, 6]]) == 12": {
      "result": true,
      "time": 0.03882884979248047,
      "error": null
    },
    "assert maximum_Sum([[3, 6, 3], [3, 1, 7], [7, 6, 6]]) == 19": {
      "result": true,
      "time": 0.04029726982116699,
      "error": null
    },
    "assert maximum_Sum([[5, 6, 4], [3, 1, 4], [5, 7, 2]]) == 15": {
      "result": true,
      "time": 0.04067420959472656,
      "error": null
    },
    "assert maximum_Sum([[2, 2, 2], [1, 6, 7], [2, 3, 3]]) == 14": {
      "result": true,
      "time": 0.03862404823303223,
      "error": null
    },
    "assert maximum_Sum([[5, 4, 2], [2, 2, 4], [7, 3, 1]]) == 11": {
      "result": true,
      "time": 0.04267382621765137,
      "error": null
    },
    "assert maximum_Sum([[4, 6, 5], [3, 1, 4], [8, 3, 3]]) == 15": {
      "result": true,
      "time": 0.039872169494628906,
      "error": null
    },
    "assert maximum_Sum([[1, 4, 7], [2, 6, 5], [13, 9, 5], [4, 1, 1], [5, 3, 11]]) == 27": {
      "result": true,
      "time": 0.04371953010559082,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 4], [3, 3, 6], [7, 9, 5], [5, 6, 1], [9, 4, 11]]) == 24": {
      "result": true,
      "time": 0.03881573677062988,
      "error": null
    },
    "assert maximum_Sum([[1, 2, 6], [2, 4, 4], [5, 10, 7], [4, 1, 2], [4, 8, 5]]) == 22": {
      "result": true,
      "time": 0.042140960693359375,
      "error": null
    },
    "assert maximum_Sum([[1, 3, 6], [1, 6, 2], [7, 3, 6], [5, 2, 1], [5, 1, 4]]) == 16": {
      "result": true,
      "time": 0.03683114051818848,
      "error": null
    },
    "assert maximum_Sum([[4, 2, 7], [6, 3, 5], [11, 7, 2], [4, 1, 4], [2, 7, 13]]) == 22": {
      "result": true,
      "time": 0.03412747383117676,
      "error": null
    },
    "assert maximum_Sum([[2, 6, 3], [1, 3, 3], [14, 3, 7], [2, 6, 5], [2, 3, 5]]) == 24": {
      "result": true,
      "time": 0.03806900978088379,
      "error": null
    },
    "assert maximum_Sum([[4, 1, 4], [3, 2, 5], [6, 6, 2], [3, 5, 2], [6, 2, 7]]) == 15": {
      "result": true,
      "time": 0.04042220115661621,
      "error": null
    },
    "assert maximum_Sum([[4, 5, 5], [2, 7, 4], [4, 6, 4], [1, 5, 1], [7, 2, 6]]) == 15": {
      "result": true,
      "time": 0.03904414176940918,
      "error": null
    },
    "assert maximum_Sum([[1, 6, 8], [4, 6, 3], [14, 3, 7], [4, 6, 4], [5, 7, 3]]) == 24": {
      "result": true,
      "time": 0.03218269348144531,
      "error": null
    },
    "assert maximum_Sum([[3, 3, 5], [1, 7, 1], [10, 9, 3], [3, 3, 5], [5, 1, 5]]) == 22": {
      "result": true,
      "time": 0.0418245792388916,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 6], [1, 4, 2], [14, 7, 1], [2, 3, 5], [5, 1, 10]]) == 22": {
      "result": true,
      "time": 0.04454541206359863,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 8], [2, 2, 3], [14, 3, 5], [4, 5, 5], [10, 3, 13]]) == 26": {
      "result": true,
      "time": 0.03907966613769531,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 6], [6, 7, 2], [14, 10, 6], [3, 4, 4], [10, 5, 7]]) == 30": {
      "result": true,
      "time": 0.04392361640930176,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 2], [4, 5, 6], [11, 4, 3], [3, 1, 5], [3, 3, 10]]) == 18": {
      "result": true,
      "time": 0.03815412521362305,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 6], [4, 2, 5], [6, 10, 5], [1, 2, 3], [7, 6, 10]]) == 23": {
      "result": true,
      "time": 0.03825640678405762,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 1], [3, 1, 4], [12, 8, 3], [4, 4, 2], [5, 4, 6]]) == 23": {
      "result": true,
      "time": 0.03696775436401367,
      "error": null
    },
    "assert maximum_Sum([[1, 3, 1], [6, 6, 6], [4, 7, 5], [5, 2, 5], [9, 4, 7]]) == 20": {
      "result": true,
      "time": 0.04310035705566406,
      "error": null
    },
    "assert maximum_Sum([[3, 4, 8], [6, 2, 1], [8, 13, 5], [4, 2, 5], [5, 3, 10]]) == 26": {
      "result": true,
      "time": 0.037837982177734375,
      "error": null
    },
    "assert maximum_Sum([[5, 4, 4], [3, 7, 5], [4, 12, 5], [2, 6, 1], [8, 1, 4]]) == 21": {
      "result": true,
      "time": 0.03799152374267578,
      "error": null
    },
    "assert maximum_Sum([[3, 2, 6], [4, 2, 3], [4, 5, 1], [5, 2, 3], [4, 6, 13]]) == 23": {
      "result": true,
      "time": 0.04333305358886719,
      "error": null
    },
    "assert maximum_Sum([[4, 1, 2], [5, 4, 3], [11, 5, 5], [4, 3, 2], [1, 6, 5]]) == 21": {
      "result": true,
      "time": 0.0415189266204834,
      "error": null
    },
    "assert maximum_Sum([[4, 1, 5], [1, 5, 5], [14, 3, 1], [5, 3, 1], [5, 6, 5]]) == 18": {
      "result": true,
      "time": 0.03719663619995117,
      "error": null
    },
    "assert maximum_Sum([[2, 2, 8], [3, 2, 2], [4, 7, 4], [3, 3, 3], [5, 3, 6]]) == 15": {
      "result": true,
      "time": 0.03855562210083008,
      "error": null
    },
    "assert maximum_Sum([[2, 1, 3], [5, 5, 6], [13, 9, 7], [4, 2, 3], [6, 2, 11]]) == 29": {
      "result": true,
      "time": 0.03983616828918457,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 4], [1, 3, 3], [14, 13, 5], [5, 4, 3], [10, 7, 9]]) == 32": {
      "result": true,
      "time": 0.02756810188293457,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 6], [3, 2, 1], [6, 12, 4], [5, 5, 4], [4, 9, 10]]) == 23": {
      "result": true,
      "time": 0.042183637619018555,
      "error": null
    },
    "assert maximum_Sum([[3, 5, 6], [6, 1, 6], [14, 4, 5], [4, 1, 5], [7, 9, 4]]) == 23": {
      "result": true,
      "time": 0.037584543228149414,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 8], [6, 3, 1], [8, 5, 5], [5, 1, 4], [9, 6, 5]]) == 20": {
      "result": true,
      "time": 0.03365588188171387,
      "error": null
    },
    "assert maximum_Sum([[3, 1, 8], [4, 7, 6], [5, 7, 1], [5, 6, 5], [10, 7, 5]]) == 22": {
      "result": true,
      "time": 0.03891754150390625,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 5], [4, 5, 1], [7, 13, 4], [4, 3, 5], [3, 2, 6]]) == 24": {
      "result": true,
      "time": 0.042627573013305664,
      "error": null
    },
    "assert maximum_Sum([[4, 4, 7], [1, 7, 5], [12, 10, 7], [4, 5, 1], [9, 6, 3]]) == 29": {
      "result": true,
      "time": 0.030100345611572266,
      "error": null
    },
    "assert maximum_Sum([[2, 5, 4], [5, 5, 4], [12, 5, 2], [2, 5, 4], [1, 5, 8]]) == 19": {
      "result": true,
      "time": 0.038097381591796875,
      "error": null
    },
    "assert maximum_Sum([[3, 2, 8], [2, 2, 5], [12, 5, 4], [4, 3, 2], [11, 8, 7]]) == 26": {
      "result": true,
      "time": 0.04149961471557617,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}