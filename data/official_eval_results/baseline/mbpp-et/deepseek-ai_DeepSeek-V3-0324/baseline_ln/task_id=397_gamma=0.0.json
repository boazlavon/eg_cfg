{
  "code": "def median_numbers(a, b, c):\n    # Create a list of the three numbers\n    numbers = [a, b, c]\n    # Sort the list\n    numbers.sort()\n    # The median is the middle element\n    return float(numbers[1])",
  "results": {
    "assert median_numbers(25,55,65)==55.0": {
      "result": true,
      "time": 0.05579495429992676,
      "error": null
    },
    "assert median_numbers(20,10,30)==20.0": {
      "result": true,
      "time": 0.06022500991821289,
      "error": null
    },
    "assert median_numbers(15,45,75)==45.0": {
      "result": true,
      "time": 0.05947089195251465,
      "error": null
    },
    "assert median_numbers(22, 54, 68) == 54": {
      "result": true,
      "time": 0.05985403060913086,
      "error": null
    },
    "assert median_numbers(22, 57, 66) == 57": {
      "result": true,
      "time": 0.05202054977416992,
      "error": null
    },
    "assert median_numbers(22, 54, 61) == 54": {
      "result": true,
      "time": 0.054030418395996094,
      "error": null
    },
    "assert median_numbers(30, 53, 63) == 53": {
      "result": true,
      "time": 0.06668806076049805,
      "error": null
    },
    "assert median_numbers(22, 55, 61) == 55": {
      "result": true,
      "time": 0.05638480186462402,
      "error": null
    },
    "assert median_numbers(25, 60, 61) == 60": {
      "result": true,
      "time": 0.05540943145751953,
      "error": null
    },
    "assert median_numbers(22, 56, 68) == 56": {
      "result": true,
      "time": 0.049016475677490234,
      "error": null
    },
    "assert median_numbers(29, 53, 70) == 53": {
      "result": true,
      "time": 0.058722496032714844,
      "error": null
    },
    "assert median_numbers(23, 53, 66) == 53": {
      "result": true,
      "time": 0.06192374229431152,
      "error": null
    },
    "assert median_numbers(29, 58, 67) == 58": {
      "result": true,
      "time": 0.05351829528808594,
      "error": null
    },
    "assert median_numbers(27, 52, 64) == 52": {
      "result": true,
      "time": 0.05072379112243652,
      "error": null
    },
    "assert median_numbers(29, 60, 61) == 60": {
      "result": true,
      "time": 0.057619333267211914,
      "error": null
    },
    "assert median_numbers(25, 57, 61) == 57": {
      "result": true,
      "time": 0.060530900955200195,
      "error": null
    },
    "assert median_numbers(20, 50, 66) == 50": {
      "result": true,
      "time": 0.062483787536621094,
      "error": null
    },
    "assert median_numbers(21, 51, 65) == 51": {
      "result": true,
      "time": 0.05138707160949707,
      "error": null
    },
    "assert median_numbers(29, 51, 67) == 51": {
      "result": true,
      "time": 0.05000591278076172,
      "error": null
    },
    "assert median_numbers(26, 55, 69) == 55": {
      "result": true,
      "time": 0.051676273345947266,
      "error": null
    },
    "assert median_numbers(24, 53, 64) == 53": {
      "result": true,
      "time": 0.04941701889038086,
      "error": null
    },
    "assert median_numbers(28, 55, 65) == 55": {
      "result": true,
      "time": 0.05532717704772949,
      "error": null
    },
    "assert median_numbers(27, 57, 66) == 57": {
      "result": true,
      "time": 0.05071711540222168,
      "error": null
    },
    "assert median_numbers(20, 58, 70) == 58": {
      "result": true,
      "time": 0.05798530578613281,
      "error": null
    },
    "assert median_numbers(23, 56, 67) == 56": {
      "result": true,
      "time": 0.04984688758850098,
      "error": null
    },
    "assert median_numbers(28, 55, 69) == 55": {
      "result": true,
      "time": 0.0411534309387207,
      "error": null
    },
    "assert median_numbers(23, 58, 70) == 58": {
      "result": true,
      "time": 0.03666090965270996,
      "error": null
    },
    "assert median_numbers(26, 54, 62) == 54": {
      "result": true,
      "time": 0.07324862480163574,
      "error": null
    },
    "assert median_numbers(27, 51, 64) == 51": {
      "result": true,
      "time": 0.04419255256652832,
      "error": null
    },
    "assert median_numbers(28, 50, 65) == 50": {
      "result": true,
      "time": 0.04498481750488281,
      "error": null
    },
    "assert median_numbers(29, 55, 69) == 55": {
      "result": true,
      "time": 0.04367232322692871,
      "error": null
    },
    "assert median_numbers(22, 57, 70) == 57": {
      "result": true,
      "time": 0.043235063552856445,
      "error": null
    },
    "assert median_numbers(27, 52, 69) == 52": {
      "result": true,
      "time": 0.045272111892700195,
      "error": null
    },
    "assert median_numbers(30, 58, 61) == 58": {
      "result": true,
      "time": 0.043808698654174805,
      "error": null
    },
    "assert median_numbers(20, 58, 63) == 58": {
      "result": true,
      "time": 0.04278159141540527,
      "error": null
    },
    "assert median_numbers(27, 51, 69) == 51": {
      "result": true,
      "time": 0.04797101020812988,
      "error": null
    },
    "assert median_numbers(21, 12, 26) == 21": {
      "result": true,
      "time": 0.04659724235534668,
      "error": null
    },
    "assert median_numbers(18, 6, 28) == 18": {
      "result": true,
      "time": 0.03685331344604492,
      "error": null
    },
    "assert median_numbers(19, 7, 27) == 19": {
      "result": true,
      "time": 0.0518491268157959,
      "error": null
    },
    "assert median_numbers(21, 14, 25) == 21": {
      "result": true,
      "time": 0.04562640190124512,
      "error": null
    },
    "assert median_numbers(20, 7, 29) == 20": {
      "result": true,
      "time": 0.05064988136291504,
      "error": null
    },
    "assert median_numbers(15, 7, 31) == 15": {
      "result": true,
      "time": 0.04648995399475098,
      "error": null
    },
    "assert median_numbers(15, 8, 32) == 15": {
      "result": true,
      "time": 0.04841732978820801,
      "error": null
    },
    "assert median_numbers(20, 6, 34) == 20": {
      "result": true,
      "time": 0.047647714614868164,
      "error": null
    },
    "assert median_numbers(20, 7, 28) == 20": {
      "result": true,
      "time": 0.04908466339111328,
      "error": null
    },
    "assert median_numbers(21, 8, 31) == 21": {
      "result": true,
      "time": 0.05508852005004883,
      "error": null
    },
    "assert median_numbers(23, 6, 31) == 23": {
      "result": true,
      "time": 0.050496816635131836,
      "error": null
    },
    "assert median_numbers(20, 10, 34) == 20": {
      "result": true,
      "time": 0.03712654113769531,
      "error": null
    },
    "assert median_numbers(16, 14, 29) == 16": {
      "result": true,
      "time": 0.03765273094177246,
      "error": null
    },
    "assert median_numbers(16, 7, 30) == 16": {
      "result": true,
      "time": 0.051502227783203125,
      "error": null
    },
    "assert median_numbers(23, 9, 32) == 23": {
      "result": true,
      "time": 0.04555058479309082,
      "error": null
    },
    "assert median_numbers(15, 7, 28) == 15": {
      "result": true,
      "time": 0.05045509338378906,
      "error": null
    },
    "assert median_numbers(18, 5, 26) == 18": {
      "result": true,
      "time": 0.045476436614990234,
      "error": null
    },
    "assert median_numbers(22, 8, 26) == 22": {
      "result": true,
      "time": 0.0369565486907959,
      "error": null
    },
    "assert median_numbers(19, 6, 26) == 19": {
      "result": true,
      "time": 0.054880619049072266,
      "error": null
    },
    "assert median_numbers(15, 11, 30) == 15": {
      "result": true,
      "time": 0.0465695858001709,
      "error": null
    },
    "assert median_numbers(18, 5, 31) == 18": {
      "result": true,
      "time": 0.05083346366882324,
      "error": null
    },
    "assert median_numbers(19, 6, 32) == 19": {
      "result": true,
      "time": 0.046585798263549805,
      "error": null
    },
    "assert median_numbers(20, 5, 31) == 20": {
      "result": true,
      "time": 0.04497241973876953,
      "error": null
    },
    "assert median_numbers(21, 13, 26) == 21": {
      "result": true,
      "time": 0.047144174575805664,
      "error": null
    },
    "assert median_numbers(19, 5, 33) == 19": {
      "result": true,
      "time": 0.04922652244567871,
      "error": null
    },
    "assert median_numbers(24, 8, 25) == 24": {
      "result": true,
      "time": 0.047738075256347656,
      "error": null
    },
    "assert median_numbers(21, 15, 34) == 21": {
      "result": true,
      "time": 0.042053937911987305,
      "error": null
    },
    "assert median_numbers(17, 14, 31) == 17": {
      "result": true,
      "time": 0.05705428123474121,
      "error": null
    },
    "assert median_numbers(17, 8, 30) == 17": {
      "result": true,
      "time": 0.055495500564575195,
      "error": null
    },
    "assert median_numbers(21, 13, 34) == 21": {
      "result": true,
      "time": 0.05482339859008789,
      "error": null
    },
    "assert median_numbers(19, 5, 34) == 19": {
      "result": true,
      "time": 0.04595375061035156,
      "error": null
    },
    "assert median_numbers(15, 8, 30) == 15": {
      "result": true,
      "time": 0.04877591133117676,
      "error": null
    },
    "assert median_numbers(21, 12, 31) == 21": {
      "result": true,
      "time": 0.05394887924194336,
      "error": null
    },
    "assert median_numbers(19, 40, 78) == 40": {
      "result": true,
      "time": 0.05181550979614258,
      "error": null
    },
    "assert median_numbers(19, 50, 78) == 50": {
      "result": true,
      "time": 0.06099200248718262,
      "error": null
    },
    "assert median_numbers(11, 44, 73) == 44": {
      "result": true,
      "time": 0.04126119613647461,
      "error": null
    },
    "assert median_numbers(18, 42, 70) == 42": {
      "result": true,
      "time": 0.0488128662109375,
      "error": null
    },
    "assert median_numbers(11, 48, 72) == 48": {
      "result": true,
      "time": 0.04053926467895508,
      "error": null
    },
    "assert median_numbers(10, 48, 79) == 48": {
      "result": true,
      "time": 0.05109000205993652,
      "error": null
    },
    "assert median_numbers(17, 48, 79) == 48": {
      "result": true,
      "time": 0.05714702606201172,
      "error": null
    },
    "assert median_numbers(17, 46, 74) == 46": {
      "result": true,
      "time": 0.051119089126586914,
      "error": null
    },
    "assert median_numbers(20, 49, 78) == 49": {
      "result": true,
      "time": 0.046222686767578125,
      "error": null
    },
    "assert median_numbers(12, 40, 71) == 40": {
      "result": true,
      "time": 0.04243969917297363,
      "error": null
    },
    "assert median_numbers(16, 40, 79) == 40": {
      "result": true,
      "time": 0.05953216552734375,
      "error": null
    },
    "assert median_numbers(17, 40, 80) == 40": {
      "result": true,
      "time": 0.04457879066467285,
      "error": null
    },
    "assert median_numbers(15, 50, 78) == 50": {
      "result": true,
      "time": 0.041107177734375,
      "error": null
    },
    "assert median_numbers(11, 41, 76) == 41": {
      "result": true,
      "time": 0.043869733810424805,
      "error": null
    },
    "assert median_numbers(20, 47, 73) == 47": {
      "result": true,
      "time": 0.034476518630981445,
      "error": null
    },
    "assert median_numbers(19, 50, 71) == 50": {
      "result": true,
      "time": 0.040457963943481445,
      "error": null
    },
    "assert median_numbers(10, 42, 77) == 42": {
      "result": true,
      "time": 0.05202651023864746,
      "error": null
    },
    "assert median_numbers(20, 44, 70) == 44": {
      "result": true,
      "time": 0.052118539810180664,
      "error": null
    },
    "assert median_numbers(16, 41, 78) == 41": {
      "result": true,
      "time": 0.06471085548400879,
      "error": null
    },
    "assert median_numbers(20, 49, 70) == 49": {
      "result": true,
      "time": 0.048356056213378906,
      "error": null
    },
    "assert median_numbers(11, 50, 75) == 50": {
      "result": true,
      "time": 0.047606468200683594,
      "error": null
    },
    "assert median_numbers(20, 42, 72) == 42": {
      "result": true,
      "time": 0.04806828498840332,
      "error": null
    },
    "assert median_numbers(15, 48, 74) == 48": {
      "result": true,
      "time": 0.039273977279663086,
      "error": null
    },
    "assert median_numbers(15, 49, 72) == 49": {
      "result": true,
      "time": 0.05041313171386719,
      "error": null
    },
    "assert median_numbers(10, 42, 80) == 42": {
      "result": true,
      "time": 0.04282546043395996,
      "error": null
    },
    "assert median_numbers(17, 43, 78) == 43": {
      "result": true,
      "time": 0.04105520248413086,
      "error": null
    },
    "assert median_numbers(18, 44, 73) == 44": {
      "result": true,
      "time": 0.04558444023132324,
      "error": null
    },
    "assert median_numbers(13, 50, 80) == 50": {
      "result": true,
      "time": 0.04384016990661621,
      "error": null
    },
    "assert median_numbers(14, 40, 75) == 40": {
      "result": true,
      "time": 0.047321319580078125,
      "error": null
    },
    "assert median_numbers(10, 42, 75) == 42": {
      "result": true,
      "time": 0.04712200164794922,
      "error": null
    },
    "assert median_numbers(10, 42, 74) == 42": {
      "result": true,
      "time": 0.05375027656555176,
      "error": null
    },
    "assert median_numbers(15, 41, 74) == 41": {
      "result": true,
      "time": 0.05450773239135742,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}