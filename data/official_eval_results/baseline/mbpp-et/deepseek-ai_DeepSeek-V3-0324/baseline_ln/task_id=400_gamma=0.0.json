{
  "code": "def extract_freq(tuples_list):\n    # Convert each tuple to a frozenset to handle order-irrelevance and make them hashable\n    unique_tuples = set()\n    for t in tuples_list:\n        # Use frozenset to handle tuples of any length (not just pairs)\n        unique_tuples.add(frozenset(t))\n    return len(unique_tuples)",
  "results": {
    "assert extract_freq([(3, 4), (1, 2), (4, 3), (5, 6)] ) == 3": {
      "result": true,
      "time": 0.05343127250671387,
      "error": null
    },
    "assert extract_freq([(4, 15), (2, 3), (5, 4), (6, 7)] ) == 4": {
      "result": true,
      "time": 0.049143314361572266,
      "error": null
    },
    "assert extract_freq([(5, 16), (2, 3), (6, 5), (6, 9)] ) == 4": {
      "result": true,
      "time": 0.051761627197265625,
      "error": null
    },
    "assert extract_freq([(2, 5), (3, 2), (5, 1), (10, 4)]) == 4": {
      "result": true,
      "time": 0.047879934310913086,
      "error": null
    },
    "assert extract_freq([(6, 7), (6, 1), (3, 2), (3, 10)]) == 4": {
      "result": true,
      "time": 0.03964352607727051,
      "error": null
    },
    "assert extract_freq([(3, 2), (3, 6), (4, 5), (2, 5)]) == 4": {
      "result": true,
      "time": 0.05434608459472656,
      "error": null
    },
    "assert extract_freq([(3, 4), (1, 1), (7, 1), (8, 6)]) == 4": {
      "result": true,
      "time": 0.04454946517944336,
      "error": null
    },
    "assert extract_freq([(7, 3), (3, 2), (4, 5), (8, 3)]) == 4": {
      "result": true,
      "time": 0.05019044876098633,
      "error": null
    },
    "assert extract_freq([(8, 4), (1, 3), (8, 2), (10, 5)]) == 4": {
      "result": true,
      "time": 0.04758715629577637,
      "error": null
    },
    "assert extract_freq([(3, 5), (5, 4), (3, 7), (5, 11)]) == 4": {
      "result": true,
      "time": 0.04657268524169922,
      "error": null
    },
    "assert extract_freq([(5, 9), (6, 3), (6, 7), (3, 6)]) == 3": {
      "result": true,
      "time": 0.05376482009887695,
      "error": null
    },
    "assert extract_freq([(7, 6), (6, 3), (7, 4), (1, 2)]) == 4": {
      "result": true,
      "time": 0.061289072036743164,
      "error": null
    },
    "assert extract_freq([(3, 2), (5, 6), (2, 6), (2, 2)]) == 4": {
      "result": true,
      "time": 0.04869389533996582,
      "error": null
    },
    "assert extract_freq([(7, 5), (3, 5), (4, 4), (4, 11)]) == 4": {
      "result": true,
      "time": 0.047738075256347656,
      "error": null
    },
    "assert extract_freq([(8, 5), (2, 4), (1, 3), (3, 10)]) == 4": {
      "result": true,
      "time": 0.05983591079711914,
      "error": null
    },
    "assert extract_freq([(8, 5), (2, 1), (9, 8), (7, 6)]) == 4": {
      "result": true,
      "time": 0.06138730049133301,
      "error": null
    },
    "assert extract_freq([(8, 8), (1, 4), (3, 8), (8, 9)]) == 4": {
      "result": true,
      "time": 0.056597232818603516,
      "error": null
    },
    "assert extract_freq([(8, 2), (5, 2), (5, 6), (9, 1)]) == 4": {
      "result": true,
      "time": 0.04771113395690918,
      "error": null
    },
    "assert extract_freq([(4, 6), (4, 5), (8, 6), (5, 7)]) == 4": {
      "result": true,
      "time": 0.04902386665344238,
      "error": null
    },
    "assert extract_freq([(3, 8), (4, 6), (9, 4), (8, 1)]) == 4": {
      "result": true,
      "time": 0.04158830642700195,
      "error": null
    },
    "assert extract_freq([(4, 1), (6, 1), (7, 4), (8, 9)]) == 4": {
      "result": true,
      "time": 0.04079937934875488,
      "error": null
    },
    "assert extract_freq([(8, 9), (6, 2), (7, 1), (4, 10)]) == 4": {
      "result": true,
      "time": 0.048555612564086914,
      "error": null
    },
    "assert extract_freq([(8, 9), (5, 5), (5, 5), (1, 3)]) == 3": {
      "result": true,
      "time": 0.03425002098083496,
      "error": null
    },
    "assert extract_freq([(8, 2), (3, 4), (6, 2), (2, 7)]) == 4": {
      "result": true,
      "time": 0.048048973083496094,
      "error": null
    },
    "assert extract_freq([(4, 4), (2, 6), (3, 2), (8, 8)]) == 4": {
      "result": true,
      "time": 0.04415106773376465,
      "error": null
    },
    "assert extract_freq([(7, 8), (4, 6), (3, 3), (8, 11)]) == 4": {
      "result": true,
      "time": 0.04944562911987305,
      "error": null
    },
    "assert extract_freq([(8, 7), (2, 2), (6, 7), (6, 8)]) == 4": {
      "result": true,
      "time": 0.04187345504760742,
      "error": null
    },
    "assert extract_freq([(7, 9), (3, 4), (6, 2), (1, 11)]) == 4": {
      "result": true,
      "time": 0.05351066589355469,
      "error": null
    },
    "assert extract_freq([(6, 5), (1, 2), (5, 8), (5, 9)]) == 4": {
      "result": true,
      "time": 0.05707859992980957,
      "error": null
    },
    "assert extract_freq([(3, 9), (2, 4), (4, 4), (8, 2)]) == 4": {
      "result": true,
      "time": 0.043149709701538086,
      "error": null
    },
    "assert extract_freq([(4, 7), (4, 1), (9, 3), (1, 5)]) == 4": {
      "result": true,
      "time": 0.0408935546875,
      "error": null
    },
    "assert extract_freq([(5, 3), (1, 4), (5, 1), (2, 2)]) == 4": {
      "result": true,
      "time": 0.05272316932678223,
      "error": null
    },
    "assert extract_freq([(2, 9), (6, 7), (2, 5), (9, 2)]) == 3": {
      "result": true,
      "time": 0.04277157783508301,
      "error": null
    },
    "assert extract_freq([(5, 7), (2, 2), (6, 1), (2, 9)]) == 4": {
      "result": true,
      "time": 0.04886317253112793,
      "error": null
    },
    "assert extract_freq([(8, 4), (2, 3), (5, 6), (2, 3)]) == 3": {
      "result": true,
      "time": 0.03557443618774414,
      "error": null
    },
    "assert extract_freq([(7, 1), (5, 5), (6, 2), (6, 7)]) == 4": {
      "result": true,
      "time": 0.037153005599975586,
      "error": null
    },
    "assert extract_freq([(5, 11), (1, 2), (5, 5), (9, 5)]) == 4": {
      "result": true,
      "time": 0.04538226127624512,
      "error": null
    },
    "assert extract_freq([(5, 16), (2, 1), (9, 4), (10, 6)]) == 4": {
      "result": true,
      "time": 0.04484748840332031,
      "error": null
    },
    "assert extract_freq([(7, 15), (5, 8), (10, 5), (5, 9)]) == 4": {
      "result": true,
      "time": 0.04634881019592285,
      "error": null
    },
    "assert extract_freq([(8, 14), (4, 4), (2, 4), (3, 9)]) == 4": {
      "result": true,
      "time": 0.0524747371673584,
      "error": null
    },
    "assert extract_freq([(3, 13), (4, 4), (4, 6), (9, 5)]) == 4": {
      "result": true,
      "time": 0.06587052345275879,
      "error": null
    },
    "assert extract_freq([(2, 17), (5, 7), (2, 5), (4, 5)]) == 4": {
      "result": true,
      "time": 0.04801535606384277,
      "error": null
    },
    "assert extract_freq([(8, 18), (3, 5), (8, 3), (1, 7)]) == 4": {
      "result": true,
      "time": 0.041661739349365234,
      "error": null
    },
    "assert extract_freq([(9, 20), (5, 7), (3, 2), (1, 12)]) == 4": {
      "result": true,
      "time": 0.05130124092102051,
      "error": null
    },
    "assert extract_freq([(3, 20), (3, 3), (7, 6), (8, 5)]) == 4": {
      "result": true,
      "time": 0.04323434829711914,
      "error": null
    },
    "assert extract_freq([(9, 16), (2, 1), (2, 6), (6, 10)]) == 4": {
      "result": true,
      "time": 0.05690431594848633,
      "error": null
    },
    "assert extract_freq([(3, 11), (6, 1), (2, 3), (9, 10)]) == 4": {
      "result": true,
      "time": 0.05091285705566406,
      "error": null
    },
    "assert extract_freq([(8, 17), (3, 8), (8, 1), (8, 8)]) == 4": {
      "result": true,
      "time": 0.06303668022155762,
      "error": null
    },
    "assert extract_freq([(6, 18), (7, 5), (2, 2), (3, 7)]) == 4": {
      "result": true,
      "time": 0.052098989486694336,
      "error": null
    },
    "assert extract_freq([(3, 14), (7, 1), (7, 4), (8, 8)]) == 4": {
      "result": true,
      "time": 0.055890798568725586,
      "error": null
    },
    "assert extract_freq([(8, 11), (1, 1), (9, 2), (11, 8)]) == 3": {
      "result": true,
      "time": 0.04779767990112305,
      "error": null
    },
    "assert extract_freq([(5, 15), (7, 4), (3, 3), (11, 3)]) == 4": {
      "result": true,
      "time": 0.05176186561584473,
      "error": null
    },
    "assert extract_freq([(9, 12), (2, 6), (7, 8), (2, 3)]) == 4": {
      "result": true,
      "time": 0.04242062568664551,
      "error": null
    },
    "assert extract_freq([(3, 13), (4, 2), (3, 1), (2, 8)]) == 4": {
      "result": true,
      "time": 0.048632144927978516,
      "error": null
    },
    "assert extract_freq([(8, 11), (1, 1), (4, 4), (2, 3)]) == 4": {
      "result": true,
      "time": 0.0412144660949707,
      "error": null
    },
    "assert extract_freq([(6, 17), (1, 8), (3, 2), (1, 3)]) == 4": {
      "result": true,
      "time": 0.04242229461669922,
      "error": null
    },
    "assert extract_freq([(8, 13), (6, 1), (2, 9), (5, 11)]) == 4": {
      "result": true,
      "time": 0.04246664047241211,
      "error": null
    },
    "assert extract_freq([(1, 11), (2, 7), (10, 1), (3, 8)]) == 4": {
      "result": true,
      "time": 0.05133223533630371,
      "error": null
    },
    "assert extract_freq([(5, 15), (4, 4), (4, 8), (2, 9)]) == 4": {
      "result": true,
      "time": 0.043158769607543945,
      "error": null
    },
    "assert extract_freq([(4, 18), (6, 1), (5, 2), (6, 3)]) == 4": {
      "result": true,
      "time": 0.04602527618408203,
      "error": null
    },
    "assert extract_freq([(1, 12), (5, 3), (7, 5), (2, 6)]) == 4": {
      "result": true,
      "time": 0.06392312049865723,
      "error": null
    },
    "assert extract_freq([(5, 13), (3, 7), (4, 7), (2, 11)]) == 4": {
      "result": true,
      "time": 0.036063432693481445,
      "error": null
    },
    "assert extract_freq([(1, 15), (1, 2), (8, 3), (4, 10)]) == 4": {
      "result": true,
      "time": 0.04796862602233887,
      "error": null
    },
    "assert extract_freq([(4, 15), (4, 8), (3, 9), (3, 7)]) == 4": {
      "result": true,
      "time": 0.03803110122680664,
      "error": null
    },
    "assert extract_freq([(1, 17), (4, 5), (6, 4), (9, 5)]) == 4": {
      "result": true,
      "time": 0.038732290267944336,
      "error": null
    },
    "assert extract_freq([(9, 17), (4, 2), (7, 3), (9, 2)]) == 4": {
      "result": true,
      "time": 0.050600290298461914,
      "error": null
    },
    "assert extract_freq([(7, 15), (5, 8), (5, 5), (4, 10)]) == 4": {
      "result": true,
      "time": 0.04841971397399902,
      "error": null
    },
    "assert extract_freq([(7, 13), (2, 2), (5, 5), (4, 8)]) == 4": {
      "result": true,
      "time": 0.036966800689697266,
      "error": null
    },
    "assert extract_freq([(9, 15), (5, 5), (3, 5), (7, 9)]) == 4": {
      "result": true,
      "time": 0.042771339416503906,
      "error": null
    },
    "assert extract_freq([(2, 21), (2, 1), (11, 10), (4, 4)]) == 4": {
      "result": true,
      "time": 0.03918910026550293,
      "error": null
    },
    "assert extract_freq([(10, 21), (2, 7), (1, 7), (11, 11)]) == 4": {
      "result": true,
      "time": 0.04077339172363281,
      "error": null
    },
    "assert extract_freq([(6, 17), (5, 1), (7, 2), (5, 10)]) == 4": {
      "result": true,
      "time": 0.04026150703430176,
      "error": null
    },
    "assert extract_freq([(2, 18), (1, 5), (3, 1), (2, 10)]) == 4": {
      "result": true,
      "time": 0.03907608985900879,
      "error": null
    },
    "assert extract_freq([(4, 14), (3, 3), (9, 6), (2, 4)]) == 4": {
      "result": true,
      "time": 0.04630613327026367,
      "error": null
    },
    "assert extract_freq([(9, 11), (3, 5), (10, 2), (7, 7)]) == 4": {
      "result": true,
      "time": 0.040480852127075195,
      "error": null
    },
    "assert extract_freq([(3, 18), (4, 4), (3, 7), (2, 10)]) == 4": {
      "result": true,
      "time": 0.038561344146728516,
      "error": null
    },
    "assert extract_freq([(9, 12), (4, 3), (6, 3), (4, 14)]) == 4": {
      "result": true,
      "time": 0.037088632583618164,
      "error": null
    },
    "assert extract_freq([(1, 13), (4, 4), (4, 1), (10, 10)]) == 4": {
      "result": true,
      "time": 0.0381922721862793,
      "error": null
    },
    "assert extract_freq([(2, 16), (6, 5), (5, 10), (10, 10)]) == 4": {
      "result": true,
      "time": 0.039090633392333984,
      "error": null
    },
    "assert extract_freq([(10, 11), (3, 3), (5, 7), (7, 8)]) == 4": {
      "result": true,
      "time": 0.03832697868347168,
      "error": null
    },
    "assert extract_freq([(6, 20), (2, 7), (4, 6), (3, 9)]) == 4": {
      "result": true,
      "time": 0.0431981086730957,
      "error": null
    },
    "assert extract_freq([(3, 18), (4, 3), (11, 5), (9, 11)]) == 4": {
      "result": true,
      "time": 0.03126835823059082,
      "error": null
    },
    "assert extract_freq([(7, 15), (4, 5), (3, 5), (5, 14)]) == 4": {
      "result": true,
      "time": 0.04134821891784668,
      "error": null
    },
    "assert extract_freq([(1, 18), (5, 8), (1, 4), (1, 12)]) == 4": {
      "result": true,
      "time": 0.051027536392211914,
      "error": null
    },
    "assert extract_freq([(6, 21), (1, 2), (1, 8), (11, 14)]) == 4": {
      "result": true,
      "time": 0.043731689453125,
      "error": null
    },
    "assert extract_freq([(6, 11), (4, 2), (6, 6), (11, 10)]) == 4": {
      "result": true,
      "time": 0.04243636131286621,
      "error": null
    },
    "assert extract_freq([(7, 16), (6, 7), (10, 2), (2, 8)]) == 4": {
      "result": true,
      "time": 0.04046201705932617,
      "error": null
    },
    "assert extract_freq([(10, 21), (2, 5), (3, 8), (11, 4)]) == 4": {
      "result": true,
      "time": 0.049799203872680664,
      "error": null
    },
    "assert extract_freq([(8, 18), (6, 7), (4, 5), (4, 12)]) == 4": {
      "result": true,
      "time": 0.0469362735748291,
      "error": null
    },
    "assert extract_freq([(4, 13), (2, 3), (3, 2), (10, 6)]) == 3": {
      "result": true,
      "time": 0.04905247688293457,
      "error": null
    },
    "assert extract_freq([(3, 20), (6, 6), (4, 6), (10, 6)]) == 4": {
      "result": true,
      "time": 0.055429697036743164,
      "error": null
    },
    "assert extract_freq([(10, 21), (3, 7), (4, 7), (1, 9)]) == 4": {
      "result": true,
      "time": 0.05243849754333496,
      "error": null
    },
    "assert extract_freq([(4, 11), (3, 7), (8, 4), (9, 14)]) == 4": {
      "result": true,
      "time": 0.03571486473083496,
      "error": null
    },
    "assert extract_freq([(4, 17), (3, 4), (4, 4), (1, 8)]) == 4": {
      "result": true,
      "time": 0.04183697700500488,
      "error": null
    },
    "assert extract_freq([(6, 12), (2, 6), (8, 4), (6, 10)]) == 4": {
      "result": true,
      "time": 0.03692030906677246,
      "error": null
    },
    "assert extract_freq([(7, 19), (5, 2), (5, 3), (9, 5)]) == 4": {
      "result": true,
      "time": 0.03970837593078613,
      "error": null
    },
    "assert extract_freq([(1, 16), (1, 2), (11, 8), (10, 7)]) == 4": {
      "result": true,
      "time": 0.039379119873046875,
      "error": null
    },
    "assert extract_freq([(7, 21), (6, 7), (3, 9), (2, 13)]) == 4": {
      "result": true,
      "time": 0.04433465003967285,
      "error": null
    },
    "assert extract_freq([(7, 12), (3, 7), (11, 4), (7, 6)]) == 4": {
      "result": true,
      "time": 0.03952789306640625,
      "error": null
    },
    "assert extract_freq([(10, 17), (7, 3), (9, 5), (4, 12)]) == 4": {
      "result": true,
      "time": 0.03658318519592285,
      "error": null
    },
    "assert extract_freq([(8, 16), (2, 5), (11, 10), (5, 14)]) == 4": {
      "result": true,
      "time": 0.04363203048706055,
      "error": null
    },
    "assert extract_freq([(9, 18), (5, 2), (3, 2), (7, 11)]) == 4": {
      "result": true,
      "time": 0.049453020095825195,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}