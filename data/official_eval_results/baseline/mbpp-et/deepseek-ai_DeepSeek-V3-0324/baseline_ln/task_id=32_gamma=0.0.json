{
  "code": "import math\n\ndef max_Prime_Factors(n):\n    max_prime = -1\n    \n    # Divide by 2 to remove all even factors\n    while n % 2 == 0:\n        max_prime = 2\n        n = n // 2\n    \n    # Now n must be odd, check for odd divisors up to sqrt(n)\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            max_prime = i\n            n = n // i\n    \n    # If n is a prime number greater than 2\n    if n > 2:\n        max_prime = n\n    \n    return max_prime",
  "results": {
    "assert max_Prime_Factors(15) == 5": {
      "result": true,
      "time": 0.10884690284729004,
      "error": null
    },
    "assert max_Prime_Factors(6) == 3": {
      "result": true,
      "time": 0.1204221248626709,
      "error": null
    },
    "assert max_Prime_Factors(2) == 2": {
      "result": true,
      "time": 0.12595558166503906,
      "error": null
    },
    "assert max_Prime_Factors(14) == 7": {
      "result": true,
      "time": 0.10207509994506836,
      "error": null
    },
    "assert max_Prime_Factors(16) == 2": {
      "result": true,
      "time": 0.09689736366271973,
      "error": null
    },
    "assert max_Prime_Factors(12) == 3": {
      "result": true,
      "time": 0.10968613624572754,
      "error": null
    },
    "assert max_Prime_Factors(13) == 13": {
      "result": true,
      "time": 0.11185312271118164,
      "error": null
    },
    "assert max_Prime_Factors(19) == 19": {
      "result": true,
      "time": 0.12138843536376953,
      "error": null
    },
    "assert max_Prime_Factors(10) == 5": {
      "result": true,
      "time": 0.09699106216430664,
      "error": null
    },
    "assert max_Prime_Factors(11) == 11": {
      "result": true,
      "time": 0.10417008399963379,
      "error": null
    },
    "assert max_Prime_Factors(17) == 17": {
      "result": true,
      "time": 0.09000658988952637,
      "error": null
    },
    "assert max_Prime_Factors(18) == 3": {
      "result": true,
      "time": 0.08310699462890625,
      "error": null
    },
    "assert max_Prime_Factors(20) == 5": {
      "result": true,
      "time": 0.09251642227172852,
      "error": null
    },
    "assert max_Prime_Factors(5) == 5": {
      "result": true,
      "time": 0.09030961990356445,
      "error": null
    },
    "assert max_Prime_Factors(7) == 7": {
      "result": true,
      "time": 0.10508155822753906,
      "error": null
    },
    "assert max_Prime_Factors(1) == -1": {
      "result": true,
      "time": 0.09415078163146973,
      "error": null
    },
    "assert max_Prime_Factors(9) == 3": {
      "result": true,
      "time": 0.09079861640930176,
      "error": null
    },
    "assert max_Prime_Factors(8) == 2": {
      "result": true,
      "time": 0.10364627838134766,
      "error": null
    },
    "assert max_Prime_Factors(4) == 2": {
      "result": true,
      "time": 0.10397911071777344,
      "error": null
    },
    "assert max_Prime_Factors(3) == 3": {
      "result": true,
      "time": 0.10839581489562988,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}