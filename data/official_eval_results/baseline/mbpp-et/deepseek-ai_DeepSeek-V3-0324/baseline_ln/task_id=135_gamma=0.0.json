{
  "code": "def hexagonal_num(n):\n    return n * (2 * n - 1)",
  "results": {
    "assert hexagonal_num(10) == 190": {
      "result": true,
      "time": 0.03460192680358887,
      "error": null
    },
    "assert hexagonal_num(5) == 45": {
      "result": true,
      "time": 0.04351544380187988,
      "error": null
    },
    "assert hexagonal_num(7) == 91": {
      "result": true,
      "time": 0.03825044631958008,
      "error": null
    },
    "assert hexagonal_num(14) == 378": {
      "result": true,
      "time": 0.03306698799133301,
      "error": null
    },
    "assert hexagonal_num(8) == 120": {
      "result": true,
      "time": 0.04230022430419922,
      "error": null
    },
    "assert hexagonal_num(13) == 325": {
      "result": true,
      "time": 0.03815126419067383,
      "error": null
    },
    "assert hexagonal_num(15) == 435": {
      "result": true,
      "time": 0.035386085510253906,
      "error": null
    },
    "assert hexagonal_num(12) == 276": {
      "result": true,
      "time": 0.03470182418823242,
      "error": null
    },
    "assert hexagonal_num(11) == 231": {
      "result": true,
      "time": 0.04365944862365723,
      "error": null
    },
    "assert hexagonal_num(9) == 153": {
      "result": true,
      "time": 0.03955483436584473,
      "error": null
    },
    "assert hexagonal_num(4) == 28": {
      "result": true,
      "time": 0.042235612869262695,
      "error": null
    },
    "assert hexagonal_num(3) == 15": {
      "result": true,
      "time": 0.04246664047241211,
      "error": null
    },
    "assert hexagonal_num(6) == 66": {
      "result": true,
      "time": 0.04322409629821777,
      "error": null
    },
    "assert hexagonal_num(2) == 6": {
      "result": true,
      "time": 0.0398867130279541,
      "error": null
    },
    "assert hexagonal_num(1) == 1": {
      "result": true,
      "time": 0.0429682731628418,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}