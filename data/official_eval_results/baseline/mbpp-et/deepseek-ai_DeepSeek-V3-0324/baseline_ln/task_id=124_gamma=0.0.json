{
  "code": "import cmath\n\ndef angle_complex(real, imag):\n    complex_num = real + imag\n    return cmath.phase(complex_num)",
  "results": {
    "assert angle_complex(0,1j)==1.5707963267948966 ": {
      "result": true,
      "time": 0.08642029762268066,
      "error": null
    },
    "assert angle_complex(2,1j)==0.4636476090008061": {
      "result": true,
      "time": 0.08164191246032715,
      "error": null
    },
    "assert angle_complex(0,2j)==1.5707963267948966": {
      "result": true,
      "time": 0.0785379409790039,
      "error": null
    },
    "assert angle_complex(3, 8j) == 1.2120256565243244": {
      "result": true,
      "time": 0.07908320426940918,
      "error": null
    },
    "assert angle_complex(2, 2j) == 0.7853981633974483": {
      "result": true,
      "time": 0.0922248363494873,
      "error": null
    },
    "assert angle_complex(2, 4j) == 1.1071487177940904": {
      "result": true,
      "time": 0.0931093692779541,
      "error": null
    },
    "assert angle_complex(3, 5j) == 1.0303768265243125": {
      "result": true,
      "time": 0.0935671329498291,
      "error": null
    },
    "assert angle_complex(1, 6j) == 1.4056476493802699": {
      "result": true,
      "time": 0.08164501190185547,
      "error": null
    },
    "assert angle_complex(5, 3j) == 0.5404195002705842": {
      "result": true,
      "time": 0.08595943450927734,
      "error": null
    },
    "assert angle_complex(2, 3j) == 0.982793723247329": {
      "result": true,
      "time": 0.09145450592041016,
      "error": null
    },
    "assert angle_complex(1, 5j) == 1.373400766945016": {
      "result": true,
      "time": 0.08518815040588379,
      "error": null
    },
    "assert angle_complex(3, 4j) == 0.9272952180016122": {
      "result": true,
      "time": 0.07769346237182617,
      "error": null
    },
    "assert angle_complex(5, 4j) == 0.6747409422235526": {
      "result": true,
      "time": 0.10097098350524902,
      "error": null
    },
    "assert angle_complex(5, 8j) == 1.0121970114513341": {
      "result": true,
      "time": 0.08012628555297852,
      "error": null
    },
    "assert angle_complex(4, 5j) == 0.8960553845713439": {
      "result": true,
      "time": 0.08765816688537598,
      "error": null
    },
    "assert angle_complex(4, 7j) == 1.0516502125483738": {
      "result": true,
      "time": 0.08017635345458984,
      "error": null
    },
    "assert angle_complex(2, 7j) == 1.2924966677897853": {
      "result": true,
      "time": 0.09591913223266602,
      "error": null
    },
    "assert angle_complex(2, 8j) == 1.3258176636680326": {
      "result": true,
      "time": 0.0918729305267334,
      "error": null
    },
    "assert angle_complex(4, 2j) == 0.4636476090008061": {
      "result": true,
      "time": 0.08353400230407715,
      "error": null
    },
    "assert angle_complex(4, 4j) == 0.7853981633974483": {
      "result": true,
      "time": 0.09265637397766113,
      "error": null
    },
    "assert angle_complex(3, 2j) == 0.5880026035475675": {
      "result": true,
      "time": 0.10095357894897461,
      "error": null
    },
    "assert angle_complex(5, 7j) == 0.9505468408120752": {
      "result": true,
      "time": 0.08724713325500488,
      "error": null
    },
    "assert angle_complex(5, 6j) == 0.8760580505981934": {
      "result": true,
      "time": 0.08898067474365234,
      "error": null
    },
    "assert angle_complex(4, 3j) == 0.6435011087932844": {
      "result": true,
      "time": 0.09500885009765625,
      "error": null
    },
    "assert angle_complex(5, 5j) == 0.7853981633974483": {
      "result": true,
      "time": 0.07982468605041504,
      "error": null
    },
    "assert angle_complex(6, 4j) == 0.5880026035475675": {
      "result": true,
      "time": 0.08654165267944336,
      "error": null
    },
    "assert angle_complex(3, 3j) == 0.7853981633974483": {
      "result": true,
      "time": 0.0877382755279541,
      "error": null
    },
    "assert angle_complex(7, 4j) == 0.5191461142465229": {
      "result": true,
      "time": 0.08191633224487305,
      "error": null
    },
    "assert angle_complex(7, 6j) == 0.7086262721276703": {
      "result": true,
      "time": 0.08242440223693848,
      "error": null
    },
    "assert angle_complex(1, 3j) == 1.2490457723982544": {
      "result": true,
      "time": 0.08236193656921387,
      "error": null
    },
    "assert angle_complex(1, 8j) == 1.446441332248135": {
      "result": true,
      "time": 0.08382534980773926,
      "error": null
    },
    "assert angle_complex(7, 7j) == 0.7853981633974483": {
      "result": true,
      "time": 0.09011673927307129,
      "error": null
    },
    "assert angle_complex(6, 3j) == 0.4636476090008061": {
      "result": true,
      "time": 0.09395885467529297,
      "error": null
    },
    "assert angle_complex(4, 8j) == 1.1071487177940904": {
      "result": true,
      "time": 0.0927739143371582,
      "error": null
    },
    "assert angle_complex(3, 7j) == 1.1659045405098132": {
      "result": true,
      "time": 0.07854223251342773,
      "error": null
    },
    "assert angle_complex(7, 1j) == 0.14189705460416394": {
      "result": true,
      "time": 0.08698892593383789,
      "error": null
    },
    "assert angle_complex(3, 6j) == 1.1071487177940904": {
      "result": true,
      "time": 0.07965803146362305,
      "error": null
    },
    "assert angle_complex(1, 2j) == 1.1071487177940904": {
      "result": true,
      "time": 0.10260748863220215,
      "error": null
    },
    "assert angle_complex(3, 1j) == 0.3217505543966422": {
      "result": true,
      "time": 0.10346150398254395,
      "error": null
    },
    "assert angle_complex(1, 1j) == 0.7853981633974483": {
      "result": true,
      "time": 0.09821486473083496,
      "error": null
    },
    "assert angle_complex(2, 6j) == 1.2490457723982544": {
      "result": true,
      "time": 0.08174347877502441,
      "error": null
    },
    "assert angle_complex(1, 4j) == 1.3258176636680326": {
      "result": true,
      "time": 0.08443975448608398,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}