{
  "code": "import math\n\ndef count_Odd_Squares(start, end):\n    count = 0\n    # Iterate through all numbers in the range\n    for num in range(start, end + 1):\n        # Check if the number is a perfect square\n        root = math.isqrt(num)\n        if root * root == num:\n            # Check if the number of factors is odd (only perfect squares have odd number of factors)\n            count += 1\n    return count",
  "results": {
    "assert count_Odd_Squares(5,100) == 8": {
      "result": true,
      "time": 0.09925222396850586,
      "error": null
    },
    "assert count_Odd_Squares(8,65) == 6": {
      "result": true,
      "time": 0.1075141429901123,
      "error": null
    },
    "assert count_Odd_Squares(2,5) == 1": {
      "result": true,
      "time": 0.09912681579589844,
      "error": null
    },
    "assert count_Odd_Squares(5, 97) == 7": {
      "result": true,
      "time": 0.08585214614868164,
      "error": null
    },
    "assert count_Odd_Squares(6, 104) == 8": {
      "result": true,
      "time": 0.09829521179199219,
      "error": null
    },
    "assert count_Odd_Squares(8, 96) == 7": {
      "result": true,
      "time": 0.09821105003356934,
      "error": null
    },
    "assert count_Odd_Squares(5, 105) == 8": {
      "result": true,
      "time": 0.0800936222076416,
      "error": null
    },
    "assert count_Odd_Squares(1, 102) == 10": {
      "result": true,
      "time": 0.09371161460876465,
      "error": null
    },
    "assert count_Odd_Squares(8, 98) == 7": {
      "result": true,
      "time": 0.09000992774963379,
      "error": null
    },
    "assert count_Odd_Squares(9, 99) == 7": {
      "result": true,
      "time": 0.10292720794677734,
      "error": null
    },
    "assert count_Odd_Squares(8, 95) == 7": {
      "result": true,
      "time": 0.10043740272521973,
      "error": null
    },
    "assert count_Odd_Squares(6, 95) == 7": {
      "result": true,
      "time": 0.08822751045227051,
      "error": null
    },
    "assert count_Odd_Squares(10, 99) == 6": {
      "result": true,
      "time": 0.08724665641784668,
      "error": null
    },
    "assert count_Odd_Squares(7, 99) == 7": {
      "result": true,
      "time": 0.0866856575012207,
      "error": null
    },
    "assert count_Odd_Squares(6, 100) == 8": {
      "result": true,
      "time": 0.08204960823059082,
      "error": null
    },
    "assert count_Odd_Squares(5, 98) == 7": {
      "result": true,
      "time": 0.0924215316772461,
      "error": null
    },
    "assert count_Odd_Squares(8, 99) == 7": {
      "result": true,
      "time": 0.08133053779602051,
      "error": null
    },
    "assert count_Odd_Squares(5, 104) == 8": {
      "result": true,
      "time": 0.09925699234008789,
      "error": null
    },
    "assert count_Odd_Squares(10, 97) == 6": {
      "result": true,
      "time": 0.0933997631072998,
      "error": null
    },
    "assert count_Odd_Squares(9, 98) == 7": {
      "result": true,
      "time": 0.08262228965759277,
      "error": null
    },
    "assert count_Odd_Squares(2, 99) == 8": {
      "result": true,
      "time": 0.09502911567687988,
      "error": null
    },
    "assert count_Odd_Squares(6, 105) == 8": {
      "result": true,
      "time": 0.10708403587341309,
      "error": null
    },
    "assert count_Odd_Squares(3, 102) == 9": {
      "result": true,
      "time": 0.0961911678314209,
      "error": null
    },
    "assert count_Odd_Squares(4, 102) == 9": {
      "result": true,
      "time": 0.07923650741577148,
      "error": null
    },
    "assert count_Odd_Squares(8, 104) == 8": {
      "result": true,
      "time": 0.09865021705627441,
      "error": null
    },
    "assert count_Odd_Squares(7, 95) == 7": {
      "result": true,
      "time": 0.10468506813049316,
      "error": null
    },
    "assert count_Odd_Squares(2, 95) == 8": {
      "result": true,
      "time": 0.10076212882995605,
      "error": null
    },
    "assert count_Odd_Squares(9, 95) == 7": {
      "result": true,
      "time": 0.1019906997680664,
      "error": null
    },
    "assert count_Odd_Squares(9, 102) == 8": {
      "result": true,
      "time": 0.09237170219421387,
      "error": null
    },
    "assert count_Odd_Squares(5, 99) == 7": {
      "result": true,
      "time": 0.0931098461151123,
      "error": null
    },
    "assert count_Odd_Squares(7, 103) == 8": {
      "result": true,
      "time": 0.1027677059173584,
      "error": null
    },
    "assert count_Odd_Squares(4, 103) == 9": {
      "result": true,
      "time": 0.09825992584228516,
      "error": null
    },
    "assert count_Odd_Squares(7, 96) == 7": {
      "result": true,
      "time": 0.08806586265563965,
      "error": null
    },
    "assert count_Odd_Squares(12, 62) == 4": {
      "result": true,
      "time": 0.09802436828613281,
      "error": null
    },
    "assert count_Odd_Squares(10, 61) == 4": {
      "result": true,
      "time": 0.09866118431091309,
      "error": null
    },
    "assert count_Odd_Squares(5, 64) == 6": {
      "result": true,
      "time": 0.10561943054199219,
      "error": null
    },
    "assert count_Odd_Squares(12, 61) == 4": {
      "result": true,
      "time": 0.10580945014953613,
      "error": null
    },
    "assert count_Odd_Squares(5, 69) == 6": {
      "result": true,
      "time": 0.09528660774230957,
      "error": null
    },
    "assert count_Odd_Squares(3, 64) == 7": {
      "result": true,
      "time": 0.10565590858459473,
      "error": null
    },
    "assert count_Odd_Squares(6, 61) == 5": {
      "result": true,
      "time": 0.10798811912536621,
      "error": null
    },
    "assert count_Odd_Squares(10, 65) == 5": {
      "result": true,
      "time": 0.11865377426147461,
      "error": null
    },
    "assert count_Odd_Squares(6, 67) == 6": {
      "result": true,
      "time": 0.10709309577941895,
      "error": null
    },
    "assert count_Odd_Squares(13, 68) == 5": {
      "result": true,
      "time": 0.0890512466430664,
      "error": null
    },
    "assert count_Odd_Squares(11, 61) == 4": {
      "result": true,
      "time": 0.09557199478149414,
      "error": null
    },
    "assert count_Odd_Squares(11, 65) == 5": {
      "result": true,
      "time": 0.09798884391784668,
      "error": null
    },
    "assert count_Odd_Squares(5, 65) == 6": {
      "result": true,
      "time": 0.10801506042480469,
      "error": null
    },
    "assert count_Odd_Squares(11, 69) == 5": {
      "result": true,
      "time": 0.10175180435180664,
      "error": null
    },
    "assert count_Odd_Squares(4, 70) == 7": {
      "result": true,
      "time": 0.11588072776794434,
      "error": null
    },
    "assert count_Odd_Squares(6, 63) == 5": {
      "result": true,
      "time": 0.09121179580688477,
      "error": null
    },
    "assert count_Odd_Squares(4, 69) == 7": {
      "result": true,
      "time": 0.09535455703735352,
      "error": null
    },
    "assert count_Odd_Squares(3, 63) == 6": {
      "result": true,
      "time": 0.09030342102050781,
      "error": null
    },
    "assert count_Odd_Squares(4, 68) == 7": {
      "result": true,
      "time": 0.09832882881164551,
      "error": null
    },
    "assert count_Odd_Squares(8, 67) == 6": {
      "result": true,
      "time": 0.09585070610046387,
      "error": null
    },
    "assert count_Odd_Squares(8, 62) == 5": {
      "result": true,
      "time": 0.10203933715820312,
      "error": null
    },
    "assert count_Odd_Squares(13, 65) == 5": {
      "result": true,
      "time": 0.0912179946899414,
      "error": null
    },
    "assert count_Odd_Squares(6, 62) == 5": {
      "result": true,
      "time": 0.09939289093017578,
      "error": null
    },
    "assert count_Odd_Squares(12, 69) == 5": {
      "result": true,
      "time": 0.09333467483520508,
      "error": null
    },
    "assert count_Odd_Squares(10, 63) == 4": {
      "result": true,
      "time": 0.09240460395812988,
      "error": null
    },
    "assert count_Odd_Squares(5, 67) == 6": {
      "result": true,
      "time": 0.08250761032104492,
      "error": null
    },
    "assert count_Odd_Squares(7, 65) == 6": {
      "result": true,
      "time": 0.08197283744812012,
      "error": null
    },
    "assert count_Odd_Squares(5, 61) == 5": {
      "result": true,
      "time": 0.0853877067565918,
      "error": null
    },
    "assert count_Odd_Squares(8, 68) == 6": {
      "result": true,
      "time": 0.08620238304138184,
      "error": null
    },
    "assert count_Odd_Squares(3, 2) == 0": {
      "result": true,
      "time": 0.09758663177490234,
      "error": null
    },
    "assert count_Odd_Squares(3, 1) == 0": {
      "result": true,
      "time": 0.0851898193359375,
      "error": null
    },
    "assert count_Odd_Squares(4, 10) == 2": {
      "result": true,
      "time": 0.09226465225219727,
      "error": null
    },
    "assert count_Odd_Squares(5, 6) == 0": {
      "result": true,
      "time": 0.09789872169494629,
      "error": null
    },
    "assert count_Odd_Squares(6, 8) == 0": {
      "result": true,
      "time": 0.10387468338012695,
      "error": null
    },
    "assert count_Odd_Squares(4, 1) == 0": {
      "result": true,
      "time": 0.0969228744506836,
      "error": null
    },
    "assert count_Odd_Squares(1, 1) == 1": {
      "result": true,
      "time": 0.09172224998474121,
      "error": null
    },
    "assert count_Odd_Squares(6, 2) == -1": {
      "result": false,
      "time": 0.0928182601928711,
      "error": null
    },
    "assert count_Odd_Squares(2, 8) == 1": {
      "result": true,
      "time": 0.09668588638305664,
      "error": null
    },
    "assert count_Odd_Squares(1, 10) == 3": {
      "result": true,
      "time": 0.10024523735046387,
      "error": null
    },
    "assert count_Odd_Squares(2, 7) == 1": {
      "result": true,
      "time": 0.11044430732727051,
      "error": null
    },
    "assert count_Odd_Squares(2, 6) == 1": {
      "result": true,
      "time": 0.08820104598999023,
      "error": null
    },
    "assert count_Odd_Squares(2, 9) == 2": {
      "result": true,
      "time": 0.07425332069396973,
      "error": null
    },
    "assert count_Odd_Squares(1, 3) == 1": {
      "result": true,
      "time": 0.10294461250305176,
      "error": null
    },
    "assert count_Odd_Squares(3, 8) == 1": {
      "result": true,
      "time": 0.09542441368103027,
      "error": null
    },
    "assert count_Odd_Squares(4, 2) == 0": {
      "result": true,
      "time": 0.1089622974395752,
      "error": null
    },
    "assert count_Odd_Squares(5, 5) == 0": {
      "result": true,
      "time": 0.10909295082092285,
      "error": null
    },
    "assert count_Odd_Squares(7, 8) == 0": {
      "result": true,
      "time": 0.10624432563781738,
      "error": null
    },
    "assert count_Odd_Squares(4, 3) == 0": {
      "result": true,
      "time": 0.10207200050354004,
      "error": null
    },
    "assert count_Odd_Squares(6, 7) == 0": {
      "result": true,
      "time": 0.09471559524536133,
      "error": null
    },
    "assert count_Odd_Squares(4, 6) == 1": {
      "result": true,
      "time": 0.08565902709960938,
      "error": null
    },
    "assert count_Odd_Squares(3, 10) == 2": {
      "result": true,
      "time": 0.1024472713470459,
      "error": null
    },
    "assert count_Odd_Squares(7, 3) == -1": {
      "result": false,
      "time": 0.1041865348815918,
      "error": null
    },
    "assert count_Odd_Squares(5, 10) == 1": {
      "result": true,
      "time": 0.08700728416442871,
      "error": null
    },
    "assert count_Odd_Squares(1, 9) == 3": {
      "result": true,
      "time": 0.07194948196411133,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.9770114942528736,
  "general_error": "",
  "has_testcase_error": false
}