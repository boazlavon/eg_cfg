{
  "code": "import math\n\ndef surfacearea_sphere(radius):\n    pi_value = math.pi\n    radius_squared = radius ** 2\n    product = 4 * pi_value\n    surface_area = product * radius_squared\n    return surface_area",
  "results": {
    "assert surfacearea_sphere(10)==1256.6370614359173": {
      "result": true,
      "time": 0.09950494766235352,
      "error": null
    },
    "assert surfacearea_sphere(15)==2827.4333882308138": {
      "result": true,
      "time": 0.08584713935852051,
      "error": null
    },
    "assert surfacearea_sphere(20)==5026.548245743669": {
      "result": true,
      "time": 0.08692598342895508,
      "error": null
    },
    "assert surfacearea_sphere(12) == 1809.5573684677208": {
      "result": true,
      "time": 0.09012126922607422,
      "error": null
    },
    "assert surfacearea_sphere(10) == 1256.6370614359173": {
      "result": true,
      "time": 0.08303689956665039,
      "error": null
    },
    "assert surfacearea_sphere(15) == 2827.4333882308138": {
      "result": true,
      "time": 0.09415221214294434,
      "error": null
    },
    "assert surfacearea_sphere(6) == 452.3893421169302": {
      "result": true,
      "time": 0.09105467796325684,
      "error": null
    },
    "assert surfacearea_sphere(9) == 1017.8760197630929": {
      "result": true,
      "time": 0.09313058853149414,
      "error": null
    },
    "assert surfacearea_sphere(13) == 2123.7166338267": {
      "result": true,
      "time": 0.08031272888183594,
      "error": null
    },
    "assert surfacearea_sphere(11) == 1520.5308443374597": {
      "result": false,
      "time": 0.07777285575866699,
      "error": null
    },
    "assert surfacearea_sphere(5) == 314.1592653589793": {
      "result": true,
      "time": 0.08154511451721191,
      "error": null
    },
    "assert surfacearea_sphere(8) == 804.247719318987": {
      "result": true,
      "time": 0.09726262092590332,
      "error": null
    },
    "assert surfacearea_sphere(14) == 2463.0086404143976": {
      "result": true,
      "time": 0.09484696388244629,
      "error": null
    },
    "assert surfacearea_sphere(17) == 3631.6811075498013": {
      "result": false,
      "time": 0.08208274841308594,
      "error": null
    },
    "assert surfacearea_sphere(18) == 4071.5040790523717": {
      "result": true,
      "time": 0.08858609199523926,
      "error": null
    },
    "assert surfacearea_sphere(20) == 5026.548245743669": {
      "result": true,
      "time": 0.09316706657409668,
      "error": null
    },
    "assert surfacearea_sphere(16) == 3216.990877275948": {
      "result": true,
      "time": 0.08219385147094727,
      "error": null
    },
    "assert surfacearea_sphere(19) == 4536.459791783661": {
      "result": true,
      "time": 0.09129500389099121,
      "error": null
    },
    "assert surfacearea_sphere(24) == 7238.229473870883": {
      "result": true,
      "time": 0.08670210838317871,
      "error": null
    },
    "assert surfacearea_sphere(23) == 6647.610054996002": {
      "result": true,
      "time": 0.08729124069213867,
      "error": null
    },
    "assert surfacearea_sphere(22) == 6082.123377349839": {
      "result": false,
      "time": 0.09239578247070312,
      "error": null
    },
    "assert surfacearea_sphere(21) == 5541.769440932396": {
      "result": false,
      "time": 0.07481622695922852,
      "error": null
    },
    "assert surfacearea_sphere(25) == 7853.981633974483": {
      "result": true,
      "time": 0.07326745986938477,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.8260869565217391,
  "general_error": "",
  "has_testcase_error": false
}