{
  "code": "def find_peak(arr, n):\n    if n == 1:\n        return 0\n    for i in range(n):\n        if i == 0:\n            if arr[i] >= arr[i + 1]:\n                return i\n        elif i == n - 1:\n            if arr[i] >= arr[i - 1]:\n                return i\n        else:\n            if arr[i] >= arr[i - 1] and arr[i] >= arr[i + 1]:\n                return i\n    return -1",
  "results": {
    "assert find_peak([1, 3, 20, 4, 1, 0], 6) == 2": {
      "result": true,
      "time": 0.049013614654541016,
      "error": null
    },
    "assert find_peak([2, 3, 4, 5, 6], 5) == 4": {
      "result": true,
      "time": 0.04940009117126465,
      "error": null
    },
    "assert find_peak([8, 9, 11, 12, 14, 15], 6) == 5 ": {
      "result": true,
      "time": 0.049859046936035156,
      "error": null
    },
    "assert find_peak([2, 1, 20, 1, 3, 1], 9) == 4": {
      "result": false,
      "time": 0.042101383209228516,
      "error": null
    },
    "assert find_peak([1, 7, 22, 8, 6, 3], 3) == 2": {
      "result": true,
      "time": 0.03733110427856445,
      "error": null
    },
    "assert find_peak([5, 2, 24, 9, 5, 3], 4) == 0": {
      "result": true,
      "time": 0.04023027420043945,
      "error": null
    },
    "assert find_peak([5, 5, 25, 9, 5, 1], 6) == 2": {
      "result": false,
      "time": 0.0415496826171875,
      "error": null
    },
    "assert find_peak([6, 2, 15, 9, 2, 5], 5) == 2": {
      "result": false,
      "time": 0.046816110610961914,
      "error": null
    },
    "assert find_peak([6, 8, 17, 1, 5, 4], 9) == 4": {
      "result": false,
      "time": 0.05401110649108887,
      "error": null
    },
    "assert find_peak([6, 2, 25, 7, 3, 4], 1) == 0": {
      "result": true,
      "time": 0.04351544380187988,
      "error": null
    },
    "assert find_peak([6, 2, 25, 8, 6, 4], 4) == 0": {
      "result": true,
      "time": 0.04128766059875488,
      "error": null
    },
    "assert find_peak([1, 7, 22, 4, 4, 1], 3) == 2": {
      "result": true,
      "time": 0.03504300117492676,
      "error": null
    },
    "assert find_peak([4, 3, 24, 7, 3, 2], 8) == 0": {
      "result": true,
      "time": 0.054619550704956055,
      "error": null
    },
    "assert find_peak([3, 8, 18, 9, 6, 5], 9) == 2": {
      "result": true,
      "time": 0.05647468566894531,
      "error": null
    },
    "assert find_peak([5, 5, 20, 2, 5, 3], 4) == 2": {
      "result": false,
      "time": 0.05308055877685547,
      "error": null
    },
    "assert find_peak([3, 4, 25, 4, 2, 4], 10) == 2": {
      "result": true,
      "time": 0.06261992454528809,
      "error": null
    },
    "assert find_peak([5, 2, 25, 7, 2, 2], 4) == 0": {
      "result": true,
      "time": 0.03119945526123047,
      "error": null
    },
    "assert find_peak([6, 1, 20, 1, 4, 3], 5) == 2": {
      "result": false,
      "time": 0.03990745544433594,
      "error": null
    },
    "assert find_peak([3, 6, 18, 6, 5, 2], 9) == 2": {
      "result": true,
      "time": 0.04753851890563965,
      "error": null
    },
    "assert find_peak([3, 3, 22, 6, 5, 4], 1) == 0": {
      "result": true,
      "time": 0.0414884090423584,
      "error": null
    },
    "assert find_peak([4, 5, 23, 2, 2, 3], 1) == 0": {
      "result": true,
      "time": 0.042319536209106445,
      "error": null
    },
    "assert find_peak([1, 7, 24, 7, 6, 3], 10) == 2": {
      "result": true,
      "time": 0.038793087005615234,
      "error": null
    },
    "assert find_peak([3, 5, 22, 6, 3, 3], 5) == 2": {
      "result": true,
      "time": 0.039771080017089844,
      "error": null
    },
    "assert find_peak([1, 1, 25, 5, 5, 3], 8) == 2": {
      "result": false,
      "time": 0.04058361053466797,
      "error": null
    },
    "assert find_peak([5, 1, 15, 8, 2, 5], 3) == 0": {
      "result": true,
      "time": 0.038388967514038086,
      "error": null
    },
    "assert find_peak([5, 1, 16, 9, 5, 4], 9) == 0": {
      "result": true,
      "time": 0.061035871505737305,
      "error": null
    },
    "assert find_peak([3, 7, 16, 9, 4, 5], 10) == 2": {
      "result": true,
      "time": 0.06056547164916992,
      "error": null
    },
    "assert find_peak([1, 1, 17, 9, 5, 3], 8) == 2": {
      "result": false,
      "time": 0.0549778938293457,
      "error": null
    },
    "assert find_peak([3, 6, 19, 8, 2, 5], 3) == 2": {
      "result": true,
      "time": 0.0652303695678711,
      "error": null
    },
    "assert find_peak([1, 1, 18, 1, 4, 5], 6) == 2": {
      "result": false,
      "time": 0.06385922431945801,
      "error": null
    },
    "assert find_peak([5, 1, 21, 9, 2, 3], 7) == 0": {
      "result": true,
      "time": 0.05313754081726074,
      "error": null
    },
    "assert find_peak([3, 3, 17, 2, 2, 5], 1) == 0": {
      "result": true,
      "time": 0.057892560958862305,
      "error": null
    },
    "assert find_peak([1, 4, 17, 8, 2, 5], 4) == 2": {
      "result": true,
      "time": 0.0542757511138916,
      "error": null
    },
    "assert find_peak([4, 2, 19, 6, 2, 2], 6) == 2": {
      "result": false,
      "time": 0.061617374420166016,
      "error": null
    },
    "assert find_peak([3, 1, 21, 9, 1, 5], 6) == 2": {
      "result": false,
      "time": 0.041934967041015625,
      "error": null
    },
    "assert find_peak([3, 2, 20, 2, 4, 1], 10) == 4": {
      "result": false,
      "time": 0.0422053337097168,
      "error": null
    },
    "assert find_peak([2, 6, 2, 7, 11], 1) == 0": {
      "result": true,
      "time": 0.03328275680541992,
      "error": null
    },
    "assert find_peak([1, 2, 6, 6, 3], 1) == 0": {
      "result": true,
      "time": 0.03203535079956055,
      "error": null
    },
    "assert find_peak([7, 3, 8, 9, 8], 2) == 0": {
      "result": true,
      "time": 0.0413670539855957,
      "error": null
    },
    "assert find_peak([3, 4, 9, 1, 11], 3) == 2": {
      "result": true,
      "time": 0.035857200622558594,
      "error": null
    },
    "assert find_peak([6, 1, 4, 3, 2], 4) == 0": {
      "result": true,
      "time": 0.047109365463256836,
      "error": null
    },
    "assert find_peak([5, 6, 9, 3, 7], 1) == 0": {
      "result": true,
      "time": 0.03918886184692383,
      "error": null
    },
    "assert find_peak([4, 2, 8, 1, 8], 8) == 0": {
      "result": true,
      "time": 0.03891110420227051,
      "error": null
    },
    "assert find_peak([2, 1, 2, 8, 8], 1) == 0": {
      "result": true,
      "time": 0.04571533203125,
      "error": null
    },
    "assert find_peak([2, 5, 9, 8, 2], 8) == 2": {
      "result": true,
      "time": 0.03799867630004883,
      "error": null
    },
    "assert find_peak([1, 6, 9, 5, 9], 1) == 0": {
      "result": true,
      "time": 0.03420734405517578,
      "error": null
    },
    "assert find_peak([6, 2, 3, 1, 6], 1) == 0": {
      "result": true,
      "time": 0.041640281677246094,
      "error": null
    },
    "assert find_peak([3, 3, 9, 5, 6], 7) == 2": {
      "result": false,
      "time": 0.03991079330444336,
      "error": null
    },
    "assert find_peak([6, 4, 1, 7, 7], 7) == 3": {
      "result": false,
      "time": 0.03744864463806152,
      "error": null
    },
    "assert find_peak([6, 6, 9, 4, 1], 8) == 2": {
      "result": false,
      "time": 0.041364192962646484,
      "error": null
    },
    "assert find_peak([5, 5, 6, 6, 10], 1) == 0": {
      "result": true,
      "time": 0.03760123252868652,
      "error": null
    },
    "assert find_peak([2, 7, 6, 9, 4], 2) == 1": {
      "result": true,
      "time": 0.03972816467285156,
      "error": null
    },
    "assert find_peak([2, 5, 6, 2, 6], 5) == 2": {
      "result": true,
      "time": 0.037458181381225586,
      "error": null
    },
    "assert find_peak([1, 8, 6, 9, 6], 10) == 1": {
      "result": true,
      "time": 0.034291744232177734,
      "error": null
    },
    "assert find_peak([5, 4, 8, 6, 5], 5) == 2": {
      "result": false,
      "time": 0.04946494102478027,
      "error": null
    },
    "assert find_peak([4, 8, 1, 2, 2], 4) == 1": {
      "result": true,
      "time": 0.03883814811706543,
      "error": null
    },
    "assert find_peak([2, 1, 4, 8, 2], 3) == 0": {
      "result": true,
      "time": 0.03792929649353027,
      "error": null
    },
    "assert find_peak([6, 5, 3, 10, 1], 7) == 3": {
      "result": false,
      "time": 0.0421450138092041,
      "error": null
    },
    "assert find_peak([1, 7, 3, 4, 7], 2) == 1": {
      "result": true,
      "time": 0.04066777229309082,
      "error": null
    },
    "assert find_peak([3, 1, 5, 10, 9], 5) == 3": {
      "result": false,
      "time": 0.04211258888244629,
      "error": null
    },
    "assert find_peak([2, 6, 6, 9, 6], 2) == 1": {
      "result": true,
      "time": 0.04101896286010742,
      "error": null
    },
    "assert find_peak([2, 6, 1, 4, 4], 3) == 1": {
      "result": true,
      "time": 0.04080319404602051,
      "error": null
    },
    "assert find_peak([1, 4, 4, 6, 1], 6) == 3": {
      "result": false,
      "time": 0.03889775276184082,
      "error": null
    },
    "assert find_peak([5, 7, 1, 2, 11], 2) == 1": {
      "result": true,
      "time": 0.04105353355407715,
      "error": null
    },
    "assert find_peak([5, 3, 2, 9, 4], 6) == 0": {
      "result": true,
      "time": 0.04648327827453613,
      "error": null
    },
    "assert find_peak([1, 1, 6, 8, 3], 2) == 0": {
      "result": true,
      "time": 0.038217782974243164,
      "error": null
    },
    "assert find_peak([6, 6, 6, 10, 1], 10) == 1": {
      "result": false,
      "time": 0.03542470932006836,
      "error": null
    },
    "assert find_peak([1, 4, 2, 5, 1], 10) == 1": {
      "result": true,
      "time": 0.04135465621948242,
      "error": null
    },
    "assert find_peak([1, 6, 5, 7, 5], 1) == 0": {
      "result": true,
      "time": 0.03267621994018555,
      "error": null
    },
    "assert find_peak([9, 13, 9, 17, 17, 18], 3) == 1": {
      "result": true,
      "time": 0.04274606704711914,
      "error": null
    },
    "assert find_peak([9, 6, 16, 9, 13, 11], 6) == 2": {
      "result": false,
      "time": 0.035919189453125,
      "error": null
    },
    "assert find_peak([12, 7, 7, 17, 11, 10], 9) == 0": {
      "result": true,
      "time": 0.05130815505981445,
      "error": null
    },
    "assert find_peak([6, 8, 11, 16, 14, 10], 6) == 3": {
      "result": true,
      "time": 0.04127001762390137,
      "error": null
    },
    "assert find_peak([5, 11, 6, 10, 19, 16], 10) == 4": {
      "result": false,
      "time": 0.05488896369934082,
      "error": null
    },
    "assert find_peak([6, 4, 15, 14, 15, 14], 5) == 2": {
      "result": false,
      "time": 0.05407834053039551,
      "error": null
    },
    "assert find_peak([4, 8, 8, 11, 15, 12], 4) == 1": {
      "result": true,
      "time": 0.05788421630859375,
      "error": null
    },
    "assert find_peak([5, 11, 8, 17, 14, 16], 2) == 1": {
      "result": true,
      "time": 0.0351712703704834,
      "error": null
    },
    "assert find_peak([6, 6, 9, 8, 11, 18], 5) == 2": {
      "result": false,
      "time": 0.03636741638183594,
      "error": null
    },
    "assert find_peak([5, 9, 11, 9, 16, 13], 6) == 2": {
      "result": true,
      "time": 0.03681015968322754,
      "error": null
    },
    "assert find_peak([6, 11, 16, 13, 12, 13], 4) == 2": {
      "result": true,
      "time": 0.03964591026306152,
      "error": null
    },
    "assert find_peak([13, 4, 14, 17, 11, 20], 6) == 3": {
      "result": false,
      "time": 0.03978896141052246,
      "error": null
    },
    "assert find_peak([6, 12, 10, 9, 9, 19], 1) == 0": {
      "result": true,
      "time": 0.04168891906738281,
      "error": null
    },
    "assert find_peak([6, 13, 16, 15, 11, 11], 1) == 0": {
      "result": true,
      "time": 0.0368196964263916,
      "error": null
    },
    "assert find_peak([11, 12, 12, 14, 12, 13], 2) == 1": {
      "result": true,
      "time": 0.03734898567199707,
      "error": null
    },
    "assert find_peak([8, 4, 14, 13, 17, 18], 2) == 0": {
      "result": true,
      "time": 0.039563894271850586,
      "error": null
    },
    "assert find_peak([11, 12, 9, 13, 16, 13], 9) == 4": {
      "result": false,
      "time": 0.04144787788391113,
      "error": null
    },
    "assert find_peak([13, 8, 9, 9, 15, 10], 7) == 4": {
      "result": false,
      "time": 0.0380094051361084,
      "error": null
    },
    "assert find_peak([7, 5, 14, 17, 15, 11], 2) == 0": {
      "result": true,
      "time": 0.03812384605407715,
      "error": null
    },
    "assert find_peak([13, 11, 7, 17, 11, 18], 8) == 3": {
      "result": false,
      "time": 0.040587425231933594,
      "error": null
    },
    "assert find_peak([6, 14, 15, 13, 12, 14], 4) == 2": {
      "result": true,
      "time": 0.056865692138671875,
      "error": null
    },
    "assert find_peak([12, 4, 9, 7, 9, 19], 3) == 0": {
      "result": true,
      "time": 0.05184221267700195,
      "error": null
    },
    "assert find_peak([4, 9, 16, 17, 16, 20], 8) == 3": {
      "result": true,
      "time": 0.04798245429992676,
      "error": null
    },
    "assert find_peak([4, 12, 13, 11, 10, 20], 3) == 2": {
      "result": true,
      "time": 0.03692984580993652,
      "error": null
    },
    "assert find_peak([10, 8, 9, 8, 19, 18], 2) == 0": {
      "result": true,
      "time": 0.0387730598449707,
      "error": null
    },
    "assert find_peak([11, 10, 9, 14, 17, 13], 11) == 0": {
      "result": true,
      "time": 0.03917074203491211,
      "error": null
    },
    "assert find_peak([10, 6, 8, 14, 15, 16], 1) == 0": {
      "result": true,
      "time": 0.03905034065246582,
      "error": null
    },
    "assert find_peak([10, 7, 12, 7, 10, 10], 6) == 2": {
      "result": false,
      "time": 0.0366358757019043,
      "error": null
    },
    "assert find_peak([10, 7, 15, 13, 17, 14], 8) == 0": {
      "result": true,
      "time": 0.039528608322143555,
      "error": null
    },
    "assert find_peak([6, 4, 9, 13, 11, 12], 4) == 0": {
      "result": true,
      "time": 0.03951382637023926,
      "error": null
    },
    "assert find_peak([13, 6, 10, 7, 13, 15], 8) == 0": {
      "result": true,
      "time": 0.04070591926574707,
      "error": null
    },
    "assert find_peak([9, 10, 16, 17, 11, 12], 8) == 3": {
      "result": true,
      "time": 0.039965152740478516,
      "error": null
    },
    "assert find_peak([3, 8, 8, 10, 16, 17], 2) == 1": {
      "result": true,
      "time": 0.04189491271972656,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.7156862745098039,
  "general_error": "",
  "has_testcase_error": false
}