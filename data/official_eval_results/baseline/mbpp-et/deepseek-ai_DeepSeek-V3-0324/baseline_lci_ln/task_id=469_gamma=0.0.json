{
  "code": "def max_profit(prices, k):\n    if not prices or k == 0:\n        return 0\n    \n    n = len(prices)\n    if k >= n // 2:\n        max_profit = 0\n        for i in range(1, n):\n            if prices[i] > prices[i - 1]:\n                max_profit += prices[i] - prices[i - 1]\n        return max_profit\n    \n    dp = [[0] * n for _ in range(k + 1)]\n    \n    for i in range(1, k + 1):\n        max_diff = -prices[0]\n        for j in range(1, n):\n            dp[i][j] = max(dp[i][j - 1], prices[j] + max_diff)\n            max_diff = max(max_diff, dp[i - 1][j] - prices[j])\n    \n    return dp[k][n - 1]",
  "results": {
    "assert max_profit([1, 5, 2, 3, 7, 6, 4, 5], 3) == 10": {
      "result": true,
      "time": 0.034433841705322266,
      "error": null
    },
    "assert max_profit([2, 4, 7, 5, 4, 3, 5], 2) == 7": {
      "result": true,
      "time": 0.047316551208496094,
      "error": null
    },
    "assert max_profit([10, 6, 8, 4, 2], 2) == 2": {
      "result": true,
      "time": 0.04658150672912598,
      "error": null
    },
    "assert max_profit([1, 7, 2, 3, 3, 11, 6, 9], 8) == 18": {
      "result": true,
      "time": 0.0426335334777832,
      "error": null
    },
    "assert max_profit([5, 4, 7, 7, 4, 3, 5, 3], 2) == 5": {
      "result": true,
      "time": 0.06103062629699707,
      "error": null
    },
    "assert max_profit([4, 2, 1, 8, 7, 5, 9, 1], 3) == 11": {
      "result": true,
      "time": 0.05285048484802246,
      "error": null
    },
    "assert max_profit([1, 4, 3, 3, 2, 10, 7, 6], 2) == 11": {
      "result": true,
      "time": 0.04324054718017578,
      "error": null
    },
    "assert max_profit([6, 8, 4, 4, 3, 10, 3, 6], 2) == 10": {
      "result": true,
      "time": 0.04330158233642578,
      "error": null
    },
    "assert max_profit([5, 4, 3, 5, 9, 10, 7, 1], 6) == 7": {
      "result": true,
      "time": 0.03567075729370117,
      "error": null
    },
    "assert max_profit([4, 8, 5, 5, 8, 5, 1, 1], 3) == 7": {
      "result": true,
      "time": 0.04091477394104004,
      "error": null
    },
    "assert max_profit([6, 8, 6, 5, 5, 2, 7, 6], 7) == 7": {
      "result": true,
      "time": 0.03873896598815918,
      "error": null
    },
    "assert max_profit([6, 9, 2, 6, 5, 8, 4, 2], 7) == 10": {
      "result": true,
      "time": 0.04330182075500488,
      "error": null
    },
    "assert max_profit([6, 4, 2, 5, 2, 10, 1, 3], 7) == 13": {
      "result": true,
      "time": 0.03429102897644043,
      "error": null
    },
    "assert max_profit([1, 9, 7, 1, 5, 9, 6, 2], 7) == 16": {
      "result": true,
      "time": 0.03670668601989746,
      "error": null
    },
    "assert max_profit([2, 8, 5, 5, 12, 11, 9, 8], 6) == 13": {
      "result": true,
      "time": 0.04096865653991699,
      "error": null
    },
    "assert max_profit([4, 1, 3, 5, 9, 5, 9, 10], 1) == 9": {
      "result": true,
      "time": 0.03979659080505371,
      "error": null
    },
    "assert max_profit([5, 2, 6, 2, 12, 7, 4, 2], 5) == 14": {
      "result": true,
      "time": 0.04058074951171875,
      "error": null
    },
    "assert max_profit([5, 3, 2, 3, 4, 11, 3, 4], 1) == 9": {
      "result": true,
      "time": 0.03658175468444824,
      "error": null
    },
    "assert max_profit([4, 10, 1, 4, 8, 9, 2, 3], 6) == 15": {
      "result": true,
      "time": 0.04199385643005371,
      "error": null
    },
    "assert max_profit([3, 9, 3, 1, 11, 3, 4, 2], 7) == 17": {
      "result": true,
      "time": 0.04794192314147949,
      "error": null
    },
    "assert max_profit([4, 10, 2, 5, 7, 11, 9, 9], 4) == 15": {
      "result": true,
      "time": 0.05203819274902344,
      "error": null
    },
    "assert max_profit([6, 1, 5, 7, 4, 4, 4, 6], 7) == 8": {
      "result": true,
      "time": 0.048757314682006836,
      "error": null
    },
    "assert max_profit([2, 2, 3, 5, 2, 10, 8, 10], 1) == 8": {
      "result": true,
      "time": 0.036754608154296875,
      "error": null
    },
    "assert max_profit([2, 8, 7, 5, 6, 3, 2, 5], 8) == 10": {
      "result": true,
      "time": 0.03849458694458008,
      "error": null
    },
    "assert max_profit([3, 6, 6, 7, 9, 6, 6, 9], 8) == 9": {
      "result": true,
      "time": 0.041502952575683594,
      "error": null
    },
    "assert max_profit([5, 3, 4, 1, 7, 7, 7, 2], 2) == 7": {
      "result": true,
      "time": 0.03699660301208496,
      "error": null
    },
    "assert max_profit([4, 9, 6, 5, 9, 7, 1, 5], 6) == 13": {
      "result": true,
      "time": 0.04402899742126465,
      "error": null
    },
    "assert max_profit([2, 8, 7, 2, 6, 6, 1, 9], 2) == 14": {
      "result": true,
      "time": 0.04190635681152344,
      "error": null
    },
    "assert max_profit([3, 2, 4, 4, 5, 7, 6, 3], 7) == 5": {
      "result": true,
      "time": 0.03861045837402344,
      "error": null
    },
    "assert max_profit([6, 4, 5, 1, 7, 2, 1, 6], 3) == 12": {
      "result": true,
      "time": 0.038303375244140625,
      "error": null
    },
    "assert max_profit([2, 3, 5, 3, 11, 5, 9, 7], 5) == 15": {
      "result": true,
      "time": 0.04162907600402832,
      "error": null
    },
    "assert max_profit([5, 2, 4, 6, 10, 6, 8, 1], 8) == 10": {
      "result": true,
      "time": 0.03839755058288574,
      "error": null
    },
    "assert max_profit([5, 2, 2, 2, 7, 8, 7, 1], 3) == 6": {
      "result": true,
      "time": 0.038665771484375,
      "error": null
    },
    "assert max_profit([3, 3, 6, 1, 5, 7, 7, 9], 5) == 11": {
      "result": true,
      "time": 0.04292011260986328,
      "error": null
    },
    "assert max_profit([5, 5, 3, 3, 8, 4, 1, 8], 1) == 7": {
      "result": true,
      "time": 0.03690695762634277,
      "error": null
    },
    "assert max_profit([1, 3, 1, 3, 9, 1, 2, 5], 6) == 14": {
      "result": true,
      "time": 0.042040348052978516,
      "error": null
    },
    "assert max_profit([3, 4, 8, 6, 7, 7, 1], 2) == 6": {
      "result": true,
      "time": 0.04011130332946777,
      "error": null
    },
    "assert max_profit([5, 8, 5, 7, 4, 8, 6], 3) == 9": {
      "result": true,
      "time": 0.03681778907775879,
      "error": null
    },
    "assert max_profit([4, 8, 8, 2, 9, 1, 7], 5) == 17": {
      "result": true,
      "time": 0.04075145721435547,
      "error": null
    },
    "assert max_profit([7, 7, 7, 6, 6, 4, 9], 2) == 5": {
      "result": true,
      "time": 0.0433955192565918,
      "error": null
    },
    "assert max_profit([1, 5, 7, 5, 3, 7, 9], 7) == 12": {
      "result": true,
      "time": 0.051516056060791016,
      "error": null
    },
    "assert max_profit([4, 5, 2, 2, 4, 4, 4], 6) == 3": {
      "result": true,
      "time": 0.04888558387756348,
      "error": null
    },
    "assert max_profit([3, 7, 8, 6, 2, 1, 7], 5) == 11": {
      "result": true,
      "time": 0.0522763729095459,
      "error": null
    },
    "assert max_profit([7, 7, 8, 5, 6, 1, 2], 4) == 3": {
      "result": true,
      "time": 0.04741835594177246,
      "error": null
    },
    "assert max_profit([7, 6, 9, 10, 6, 6, 7], 7) == 5": {
      "result": true,
      "time": 0.04976177215576172,
      "error": null
    },
    "assert max_profit([5, 9, 9, 10, 5, 4, 5], 5) == 6": {
      "result": true,
      "time": 0.04924464225769043,
      "error": null
    },
    "assert max_profit([6, 1, 9, 1, 6, 2, 2], 3) == 13": {
      "result": true,
      "time": 0.05433940887451172,
      "error": null
    },
    "assert max_profit([2, 5, 8, 7, 4, 7, 9], 7) == 11": {
      "result": true,
      "time": 0.045508623123168945,
      "error": null
    },
    "assert max_profit([7, 9, 8, 7, 9, 7, 7], 2) == 4": {
      "result": true,
      "time": 0.05164527893066406,
      "error": null
    },
    "assert max_profit([1, 9, 9, 1, 9, 6, 4], 1) == 8": {
      "result": true,
      "time": 0.04143571853637695,
      "error": null
    },
    "assert max_profit([1, 4, 11, 3, 7, 5, 4], 7) == 14": {
      "result": true,
      "time": 0.03911924362182617,
      "error": null
    },
    "assert max_profit([5, 1, 11, 10, 1, 4, 5], 2) == 14": {
      "result": true,
      "time": 0.04590296745300293,
      "error": null
    },
    "assert max_profit([1, 1, 2, 2, 8, 4, 4], 6) == 7": {
      "result": true,
      "time": 0.039102792739868164,
      "error": null
    },
    "assert max_profit([6, 7, 9, 6, 2, 4, 8], 2) == 9": {
      "result": true,
      "time": 0.04787588119506836,
      "error": null
    },
    "assert max_profit([5, 6, 7, 5, 2, 3, 8], 2) == 8": {
      "result": true,
      "time": 0.047991275787353516,
      "error": null
    },
    "assert max_profit([3, 4, 3, 4, 6, 1, 1], 7) == 4": {
      "result": true,
      "time": 0.04577946662902832,
      "error": null
    },
    "assert max_profit([4, 4, 4, 10, 6, 3, 8], 7) == 11": {
      "result": true,
      "time": 0.03978919982910156,
      "error": null
    },
    "assert max_profit([2, 2, 8, 2, 8, 2, 1], 6) == 12": {
      "result": true,
      "time": 0.039023399353027344,
      "error": null
    },
    "assert max_profit([2, 8, 8, 4, 1, 3, 4], 5) == 9": {
      "result": true,
      "time": 0.04042530059814453,
      "error": null
    },
    "assert max_profit([5, 3, 12, 9, 6, 4, 7], 1) == 9": {
      "result": true,
      "time": 0.03828787803649902,
      "error": null
    },
    "assert max_profit([4, 5, 7, 3, 2, 6, 2], 5) == 7": {
      "result": true,
      "time": 0.05187654495239258,
      "error": null
    },
    "assert max_profit([1, 7, 7, 6, 4, 4, 4], 4) == 6": {
      "result": true,
      "time": 0.04045987129211426,
      "error": null
    },
    "assert max_profit([7, 6, 3, 5, 6, 8, 7], 6) == 5": {
      "result": true,
      "time": 0.04585099220275879,
      "error": null
    },
    "assert max_profit([7, 1, 2, 9, 6, 6, 8], 3) == 10": {
      "result": true,
      "time": 0.04403805732727051,
      "error": null
    },
    "assert max_profit([2, 5, 12, 8, 2, 6, 7], 6) == 15": {
      "result": true,
      "time": 0.04138922691345215,
      "error": null
    },
    "assert max_profit([1, 8, 5, 10, 5, 2, 8], 1) == 9": {
      "result": true,
      "time": 0.05408501625061035,
      "error": null
    },
    "assert max_profit([1, 7, 9, 9, 7, 2, 2], 6) == 8": {
      "result": true,
      "time": 0.05356454849243164,
      "error": null
    },
    "assert max_profit([5, 3, 3, 8, 5, 5, 1], 1) == 5": {
      "result": true,
      "time": 0.04642462730407715,
      "error": null
    },
    "assert max_profit([1, 1, 4, 2, 2, 1, 1], 1) == 3": {
      "result": true,
      "time": 0.046538352966308594,
      "error": null
    },
    "assert max_profit([13, 3, 12, 8, 6], 3) == 9": {
      "result": true,
      "time": 0.03593802452087402,
      "error": null
    },
    "assert max_profit([10, 6, 9, 8, 2], 6) == 3": {
      "result": true,
      "time": 0.04984474182128906,
      "error": null
    },
    "assert max_profit([5, 10, 11, 6, 1], 6) == 6": {
      "result": true,
      "time": 0.047241926193237305,
      "error": null
    },
    "assert max_profit([15, 6, 7, 1, 3], 1) == 2": {
      "result": true,
      "time": 0.04461550712585449,
      "error": null
    },
    "assert max_profit([14, 7, 3, 1, 6], 5) == 5": {
      "result": true,
      "time": 0.0390322208404541,
      "error": null
    },
    "assert max_profit([8, 7, 6, 9, 5], 7) == 3": {
      "result": true,
      "time": 0.04632139205932617,
      "error": null
    },
    "assert max_profit([10, 10, 12, 1, 6], 4) == 7": {
      "result": true,
      "time": 0.04708218574523926,
      "error": null
    },
    "assert max_profit([11, 3, 10, 3, 4], 6) == 8": {
      "result": true,
      "time": 0.043813467025756836,
      "error": null
    },
    "assert max_profit([10, 3, 11, 4, 1], 6) == 8": {
      "result": true,
      "time": 0.04088234901428223,
      "error": null
    },
    "assert max_profit([5, 2, 7, 9, 5], 7) == 7": {
      "result": true,
      "time": 0.04832744598388672,
      "error": null
    },
    "assert max_profit([8, 4, 11, 4, 7], 4) == 10": {
      "result": true,
      "time": 0.056612491607666016,
      "error": null
    },
    "assert max_profit([9, 11, 11, 8, 6], 6) == 2": {
      "result": true,
      "time": 0.06571173667907715,
      "error": null
    },
    "assert max_profit([15, 11, 12, 2, 6], 5) == 5": {
      "result": true,
      "time": 0.06317758560180664,
      "error": null
    },
    "assert max_profit([15, 4, 9, 1, 2], 5) == 6": {
      "result": true,
      "time": 0.05815267562866211,
      "error": null
    },
    "assert max_profit([15, 9, 13, 7, 7], 3) == 4": {
      "result": true,
      "time": 0.0719294548034668,
      "error": null
    },
    "assert max_profit([9, 10, 13, 4, 1], 4) == 4": {
      "result": true,
      "time": 0.06675457954406738,
      "error": null
    },
    "assert max_profit([14, 11, 12, 1, 2], 4) == 2": {
      "result": true,
      "time": 0.07516217231750488,
      "error": null
    },
    "assert max_profit([15, 11, 9, 4, 3], 4) == 0": {
      "result": true,
      "time": 0.06477689743041992,
      "error": null
    },
    "assert max_profit([9, 1, 11, 9, 2], 3) == 10": {
      "result": true,
      "time": 0.0582575798034668,
      "error": null
    },
    "assert max_profit([9, 4, 13, 9, 5], 7) == 9": {
      "result": true,
      "time": 0.06712865829467773,
      "error": null
    },
    "assert max_profit([7, 7, 3, 8, 4], 1) == 5": {
      "result": true,
      "time": 0.06091785430908203,
      "error": null
    },
    "assert max_profit([5, 6, 5, 7, 7], 1) == 2": {
      "result": true,
      "time": 0.07272958755493164,
      "error": null
    },
    "assert max_profit([6, 6, 13, 2, 7], 2) == 12": {
      "result": true,
      "time": 0.05317521095275879,
      "error": null
    },
    "assert max_profit([10, 6, 12, 2, 5], 1) == 6": {
      "result": true,
      "time": 0.05988883972167969,
      "error": null
    },
    "assert max_profit([15, 8, 3, 5, 4], 3) == 2": {
      "result": true,
      "time": 0.049237728118896484,
      "error": null
    },
    "assert max_profit([5, 4, 10, 3, 6], 1) == 6": {
      "result": true,
      "time": 0.05391359329223633,
      "error": null
    },
    "assert max_profit([12, 10, 12, 2, 1], 2) == 2": {
      "result": true,
      "time": 0.05816793441772461,
      "error": null
    },
    "assert max_profit([5, 10, 12, 7, 1], 6) == 7": {
      "result": true,
      "time": 0.04985618591308594,
      "error": null
    },
    "assert max_profit([6, 5, 9, 2, 4], 4) == 6": {
      "result": true,
      "time": 0.05013155937194824,
      "error": null
    },
    "assert max_profit([14, 7, 7, 4, 1], 6) == 0": {
      "result": true,
      "time": 0.05001044273376465,
      "error": null
    },
    "assert max_profit([6, 1, 6, 6, 4], 3) == 5": {
      "result": true,
      "time": 0.04445290565490723,
      "error": null
    },
    "assert max_profit([6, 3, 12, 8, 4], 2) == 9": {
      "result": true,
      "time": 0.05748414993286133,
      "error": null
    },
    "assert max_profit([15, 8, 13, 2, 6], 6) == 9": {
      "result": true,
      "time": 0.0523679256439209,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}