{
  "code": "def is_majority(arr, n, x):\n    # Find the first occurrence of x in the array\n    first_index = -1\n    low = 0\n    high = n - 1\n    while low <= high:\n        mid = (low + high) // 2\n        if arr[mid] == x:\n            first_index = mid\n            high = mid - 1\n        elif arr[mid] < x:\n            low = mid + 1\n        else:\n            high = mid - 1\n    \n    # If x is not found in the array\n    if first_index == -1:\n        return False\n    \n    # Find the last occurrence of x in the array\n    last_index = -1\n    low = 0\n    high = n - 1\n    while low <= high:\n        mid = (low + high) // 2\n        if arr[mid] == x:\n            last_index = mid\n            low = mid + 1\n        elif arr[mid] < x:\n            low = mid + 1\n        else:\n            high = mid - 1\n    \n    # Calculate the count of x in the array\n    count = last_index - first_index + 1\n    \n    # Check if count is more than half of the array size\n    if count > n // 2:\n        return True\n    else:\n        return False",
  "results": {
    "assert is_majority([1, 2, 3, 3, 3, 3, 10], 7, 3) == True": {
      "result": true,
      "time": 0.048807382583618164,
      "error": null
    },
    "assert is_majority([1, 1, 2, 4, 4, 4, 6, 6], 8, 4) == False": {
      "result": true,
      "time": 0.055556535720825195,
      "error": null
    },
    "assert is_majority([1, 1, 1, 2, 2], 5, 1) == True": {
      "result": true,
      "time": 0.05552554130554199,
      "error": null
    },
    "assert is_majority([6, 2, 3, 8, 1, 4, 11], 7, 8) == False": {
      "result": true,
      "time": 0.05422639846801758,
      "error": null
    },
    "assert is_majority([4, 6, 3, 2, 6, 3, 11], 9, 5) == False": {
      "result": true,
      "time": 0.05178570747375488,
      "error": null
    },
    "assert is_majority([4, 4, 4, 6, 6, 7, 12], 7, 4) == False": {
      "result": true,
      "time": 0.07262206077575684,
      "error": null
    },
    "assert is_majority([6, 3, 2, 1, 8, 7, 13], 12, 7) == False": {
      "result": false,
      "time": 0.05924820899963379,
      "error": null
    },
    "assert is_majority([1, 1, 5, 8, 6, 5, 9], 4, 6) == False": {
      "result": true,
      "time": 0.05698037147521973,
      "error": null
    },
    "assert is_majority([3, 4, 8, 6, 6, 8, 8], 11, 2) == False": {
      "result": true,
      "time": 0.061948299407958984,
      "error": null
    },
    "assert is_majority([1, 5, 4, 1, 2, 5, 12], 4, 7) == False": {
      "result": true,
      "time": 0.05828714370727539,
      "error": null
    },
    "assert is_majority([1, 3, 1, 4, 1, 4, 14], 7, 8) == False": {
      "result": true,
      "time": 0.05552053451538086,
      "error": null
    },
    "assert is_majority([2, 7, 3, 4, 1, 4, 12], 4, 7) == False": {
      "result": true,
      "time": 0.06624650955200195,
      "error": null
    },
    "assert is_majority([1, 1, 1, 7, 5, 1, 15], 3, 6) == False": {
      "result": true,
      "time": 0.052761077880859375,
      "error": null
    },
    "assert is_majority([4, 4, 7, 4, 3, 3, 7], 3, 1) == False": {
      "result": true,
      "time": 0.05588650703430176,
      "error": null
    },
    "assert is_majority([4, 3, 7, 1, 7, 4, 12], 8, 8) == False": {
      "result": true,
      "time": 0.05577731132507324,
      "error": null
    },
    "assert is_majority([3, 5, 2, 4, 8, 1, 11], 3, 4) == False": {
      "result": true,
      "time": 0.0551908016204834,
      "error": null
    },
    "assert is_majority([1, 2, 7, 5, 4, 6, 15], 5, 5) == False": {
      "result": true,
      "time": 0.04914689064025879,
      "error": null
    },
    "assert is_majority([3, 4, 4, 5, 8, 3, 7], 6, 7) == False": {
      "result": true,
      "time": 0.057396650314331055,
      "error": null
    },
    "assert is_majority([3, 3, 8, 6, 3, 7, 13], 9, 7) == False": {
      "result": true,
      "time": 0.06699299812316895,
      "error": null
    },
    "assert is_majority([3, 1, 1, 6, 6, 6, 5], 3, 1) == False": {
      "result": false,
      "time": 0.05125856399536133,
      "error": null
    },
    "assert is_majority([6, 2, 3, 4, 7, 2, 9], 2, 5) == False": {
      "result": true,
      "time": 0.042897939682006836,
      "error": null
    },
    "assert is_majority([6, 4, 6, 7, 3, 8, 10], 5, 3) == False": {
      "result": true,
      "time": 0.049469947814941406,
      "error": null
    },
    "assert is_majority([4, 5, 2, 7, 2, 8, 12], 4, 3) == False": {
      "result": true,
      "time": 0.05675339698791504,
      "error": null
    },
    "assert is_majority([3, 4, 1, 1, 6, 5, 13], 4, 2) == False": {
      "result": true,
      "time": 0.05858469009399414,
      "error": null
    },
    "assert is_majority([3, 4, 8, 4, 4, 1, 9], 3, 3) == False": {
      "result": true,
      "time": 0.0449979305267334,
      "error": null
    },
    "assert is_majority([2, 2, 1, 5, 4, 7, 8], 7, 2) == False": {
      "result": true,
      "time": 0.055425167083740234,
      "error": null
    },
    "assert is_majority([2, 3, 1, 4, 1, 4, 10], 4, 2) == False": {
      "result": true,
      "time": 0.055327415466308594,
      "error": null
    },
    "assert is_majority([2, 1, 8, 2, 2, 8, 5], 7, 7) == False": {
      "result": true,
      "time": 0.059967756271362305,
      "error": null
    },
    "assert is_majority([4, 4, 2, 3, 4, 1, 9], 3, 4) == True": {
      "result": true,
      "time": 0.0495457649230957,
      "error": null
    },
    "assert is_majority([4, 3, 7, 3, 1, 4, 5], 11, 1) == False": {
      "result": true,
      "time": 0.05710196495056152,
      "error": null
    },
    "assert is_majority([2, 7, 3, 6, 2, 6, 11], 9, 1) == False": {
      "result": true,
      "time": 0.05656170845031738,
      "error": null
    },
    "assert is_majority([5, 2, 1, 6, 3, 6, 6], 9, 6) == False": {
      "result": false,
      "time": 0.054566144943237305,
      "error": null
    },
    "assert is_majority([2, 2, 6, 7, 2, 3, 8], 2, 7) == False": {
      "result": true,
      "time": 0.0448911190032959,
      "error": null
    },
    "assert is_majority([3, 1, 6, 3, 5, 1, 9], 8, 7) == False": {
      "result": true,
      "time": 0.06010293960571289,
      "error": null
    },
    "assert is_majority([4, 5, 7, 5, 1, 3, 14], 9, 1) == False": {
      "result": true,
      "time": 0.044255971908569336,
      "error": null
    },
    "assert is_majority([4, 3, 3, 2, 6, 1, 6], 10, 2) == False": {
      "result": true,
      "time": 0.04892563819885254,
      "error": null
    },
    "assert is_majority([2, 3, 5, 5, 4, 2, 11, 7], 5, 6) == False": {
      "result": true,
      "time": 0.04728889465332031,
      "error": null
    },
    "assert is_majority([2, 1, 7, 7, 4, 1, 5, 10], 3, 8) == False": {
      "result": true,
      "time": 0.04981207847595215,
      "error": null
    },
    "assert is_majority([2, 6, 6, 2, 9, 3, 7, 9], 3, 7) == False": {
      "result": true,
      "time": 0.04884934425354004,
      "error": null
    },
    "assert is_majority([2, 1, 1, 6, 6, 5, 7, 3], 7, 4) == False": {
      "result": true,
      "time": 0.04144620895385742,
      "error": null
    },
    "assert is_majority([6, 4, 4, 6, 9, 4, 2, 7], 7, 3) == False": {
      "result": true,
      "time": 0.03822517395019531,
      "error": null
    },
    "assert is_majority([3, 1, 4, 4, 1, 9, 7, 1], 11, 3) == False": {
      "result": true,
      "time": 0.049823760986328125,
      "error": null
    },
    "assert is_majority([5, 6, 7, 5, 3, 9, 9, 3], 8, 2) == False": {
      "result": true,
      "time": 0.04570198059082031,
      "error": null
    },
    "assert is_majority([3, 6, 6, 6, 3, 3, 3, 6], 10, 3) == True": {
      "result": true,
      "time": 0.04493832588195801,
      "error": null
    },
    "assert is_majority([6, 4, 1, 3, 6, 5, 7, 7], 6, 9) == False": {
      "result": true,
      "time": 0.04144454002380371,
      "error": null
    },
    "assert is_majority([4, 6, 1, 8, 5, 8, 6, 11], 7, 1) == False": {
      "result": true,
      "time": 0.045038700103759766,
      "error": null
    },
    "assert is_majority([5, 6, 7, 4, 7, 4, 8, 10], 6, 8) == False": {
      "result": true,
      "time": 0.043398141860961914,
      "error": null
    },
    "assert is_majority([5, 3, 4, 8, 2, 7, 6, 6], 13, 6) == False": {
      "result": false,
      "time": 0.04160332679748535,
      "error": null
    },
    "assert is_majority([4, 5, 5, 7, 5, 3, 8, 9], 7, 2) == False": {
      "result": true,
      "time": 0.039809226989746094,
      "error": null
    },
    "assert is_majority([3, 5, 3, 1, 1, 9, 1, 2], 3, 9) == False": {
      "result": true,
      "time": 0.05424857139587402,
      "error": null
    },
    "assert is_majority([2, 5, 6, 8, 6, 9, 1, 4], 7, 7) == False": {
      "result": true,
      "time": 0.04861044883728027,
      "error": null
    },
    "assert is_majority([4, 3, 2, 6, 8, 8, 9, 2], 7, 8) == False": {
      "result": true,
      "time": 0.04524827003479004,
      "error": null
    },
    "assert is_majority([5, 1, 6, 4, 4, 5, 5, 9], 3, 3) == False": {
      "result": true,
      "time": 0.05071902275085449,
      "error": null
    },
    "assert is_majority([6, 2, 5, 5, 2, 2, 2, 9], 7, 4) == False": {
      "result": true,
      "time": 0.057744741439819336,
      "error": null
    },
    "assert is_majority([2, 3, 6, 3, 4, 3, 10, 9], 6, 3) == False": {
      "result": true,
      "time": 0.048911094665527344,
      "error": null
    },
    "assert is_majority([5, 2, 4, 5, 9, 4, 2, 10], 3, 4) == False": {
      "result": true,
      "time": 0.04621481895446777,
      "error": null
    },
    "assert is_majority([2, 3, 4, 5, 5, 9, 8, 10], 4, 1) == False": {
      "result": true,
      "time": 0.03972744941711426,
      "error": null
    },
    "assert is_majority([3, 1, 7, 6, 5, 2, 2, 10], 5, 8) == False": {
      "result": true,
      "time": 0.04374575614929199,
      "error": null
    },
    "assert is_majority([1, 2, 3, 6, 6, 8, 7, 2], 7, 6) == False": {
      "result": true,
      "time": 0.04492473602294922,
      "error": null
    },
    "assert is_majority([5, 2, 6, 3, 3, 2, 3, 11], 8, 2) == False": {
      "result": true,
      "time": 0.04546189308166504,
      "error": null
    },
    "assert is_majority([4, 3, 5, 6, 2, 8, 5, 10], 5, 8) == False": {
      "result": true,
      "time": 0.046744346618652344,
      "error": null
    },
    "assert is_majority([3, 5, 4, 1, 1, 1, 9, 4], 5, 5) == False": {
      "result": true,
      "time": 0.04435086250305176,
      "error": null
    },
    "assert is_majority([1, 1, 2, 3, 2, 8, 8, 8], 11, 2) == False": {
      "result": true,
      "time": 0.0458981990814209,
      "error": null
    },
    "assert is_majority([2, 5, 2, 7, 9, 3, 6, 5], 8, 1) == False": {
      "result": true,
      "time": 0.048217058181762695,
      "error": null
    },
    "assert is_majority([3, 2, 3, 2, 5, 8, 11, 11], 9, 7) == False": {
      "result": true,
      "time": 0.04613232612609863,
      "error": null
    },
    "assert is_majority([4, 4, 1, 8, 2, 6, 1, 10], 9, 2) == False": {
      "result": true,
      "time": 0.05959892272949219,
      "error": null
    },
    "assert is_majority([4, 2, 6, 8, 9, 4, 4, 4], 13, 1) == False": {
      "result": true,
      "time": 0.04425978660583496,
      "error": null
    },
    "assert is_majority([1, 3, 7, 3, 1, 7, 10, 7], 4, 8) == False": {
      "result": true,
      "time": 0.04500460624694824,
      "error": null
    },
    "assert is_majority([6, 1, 7, 8, 4, 1, 3, 9], 7, 3) == False": {
      "result": true,
      "time": 0.04547619819641113,
      "error": null
    },
    "assert is_majority([1, 6, 2, 6, 3], 7, 2) == False": {
      "result": true,
      "time": 0.0476686954498291,
      "error": null
    },
    "assert is_majority([2, 1, 1, 7, 2], 2, 5) == False": {
      "result": true,
      "time": 0.05197000503540039,
      "error": null
    },
    "assert is_majority([5, 1, 6, 5, 7], 5, 5) == False": {
      "result": true,
      "time": 0.04391789436340332,
      "error": null
    },
    "assert is_majority([2, 1, 1, 6, 6], 5, 4) == False": {
      "result": true,
      "time": 0.0430905818939209,
      "error": null
    },
    "assert is_majority([2, 2, 2, 4, 6], 3, 6) == False": {
      "result": true,
      "time": 0.05230522155761719,
      "error": null
    },
    "assert is_majority([2, 1, 6, 3, 1], 6, 3) == False": {
      "result": true,
      "time": 0.04117250442504883,
      "error": null
    },
    "assert is_majority([3, 5, 5, 6, 5], 3, 6) == False": {
      "result": true,
      "time": 0.042626380920410156,
      "error": null
    },
    "assert is_majority([1, 1, 3, 5, 4], 5, 6) == False": {
      "result": true,
      "time": 0.05882978439331055,
      "error": null
    },
    "assert is_majority([1, 6, 4, 3, 1], 6, 2) == False": {
      "result": true,
      "time": 0.04636096954345703,
      "error": null
    },
    "assert is_majority([6, 3, 4, 4, 2], 9, 2) == False": {
      "result": false,
      "time": 0.04396796226501465,
      "error": null
    },
    "assert is_majority([3, 4, 4, 7, 7], 3, 2) == False": {
      "result": true,
      "time": 0.04262375831604004,
      "error": null
    },
    "assert is_majority([5, 3, 4, 6, 3], 1, 2) == False": {
      "result": true,
      "time": 0.05086946487426758,
      "error": null
    },
    "assert is_majority([6, 5, 5, 1, 1], 4, 2) == False": {
      "result": true,
      "time": 0.04692196846008301,
      "error": null
    },
    "assert is_majority([1, 4, 1, 6, 4], 2, 1) == False": {
      "result": true,
      "time": 0.04574704170227051,
      "error": null
    },
    "assert is_majority([2, 5, 2, 2, 7], 6, 5) == False": {
      "result": true,
      "time": 0.04584097862243652,
      "error": null
    },
    "assert is_majority([5, 5, 1, 3, 3], 4, 5) == False": {
      "result": true,
      "time": 0.0494532585144043,
      "error": null
    },
    "assert is_majority([5, 6, 1, 5, 6], 2, 2) == False": {
      "result": true,
      "time": 0.045324087142944336,
      "error": null
    },
    "assert is_majority([4, 2, 5, 3, 5], 6, 1) == False": {
      "result": true,
      "time": 0.047884464263916016,
      "error": null
    },
    "assert is_majority([6, 2, 6, 6, 7], 9, 1) == False": {
      "result": true,
      "time": 0.05121779441833496,
      "error": null
    },
    "assert is_majority([6, 5, 1, 3, 5], 10, 4) == False": {
      "result": true,
      "time": 0.04829144477844238,
      "error": null
    },
    "assert is_majority([6, 5, 6, 6, 3], 3, 3) == False": {
      "result": true,
      "time": 0.05531930923461914,
      "error": null
    },
    "assert is_majority([6, 6, 5, 3, 7], 3, 4) == False": {
      "result": true,
      "time": 0.050171852111816406,
      "error": null
    },
    "assert is_majority([1, 3, 4, 7, 7], 4, 6) == False": {
      "result": true,
      "time": 0.061823129653930664,
      "error": null
    },
    "assert is_majority([2, 2, 6, 7, 6], 9, 1) == False": {
      "result": true,
      "time": 0.05672645568847656,
      "error": null
    },
    "assert is_majority([1, 3, 2, 7, 6], 3, 2) == False": {
      "result": true,
      "time": 0.057346343994140625,
      "error": null
    },
    "assert is_majority([3, 2, 4, 2, 4], 2, 2) == False": {
      "result": true,
      "time": 0.05657958984375,
      "error": null
    },
    "assert is_majority([1, 4, 4, 1, 4], 2, 6) == False": {
      "result": true,
      "time": 0.05771231651306152,
      "error": null
    },
    "assert is_majority([3, 4, 3, 1, 4], 2, 6) == False": {
      "result": true,
      "time": 0.050988197326660156,
      "error": null
    },
    "assert is_majority([4, 1, 4, 2, 2], 2, 2) == False": {
      "result": true,
      "time": 0.06473541259765625,
      "error": null
    },
    "assert is_majority([1, 3, 3, 3, 7], 5, 2) == False": {
      "result": true,
      "time": 0.05954122543334961,
      "error": null
    },
    "assert is_majority([6, 6, 1, 3, 1], 7, 1) == False": {
      "result": true,
      "time": 0.05068564414978027,
      "error": null
    },
    "assert is_majority([1, 5, 2, 2, 2], 2, 6) == False": {
      "result": true,
      "time": 0.06484532356262207,
      "error": null
    },
    "assert is_majority([2, 2, 4, 6, 5], 2, 4) == False": {
      "result": true,
      "time": 0.04877519607543945,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.9509803921568627,
  "general_error": "",
  "has_testcase_error": false
}