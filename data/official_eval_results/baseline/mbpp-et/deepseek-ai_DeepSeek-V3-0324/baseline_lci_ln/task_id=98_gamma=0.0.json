{
  "code": "def multiply_num(numbers):\n    product = 1\n    for num in numbers:\n        product = product * num\n    length = len(numbers)\n    result = product / length\n    return result",
  "results": {
    "assert multiply_num((8, 2, 3, -1, 7))==-67.2": {
      "result": true,
      "time": 0.05040383338928223,
      "error": null
    },
    "assert multiply_num((-10,-20,-30))==-2000.0": {
      "result": true,
      "time": 0.046227455139160156,
      "error": null
    },
    "assert multiply_num((19,15,18))==1710.0": {
      "result": true,
      "time": 0.04661440849304199,
      "error": null
    },
    "assert multiply_num((4, 1, 2, 1, 5)) == 8.0": {
      "result": true,
      "time": 0.05281209945678711,
      "error": null
    },
    "assert multiply_num((3, 7, 1, 4, 3)) == 50.4": {
      "result": true,
      "time": 0.049382925033569336,
      "error": null
    },
    "assert multiply_num((6, 2, 6, -6, 3)) == -259.2": {
      "result": true,
      "time": 0.04593992233276367,
      "error": null
    },
    "assert multiply_num((8, 2, 6, -2, 6)) == -230.4": {
      "result": true,
      "time": 0.05324268341064453,
      "error": null
    },
    "assert multiply_num((13, 4, 3, 1, 6)) == 187.2": {
      "result": true,
      "time": 0.04400467872619629,
      "error": null
    },
    "assert multiply_num((13, 7, 1, 1, 11)) == 200.2": {
      "result": true,
      "time": 0.04229736328125,
      "error": null
    },
    "assert multiply_num((6, 2, 1, 3, 4)) == 28.8": {
      "result": true,
      "time": 0.04116463661193848,
      "error": null
    },
    "assert multiply_num((7, 1, 7, -4, 5)) == -196.0": {
      "result": true,
      "time": 0.04022550582885742,
      "error": null
    },
    "assert multiply_num((6, 2, 7, -1, 2)) == -33.6": {
      "result": true,
      "time": 0.05434918403625488,
      "error": null
    },
    "assert multiply_num((8, 3, 2, 2, 8)) == 153.6": {
      "result": true,
      "time": 0.048538923263549805,
      "error": null
    },
    "assert multiply_num((8, 2, 6, 0, 4)) == 0.0": {
      "result": true,
      "time": 0.043422698974609375,
      "error": null
    },
    "assert multiply_num((3, 5, 3, -3, 10)) == -270.0": {
      "result": true,
      "time": 0.043134212493896484,
      "error": null
    },
    "assert multiply_num((7, 6, 3, -6, 10)) == -1512.0": {
      "result": true,
      "time": 0.04922676086425781,
      "error": null
    },
    "assert multiply_num((12, 1, 6, 4, 10)) == 576.0": {
      "result": true,
      "time": 0.05364680290222168,
      "error": null
    },
    "assert multiply_num((6, 5, 5, -5, 8)) == -1200.0": {
      "result": true,
      "time": 0.037740468978881836,
      "error": null
    },
    "assert multiply_num((4, 4, 3, -3, 11)) == -316.8": {
      "result": true,
      "time": 0.04410600662231445,
      "error": null
    },
    "assert multiply_num((8, 4, 3, -6, 11)) == -1267.2": {
      "result": true,
      "time": 0.04782581329345703,
      "error": null
    },
    "assert multiply_num((5, 1, 1, -6, 4)) == -24.0": {
      "result": true,
      "time": 0.04823446273803711,
      "error": null
    },
    "assert multiply_num((11, 3, 3, -6, 10)) == -1188.0": {
      "result": true,
      "time": 0.04508614540100098,
      "error": null
    },
    "assert multiply_num((5, 7, 6, 2, 2)) == 168.0": {
      "result": true,
      "time": 0.04273176193237305,
      "error": null
    },
    "assert multiply_num((12, 2, 1, -6, 10)) == -288.0": {
      "result": true,
      "time": 0.040547847747802734,
      "error": null
    },
    "assert multiply_num((10, 3, 8, 3, 5)) == 720.0": {
      "result": true,
      "time": 0.0450131893157959,
      "error": null
    },
    "assert multiply_num((4, 1, 1, -3, 11)) == -26.4": {
      "result": true,
      "time": 0.051172733306884766,
      "error": null
    },
    "assert multiply_num((4, 2, 2, -5, 11)) == -176.0": {
      "result": true,
      "time": 0.04119372367858887,
      "error": null
    },
    "assert multiply_num((4, 7, 4, 0, 11)) == 0.0": {
      "result": true,
      "time": 0.04323315620422363,
      "error": null
    },
    "assert multiply_num((5, 2, 1, 1, 2)) == 4.0": {
      "result": true,
      "time": 0.03986215591430664,
      "error": null
    },
    "assert multiply_num((12, 6, 4, -5, 3)) == -864.0": {
      "result": true,
      "time": 0.03948092460632324,
      "error": null
    },
    "assert multiply_num((9, 6, 3, 2, 8)) == 518.4": {
      "result": true,
      "time": 0.03693580627441406,
      "error": null
    },
    "assert multiply_num((6, 1, 3, 4, 10)) == 144.0": {
      "result": true,
      "time": 0.044387102127075195,
      "error": null
    },
    "assert multiply_num((12, 7, 5, -5, 4)) == -1680.0": {
      "result": true,
      "time": 0.04065513610839844,
      "error": null
    },
    "assert multiply_num((12, 7, 1, -3, 12)) == -604.8": {
      "result": true,
      "time": 0.03458738327026367,
      "error": null
    },
    "assert multiply_num((12, 3, 6, -5, 12)) == -2592.0": {
      "result": true,
      "time": 0.03735971450805664,
      "error": null
    },
    "assert multiply_num((5, 6, 7, 2, 10)) == 840.0": {
      "result": true,
      "time": 0.03563833236694336,
      "error": null
    },
    "assert multiply_num((-15, -24, -35)) == -4200.0": {
      "result": true,
      "time": 0.042168378829956055,
      "error": null
    },
    "assert multiply_num((-8, -17, -28)) == -1269.3333333333333": {
      "result": true,
      "time": 0.048245906829833984,
      "error": null
    },
    "assert multiply_num((-14, -15, -33)) == -2310.0": {
      "result": true,
      "time": 0.04375767707824707,
      "error": null
    },
    "assert multiply_num((-7, -24, -27)) == -1512.0": {
      "result": true,
      "time": 0.04262995719909668,
      "error": null
    },
    "assert multiply_num((-12, -18, -31)) == -2232.0": {
      "result": true,
      "time": 0.042470693588256836,
      "error": null
    },
    "assert multiply_num((-6, -17, -25)) == -850.0": {
      "result": true,
      "time": 0.04199790954589844,
      "error": null
    },
    "assert multiply_num((-13, -22, -27)) == -2574.0": {
      "result": true,
      "time": 0.04218697547912598,
      "error": null
    },
    "assert multiply_num((-14, -23, -32)) == -3434.6666666666665": {
      "result": true,
      "time": 0.0450282096862793,
      "error": null
    },
    "assert multiply_num((-15, -20, -35)) == -3500.0": {
      "result": true,
      "time": 0.03568387031555176,
      "error": null
    },
    "assert multiply_num((-10, -16, -27)) == -1440.0": {
      "result": true,
      "time": 0.04777216911315918,
      "error": null
    },
    "assert multiply_num((-11, -25, -25)) == -2291.6666666666665": {
      "result": true,
      "time": 0.046671152114868164,
      "error": null
    },
    "assert multiply_num((-15, -17, -25)) == -2125.0": {
      "result": true,
      "time": 0.04598832130432129,
      "error": null
    },
    "assert multiply_num((-15, -24, -29)) == -3480.0": {
      "result": true,
      "time": 0.04414939880371094,
      "error": null
    },
    "assert multiply_num((-8, -22, -32)) == -1877.3333333333333": {
      "result": true,
      "time": 0.04104304313659668,
      "error": null
    },
    "assert multiply_num((-13, -22, -26)) == -2478.6666666666665": {
      "result": true,
      "time": 0.03568434715270996,
      "error": null
    },
    "assert multiply_num((-14, -21, -32)) == -3136.0": {
      "result": true,
      "time": 0.04163932800292969,
      "error": null
    },
    "assert multiply_num((-11, -23, -31)) == -2614.3333333333335": {
      "result": true,
      "time": 0.04163408279418945,
      "error": null
    },
    "assert multiply_num((-12, -15, -30)) == -1800.0": {
      "result": true,
      "time": 0.04382491111755371,
      "error": null
    },
    "assert multiply_num((-13, -16, -32)) == -2218.6666666666665": {
      "result": true,
      "time": 0.042528390884399414,
      "error": null
    },
    "assert multiply_num((-8, -21, -26)) == -1456.0": {
      "result": true,
      "time": 0.04135870933532715,
      "error": null
    },
    "assert multiply_num((-7, -19, -26)) == -1152.6666666666667": {
      "result": true,
      "time": 0.03707408905029297,
      "error": null
    },
    "assert multiply_num((-11, -19, -26)) == -1811.3333333333333": {
      "result": true,
      "time": 0.05141043663024902,
      "error": null
    },
    "assert multiply_num((-8, -18, -32)) == -1536.0": {
      "result": true,
      "time": 0.043329715728759766,
      "error": null
    },
    "assert multiply_num((-14, -19, -35)) == -3103.3333333333335": {
      "result": true,
      "time": 0.04628729820251465,
      "error": null
    },
    "assert multiply_num((-9, -16, -26)) == -1248.0": {
      "result": true,
      "time": 0.04405379295349121,
      "error": null
    },
    "assert multiply_num((-9, -24, -33)) == -2376.0": {
      "result": true,
      "time": 0.04581785202026367,
      "error": null
    },
    "assert multiply_num((-11, -22, -35)) == -2823.3333333333335": {
      "result": true,
      "time": 0.046471595764160156,
      "error": null
    },
    "assert multiply_num((-11, -25, -33)) == -3025.0": {
      "result": true,
      "time": 0.05715179443359375,
      "error": null
    },
    "assert multiply_num((-6, -22, -33)) == -1452.0": {
      "result": true,
      "time": 0.06120109558105469,
      "error": null
    },
    "assert multiply_num((-12, -25, -31)) == -3100.0": {
      "result": true,
      "time": 0.058081626892089844,
      "error": null
    },
    "assert multiply_num((-5, -24, -34)) == -1360.0": {
      "result": true,
      "time": 0.038817405700683594,
      "error": null
    },
    "assert multiply_num((-12, -19, -29)) == -2204.0": {
      "result": true,
      "time": 0.04128265380859375,
      "error": null
    },
    "assert multiply_num((-15, -16, -30)) == -2400.0": {
      "result": true,
      "time": 0.03787851333618164,
      "error": null
    },
    "assert multiply_num((14, 19, 17)) == 1507.3333333333333": {
      "result": true,
      "time": 0.04048585891723633,
      "error": null
    },
    "assert multiply_num((17, 17, 14)) == 1348.6666666666667": {
      "result": true,
      "time": 0.03569746017456055,
      "error": null
    },
    "assert multiply_num((16, 15, 23)) == 1840.0": {
      "result": true,
      "time": 0.04208517074584961,
      "error": null
    },
    "assert multiply_num((20, 13, 16)) == 1386.6666666666667": {
      "result": true,
      "time": 0.0372929573059082,
      "error": null
    },
    "assert multiply_num((15, 10, 23)) == 1150.0": {
      "result": true,
      "time": 0.036025285720825195,
      "error": null
    },
    "assert multiply_num((20, 19, 22)) == 2786.6666666666665": {
      "result": true,
      "time": 0.04307126998901367,
      "error": null
    },
    "assert multiply_num((14, 20, 18)) == 1680.0": {
      "result": true,
      "time": 0.04221701622009277,
      "error": null
    },
    "assert multiply_num((23, 11, 21)) == 1771.0": {
      "result": true,
      "time": 0.041072845458984375,
      "error": null
    },
    "assert multiply_num((22, 15, 23)) == 2530.0": {
      "result": true,
      "time": 0.03568553924560547,
      "error": null
    },
    "assert multiply_num((19, 17, 14)) == 1507.3333333333333": {
      "result": true,
      "time": 0.0527033805847168,
      "error": null
    },
    "assert multiply_num((14, 10, 19)) == 886.6666666666666": {
      "result": true,
      "time": 0.03818011283874512,
      "error": null
    },
    "assert multiply_num((19, 10, 23)) == 1456.6666666666667": {
      "result": true,
      "time": 0.04092526435852051,
      "error": null
    },
    "assert multiply_num((21, 18, 19)) == 2394.0": {
      "result": true,
      "time": 0.04522395133972168,
      "error": null
    },
    "assert multiply_num((14, 13, 22)) == 1334.6666666666667": {
      "result": true,
      "time": 0.0409083366394043,
      "error": null
    },
    "assert multiply_num((16, 10, 14)) == 746.6666666666666": {
      "result": true,
      "time": 0.0435488224029541,
      "error": null
    },
    "assert multiply_num((15, 16, 22)) == 1760.0": {
      "result": true,
      "time": 0.04542374610900879,
      "error": null
    },
    "assert multiply_num((17, 11, 19)) == 1184.3333333333333": {
      "result": true,
      "time": 0.047089338302612305,
      "error": null
    },
    "assert multiply_num((20, 12, 16)) == 1280.0": {
      "result": true,
      "time": 0.044425010681152344,
      "error": null
    },
    "assert multiply_num((16, 16, 14)) == 1194.6666666666667": {
      "result": true,
      "time": 0.0357053279876709,
      "error": null
    },
    "assert multiply_num((14, 10, 15)) == 700.0": {
      "result": true,
      "time": 0.03857254981994629,
      "error": null
    },
    "assert multiply_num((17, 14, 22)) == 1745.3333333333333": {
      "result": true,
      "time": 0.04476809501647949,
      "error": null
    },
    "assert multiply_num((14, 10, 13)) == 606.6666666666666": {
      "result": true,
      "time": 0.04522132873535156,
      "error": null
    },
    "assert multiply_num((20, 18, 16)) == 1920.0": {
      "result": true,
      "time": 0.045829057693481445,
      "error": null
    },
    "assert multiply_num((15, 13, 16)) == 1040.0": {
      "result": true,
      "time": 0.038285255432128906,
      "error": null
    },
    "assert multiply_num((20, 16, 16)) == 1706.6666666666667": {
      "result": true,
      "time": 0.04984712600708008,
      "error": null
    },
    "assert multiply_num((21, 17, 20)) == 2380.0": {
      "result": true,
      "time": 0.04135537147521973,
      "error": null
    },
    "assert multiply_num((17, 16, 20)) == 1813.3333333333333": {
      "result": true,
      "time": 0.04297041893005371,
      "error": null
    },
    "assert multiply_num((20, 13, 22)) == 1906.6666666666667": {
      "result": true,
      "time": 0.043750762939453125,
      "error": null
    },
    "assert multiply_num((14, 11, 19)) == 975.3333333333334": {
      "result": true,
      "time": 0.04206037521362305,
      "error": null
    },
    "assert multiply_num((14, 19, 16)) == 1418.6666666666667": {
      "result": true,
      "time": 0.06733322143554688,
      "error": null
    },
    "assert multiply_num((19, 14, 21)) == 1862.0": {
      "result": true,
      "time": 0.041451215744018555,
      "error": null
    },
    "assert multiply_num((16, 12, 14)) == 896.0": {
      "result": true,
      "time": 0.04633522033691406,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}