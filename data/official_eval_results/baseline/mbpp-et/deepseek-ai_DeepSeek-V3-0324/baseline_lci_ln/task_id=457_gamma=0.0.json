{
  "code": "def Find_Min(lst):\n    if not lst:\n        return None\n    min_length = len(lst[0])\n    min_sublist = lst[0]\n    for sublist in lst:\n        current_length = len(sublist)\n        if current_length < min_length:\n            min_length = current_length\n            min_sublist = sublist\n    return min_sublist",
  "results": {
    "assert Find_Min([[1],[1,2],[1,2,3]]) == [1]": {
      "result": true,
      "time": 0.04236316680908203,
      "error": null
    },
    "assert Find_Min([[1,1],[1,1,1],[1,2,7,8]]) == [1,1]": {
      "result": true,
      "time": 0.045177459716796875,
      "error": null
    },
    "assert Find_Min([['x'],['x','y'],['x','y','z']]) == ['x']": {
      "result": true,
      "time": 0.04494500160217285,
      "error": null
    },
    "assert Find_Min([[5], [3, 6], [5, 6, 7]]) == [3, 6]": {
      "result": false,
      "time": 0.04653120040893555,
      "error": null
    },
    "assert Find_Min([[1], [6, 1], [3, 5, 4]]) == [1]": {
      "result": true,
      "time": 0.04047727584838867,
      "error": null
    },
    "assert Find_Min([[5], [4, 1], [5, 1, 5]]) == [4, 1]": {
      "result": false,
      "time": 0.03902721405029297,
      "error": null
    },
    "assert Find_Min([[1], [1, 6], [2, 2, 8]]) == [1]": {
      "result": true,
      "time": 0.04218745231628418,
      "error": null
    },
    "assert Find_Min([[6], [4, 7], [2, 2, 4]]) == [2, 2, 4]": {
      "result": false,
      "time": 0.04062652587890625,
      "error": null
    },
    "assert Find_Min([[6], [1, 7], [1, 1, 7]]) == [1, 1, 7]": {
      "result": false,
      "time": 0.04017329216003418,
      "error": null
    },
    "assert Find_Min([[3], [2, 5], [2, 3, 5]]) == [2, 3, 5]": {
      "result": false,
      "time": 0.034207820892333984,
      "error": null
    },
    "assert Find_Min([[4], [6, 6], [1, 3, 5]]) == [1, 3, 5]": {
      "result": false,
      "time": 0.04084467887878418,
      "error": null
    },
    "assert Find_Min([[1], [5, 4], [6, 2, 2]]) == [1]": {
      "result": true,
      "time": 0.03265714645385742,
      "error": null
    },
    "assert Find_Min([[6], [4, 4], [5, 4, 4]]) == [4, 4]": {
      "result": false,
      "time": 0.03745770454406738,
      "error": null
    },
    "assert Find_Min([[5], [4, 5], [5, 6, 1]]) == [4, 5]": {
      "result": false,
      "time": 0.03825855255126953,
      "error": null
    },
    "assert Find_Min([[6], [6, 6], [4, 7, 8]]) == [4, 7, 8]": {
      "result": false,
      "time": 0.04155874252319336,
      "error": null
    },
    "assert Find_Min([[6], [1, 5], [5, 6, 4]]) == [1, 5]": {
      "result": false,
      "time": 0.03701591491699219,
      "error": null
    },
    "assert Find_Min([[4], [4, 4], [6, 6, 3]]) == [4]": {
      "result": true,
      "time": 0.03793931007385254,
      "error": null
    },
    "assert Find_Min([[6], [5, 3], [6, 3, 2]]) == [5, 3]": {
      "result": false,
      "time": 0.041526079177856445,
      "error": null
    },
    "assert Find_Min([[3], [1, 2], [2, 6, 5]]) == [1, 2]": {
      "result": false,
      "time": 0.04339027404785156,
      "error": null
    },
    "assert Find_Min([[6], [1, 6], [2, 3, 8]]) == [1, 6]": {
      "result": false,
      "time": 0.03876018524169922,
      "error": null
    },
    "assert Find_Min([[5], [6, 5], [2, 5, 6]]) == [2, 5, 6]": {
      "result": false,
      "time": 0.03378701210021973,
      "error": null
    },
    "assert Find_Min([[3], [4, 1], [3, 7, 7]]) == [3]": {
      "result": true,
      "time": 0.03862786293029785,
      "error": null
    },
    "assert Find_Min([[2], [2, 2], [5, 7, 5]]) == [2]": {
      "result": true,
      "time": 0.04727458953857422,
      "error": null
    },
    "assert Find_Min([[3], [4, 7], [5, 3, 7]]) == [3]": {
      "result": true,
      "time": 0.047388553619384766,
      "error": null
    },
    "assert Find_Min([[6], [4, 3], [1, 2, 6]]) == [1, 2, 6]": {
      "result": false,
      "time": 0.042008399963378906,
      "error": null
    },
    "assert Find_Min([[3], [3, 1], [2, 2, 5]]) == [2, 2, 5]": {
      "result": false,
      "time": 0.04314136505126953,
      "error": null
    },
    "assert Find_Min([[1], [3, 7], [1, 2, 6]]) == [1]": {
      "result": true,
      "time": 0.042758941650390625,
      "error": null
    },
    "assert Find_Min([[3], [2, 5], [6, 2, 1]]) == [2, 5]": {
      "result": false,
      "time": 0.038045644760131836,
      "error": null
    },
    "assert Find_Min([[4], [3, 4], [4, 3, 8]]) == [3, 4]": {
      "result": false,
      "time": 0.03333425521850586,
      "error": null
    },
    "assert Find_Min([[1], [1, 4], [4, 6, 7]]) == [1]": {
      "result": true,
      "time": 0.0424952507019043,
      "error": null
    },
    "assert Find_Min([[5], [6, 5], [5, 5, 6]]) == [5]": {
      "result": true,
      "time": 0.04102778434753418,
      "error": null
    },
    "assert Find_Min([[3], [3, 4], [3, 1, 6]]) == [3]": {
      "result": true,
      "time": 0.043025970458984375,
      "error": null
    },
    "assert Find_Min([[6], [3, 3], [4, 2, 8]]) == [3, 3]": {
      "result": false,
      "time": 0.04487156867980957,
      "error": null
    },
    "assert Find_Min([[4], [3, 7], [6, 5, 8]]) == [3, 7]": {
      "result": false,
      "time": 0.041136741638183594,
      "error": null
    },
    "assert Find_Min([[4], [4, 6], [2, 5, 1]]) == [2, 5, 1]": {
      "result": false,
      "time": 0.0362703800201416,
      "error": null
    },
    "assert Find_Min([[4], [6, 2], [4, 6, 7]]) == [4]": {
      "result": true,
      "time": 0.04033994674682617,
      "error": null
    },
    "assert Find_Min([[4, 5], [1, 4, 1], [6, 2, 9, 13]]) == [1, 4, 1]": {
      "result": false,
      "time": 0.0372319221496582,
      "error": null
    },
    "assert Find_Min([[4, 3], [4, 5, 3], [2, 3, 4, 8]]) == [2, 3, 4, 8]": {
      "result": false,
      "time": 0.04076552391052246,
      "error": null
    },
    "assert Find_Min([[3, 4], [5, 6, 4], [6, 5, 4, 12]]) == [3, 4]": {
      "result": true,
      "time": 0.03629779815673828,
      "error": null
    },
    "assert Find_Min([[4, 4], [1, 5, 6], [5, 3, 12, 11]]) == [1, 5, 6]": {
      "result": false,
      "time": 0.039701223373413086,
      "error": null
    },
    "assert Find_Min([[2, 2], [4, 2, 5], [1, 5, 10, 3]]) == [1, 5, 10, 3]": {
      "result": false,
      "time": 0.041034698486328125,
      "error": null
    },
    "assert Find_Min([[1, 6], [5, 2, 6], [5, 7, 11, 5]]) == [1, 6]": {
      "result": true,
      "time": 0.04409146308898926,
      "error": null
    },
    "assert Find_Min([[3, 1], [4, 2, 1], [2, 5, 6, 5]]) == [2, 5, 6, 5]": {
      "result": false,
      "time": 0.04026627540588379,
      "error": null
    },
    "assert Find_Min([[2, 4], [2, 1, 1], [4, 3, 11, 9]]) == [2, 1, 1]": {
      "result": false,
      "time": 0.03621315956115723,
      "error": null
    },
    "assert Find_Min([[1, 4], [2, 2, 4], [5, 4, 10, 8]]) == [1, 4]": {
      "result": true,
      "time": 0.0377650260925293,
      "error": null
    },
    "assert Find_Min([[2, 2], [1, 5, 6], [5, 7, 2, 8]]) == [1, 5, 6]": {
      "result": false,
      "time": 0.04096627235412598,
      "error": null
    },
    "assert Find_Min([[3, 6], [4, 2, 3], [6, 2, 7, 12]]) == [3, 6]": {
      "result": true,
      "time": 0.037558555603027344,
      "error": null
    },
    "assert Find_Min([[2, 1], [3, 1, 5], [1, 6, 10, 11]]) == [1, 6, 10, 11]": {
      "result": false,
      "time": 0.04262280464172363,
      "error": null
    },
    "assert Find_Min([[3, 4], [5, 1, 2], [3, 5, 4, 11]]) == [3, 4]": {
      "result": true,
      "time": 0.04062533378601074,
      "error": null
    },
    "assert Find_Min([[4, 2], [4, 1, 3], [5, 7, 4, 4]]) == [4, 1, 3]": {
      "result": false,
      "time": 0.04258370399475098,
      "error": null
    },
    "assert Find_Min([[5, 3], [6, 1, 1], [6, 5, 11, 7]]) == [5, 3]": {
      "result": true,
      "time": 0.03941679000854492,
      "error": null
    },
    "assert Find_Min([[2, 6], [5, 6, 2], [3, 7, 3, 11]]) == [2, 6]": {
      "result": true,
      "time": 0.03142070770263672,
      "error": null
    },
    "assert Find_Min([[4, 6], [6, 4, 6], [6, 2, 8, 7]]) == [4, 6]": {
      "result": true,
      "time": 0.037629127502441406,
      "error": null
    },
    "assert Find_Min([[4, 2], [6, 4, 5], [1, 6, 3, 4]]) == [1, 6, 3, 4]": {
      "result": false,
      "time": 0.041085243225097656,
      "error": null
    },
    "assert Find_Min([[4, 3], [6, 2, 2], [2, 2, 7, 10]]) == [2, 2, 7, 10]": {
      "result": false,
      "time": 0.038182735443115234,
      "error": null
    },
    "assert Find_Min([[2, 1], [3, 5, 4], [4, 6, 12, 9]]) == [2, 1]": {
      "result": true,
      "time": 0.04134702682495117,
      "error": null
    },
    "assert Find_Min([[3, 6], [2, 3, 6], [3, 2, 10, 8]]) == [2, 3, 6]": {
      "result": false,
      "time": 0.037580013275146484,
      "error": null
    },
    "assert Find_Min([[2, 6], [6, 2, 3], [6, 2, 9, 8]]) == [2, 6]": {
      "result": true,
      "time": 0.05152320861816406,
      "error": null
    },
    "assert Find_Min([[6, 2], [2, 1, 3], [2, 2, 8, 4]]) == [2, 1, 3]": {
      "result": false,
      "time": 0.04174160957336426,
      "error": null
    },
    "assert Find_Min([[2, 5], [4, 4, 5], [2, 2, 3, 12]]) == [2, 2, 3, 12]": {
      "result": false,
      "time": 0.04064059257507324,
      "error": null
    },
    "assert Find_Min([[6, 5], [4, 2, 2], [2, 7, 8, 13]]) == [2, 7, 8, 13]": {
      "result": false,
      "time": 0.032186269760131836,
      "error": null
    },
    "assert Find_Min([[5, 5], [3, 6, 5], [2, 6, 12, 11]]) == [2, 6, 12, 11]": {
      "result": false,
      "time": 0.04745650291442871,
      "error": null
    },
    "assert Find_Min([[6, 6], [1, 2, 3], [4, 2, 2, 9]]) == [1, 2, 3]": {
      "result": false,
      "time": 0.04175853729248047,
      "error": null
    },
    "assert Find_Min([[1, 6], [2, 6, 1], [5, 7, 7, 7]]) == [1, 6]": {
      "result": true,
      "time": 0.04071998596191406,
      "error": null
    },
    "assert Find_Min([[5, 2], [6, 4, 6], [6, 2, 6, 5]]) == [5, 2]": {
      "result": true,
      "time": 0.04496479034423828,
      "error": null
    },
    "assert Find_Min([[2, 5], [4, 5, 3], [6, 4, 6, 12]]) == [2, 5]": {
      "result": true,
      "time": 0.037606000900268555,
      "error": null
    },
    "assert Find_Min([[3, 2], [3, 3, 5], [6, 6, 5, 10]]) == [3, 2]": {
      "result": true,
      "time": 0.03962969779968262,
      "error": null
    },
    "assert Find_Min([[2, 2], [2, 2, 2], [6, 5, 3, 9]]) == [2, 2]": {
      "result": true,
      "time": 0.04865622520446777,
      "error": null
    },
    "assert Find_Min([[1, 3], [6, 4, 2], [1, 7, 8, 7]]) == [1, 3]": {
      "result": true,
      "time": 0.04138350486755371,
      "error": null
    },
    "assert Find_Min([['l'], ['a', 'v'], ['z', 'j', 'r']]) == ['a', 'v']": {
      "result": false,
      "time": 0.034996747970581055,
      "error": null
    },
    "assert Find_Min([['t'], ['w', 'e'], ['a', 't', 'z']]) == ['a', 't', 'z']": {
      "result": false,
      "time": 0.04672074317932129,
      "error": null
    },
    "assert Find_Min([['n'], ['w', 'b'], ['y', 'u', 'r']]) == ['n']": {
      "result": true,
      "time": 0.04033803939819336,
      "error": null
    },
    "assert Find_Min([['w'], ['w', 'e'], ['p', 'v', 'm']]) == ['p', 'v', 'm']": {
      "result": false,
      "time": 0.0370786190032959,
      "error": null
    },
    "assert Find_Min([['i'], ['u', 'u'], ['t', 'r', 'n']]) == ['i']": {
      "result": true,
      "time": 0.04173111915588379,
      "error": null
    },
    "assert Find_Min([['g'], ['p', 'n'], ['z', 'y', 'd']]) == ['g']": {
      "result": true,
      "time": 0.04242825508117676,
      "error": null
    },
    "assert Find_Min([['n'], ['y', 'h'], ['t', 'b', 't']]) == ['n']": {
      "result": true,
      "time": 0.04520702362060547,
      "error": null
    },
    "assert Find_Min([['h'], ['f', 'z'], ['u', 'j', 'i']]) == ['f', 'z']": {
      "result": false,
      "time": 0.03277277946472168,
      "error": null
    },
    "assert Find_Min([['u'], ['c', 'a'], ['q', 'u', 'v']]) == ['c', 'a']": {
      "result": false,
      "time": 0.039730072021484375,
      "error": null
    },
    "assert Find_Min([['w'], ['g', 'u'], ['y', 'i', 'c']]) == ['g', 'u']": {
      "result": false,
      "time": 0.029161930084228516,
      "error": null
    },
    "assert Find_Min([['k'], ['m', 'w'], ['t', 'y', 'a']]) == ['k']": {
      "result": true,
      "time": 0.034256935119628906,
      "error": null
    },
    "assert Find_Min([['z'], ['p', 'd'], ['i', 'l', 'j']]) == ['i', 'l', 'j']": {
      "result": false,
      "time": 0.03310990333557129,
      "error": null
    },
    "assert Find_Min([['d'], ['w', 'f'], ['d', 'm', 'o']]) == ['d']": {
      "result": true,
      "time": 0.033693552017211914,
      "error": null
    },
    "assert Find_Min([['i'], ['d', 'i'], ['q', 'l', 'd']]) == ['d', 'i']": {
      "result": false,
      "time": 0.03692960739135742,
      "error": null
    },
    "assert Find_Min([['d'], ['m', 'f'], ['w', 'r', 'u']]) == ['d']": {
      "result": true,
      "time": 0.039099931716918945,
      "error": null
    },
    "assert Find_Min([['l'], ['i', 'g'], ['t', 'm', 'z']]) == ['i', 'g']": {
      "result": false,
      "time": 0.036774396896362305,
      "error": null
    },
    "assert Find_Min([['n'], ['i', 'n'], ['c', 'p', 'v']]) == ['c', 'p', 'v']": {
      "result": false,
      "time": 0.04290151596069336,
      "error": null
    },
    "assert Find_Min([['q'], ['c', 'o'], ['y', 'k', 'p']]) == ['c', 'o']": {
      "result": false,
      "time": 0.05942940711975098,
      "error": null
    },
    "assert Find_Min([['s'], ['y', 'b'], ['r', 'd', 'r']]) == ['r', 'd', 'r']": {
      "result": false,
      "time": 0.0438838005065918,
      "error": null
    },
    "assert Find_Min([['d'], ['r', 't'], ['z', 'o', 'i']]) == ['d']": {
      "result": true,
      "time": 0.05580329895019531,
      "error": null
    },
    "assert Find_Min([['n'], ['v', 'd'], ['t', 'd', 'b']]) == ['n']": {
      "result": true,
      "time": 0.04184770584106445,
      "error": null
    },
    "assert Find_Min([['h'], ['e', 'i'], ['g', 'k', 'm']]) == ['e', 'i']": {
      "result": false,
      "time": 0.053656578063964844,
      "error": null
    },
    "assert Find_Min([['c'], ['d', 'c'], ['j', 's', 'r']]) == ['c']": {
      "result": true,
      "time": 0.045453548431396484,
      "error": null
    },
    "assert Find_Min([['u'], ['k', 'm'], ['p', 'w', 'b']]) == ['k', 'm']": {
      "result": false,
      "time": 0.04079246520996094,
      "error": null
    },
    "assert Find_Min([['y'], ['m', 'r'], ['n', 'v', 'f']]) == ['m', 'r']": {
      "result": false,
      "time": 0.04644465446472168,
      "error": null
    },
    "assert Find_Min([['a'], ['o', 'y'], ['f', 'y', 'p']]) == ['a']": {
      "result": true,
      "time": 0.047904014587402344,
      "error": null
    },
    "assert Find_Min([['x'], ['a', 'l'], ['i', 'm', 'k']]) == ['a', 'l']": {
      "result": false,
      "time": 0.06016135215759277,
      "error": null
    },
    "assert Find_Min([['p'], ['w', 'r'], ['s', 'l', 'h']]) == ['p']": {
      "result": true,
      "time": 0.06246352195739746,
      "error": null
    },
    "assert Find_Min([['c'], ['e', 'm'], ['e', 'z', 'p']]) == ['c']": {
      "result": true,
      "time": 0.06566023826599121,
      "error": null
    },
    "assert Find_Min([['x'], ['q', 'p'], ['j', 'm', 'g']]) == ['j', 'm', 'g']": {
      "result": false,
      "time": 0.0694129467010498,
      "error": null
    },
    "assert Find_Min([['c'], ['e', 'h'], ['j', 'j', 'q']]) == ['c']": {
      "result": true,
      "time": 0.05174422264099121,
      "error": null
    },
    "assert Find_Min([['v'], ['s', 'w'], ['f', 'm', 'f']]) == ['f', 'm', 'f']": {
      "result": false,
      "time": 0.05644726753234863,
      "error": null
    },
    "assert Find_Min([['n'], ['t', 'g'], ['i', 'c', 'w']]) == ['i', 'c', 'w']": {
      "result": false,
      "time": 0.05872225761413574,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.4411764705882353,
  "general_error": "",
  "has_testcase_error": false
}