{
  "code": "import heapq\n\ndef heap_queue_smallest(numbers, k):\n    if not numbers:\n        return []\n    if k <= 0:\n        return []\n    heap = []\n    for num in numbers:\n        heapq.heappush(heap, num)\n    smallest = []\n    for _ in range(k):\n        if heap:\n            smallest_num = heapq.heappop(heap)\n            smallest.append(smallest_num)\n        else:\n            break\n    return smallest",
  "results": {
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],3)==[14, 22, 25] ": {
      "result": true,
      "time": 0.17701172828674316,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 25, 58],2)==[14, 22]": {
      "result": true,
      "time": 0.15334820747375488,
      "error": null
    },
    "assert heap_queue_smallest( [25, 35, 22, 85, 14, 65, 75, 22, 58],5)==[14, 22, 22, 25, 35]": {
      "result": true,
      "time": 0.14933061599731445,
      "error": null
    },
    "assert heap_queue_smallest([22, 37, 21, 81, 12, 70, 70, 26, 63], 4) == [12, 21, 22, 26]": {
      "result": true,
      "time": 0.1204538345336914,
      "error": null
    },
    "assert heap_queue_smallest([26, 33, 23, 88, 18, 65, 75, 26, 57], 4) == [18, 23, 26, 26]": {
      "result": true,
      "time": 0.1295461654663086,
      "error": null
    },
    "assert heap_queue_smallest([21, 33, 17, 81, 18, 69, 79, 29, 59], 4) == [17, 18, 21, 29]": {
      "result": true,
      "time": 0.11038398742675781,
      "error": null
    },
    "assert heap_queue_smallest([24, 34, 26, 88, 11, 70, 79, 28, 56], 1) == [11]": {
      "result": true,
      "time": 0.11988997459411621,
      "error": null
    },
    "assert heap_queue_smallest([21, 31, 23, 83, 13, 64, 75, 25, 55], 6) == [13, 21, 23, 25, 31, 55]": {
      "result": true,
      "time": 0.12748241424560547,
      "error": null
    },
    "assert heap_queue_smallest([22, 31, 17, 88, 10, 63, 77, 27, 60], 3) == [10, 17, 22]": {
      "result": true,
      "time": 0.1234443187713623,
      "error": null
    },
    "assert heap_queue_smallest([23, 34, 24, 81, 16, 68, 79, 24, 61], 4) == [16, 23, 24, 24]": {
      "result": true,
      "time": 0.12403607368469238,
      "error": null
    },
    "assert heap_queue_smallest([28, 35, 27, 82, 15, 64, 71, 27, 54], 4) == [15, 27, 27, 28]": {
      "result": true,
      "time": 0.1565406322479248,
      "error": null
    },
    "assert heap_queue_smallest([29, 40, 24, 85, 12, 67, 73, 27, 63], 5) == [12, 24, 27, 29, 40]": {
      "result": true,
      "time": 0.13080096244812012,
      "error": null
    },
    "assert heap_queue_smallest([21, 38, 26, 80, 12, 61, 71, 26, 56], 2) == [12, 21]": {
      "result": true,
      "time": 0.13440537452697754,
      "error": null
    },
    "assert heap_queue_smallest([21, 35, 26, 86, 11, 68, 77, 23, 55], 1) == [11]": {
      "result": true,
      "time": 0.12430334091186523,
      "error": null
    },
    "assert heap_queue_smallest([22, 34, 19, 89, 14, 64, 72, 28, 61], 8) == [14, 19, 22, 28, 34, 61, 64, 72]": {
      "result": true,
      "time": 0.12513422966003418,
      "error": null
    },
    "assert heap_queue_smallest([27, 35, 18, 89, 18, 61, 75, 27, 54], 6) == [18, 18, 27, 27, 35, 54]": {
      "result": true,
      "time": 0.12844276428222656,
      "error": null
    },
    "assert heap_queue_smallest([25, 34, 22, 83, 15, 70, 75, 29, 62], 7) == [15, 22, 25, 29, 34, 62, 70]": {
      "result": true,
      "time": 0.13422179222106934,
      "error": null
    },
    "assert heap_queue_smallest([23, 31, 23, 81, 19, 61, 75, 23, 57], 1) == [19]": {
      "result": true,
      "time": 0.12346935272216797,
      "error": null
    },
    "assert heap_queue_smallest([23, 40, 23, 90, 14, 65, 79, 27, 63], 1) == [14]": {
      "result": true,
      "time": 0.13332295417785645,
      "error": null
    },
    "assert heap_queue_smallest([30, 39, 25, 83, 17, 69, 80, 27, 59], 2) == [17, 25]": {
      "result": true,
      "time": 0.11785364151000977,
      "error": null
    },
    "assert heap_queue_smallest([27, 35, 19, 84, 15, 69, 77, 30, 59], 6) == [15, 19, 27, 30, 35, 59]": {
      "result": true,
      "time": 0.141998291015625,
      "error": null
    },
    "assert heap_queue_smallest([22, 33, 20, 89, 17, 65, 71, 23, 56], 8) == [17, 20, 22, 23, 33, 56, 65, 71]": {
      "result": true,
      "time": 0.11304831504821777,
      "error": null
    },
    "assert heap_queue_smallest([25, 30, 23, 87, 12, 66, 80, 23, 57], 1) == [12]": {
      "result": true,
      "time": 0.16690897941589355,
      "error": null
    },
    "assert heap_queue_smallest([22, 30, 23, 80, 11, 70, 70, 23, 61], 5) == [11, 22, 23, 23, 30]": {
      "result": true,
      "time": 0.14395785331726074,
      "error": null
    },
    "assert heap_queue_smallest([26, 33, 17, 84, 12, 63, 72, 30, 62], 8) == [12, 17, 26, 30, 33, 62, 63, 72]": {
      "result": true,
      "time": 0.12065482139587402,
      "error": null
    },
    "assert heap_queue_smallest([22, 31, 18, 83, 13, 60, 70, 25, 54], 2) == [13, 18]": {
      "result": true,
      "time": 0.14848947525024414,
      "error": null
    },
    "assert heap_queue_smallest([25, 31, 27, 84, 18, 69, 73, 29, 54], 6) == [18, 25, 27, 29, 31, 54]": {
      "result": true,
      "time": 0.12421226501464844,
      "error": null
    },
    "assert heap_queue_smallest([20, 30, 26, 81, 18, 69, 71, 30, 60], 2) == [18, 20]": {
      "result": true,
      "time": 0.15064001083374023,
      "error": null
    },
    "assert heap_queue_smallest([23, 32, 25, 89, 11, 66, 76, 26, 63], 4) == [11, 23, 25, 26]": {
      "result": true,
      "time": 0.1368560791015625,
      "error": null
    },
    "assert heap_queue_smallest([24, 35, 17, 85, 19, 60, 72, 26, 55], 4) == [17, 19, 24, 26]": {
      "result": true,
      "time": 0.14563822746276855,
      "error": null
    },
    "assert heap_queue_smallest([21, 32, 22, 81, 18, 60, 78, 28, 63], 2) == [18, 21]": {
      "result": true,
      "time": 0.08792996406555176,
      "error": null
    },
    "assert heap_queue_smallest([20, 37, 21, 86, 16, 61, 71, 30, 61], 4) == [16, 20, 21, 30]": {
      "result": true,
      "time": 0.13777542114257812,
      "error": null
    },
    "assert heap_queue_smallest([20, 31, 23, 83, 16, 64, 79, 23, 61], 4) == [16, 20, 23, 23]": {
      "result": true,
      "time": 0.1467118263244629,
      "error": null
    },
    "assert heap_queue_smallest([24, 40, 23, 86, 15, 67, 77, 29, 55], 2) == [15, 23]": {
      "result": true,
      "time": 0.13906431198120117,
      "error": null
    },
    "assert heap_queue_smallest([20, 32, 26, 80, 10, 62, 70, 24, 61], 6) == [10, 20, 24, 26, 32, 61]": {
      "result": true,
      "time": 0.11216449737548828,
      "error": null
    },
    "assert heap_queue_smallest([29, 36, 25, 87, 18, 60, 73, 20, 62], 7) == [18, 20, 25, 29, 36, 60, 62]": {
      "result": true,
      "time": 0.12303638458251953,
      "error": null
    },
    "assert heap_queue_smallest([27, 34, 24, 80, 10, 64, 70, 23, 53], 3) == [10, 23, 24]": {
      "result": true,
      "time": 0.12274789810180664,
      "error": null
    },
    "assert heap_queue_smallest([25, 31, 23, 90, 10, 66, 73, 27, 61], 4) == [10, 23, 25, 27]": {
      "result": true,
      "time": 0.11553096771240234,
      "error": null
    },
    "assert heap_queue_smallest([21, 35, 20, 85, 17, 63, 74, 26, 53], 5) == [17, 20, 21, 26, 35]": {
      "result": true,
      "time": 0.11258149147033691,
      "error": null
    },
    "assert heap_queue_smallest([21, 34, 23, 86, 14, 60, 75, 28, 59], 7) == [14, 21, 23, 28, 34, 59, 60]": {
      "result": true,
      "time": 0.12463045120239258,
      "error": null
    },
    "assert heap_queue_smallest([23, 33, 18, 88, 19, 63, 78, 27, 57], 6) == [18, 19, 23, 27, 33, 57]": {
      "result": true,
      "time": 0.1332082748413086,
      "error": null
    },
    "assert heap_queue_smallest([27, 31, 25, 85, 10, 68, 80, 21, 55], 6) == [10, 21, 25, 27, 31, 55]": {
      "result": true,
      "time": 0.12966609001159668,
      "error": null
    },
    "assert heap_queue_smallest([26, 37, 21, 85, 18, 65, 79, 24, 53], 2) == [18, 21]": {
      "result": true,
      "time": 0.1114501953125,
      "error": null
    },
    "assert heap_queue_smallest([27, 40, 20, 84, 9, 68, 74, 29, 62], 4) == [9, 20, 27, 29]": {
      "result": true,
      "time": 0.11904549598693848,
      "error": null
    },
    "assert heap_queue_smallest([27, 39, 19, 83, 12, 69, 79, 26, 54], 6) == [12, 19, 26, 27, 39, 54]": {
      "result": true,
      "time": 0.1301121711730957,
      "error": null
    },
    "assert heap_queue_smallest([23, 31, 26, 90, 16, 62, 70, 20, 59], 7) == [16, 20, 23, 26, 31, 59, 62]": {
      "result": true,
      "time": 0.14099478721618652,
      "error": null
    },
    "assert heap_queue_smallest([29, 35, 22, 84, 17, 66, 77, 20, 59], 1) == [17]": {
      "result": true,
      "time": 0.11714649200439453,
      "error": null
    },
    "assert heap_queue_smallest([21, 32, 25, 85, 15, 62, 76, 27, 54], 2) == [15, 21]": {
      "result": true,
      "time": 0.13499164581298828,
      "error": null
    },
    "assert heap_queue_smallest([25, 36, 26, 80, 13, 64, 72, 23, 56], 2) == [13, 23]": {
      "result": true,
      "time": 0.13383078575134277,
      "error": null
    },
    "assert heap_queue_smallest([21, 40, 22, 80, 16, 68, 78, 23, 56], 7) == [16, 21, 22, 23, 40, 56, 68]": {
      "result": true,
      "time": 0.12068486213684082,
      "error": null
    },
    "assert heap_queue_smallest([29, 30, 22, 85, 9, 70, 74, 29, 62], 7) == [9, 22, 29, 29, 30, 62, 70]": {
      "result": true,
      "time": 0.13542890548706055,
      "error": null
    },
    "assert heap_queue_smallest([27, 37, 23, 81, 10, 70, 70, 30, 63], 3) == [10, 23, 27]": {
      "result": true,
      "time": 0.1509099006652832,
      "error": null
    },
    "assert heap_queue_smallest([30, 33, 17, 88, 17, 64, 72, 22, 57], 2) == [17, 17]": {
      "result": true,
      "time": 0.11514043807983398,
      "error": null
    },
    "assert heap_queue_smallest([20, 38, 25, 80, 13, 61, 75, 25, 55], 5) == [13, 20, 25, 25, 38]": {
      "result": true,
      "time": 0.1321852207183838,
      "error": null
    },
    "assert heap_queue_smallest([25, 33, 27, 89, 14, 62, 80, 30, 61], 2) == [14, 25]": {
      "result": true,
      "time": 0.14555120468139648,
      "error": null
    },
    "assert heap_queue_smallest([23, 40, 26, 85, 17, 69, 76, 28, 61], 5) == [17, 23, 26, 28, 40]": {
      "result": true,
      "time": 0.12787175178527832,
      "error": null
    },
    "assert heap_queue_smallest([20, 38, 20, 83, 16, 65, 80, 22, 63], 4) == [16, 20, 20, 22]": {
      "result": true,
      "time": 0.11824321746826172,
      "error": null
    },
    "assert heap_queue_smallest([23, 40, 17, 82, 13, 61, 73, 27, 54], 3) == [13, 17, 23]": {
      "result": true,
      "time": 0.13303565979003906,
      "error": null
    },
    "assert heap_queue_smallest([22, 30, 21, 90, 17, 64, 76, 24, 55], 2) == [17, 21]": {
      "result": true,
      "time": 0.14516663551330566,
      "error": null
    },
    "assert heap_queue_smallest([27, 40, 19, 83, 13, 63, 79, 23, 63], 1) == [13]": {
      "result": true,
      "time": 0.1285398006439209,
      "error": null
    },
    "assert heap_queue_smallest([30, 37, 24, 85, 10, 67, 72, 21, 60], 3) == [10, 21, 24]": {
      "result": true,
      "time": 0.13092827796936035,
      "error": null
    },
    "assert heap_queue_smallest([23, 38, 21, 86, 17, 70, 70, 20, 56], 4) == [17, 20, 21, 23]": {
      "result": true,
      "time": 0.1397418975830078,
      "error": null
    },
    "assert heap_queue_smallest([30, 37, 24, 81, 15, 70, 78, 26, 63], 6) == [15, 24, 26, 30, 37, 63]": {
      "result": true,
      "time": 0.1380774974822998,
      "error": null
    },
    "assert heap_queue_smallest([30, 30, 27, 80, 10, 68, 72, 25, 60], 4) == [10, 25, 27, 30]": {
      "result": true,
      "time": 0.12264657020568848,
      "error": null
    },
    "assert heap_queue_smallest([26, 37, 17, 84, 15, 61, 74, 30, 53], 7) == [15, 17, 26, 30, 37, 53, 61]": {
      "result": true,
      "time": 0.12860107421875,
      "error": null
    },
    "assert heap_queue_smallest([23, 32, 19, 86, 14, 62, 74, 29, 56], 4) == [14, 19, 23, 29]": {
      "result": true,
      "time": 0.12417888641357422,
      "error": null
    },
    "assert heap_queue_smallest([29, 38, 19, 84, 15, 61, 76, 20, 54], 7) == [15, 19, 20, 29, 38, 54, 61]": {
      "result": true,
      "time": 0.12528181076049805,
      "error": null
    },
    "assert heap_queue_smallest([29, 38, 26, 82, 18, 62, 70, 26, 58], 6) == [18, 26, 26, 29, 38, 58]": {
      "result": true,
      "time": 0.12030363082885742,
      "error": null
    },
    "assert heap_queue_smallest([22, 37, 26, 86, 9, 68, 75, 29, 61], 5) == [9, 22, 26, 29, 37]": {
      "result": true,
      "time": 0.1203927993774414,
      "error": null
    },
    "assert heap_queue_smallest([21, 39, 23, 80, 12, 63, 72, 24, 59], 9) == [12, 21, 23, 24, 39, 59, 63, 72, 80]": {
      "result": true,
      "time": 0.11371016502380371,
      "error": null
    },
    "assert heap_queue_smallest([26, 39, 17, 89, 17, 70, 70, 25, 59], 4) == [17, 17, 25, 26]": {
      "result": true,
      "time": 0.11794137954711914,
      "error": null
    },
    "assert heap_queue_smallest([29, 40, 26, 85, 16, 62, 78, 22, 61], 2) == [16, 22]": {
      "result": true,
      "time": 0.12203836441040039,
      "error": null
    },
    "assert heap_queue_smallest([30, 34, 20, 90, 15, 60, 73, 23, 58], 8) == [15, 20, 23, 30, 34, 58, 60, 73]": {
      "result": true,
      "time": 0.10941696166992188,
      "error": null
    },
    "assert heap_queue_smallest([27, 30, 27, 90, 11, 67, 74, 19, 60], 3) == [11, 19, 27]": {
      "result": true,
      "time": 0.11394810676574707,
      "error": null
    },
    "assert heap_queue_smallest([25, 39, 18, 90, 15, 65, 75, 22, 56], 6) == [15, 18, 22, 25, 39, 56]": {
      "result": true,
      "time": 0.11014699935913086,
      "error": null
    },
    "assert heap_queue_smallest([29, 37, 17, 88, 9, 70, 74, 19, 59], 7) == [9, 17, 19, 29, 37, 59, 70]": {
      "result": true,
      "time": 0.1386101245880127,
      "error": null
    },
    "assert heap_queue_smallest([30, 35, 18, 82, 13, 69, 75, 18, 57], 10) == [13, 18, 18, 30, 35, 57, 69, 75, 82]": {
      "result": true,
      "time": 0.12125444412231445,
      "error": null
    },
    "assert heap_queue_smallest([25, 33, 21, 86, 12, 60, 72, 21, 56], 9) == [12, 21, 21, 25, 33, 56, 60, 72, 86]": {
      "result": true,
      "time": 0.1442394256591797,
      "error": null
    },
    "assert heap_queue_smallest([29, 36, 27, 86, 14, 65, 75, 21, 60], 6) == [14, 21, 27, 29, 36, 60]": {
      "result": true,
      "time": 0.13878917694091797,
      "error": null
    },
    "assert heap_queue_smallest([23, 36, 26, 80, 9, 63, 76, 23, 55], 9) == [9, 23, 23, 26, 36, 55, 63, 76, 80]": {
      "result": true,
      "time": 0.10053443908691406,
      "error": null
    },
    "assert heap_queue_smallest([23, 39, 21, 83, 12, 61, 71, 24, 55], 8) == [12, 21, 23, 24, 39, 55, 61, 71]": {
      "result": true,
      "time": 0.11253714561462402,
      "error": null
    },
    "assert heap_queue_smallest([29, 38, 26, 86, 18, 62, 79, 24, 62], 3) == [18, 24, 26]": {
      "result": true,
      "time": 0.1297743320465088,
      "error": null
    },
    "assert heap_queue_smallest([24, 39, 23, 83, 18, 63, 77, 26, 55], 4) == [18, 23, 24, 26]": {
      "result": true,
      "time": 0.12439846992492676,
      "error": null
    },
    "assert heap_queue_smallest([24, 31, 27, 83, 13, 69, 72, 23, 58], 1) == [13]": {
      "result": true,
      "time": 0.12508177757263184,
      "error": null
    },
    "assert heap_queue_smallest([20, 33, 22, 83, 9, 62, 71, 18, 59], 9) == [9, 18, 20, 22, 33, 59, 62, 71, 83]": {
      "result": true,
      "time": 0.12786197662353516,
      "error": null
    },
    "assert heap_queue_smallest([28, 31, 25, 85, 14, 69, 80, 20, 55], 3) == [14, 20, 25]": {
      "result": true,
      "time": 0.1287846565246582,
      "error": null
    },
    "assert heap_queue_smallest([22, 31, 22, 83, 16, 70, 78, 24, 59], 2) == [16, 22]": {
      "result": true,
      "time": 0.11561179161071777,
      "error": null
    },
    "assert heap_queue_smallest([20, 40, 21, 80, 14, 67, 76, 26, 54], 6) == [14, 20, 21, 26, 40, 54]": {
      "result": true,
      "time": 0.14977192878723145,
      "error": null
    },
    "assert heap_queue_smallest([29, 38, 21, 81, 14, 69, 75, 19, 61], 8) == [14, 19, 21, 29, 38, 61, 69, 75]": {
      "result": true,
      "time": 0.14926934242248535,
      "error": null
    },
    "assert heap_queue_smallest([21, 33, 19, 90, 15, 67, 71, 22, 56], 3) == [15, 19, 21]": {
      "result": true,
      "time": 0.14131593704223633,
      "error": null
    },
    "assert heap_queue_smallest([23, 38, 25, 89, 10, 63, 79, 17, 63], 2) == [10, 17]": {
      "result": true,
      "time": 0.13229680061340332,
      "error": null
    },
    "assert heap_queue_smallest([22, 35, 22, 85, 12, 62, 74, 26, 56], 5) == [12, 22, 22, 26, 35]": {
      "result": true,
      "time": 0.12659835815429688,
      "error": null
    },
    "assert heap_queue_smallest([22, 31, 17, 88, 15, 68, 76, 17, 57], 6) == [15, 17, 17, 22, 31, 57]": {
      "result": true,
      "time": 0.12015438079833984,
      "error": null
    },
    "assert heap_queue_smallest([24, 33, 24, 80, 11, 70, 70, 27, 57], 4) == [11, 24, 24, 27]": {
      "result": true,
      "time": 0.13763666152954102,
      "error": null
    },
    "assert heap_queue_smallest([21, 35, 17, 85, 18, 70, 75, 24, 54], 4) == [17, 18, 21, 24]": {
      "result": true,
      "time": 0.11524367332458496,
      "error": null
    },
    "assert heap_queue_smallest([21, 30, 22, 87, 15, 60, 80, 27, 53], 7) == [15, 21, 22, 27, 30, 53, 60]": {
      "result": true,
      "time": 0.13638663291931152,
      "error": null
    },
    "assert heap_queue_smallest([26, 37, 19, 82, 14, 68, 75, 24, 55], 2) == [14, 19]": {
      "result": true,
      "time": 0.14841127395629883,
      "error": null
    },
    "assert heap_queue_smallest([25, 31, 21, 84, 12, 64, 79, 26, 56], 4) == [12, 21, 25, 26]": {
      "result": true,
      "time": 0.1135854721069336,
      "error": null
    },
    "assert heap_queue_smallest([30, 36, 22, 86, 16, 62, 79, 26, 57], 4) == [16, 22, 26, 30]": {
      "result": true,
      "time": 0.12079524993896484,
      "error": null
    },
    "assert heap_queue_smallest([29, 32, 18, 81, 16, 64, 79, 17, 53], 10) == [16, 17, 18, 29, 32, 53, 64, 79, 81]": {
      "result": true,
      "time": 0.12279176712036133,
      "error": null
    },
    "assert heap_queue_smallest([29, 35, 18, 86, 17, 61, 79, 27, 59], 5) == [17, 18, 27, 29, 35]": {
      "result": true,
      "time": 0.12683677673339844,
      "error": null
    },
    "assert heap_queue_smallest([28, 38, 24, 84, 17, 64, 74, 22, 57], 4) == [17, 22, 24, 28]": {
      "result": true,
      "time": 0.13236188888549805,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}