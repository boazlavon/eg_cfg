{
  "code": "def max_sum(arr, n):\n    # Step 1: Initialize two arrays to store increasing and decreasing subsequence sums\n    increasing = [0] * n\n    decreasing = [0] * n\n\n    # Step 2: Compute the maximum increasing subsequence sum ending at each index\n    for i in range(n):\n        increasing[i] = arr[i]\n        for j in range(i):\n            if arr[j] < arr[i]:\n                current_sum = increasing[j] + arr[i]\n                if current_sum > increasing[i]:\n                    increasing[i] = current_sum\n\n    # Step 3: Compute the maximum decreasing subsequence sum starting at each index\n    for i in range(n-1, -1, -1):\n        decreasing[i] = arr[i]\n        for j in range(i+1, n):\n            if arr[j] < arr[i]:\n                current_sum = decreasing[j] + arr[i]\n                if current_sum > decreasing[i]:\n                    decreasing[i] = current_sum\n\n    # Step 4: Find the maximum sum of bi-tonic subsequence\n    max_bi_tonic = 0\n    for i in range(n):\n        current_sum = increasing[i] + decreasing[i] - arr[i]\n        if current_sum > max_bi_tonic:\n            max_bi_tonic = current_sum\n\n    return max_bi_tonic",
  "results": {
    "assert max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9], 9) == 194": {
      "result": true,
      "time": 0.03746819496154785,
      "error": null
    },
    "assert max_sum([80, 60, 30, 40, 20, 10], 6) == 210": {
      "result": true,
      "time": 0.03683590888977051,
      "error": null
    },
    "assert max_sum([2, 3 ,14, 16, 21, 23, 29, 30], 8) == 138": {
      "result": true,
      "time": 0.04122138023376465,
      "error": null
    },
    "assert max_sum([1, 10, 51, 50, 31, 102, 15, 17, 4], 4) == 123": {
      "result": false,
      "time": 0.03563237190246582,
      "error": null
    },
    "assert max_sum([1, 18, 49, 50, 37, 100, 13, 18, 4], 5) == 122": {
      "result": false,
      "time": 0.038216352462768555,
      "error": null
    },
    "assert max_sum([2, 16, 49, 47, 38, 96, 15, 18, 7], 7) == 188": {
      "result": false,
      "time": 0.03797340393066406,
      "error": null
    },
    "assert max_sum([3, 10, 55, 49, 38, 99, 17, 18, 7], 5) == 124": {
      "result": false,
      "time": 0.030957698822021484,
      "error": null
    },
    "assert max_sum([6, 14, 56, 50, 38, 99, 17, 18, 12], 7) == 205": {
      "result": false,
      "time": 0.040755271911621094,
      "error": null
    },
    "assert max_sum([3, 17, 50, 43, 29, 95, 16, 22, 5], 4) == 122": {
      "result": false,
      "time": 0.03898215293884277,
      "error": null
    },
    "assert max_sum([3, 11, 50, 50, 31, 99, 12, 21, 7], 7) == 191": {
      "result": false,
      "time": 0.03927350044250488,
      "error": null
    },
    "assert max_sum([6, 15, 48, 43, 37, 102, 7, 17, 11], 8) == 199": {
      "result": false,
      "time": 0.04551529884338379,
      "error": null
    },
    "assert max_sum([6, 15, 47, 42, 38, 97, 7, 21, 4], 5) == 122": {
      "result": false,
      "time": 0.0397028923034668,
      "error": null
    },
    "assert max_sum([6, 17, 51, 50, 37, 99, 8, 13, 12], 4) == 124": {
      "result": true,
      "time": 0.044725894927978516,
      "error": null
    },
    "assert max_sum([6, 13, 56, 43, 35, 104, 14, 15, 10], 5) == 129": {
      "result": false,
      "time": 0.03130316734313965,
      "error": null
    },
    "assert max_sum([2, 12, 56, 41, 32, 97, 17, 21, 14], 4) == 132": {
      "result": false,
      "time": 0.03631186485290527,
      "error": null
    },
    "assert max_sum([4, 18, 56, 40, 32, 103, 13, 17, 13], 5) == 133": {
      "result": false,
      "time": 0.03544139862060547,
      "error": null
    },
    "assert max_sum([2, 15, 54, 47, 37, 98, 10, 18, 6], 6) == 193": {
      "result": false,
      "time": 0.02928638458251953,
      "error": null
    },
    "assert max_sum([2, 17, 53, 40, 31, 104, 16, 18, 13], 4) == 135": {
      "result": false,
      "time": 0.03420615196228027,
      "error": null
    },
    "assert max_sum([1, 17, 54, 41, 34, 104, 10, 23, 12], 6) == 211": {
      "result": false,
      "time": 0.033522844314575195,
      "error": null
    },
    "assert max_sum([6, 19, 49, 43, 37, 104, 9, 22, 10], 9) == 210": {
      "result": true,
      "time": 0.030458688735961914,
      "error": null
    },
    "assert max_sum([2, 17, 47, 50, 32, 101, 7, 21, 4], 9) == 242": {
      "result": true,
      "time": 0.03650522232055664,
      "error": null
    },
    "assert max_sum([6, 20, 46, 46, 32, 100, 12, 16, 14], 5) == 130": {
      "result": false,
      "time": 0.036429643630981445,
      "error": null
    },
    "assert max_sum([3, 17, 47, 42, 29, 96, 14, 19, 13], 9) == 195": {
      "result": true,
      "time": 0.03323650360107422,
      "error": null
    },
    "assert max_sum([4, 11, 49, 46, 29, 99, 7, 21, 11], 9) == 195": {
      "result": true,
      "time": 0.03783679008483887,
      "error": null
    },
    "assert max_sum([4, 13, 56, 47, 35, 98, 13, 14, 11], 6) == 196": {
      "result": false,
      "time": 0.032607078552246094,
      "error": null
    },
    "assert max_sum([5, 13, 46, 40, 34, 98, 16, 13, 12], 4) == 139": {
      "result": false,
      "time": 0.029389142990112305,
      "error": null
    },
    "assert max_sum([6, 17, 53, 42, 28, 101, 11, 18, 11], 6) == 206": {
      "result": false,
      "time": 0.031513214111328125,
      "error": null
    },
    "assert max_sum([4, 15, 56, 44, 29, 97, 8, 21, 14], 9) == 207": {
      "result": true,
      "time": 0.0394291877746582,
      "error": null
    },
    "assert max_sum([1, 11, 55, 49, 30, 95, 16, 20, 8], 4) == 123": {
      "result": false,
      "time": 0.03990578651428223,
      "error": null
    },
    "assert max_sum([4, 19, 56, 47, 35, 99, 17, 18, 11], 6) == 207": {
      "result": false,
      "time": 0.03814125061035156,
      "error": null
    },
    "assert max_sum([5, 18, 52, 41, 35, 97, 10, 13, 7], 7) == 192": {
      "result": false,
      "time": 0.0378880500793457,
      "error": null
    },
    "assert max_sum([1, 10, 47, 47, 32, 97, 7, 21, 9], 7) == 185": {
      "result": false,
      "time": 0.04261636734008789,
      "error": null
    },
    "assert max_sum([2, 17, 56, 41, 36, 98, 17, 16, 14], 9) == 220": {
      "result": true,
      "time": 0.03494739532470703,
      "error": null
    },
    "assert max_sum([1, 18, 52, 45, 33, 100, 7, 17, 4], 7) == 192": {
      "result": false,
      "time": 0.03679347038269043,
      "error": null
    },
    "assert max_sum([3, 15, 53, 50, 37, 102, 17, 21, 6], 5) == 129": {
      "result": false,
      "time": 0.03323173522949219,
      "error": null
    },
    "assert max_sum([4, 11, 48, 50, 29, 101, 11, 17, 7], 5) == 125": {
      "result": false,
      "time": 0.03407025337219238,
      "error": null
    },
    "assert max_sum([76, 56, 34, 37, 21, 9], 5) == 123": {
      "result": false,
      "time": 0.03985762596130371,
      "error": null
    },
    "assert max_sum([81, 61, 34, 42, 19, 6], 6) == 209": {
      "result": true,
      "time": 0.03203749656677246,
      "error": null
    },
    "assert max_sum([83, 57, 33, 40, 16, 14], 4) == 103": {
      "result": false,
      "time": 0.04091501235961914,
      "error": null
    },
    "assert max_sum([75, 60, 29, 44, 22, 7], 5) == 133": {
      "result": false,
      "time": 0.040018320083618164,
      "error": null
    },
    "assert max_sum([80, 56, 29, 38, 21, 7], 5) == 122": {
      "result": false,
      "time": 0.03560018539428711,
      "error": null
    },
    "assert max_sum([85, 65, 35, 44, 25, 11], 6) == 230": {
      "result": true,
      "time": 0.03254246711730957,
      "error": null
    },
    "assert max_sum([78, 65, 32, 35, 19, 9], 3) == 78": {
      "result": false,
      "time": 0.03696179389953613,
      "error": null
    },
    "assert max_sum([83, 58, 25, 45, 23, 11], 6) == 220": {
      "result": true,
      "time": 0.032926082611083984,
      "error": null
    },
    "assert max_sum([79, 61, 27, 40, 24, 14], 6) == 218": {
      "result": true,
      "time": 0.036562442779541016,
      "error": null
    },
    "assert max_sum([75, 64, 34, 41, 21, 8], 5) == 134": {
      "result": false,
      "time": 0.04045891761779785,
      "error": null
    },
    "assert max_sum([85, 65, 35, 44, 18, 15], 3) == 85": {
      "result": false,
      "time": 0.034790754318237305,
      "error": null
    },
    "assert max_sum([84, 58, 33, 43, 16, 15], 4) == 107": {
      "result": false,
      "time": 0.036437034606933594,
      "error": null
    },
    "assert max_sum([84, 57, 31, 43, 22, 8], 6) == 214": {
      "result": true,
      "time": 0.035552263259887695,
      "error": null
    },
    "assert max_sum([81, 55, 25, 39, 25, 13], 2) == 81": {
      "result": false,
      "time": 0.03456449508666992,
      "error": null
    },
    "assert max_sum([82, 55, 27, 36, 21, 12], 6) == 206": {
      "result": true,
      "time": 0.03574013710021973,
      "error": null
    },
    "assert max_sum([76, 55, 34, 42, 25, 7], 6) == 205": {
      "result": true,
      "time": 0.04123854637145996,
      "error": null
    },
    "assert max_sum([84, 64, 27, 42, 23, 15], 3) == 84": {
      "result": false,
      "time": 0.041933536529541016,
      "error": null
    },
    "assert max_sum([77, 59, 35, 36, 16, 9], 1) == 77": {
      "result": true,
      "time": 0.04265570640563965,
      "error": null
    },
    "assert max_sum([80, 59, 28, 42, 23, 13], 3) == 80": {
      "result": false,
      "time": 0.03858184814453125,
      "error": null
    },
    "assert max_sum([76, 64, 33, 37, 22, 13], 2) == 76": {
      "result": false,
      "time": 0.04846048355102539,
      "error": null
    },
    "assert max_sum([83, 63, 30, 35, 22, 7], 5) == 127": {
      "result": false,
      "time": 0.04015827178955078,
      "error": null
    },
    "assert max_sum([75, 57, 33, 39, 18, 7], 3) == 75": {
      "result": false,
      "time": 0.038332223892211914,
      "error": null
    },
    "assert max_sum([78, 59, 28, 36, 23, 6], 2) == 78": {
      "result": false,
      "time": 0.042658329010009766,
      "error": null
    },
    "assert max_sum([81, 63, 30, 39, 15, 7], 4) == 91": {
      "result": false,
      "time": 0.0452120304107666,
      "error": null
    },
    "assert max_sum([81, 62, 34, 39, 17, 5], 2) == 81": {
      "result": false,
      "time": 0.04643559455871582,
      "error": null
    },
    "assert max_sum([77, 63, 27, 40, 23, 7], 6) == 210": {
      "result": true,
      "time": 0.03894615173339844,
      "error": null
    },
    "assert max_sum([77, 64, 27, 42, 19, 7], 5) == 132": {
      "result": false,
      "time": 0.03941011428833008,
      "error": null
    },
    "assert max_sum([79, 64, 30, 44, 19, 13], 2) == 79": {
      "result": false,
      "time": 0.03967165946960449,
      "error": null
    },
    "assert max_sum([76, 61, 33, 39, 17, 13], 4) == 102": {
      "result": false,
      "time": 0.040436506271362305,
      "error": null
    },
    "assert max_sum([76, 57, 35, 36, 16, 9], 2) == 76": {
      "result": false,
      "time": 0.05682110786437988,
      "error": null
    },
    "assert max_sum([82, 55, 30, 41, 16, 14], 5) == 126": {
      "result": false,
      "time": 0.03837895393371582,
      "error": null
    },
    "assert max_sum([79, 62, 26, 41, 15, 15], 1) == 79": {
      "result": true,
      "time": 0.04472231864929199,
      "error": null
    },
    "assert max_sum([75, 58, 27, 44, 23, 12], 4) == 106": {
      "result": false,
      "time": 0.039673566818237305,
      "error": null
    },
    "assert max_sum([5, 2, 15, 19, 23, 19, 25, 29], 3) == 29": {
      "result": false,
      "time": 0.04256463050842285,
      "error": null
    },
    "assert max_sum([5, 2, 12, 16, 16, 22, 33, 33], 5) == 33": {
      "result": true,
      "time": 0.04332852363586426,
      "error": null
    },
    "assert max_sum([5, 3, 13, 20, 22, 28, 26, 26], 8) == 114": {
      "result": true,
      "time": 0.0490567684173584,
      "error": null
    },
    "assert max_sum([3, 5, 16, 17, 21, 21, 26, 32], 3) == 32": {
      "result": false,
      "time": 0.03726816177368164,
      "error": null
    },
    "assert max_sum([6, 3, 16, 16, 26, 26, 31, 31], 3) == 31": {
      "result": false,
      "time": 0.04618430137634277,
      "error": null
    },
    "assert max_sum([2, 1, 11, 17, 19, 22, 29, 28], 7) == 128": {
      "result": false,
      "time": 0.04524660110473633,
      "error": null
    },
    "assert max_sum([3, 8, 14, 13, 17, 24, 31, 26], 8) == 123": {
      "result": true,
      "time": 0.0402524471282959,
      "error": null
    },
    "assert max_sum([3, 8, 15, 14, 22, 25, 28, 25], 7) == 126": {
      "result": false,
      "time": 0.04462313652038574,
      "error": null
    },
    "assert max_sum([1, 6, 12, 19, 22, 21, 32, 29], 7) == 121": {
      "result": false,
      "time": 0.04604530334472656,
      "error": null
    },
    "assert max_sum([2, 6, 10, 12, 17, 20, 27, 25], 8) == 119": {
      "result": true,
      "time": 0.044742584228515625,
      "error": null
    },
    "assert max_sum([6, 4, 15, 13, 16, 18, 29, 29], 3) == 29": {
      "result": false,
      "time": 0.046679019927978516,
      "error": null
    },
    "assert max_sum([7, 4, 9, 21, 20, 18, 25, 25], 7) == 75": {
      "result": true,
      "time": 0.03676486015319824,
      "error": null
    },
    "assert max_sum([7, 5, 10, 14, 19, 18, 24, 32], 7) == 74": {
      "result": true,
      "time": 0.0423586368560791,
      "error": null
    },
    "assert max_sum([1, 4, 11, 13, 17, 23, 24, 33], 8) == 126": {
      "result": true,
      "time": 0.04565238952636719,
      "error": null
    },
    "assert max_sum([1, 5, 16, 15, 22, 27, 33, 32], 7) == 136": {
      "result": false,
      "time": 0.0453495979309082,
      "error": null
    },
    "assert max_sum([1, 1, 14, 12, 20, 20, 34, 35], 3) == 35": {
      "result": false,
      "time": 0.04553961753845215,
      "error": null
    },
    "assert max_sum([3, 3, 13, 17, 20, 18, 32, 28], 7) == 113": {
      "result": false,
      "time": 0.039090871810913086,
      "error": null
    },
    "assert max_sum([4, 7, 18, 15, 22, 28, 25, 33], 8) == 112": {
      "result": true,
      "time": 0.046781063079833984,
      "error": null
    },
    "assert max_sum([2, 4, 10, 20, 20, 24, 30, 26], 7) == 116": {
      "result": false,
      "time": 0.04226517677307129,
      "error": null
    },
    "assert max_sum([3, 2, 11, 20, 26, 22, 34, 26], 4) == 60": {
      "result": false,
      "time": 0.04123210906982422,
      "error": null
    },
    "assert max_sum([2, 8, 19, 12, 16, 19, 30, 25], 3) == 55": {
      "result": false,
      "time": 0.039835453033447266,
      "error": null
    },
    "assert max_sum([4, 2, 9, 15, 20, 28, 32, 28], 4) == 60": {
      "result": false,
      "time": 0.038901567459106445,
      "error": null
    },
    "assert max_sum([3, 6, 14, 14, 24, 20, 28, 32], 7) == 75": {
      "result": true,
      "time": 0.044896602630615234,
      "error": null
    },
    "assert max_sum([5, 3, 14, 13, 16, 24, 30, 25], 5) == 55": {
      "result": false,
      "time": 0.038913726806640625,
      "error": null
    },
    "assert max_sum([7, 6, 15, 21, 25, 27, 25, 34], 8) == 129": {
      "result": true,
      "time": 0.04371047019958496,
      "error": null
    },
    "assert max_sum([2, 5, 19, 21, 19, 27, 24, 31], 5) == 66": {
      "result": true,
      "time": 0.03634762763977051,
      "error": null
    },
    "assert max_sum([3, 1, 18, 12, 24, 20, 24, 25], 7) == 65": {
      "result": true,
      "time": 0.03769254684448242,
      "error": null
    },
    "assert max_sum([6, 8, 9, 20, 16, 18, 24, 25], 7) == 81": {
      "result": true,
      "time": 0.0420689582824707,
      "error": null
    },
    "assert max_sum([1, 1, 13, 12, 24, 20, 32, 27], 6) == 59": {
      "result": false,
      "time": 0.03806900978088379,
      "error": null
    },
    "assert max_sum([6, 3, 13, 16, 22, 23, 25, 27], 3) == 27": {
      "result": false,
      "time": 0.04074430465698242,
      "error": null
    },
    "assert max_sum([6, 8, 12, 13, 16, 20, 26, 31], 5) == 55": {
      "result": true,
      "time": 0.04678082466125488,
      "error": null
    },
    "assert max_sum([4, 3, 11, 11, 22, 28, 28, 32], 5) == 37": {
      "result": true,
      "time": 0.040101051330566406,
      "error": null
    },
    "assert max_sum([7, 1, 17, 15, 26, 28, 27, 26], 5) == 81": {
      "result": false,
      "time": 0.04191112518310547,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3431372549019608,
  "general_error": "",
  "has_testcase_error": false
}