{
  "code": "def snake_to_camel(snake_str):\n    # Split the string into parts using underscore as delimiter\n    parts = snake_str.split('_')\n    \n    # Initialize an empty list to store the camel case parts\n    camel_parts = []\n    \n    # Iterate over each part in the split string\n    for part in parts:\n        # Capitalize the first letter of each part\n        if part:\n            first_char = part[0].upper()\n            remaining_chars = part[1:]\n            camel_part = first_char + remaining_chars\n            camel_parts.append(camel_part)\n    \n    # Join all the parts into a single string\n    camel_str = ''.join(camel_parts)\n    \n    return camel_str",
  "results": {
    "assert snake_to_camel('python_program')=='PythonProgram'": {
      "result": true,
      "time": 0.038544416427612305,
      "error": null
    },
    "assert snake_to_camel('python_language')==('PythonLanguage')": {
      "result": true,
      "time": 0.04024553298950195,
      "error": null
    },
    "assert snake_to_camel('programming_language')==('ProgrammingLanguage')": {
      "result": true,
      "time": 0.0426180362701416,
      "error": null
    },
    "assert snake_to_camel(\"wgy%_lpwdkhv=bblj~\") == \"Wgy%Lpwdkhv=bblj~\"": {
      "result": true,
      "time": 0.044005393981933594,
      "error": null
    },
    "assert snake_to_camel(\"rf+~ht:#lezz\") == \"Rf+~ht:#lezz\"": {
      "result": true,
      "time": 0.0428004264831543,
      "error": null
    },
    "assert snake_to_camel(\"erxlx^*>:&y-m^d-+\") == \"Erxlx^*>:&y-m^d-+\"": {
      "result": true,
      "time": 0.037199974060058594,
      "error": null
    },
    "assert snake_to_camel(\"bx@/@??<<_&|cw/q\") == \"Bx@/@??<<&|cw/q\"": {
      "result": true,
      "time": 0.05080556869506836,
      "error": null
    },
    "assert snake_to_camel(\"<u<:>_q&e\") == \"<u<:>Q&e\"": {
      "result": true,
      "time": 0.03823208808898926,
      "error": null
    },
    "assert snake_to_camel(\"hg?t*t@<a_\") == \"Hg?t*t@<a_\"": {
      "result": false,
      "time": 0.045746564865112305,
      "error": null
    },
    "assert snake_to_camel(\"f~@?%ga?-m!e+ru\") == \"F~@?%ga?-m!e+ru\"": {
      "result": true,
      "time": 0.042528390884399414,
      "error": null
    },
    "assert snake_to_camel(\"*bpzbt$ox@/?#\") == \"*bpzbt$ox@/?#\"": {
      "result": true,
      "time": 0.04779314994812012,
      "error": null
    },
    "assert snake_to_camel(\"luthjj/k=uq-\") == \"Luthjj/k=uq-\"": {
      "result": true,
      "time": 0.041440725326538086,
      "error": null
    },
    "assert snake_to_camel(\"$jc~y/|d#@/h=+r*\") == \"$jc~y/|d#@/h=+r*\"": {
      "result": true,
      "time": 0.040810585021972656,
      "error": null
    },
    "assert snake_to_camel(\"@b$bjqpqv_\") == \"@b$bjqpqv_\"": {
      "result": false,
      "time": 0.041136980056762695,
      "error": null
    },
    "assert snake_to_camel(\"kv$|uod!i&q\") == \"Kv$|uod!i&q\"": {
      "result": true,
      "time": 0.03885054588317871,
      "error": null
    },
    "assert snake_to_camel(\"r_>ha/o$x>?w\") == \"R>ha/o$x>?w\"": {
      "result": true,
      "time": 0.04482293128967285,
      "error": null
    },
    "assert snake_to_camel(\"gjc~xwnkbi+lrobj\") == \"Gjc~xwnkbi+lrobj\"": {
      "result": true,
      "time": 0.044594764709472656,
      "error": null
    },
    "assert snake_to_camel(\"lz<z~ut##at-nrfqn\") == \"Lz<z~ut##at-nrfqn\"": {
      "result": true,
      "time": 0.04695844650268555,
      "error": null
    },
    "assert snake_to_camel(\"td<wxwy>j:s^onx@\") == \"Td<wxwy>j:s^onx@\"": {
      "result": true,
      "time": 0.04067492485046387,
      "error": null
    },
    "assert snake_to_camel(\"xn>n^=c>lo:>e:|\") == \"Xn>n^=c>lo:>e:|\"": {
      "result": true,
      "time": 0.03873872756958008,
      "error": null
    },
    "assert snake_to_camel(\"uu@d^g+bqud|j:tv\") == \"Uu@d^g+bqud|j:tv\"": {
      "result": true,
      "time": 0.03740859031677246,
      "error": null
    },
    "assert snake_to_camel(\"=%vhkw<|et\") == \"=%vhkw<|et\"": {
      "result": true,
      "time": 0.045308589935302734,
      "error": null
    },
    "assert snake_to_camel(\"yv*pzx~r&+\") == \"Yv*pzx~r&+\"": {
      "result": true,
      "time": 0.036065101623535156,
      "error": null
    },
    "assert snake_to_camel(\"?g-dw<*+u\") == \"?g-dw<*+u\"": {
      "result": true,
      "time": 0.03932905197143555,
      "error": null
    },
    "assert snake_to_camel(\"<s|=m>pv|^w:y\") == \"<s|=m>pv|^w:y\"": {
      "result": true,
      "time": 0.0459136962890625,
      "error": null
    },
    "assert snake_to_camel(\"y##nw^>ox+f=o:p@<p\") == \"Y##nw^>ox+f=o:p@<p\"": {
      "result": true,
      "time": 0.04602336883544922,
      "error": null
    },
    "assert snake_to_camel(\"cdw<eo=~lys\") == \"Cdw<eo=~lys\"": {
      "result": true,
      "time": 0.03779721260070801,
      "error": null
    },
    "assert snake_to_camel(\"p!u@z>a$o\") == \"P!u@z>a$o\"": {
      "result": true,
      "time": 0.04076814651489258,
      "error": null
    },
    "assert snake_to_camel(\"yzi++$^!i>-<qh!\") == \"Yzi++$^!i>-<qh!\"": {
      "result": true,
      "time": 0.03803706169128418,
      "error": null
    },
    "assert snake_to_camel(\"pq-<%trfswx/yxepj\") == \"Pq-<%trfswx/yxepj\"": {
      "result": true,
      "time": 0.036614418029785156,
      "error": null
    },
    "assert snake_to_camel(\"bi_>xombq+%m\") == \"Bi>xombq+%m\"": {
      "result": true,
      "time": 0.043352365493774414,
      "error": null
    },
    "assert snake_to_camel(\":f$upg&kh@\") == \":f$upg&kh@\"": {
      "result": true,
      "time": 0.037143707275390625,
      "error": null
    },
    "assert snake_to_camel(\"ar?w^$n|+\") == \"Ar?w^$n|+\"": {
      "result": true,
      "time": 0.04280877113342285,
      "error": null
    },
    "assert snake_to_camel(\"h+l@rq>-+y-w\") == \"H+l@rq>-+y-w\"": {
      "result": true,
      "time": 0.035730838775634766,
      "error": null
    },
    "assert snake_to_camel(\"^:nzzzm-ulemnb_+v_\") == \"^:nzzzm-ulemnb+v_\"": {
      "result": false,
      "time": 0.03835558891296387,
      "error": null
    },
    "assert snake_to_camel(\">>y+ral#k\") == \">>y+ral#k\"": {
      "result": true,
      "time": 0.04062080383300781,
      "error": null
    },
    "assert snake_to_camel(\"j=+g~g|bhizxs~?u\") == \"J=+g~g|bhizxs~?u\"": {
      "result": true,
      "time": 0.04254460334777832,
      "error": null
    },
    "assert snake_to_camel(\"|#o_wi:=kp-wilf%~u-\") == \"|#oWi:=kp-wilf%~u-\"": {
      "result": true,
      "time": 0.0478518009185791,
      "error": null
    },
    "assert snake_to_camel(\"qq//#m#dzw^-#&#g*esm\") == \"Qq//#m#dzw^-#&#g*esm\"": {
      "result": true,
      "time": 0.03701066970825195,
      "error": null
    },
    "assert snake_to_camel(\"/kld|i~l/urid\") == \"/kld|i~l/urid\"": {
      "result": true,
      "time": 0.03923153877258301,
      "error": null
    },
    "assert snake_to_camel(\"~</k=#zm&g^ewq>-zd^=q\") == \"~</k=#zm&g^ewq>-zd^=q\"": {
      "result": true,
      "time": 0.04808449745178223,
      "error": null
    },
    "assert snake_to_camel(\"_u^&f>:z<-v_bo*i:uy~\") == \"_U^&f>:z<-vBo*i:uy~\"": {
      "result": false,
      "time": 0.044713497161865234,
      "error": null
    },
    "assert snake_to_camel(\"gp<wy>c&ocgqibfktt^v\") == \"Gp<wy>c&ocgqibfktt^v\"": {
      "result": true,
      "time": 0.043860435485839844,
      "error": null
    },
    "assert snake_to_camel(\"-|$#b*a|syfvz/~jd\") == \"-|$#b*a|syfvz/~jd\"": {
      "result": true,
      "time": 0.049747467041015625,
      "error": null
    },
    "assert snake_to_camel(\"*=^r#^kje$eq*\") == \"*=^r#^kje$eq*\"": {
      "result": true,
      "time": 0.04640030860900879,
      "error": null
    },
    "assert snake_to_camel(\"s-lz#~>/|itl$tp\") == \"S-lz#~>/|itl$tp\"": {
      "result": true,
      "time": 0.035140275955200195,
      "error": null
    },
    "assert snake_to_camel(\"~qddqnm#xowyq\") == \"~qddqnm#xowyq\"": {
      "result": true,
      "time": 0.039235830307006836,
      "error": null
    },
    "assert snake_to_camel(\"kvrph|<?ayq>igrebc!^\") == \"Kvrph|<?ayq>igrebc!^\"": {
      "result": true,
      "time": 0.03540778160095215,
      "error": null
    },
    "assert snake_to_camel(\"!+dljgrsmlds*id\") == \"!+dljgrsmlds*id\"": {
      "result": true,
      "time": 0.03745603561401367,
      "error": null
    },
    "assert snake_to_camel(\"&trmu%taz_/a?tgv~%\") == \"&trmu%taz/a?tgv~%\"": {
      "result": true,
      "time": 0.03134799003601074,
      "error": null
    },
    "assert snake_to_camel(\"&gf?h+h/#eab?#e\") == \"&gf?h+h/#eab?#e\"": {
      "result": true,
      "time": 0.03841876983642578,
      "error": null
    },
    "assert snake_to_camel(\"ktv%kpeo*|nr&u~po<\") == \"Ktv%kpeo*|nr&u~po<\"": {
      "result": true,
      "time": 0.036186933517456055,
      "error": null
    },
    "assert snake_to_camel(\"wr|q/te<|zfcykg%\") == \"Wr|q/te<|zfcykg%\"": {
      "result": true,
      "time": 0.03357338905334473,
      "error": null
    },
    "assert snake_to_camel(\"qz~k_%d~pefz:b\") == \"Qz~k%d~pefz:b\"": {
      "result": true,
      "time": 0.036855220794677734,
      "error": null
    },
    "assert snake_to_camel(\"nevnplh-<zjs\") == \"Nevnplh-<zjs\"": {
      "result": true,
      "time": 0.03742074966430664,
      "error": null
    },
    "assert snake_to_camel(\"~b_nr@gx=-=u&v\") == \"~bNr@gx=-=u&v\"": {
      "result": true,
      "time": 0.04181408882141113,
      "error": null
    },
    "assert snake_to_camel(\"s=@*dbra<tsa-llfdl@d\") == \"S=@*dbra<tsa-llfdl@d\"": {
      "result": true,
      "time": 0.03277993202209473,
      "error": null
    },
    "assert snake_to_camel(\"zvsmf=cle+he?+_*\") == \"Zvsmf=cle+he?+*\"": {
      "result": true,
      "time": 0.03511786460876465,
      "error": null
    },
    "assert snake_to_camel(\"?b%&jc<@y%-mp#v=+>qgw\") == \"?b%&jc<@y%-mp#v=+>qgw\"": {
      "result": true,
      "time": 0.04094529151916504,
      "error": null
    },
    "assert snake_to_camel(\"-$-cdr?s|f>ci\") == \"-$-cdr?s|f>ci\"": {
      "result": true,
      "time": 0.03442740440368652,
      "error": null
    },
    "assert snake_to_camel(\"$%ztaoidynd@i=d\") == \"$%ztaoidynd@i=d\"": {
      "result": true,
      "time": 0.03450369834899902,
      "error": null
    },
    "assert snake_to_camel(\"s_*kc||@c>#~hi!_!|&~\") == \"S*kc||@c>#~hi!!|&~\"": {
      "result": true,
      "time": 0.035774946212768555,
      "error": null
    },
    "assert snake_to_camel(\"$~*j/*n%dstyx\") == \"$~*j/*n%dstyx\"": {
      "result": true,
      "time": 0.034865617752075195,
      "error": null
    },
    "assert snake_to_camel(\">ej@f~^^l/xfb^c=\") == \">ej@f~^^l/xfb^c=\"": {
      "result": true,
      "time": 0.03521466255187988,
      "error": null
    },
    "assert snake_to_camel(\"m$sxkx_~hx$_yec^\") == \"M$sxkx~hx$Yec^\"": {
      "result": true,
      "time": 0.04416656494140625,
      "error": null
    },
    "assert snake_to_camel(\"<sy:-z@q:q^%ig_\") == \"<sy:-z@q:q^%ig_\"": {
      "result": false,
      "time": 0.031861066818237305,
      "error": null
    },
    "assert snake_to_camel(\"q~t~g*>~ts<eqc#?z<_$i\") == \"Q~t~g*>~ts<eqc#?z<$i\"": {
      "result": true,
      "time": 0.03209090232849121,
      "error": null
    },
    "assert snake_to_camel(\"hwt|%^p%~m-et|\") == \"Hwt|%^p%~m-et|\"": {
      "result": true,
      "time": 0.03536534309387207,
      "error": null
    },
    "assert snake_to_camel(\"<@@-lcyfnn%awsv?b\") == \"<@@-lcyfnn%awsv?b\"": {
      "result": true,
      "time": 0.03527545928955078,
      "error": null
    },
    "assert snake_to_camel(\"!yo<bcr!ui~z$h/f>ujby?\") == \"!yo<bcr!ui~z$h/f>ujby?\"": {
      "result": true,
      "time": 0.028415918350219727,
      "error": null
    },
    "assert snake_to_camel(\"gjn%!dcmpwjpuf@*\") == \"Gjn%!dcmpwjpuf@*\"": {
      "result": true,
      "time": 0.03595709800720215,
      "error": null
    },
    "assert snake_to_camel(\"gve!~vm%&%htzv_mlnspt>|$\") == \"Gve!~vm%&%htzvMlnspt>|$\"": {
      "result": true,
      "time": 0.035689592361450195,
      "error": null
    },
    "assert snake_to_camel(\"lz-<awwvp##|w>#yw\") == \"Lz-<awwvp##|w>#yw\"": {
      "result": true,
      "time": 0.04074978828430176,
      "error": null
    },
    "assert snake_to_camel(\"x:otcnrdr+sl^o-t@fm!p|n\") == \"X:otcnrdr+sl^o-t@fm!p|n\"": {
      "result": true,
      "time": 0.03700518608093262,
      "error": null
    },
    "assert snake_to_camel(\"|m-$d^u~h=c-%p*&\") == \"|m-$d^u~h=c-%p*&\"": {
      "result": true,
      "time": 0.03607892990112305,
      "error": null
    },
    "assert snake_to_camel(\"ic=vwp@mhq%f_@e*s\") == \"Ic=vwp@mhq%f@e*s\"": {
      "result": true,
      "time": 0.03444218635559082,
      "error": null
    },
    "assert snake_to_camel(\"mlo_b=i@/nwc?pd+kzll\") == \"MloB=i@/nwc?pd+kzll\"": {
      "result": true,
      "time": 0.03755784034729004,
      "error": null
    },
    "assert snake_to_camel(\"ct%>|tuuahyf##rs<o:\") == \"Ct%>|tuuahyf##rs<o:\"": {
      "result": true,
      "time": 0.039704084396362305,
      "error": null
    },
    "assert snake_to_camel(\"#>/??qsusz=t^iu\") == \"#>/??qsusz=t^iu\"": {
      "result": true,
      "time": 0.032413482666015625,
      "error": null
    },
    "assert snake_to_camel(\"nlqtyfymjhx$h/?mc?\") == \"Nlqtyfymjhx$h/?mc?\"": {
      "result": true,
      "time": 0.034790992736816406,
      "error": null
    },
    "assert snake_to_camel(\"xz-txcpzeie!n<&+x^l%|+\") == \"Xz-txcpzeie!n<&+x^l%|+\"": {
      "result": true,
      "time": 0.04302859306335449,
      "error": null
    },
    "assert snake_to_camel(\"v|b-iazk/m&@ro-los-$ud=_\") == \"V|b-iazk/m&@ro-los-$ud=_\"": {
      "result": false,
      "time": 0.031829118728637695,
      "error": null
    },
    "assert snake_to_camel(\"vzn!#womdn-ihyw\") == \"Vzn!#womdn-ihyw\"": {
      "result": true,
      "time": 0.03400993347167969,
      "error": null
    },
    "assert snake_to_camel(\"&h>-am/mpcip|@?t~tz\") == \"&h>-am/mpcip|@?t~tz\"": {
      "result": true,
      "time": 0.03270316123962402,
      "error": null
    },
    "assert snake_to_camel(\"_$!?%@^<k/$=?+=o#=\") == \"_$!?%@^<k/$=?+=o#=\"": {
      "result": false,
      "time": 0.04330897331237793,
      "error": null
    },
    "assert snake_to_camel(\"f-xmu*=y*ja!fjywm<xsf\") == \"F-xmu*=y*ja!fjywm<xsf\"": {
      "result": true,
      "time": 0.031209230422973633,
      "error": null
    },
    "assert snake_to_camel(\"r+zmw*lbc?~=imx|i>z*m%wh\") == \"R+zmw*lbc?~=imx|i>z*m%wh\"": {
      "result": true,
      "time": 0.03302454948425293,
      "error": null
    },
    "assert snake_to_camel(\"=t:=wd>sby_qnmpj<hqpp-@<\") == \"=t:=wd>sbyQnmpj<hqpp-@<\"": {
      "result": true,
      "time": 0.03855538368225098,
      "error": null
    },
    "assert snake_to_camel(\"&d%uj*vt>%rz~|~#nsxcpx\") == \"&d%uj*vt>%rz~|~#nsxcpx\"": {
      "result": true,
      "time": 0.03342080116271973,
      "error": null
    },
    "assert snake_to_camel(\"p^upcrghm_ylf&up?@!\") == \"P^upcrghmYlf&up?@!\"": {
      "result": true,
      "time": 0.03898453712463379,
      "error": null
    },
    "assert snake_to_camel(\"lq>m*%|$$/:bd%t-\") == \"Lq>m*%|$$/:bd%t-\"": {
      "result": true,
      "time": 0.037212371826171875,
      "error": null
    },
    "assert snake_to_camel(\"iwnyk-o@$bhsh*$m\") == \"Iwnyk-o@$bhsh*$m\"": {
      "result": true,
      "time": 0.038079023361206055,
      "error": null
    },
    "assert snake_to_camel(\"f_qt$!@|xo$^|y@\") == \"FQt$!@|xo$^|y@\"": {
      "result": true,
      "time": 0.04078364372253418,
      "error": null
    },
    "assert snake_to_camel(\"fqqneer@q|=<|n+@\") == \"Fqqneer@q|=<|n+@\"": {
      "result": true,
      "time": 0.04220390319824219,
      "error": null
    },
    "assert snake_to_camel(\"|c>hwles#tz#z*!+/c\") == \"|c>hwles#tz#z*!+/c\"": {
      "result": true,
      "time": 0.03628349304199219,
      "error": null
    },
    "assert snake_to_camel(\"cu:j+d%mu+ggwk!/\") == \"Cu:j+d%mu+ggwk!/\"": {
      "result": true,
      "time": 0.03641533851623535,
      "error": null
    },
    "assert snake_to_camel(\"?&wg~!dm?<u&lgk%je\") == \"?&wg~!dm?<u&lgk%je\"": {
      "result": true,
      "time": 0.03680276870727539,
      "error": null
    },
    "assert snake_to_camel(\"-*f:cz>u-v:w|zf@c^f\") == \"-*f:cz>u-v:w|zf@c^f\"": {
      "result": true,
      "time": 0.03515505790710449,
      "error": null
    },
    "assert snake_to_camel(\"vpzduyq>z/u:-jabfgjrt/kh\") == \"Vpzduyq>z/u:-jabfgjrt/kh\"": {
      "result": true,
      "time": 0.03983449935913086,
      "error": null
    },
    "assert snake_to_camel(\"krp*:pgly&~~<+z*q|jr\") == \"Krp*:pgly&~~<+z*q|jr\"": {
      "result": true,
      "time": 0.040848731994628906,
      "error": null
    },
    "assert snake_to_camel(\"#-e>uh!>huq@ihh?^m_n^\") == \"#-e>uh!>huq@ihh?^mN^\"": {
      "result": true,
      "time": 0.03540849685668945,
      "error": null
    },
    "assert snake_to_camel(\"b+m$|lf^:seh#h_\") == \"B+m$|lf^:seh#h_\"": {
      "result": false,
      "time": 0.04266047477722168,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.9215686274509803,
  "general_error": "",
  "has_testcase_error": false
}