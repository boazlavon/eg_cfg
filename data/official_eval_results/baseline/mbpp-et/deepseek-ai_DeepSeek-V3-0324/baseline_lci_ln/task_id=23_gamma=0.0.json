{
  "code": "def maximum_Sum(list_of_lists):\n    max_sum = None\n    for inner_list in list_of_lists:\n        current_sum = 0\n        for num in inner_list:\n            current_sum = current_sum + num\n        if max_sum is None:\n            max_sum = current_sum\n        elif current_sum > max_sum:\n            max_sum = current_sum\n    return max_sum",
  "results": {
    "assert maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33": {
      "result": true,
      "time": 0.036633968353271484,
      "error": null
    },
    "assert maximum_Sum([[0,1,1],[1,1,2],[3,2,1]]) == 6": {
      "result": true,
      "time": 0.0366663932800293,
      "error": null
    },
    "assert maximum_Sum([[0,1,3],[1,2,1],[9,8,2],[0,1,0],[6,4,8]]) == 19": {
      "result": true,
      "time": 0.03375053405761719,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 1], [6, 2, 11], [14, 11, 13], [3, 9, 9]]) == 38": {
      "result": true,
      "time": 0.04546976089477539,
      "error": null
    },
    "assert maximum_Sum([[3, 7, 8], [8, 5, 3], [12, 7, 15], [9, 11, 7]]) == 34": {
      "result": true,
      "time": 0.04089808464050293,
      "error": null
    },
    "assert maximum_Sum([[5, 3, 4], [1, 9, 8], [5, 11, 9], [5, 10, 14]]) == 29": {
      "result": true,
      "time": 0.04382824897766113,
      "error": null
    },
    "assert maximum_Sum([[5, 1, 3], [7, 7, 3], [9, 8, 17], [11, 9, 4]]) == 34": {
      "result": true,
      "time": 0.049314022064208984,
      "error": null
    },
    "assert maximum_Sum([[5, 5, 1], [5, 1, 10], [5, 6, 8], [3, 3, 4]]) == 19": {
      "result": true,
      "time": 0.04232358932495117,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 4], [4, 3, 11], [6, 13, 10], [8, 7, 11]]) == 29": {
      "result": true,
      "time": 0.046167612075805664,
      "error": null
    },
    "assert maximum_Sum([[5, 7, 6], [1, 2, 9], [8, 7, 7], [12, 13, 9]]) == 34": {
      "result": true,
      "time": 0.04537248611450195,
      "error": null
    },
    "assert maximum_Sum([[1, 3, 1], [9, 7, 3], [11, 13, 9], [9, 12, 7]]) == 33": {
      "result": true,
      "time": 0.04238104820251465,
      "error": null
    },
    "assert maximum_Sum([[1, 6, 2], [1, 2, 9], [15, 15, 11], [2, 8, 13]]) == 41": {
      "result": true,
      "time": 0.046712636947631836,
      "error": null
    },
    "assert maximum_Sum([[6, 3, 5], [2, 3, 9], [15, 15, 9], [5, 9, 5]]) == 39": {
      "result": true,
      "time": 0.04467964172363281,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 7], [1, 9, 10], [7, 10, 16], [2, 6, 10]]) == 33": {
      "result": true,
      "time": 0.04919314384460449,
      "error": null
    },
    "assert maximum_Sum([[4, 2, 7], [6, 4, 1], [14, 7, 8], [10, 10, 11]]) == 31": {
      "result": true,
      "time": 0.041953325271606445,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 7], [8, 1, 9], [15, 12, 14], [6, 6, 11]]) == 41": {
      "result": true,
      "time": 0.04388022422790527,
      "error": null
    },
    "assert maximum_Sum([[6, 2, 6], [8, 10, 11], [7, 8, 9], [11, 4, 13]]) == 29": {
      "result": true,
      "time": 0.03958749771118164,
      "error": null
    },
    "assert maximum_Sum([[1, 2, 6], [8, 6, 9], [8, 12, 11], [11, 12, 7]]) == 31": {
      "result": true,
      "time": 0.037210702896118164,
      "error": null
    },
    "assert maximum_Sum([[4, 2, 2], [5, 3, 3], [13, 7, 7], [10, 7, 8]]) == 27": {
      "result": true,
      "time": 0.05107760429382324,
      "error": null
    },
    "assert maximum_Sum([[4, 1, 8], [1, 5, 7], [14, 8, 9], [8, 7, 10]]) == 31": {
      "result": true,
      "time": 0.05153393745422363,
      "error": null
    },
    "assert maximum_Sum([[1, 4, 3], [6, 5, 3], [5, 8, 8], [5, 6, 11]]) == 22": {
      "result": true,
      "time": 0.048540592193603516,
      "error": null
    },
    "assert maximum_Sum([[1, 2, 6], [4, 2, 4], [11, 15, 16], [9, 11, 14]]) == 42": {
      "result": true,
      "time": 0.03813672065734863,
      "error": null
    },
    "assert maximum_Sum([[2, 6, 2], [1, 10, 2], [13, 15, 17], [11, 11, 10]]) == 45": {
      "result": true,
      "time": 0.04440474510192871,
      "error": null
    },
    "assert maximum_Sum([[4, 4, 5], [2, 6, 6], [12, 8, 17], [11, 8, 9]]) == 37": {
      "result": true,
      "time": 0.0390472412109375,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 6], [8, 8, 9], [13, 9, 8], [10, 13, 10]]) == 33": {
      "result": true,
      "time": 0.05445599555969238,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 2], [4, 10, 10], [9, 8, 15], [12, 5, 14]]) == 32": {
      "result": true,
      "time": 0.04681968688964844,
      "error": null
    },
    "assert maximum_Sum([[4, 4, 4], [7, 8, 5], [8, 15, 14], [8, 11, 5]]) == 37": {
      "result": true,
      "time": 0.04582691192626953,
      "error": null
    },
    "assert maximum_Sum([[5, 6, 8], [8, 1, 9], [13, 13, 16], [4, 7, 7]]) == 42": {
      "result": true,
      "time": 0.04276633262634277,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 4], [4, 7, 3], [5, 15, 8], [11, 3, 13]]) == 28": {
      "result": true,
      "time": 0.04513907432556152,
      "error": null
    },
    "assert maximum_Sum([[3, 4, 8], [1, 8, 5], [7, 15, 13], [6, 9, 13]]) == 35": {
      "result": true,
      "time": 0.04594016075134277,
      "error": null
    },
    "assert maximum_Sum([[1, 3, 4], [4, 3, 6], [6, 6, 8], [5, 12, 7]]) == 24": {
      "result": true,
      "time": 0.04734396934509277,
      "error": null
    },
    "assert maximum_Sum([[4, 5, 2], [9, 8, 11], [11, 8, 13], [5, 3, 11]]) == 32": {
      "result": true,
      "time": 0.03835034370422363,
      "error": null
    },
    "assert maximum_Sum([[3, 7, 4], [1, 7, 5], [5, 16, 8], [10, 3, 8]]) == 29": {
      "result": true,
      "time": 0.05488228797912598,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 5], [7, 7, 1], [9, 9, 10], [3, 9, 11]]) == 28": {
      "result": true,
      "time": 0.04815506935119629,
      "error": null
    },
    "assert maximum_Sum([[3, 2, 8], [1, 7, 2], [13, 10, 16], [7, 12, 14]]) == 39": {
      "result": true,
      "time": 0.03813672065734863,
      "error": null
    },
    "assert maximum_Sum([[4, 6, 5], [6, 10, 3], [12, 12, 14], [2, 9, 6]]) == 38": {
      "result": true,
      "time": 0.051297664642333984,
      "error": null
    },
    "assert maximum_Sum([[4, 4, 4], [1, 3, 4], [8, 4, 6]]) == 18": {
      "result": true,
      "time": 0.04718494415283203,
      "error": null
    },
    "assert maximum_Sum([[3, 1, 1], [4, 2, 4], [3, 4, 5]]) == 12": {
      "result": true,
      "time": 0.04238605499267578,
      "error": null
    },
    "assert maximum_Sum([[5, 2, 4], [2, 1, 1], [4, 7, 1]]) == 12": {
      "result": true,
      "time": 0.03802967071533203,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 1], [3, 4, 6], [7, 7, 3]]) == 17": {
      "result": true,
      "time": 0.04286623001098633,
      "error": null
    },
    "assert maximum_Sum([[4, 4, 6], [5, 5, 1], [3, 7, 4]]) == 14": {
      "result": true,
      "time": 0.0479583740234375,
      "error": null
    },
    "assert maximum_Sum([[3, 2, 6], [2, 4, 7], [8, 6, 5]]) == 19": {
      "result": true,
      "time": 0.0480654239654541,
      "error": null
    },
    "assert maximum_Sum([[5, 5, 6], [4, 6, 4], [8, 3, 4]]) == 16": {
      "result": true,
      "time": 0.042447566986083984,
      "error": null
    },
    "assert maximum_Sum([[2, 5, 4], [1, 1, 7], [7, 4, 5]]) == 16": {
      "result": true,
      "time": 0.04563593864440918,
      "error": null
    },
    "assert maximum_Sum([[2, 2, 1], [4, 6, 1], [3, 4, 4]]) == 11": {
      "result": true,
      "time": 0.03392219543457031,
      "error": null
    },
    "assert maximum_Sum([[5, 5, 2], [5, 4, 2], [8, 1, 1]]) == 12": {
      "result": true,
      "time": 0.04477739334106445,
      "error": null
    },
    "assert maximum_Sum([[5, 4, 6], [5, 1, 6], [3, 5, 5]]) == 15": {
      "result": true,
      "time": 0.04904651641845703,
      "error": null
    },
    "assert maximum_Sum([[5, 4, 3], [5, 1, 3], [5, 3, 5]]) == 13": {
      "result": true,
      "time": 0.04083132743835449,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 1], [1, 3, 6], [4, 7, 3]]) == 14": {
      "result": true,
      "time": 0.0483403205871582,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 3], [1, 4, 7], [1, 2, 6]]) == 12": {
      "result": true,
      "time": 0.04049348831176758,
      "error": null
    },
    "assert maximum_Sum([[5, 1, 4], [4, 4, 4], [8, 6, 3]]) == 17": {
      "result": true,
      "time": 0.04111075401306152,
      "error": null
    },
    "assert maximum_Sum([[2, 1, 4], [3, 5, 6], [5, 5, 4]]) == 14": {
      "result": true,
      "time": 0.042757272720336914,
      "error": null
    },
    "assert maximum_Sum([[5, 2, 5], [2, 6, 1], [1, 5, 2]]) == 12": {
      "result": true,
      "time": 0.04887032508850098,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 2], [6, 1, 2], [4, 4, 2]]) == 10": {
      "result": true,
      "time": 0.04156947135925293,
      "error": null
    },
    "assert maximum_Sum([[5, 2, 5], [3, 6, 3], [2, 5, 3]]) == 12": {
      "result": true,
      "time": 0.037689924240112305,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 1], [4, 4, 2], [2, 4, 4]]) == 10": {
      "result": true,
      "time": 0.0449671745300293,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 5], [1, 3, 2], [1, 4, 2]]) == 10": {
      "result": true,
      "time": 0.04111170768737793,
      "error": null
    },
    "assert maximum_Sum([[5, 6, 5], [2, 2, 2], [5, 6, 5]]) == 16": {
      "result": true,
      "time": 0.057007789611816406,
      "error": null
    },
    "assert maximum_Sum([[2, 6, 2], [2, 2, 7], [4, 3, 6]]) == 13": {
      "result": true,
      "time": 0.04118990898132324,
      "error": null
    },
    "assert maximum_Sum([[2, 3, 4], [6, 4, 5], [5, 7, 5]]) == 17": {
      "result": true,
      "time": 0.03717470169067383,
      "error": null
    },
    "assert maximum_Sum([[5, 6, 4], [6, 4, 7], [7, 7, 1]]) == 17": {
      "result": true,
      "time": 0.0515439510345459,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 1], [6, 2, 2], [5, 7, 4]]) == 16": {
      "result": true,
      "time": 0.03854823112487793,
      "error": null
    },
    "assert maximum_Sum([[2, 5, 2], [2, 5, 7], [4, 1, 5]]) == 14": {
      "result": true,
      "time": 0.05770564079284668,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 2], [6, 1, 4], [2, 4, 6]]) == 12": {
      "result": true,
      "time": 0.04845738410949707,
      "error": null
    },
    "assert maximum_Sum([[3, 6, 3], [3, 1, 7], [7, 6, 6]]) == 19": {
      "result": true,
      "time": 0.04168987274169922,
      "error": null
    },
    "assert maximum_Sum([[5, 6, 4], [3, 1, 4], [5, 7, 2]]) == 15": {
      "result": true,
      "time": 0.04010915756225586,
      "error": null
    },
    "assert maximum_Sum([[2, 2, 2], [1, 6, 7], [2, 3, 3]]) == 14": {
      "result": true,
      "time": 0.037491798400878906,
      "error": null
    },
    "assert maximum_Sum([[5, 4, 2], [2, 2, 4], [7, 3, 1]]) == 11": {
      "result": true,
      "time": 0.04072070121765137,
      "error": null
    },
    "assert maximum_Sum([[4, 6, 5], [3, 1, 4], [8, 3, 3]]) == 15": {
      "result": true,
      "time": 0.0542912483215332,
      "error": null
    },
    "assert maximum_Sum([[1, 4, 7], [2, 6, 5], [13, 9, 5], [4, 1, 1], [5, 3, 11]]) == 27": {
      "result": true,
      "time": 0.03699779510498047,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 4], [3, 3, 6], [7, 9, 5], [5, 6, 1], [9, 4, 11]]) == 24": {
      "result": true,
      "time": 0.044963836669921875,
      "error": null
    },
    "assert maximum_Sum([[1, 2, 6], [2, 4, 4], [5, 10, 7], [4, 1, 2], [4, 8, 5]]) == 22": {
      "result": true,
      "time": 0.04000067710876465,
      "error": null
    },
    "assert maximum_Sum([[1, 3, 6], [1, 6, 2], [7, 3, 6], [5, 2, 1], [5, 1, 4]]) == 16": {
      "result": true,
      "time": 0.043241262435913086,
      "error": null
    },
    "assert maximum_Sum([[4, 2, 7], [6, 3, 5], [11, 7, 2], [4, 1, 4], [2, 7, 13]]) == 22": {
      "result": true,
      "time": 0.0345454216003418,
      "error": null
    },
    "assert maximum_Sum([[2, 6, 3], [1, 3, 3], [14, 3, 7], [2, 6, 5], [2, 3, 5]]) == 24": {
      "result": true,
      "time": 0.0440983772277832,
      "error": null
    },
    "assert maximum_Sum([[4, 1, 4], [3, 2, 5], [6, 6, 2], [3, 5, 2], [6, 2, 7]]) == 15": {
      "result": true,
      "time": 0.04290938377380371,
      "error": null
    },
    "assert maximum_Sum([[4, 5, 5], [2, 7, 4], [4, 6, 4], [1, 5, 1], [7, 2, 6]]) == 15": {
      "result": true,
      "time": 0.03954648971557617,
      "error": null
    },
    "assert maximum_Sum([[1, 6, 8], [4, 6, 3], [14, 3, 7], [4, 6, 4], [5, 7, 3]]) == 24": {
      "result": true,
      "time": 0.04209494590759277,
      "error": null
    },
    "assert maximum_Sum([[3, 3, 5], [1, 7, 1], [10, 9, 3], [3, 3, 5], [5, 1, 5]]) == 22": {
      "result": true,
      "time": 0.049825429916381836,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 6], [1, 4, 2], [14, 7, 1], [2, 3, 5], [5, 1, 10]]) == 22": {
      "result": true,
      "time": 0.03723788261413574,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 8], [2, 2, 3], [14, 3, 5], [4, 5, 5], [10, 3, 13]]) == 26": {
      "result": true,
      "time": 0.04467892646789551,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 6], [6, 7, 2], [14, 10, 6], [3, 4, 4], [10, 5, 7]]) == 30": {
      "result": true,
      "time": 0.04678058624267578,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 2], [4, 5, 6], [11, 4, 3], [3, 1, 5], [3, 3, 10]]) == 18": {
      "result": true,
      "time": 0.04070448875427246,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 6], [4, 2, 5], [6, 10, 5], [1, 2, 3], [7, 6, 10]]) == 23": {
      "result": true,
      "time": 0.044945716857910156,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 1], [3, 1, 4], [12, 8, 3], [4, 4, 2], [5, 4, 6]]) == 23": {
      "result": true,
      "time": 0.040406227111816406,
      "error": null
    },
    "assert maximum_Sum([[1, 3, 1], [6, 6, 6], [4, 7, 5], [5, 2, 5], [9, 4, 7]]) == 20": {
      "result": true,
      "time": 0.0383455753326416,
      "error": null
    },
    "assert maximum_Sum([[3, 4, 8], [6, 2, 1], [8, 13, 5], [4, 2, 5], [5, 3, 10]]) == 26": {
      "result": true,
      "time": 0.042383432388305664,
      "error": null
    },
    "assert maximum_Sum([[5, 4, 4], [3, 7, 5], [4, 12, 5], [2, 6, 1], [8, 1, 4]]) == 21": {
      "result": true,
      "time": 0.03669881820678711,
      "error": null
    },
    "assert maximum_Sum([[3, 2, 6], [4, 2, 3], [4, 5, 1], [5, 2, 3], [4, 6, 13]]) == 23": {
      "result": true,
      "time": 0.03664994239807129,
      "error": null
    },
    "assert maximum_Sum([[4, 1, 2], [5, 4, 3], [11, 5, 5], [4, 3, 2], [1, 6, 5]]) == 21": {
      "result": true,
      "time": 0.039276123046875,
      "error": null
    },
    "assert maximum_Sum([[4, 1, 5], [1, 5, 5], [14, 3, 1], [5, 3, 1], [5, 6, 5]]) == 18": {
      "result": true,
      "time": 0.039819955825805664,
      "error": null
    },
    "assert maximum_Sum([[2, 2, 8], [3, 2, 2], [4, 7, 4], [3, 3, 3], [5, 3, 6]]) == 15": {
      "result": true,
      "time": 0.042995452880859375,
      "error": null
    },
    "assert maximum_Sum([[2, 1, 3], [5, 5, 6], [13, 9, 7], [4, 2, 3], [6, 2, 11]]) == 29": {
      "result": true,
      "time": 0.03451895713806152,
      "error": null
    },
    "assert maximum_Sum([[4, 3, 4], [1, 3, 3], [14, 13, 5], [5, 4, 3], [10, 7, 9]]) == 32": {
      "result": true,
      "time": 0.035475969314575195,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 6], [3, 2, 1], [6, 12, 4], [5, 5, 4], [4, 9, 10]]) == 23": {
      "result": true,
      "time": 0.033582210540771484,
      "error": null
    },
    "assert maximum_Sum([[3, 5, 6], [6, 1, 6], [14, 4, 5], [4, 1, 5], [7, 9, 4]]) == 23": {
      "result": true,
      "time": 0.037557125091552734,
      "error": null
    },
    "assert maximum_Sum([[1, 5, 8], [6, 3, 1], [8, 5, 5], [5, 1, 4], [9, 6, 5]]) == 20": {
      "result": true,
      "time": 0.03087782859802246,
      "error": null
    },
    "assert maximum_Sum([[3, 1, 8], [4, 7, 6], [5, 7, 1], [5, 6, 5], [10, 7, 5]]) == 22": {
      "result": true,
      "time": 0.033579349517822266,
      "error": null
    },
    "assert maximum_Sum([[1, 1, 5], [4, 5, 1], [7, 13, 4], [4, 3, 5], [3, 2, 6]]) == 24": {
      "result": true,
      "time": 0.03852033615112305,
      "error": null
    },
    "assert maximum_Sum([[4, 4, 7], [1, 7, 5], [12, 10, 7], [4, 5, 1], [9, 6, 3]]) == 29": {
      "result": true,
      "time": 0.034906864166259766,
      "error": null
    },
    "assert maximum_Sum([[2, 5, 4], [5, 5, 4], [12, 5, 2], [2, 5, 4], [1, 5, 8]]) == 19": {
      "result": true,
      "time": 0.038332462310791016,
      "error": null
    },
    "assert maximum_Sum([[3, 2, 8], [2, 2, 5], [12, 5, 4], [4, 3, 2], [11, 8, 7]]) == 26": {
      "result": true,
      "time": 0.033172607421875,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}