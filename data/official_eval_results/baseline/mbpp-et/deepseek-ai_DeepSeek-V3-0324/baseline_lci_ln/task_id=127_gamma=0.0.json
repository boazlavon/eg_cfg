{
  "code": "def multiply_int(a, b):\n    result = 0\n    is_negative = False\n    if a < 0 and b > 0:\n        is_negative = True\n        a = -a\n    elif a > 0 and b < 0:\n        is_negative = True\n        b = -b\n    elif a < 0 and b < 0:\n        a = -a\n        b = -b\n    for _ in range(b):\n        result += a\n    if is_negative:\n        result = -result\n    return result",
  "results": {
    "assert multiply_int(10,20)==200": {
      "result": true,
      "time": 0.03940558433532715,
      "error": null
    },
    "assert multiply_int(5,10)==50": {
      "result": true,
      "time": 0.03865313529968262,
      "error": null
    },
    "assert multiply_int(4,8)==32": {
      "result": true,
      "time": 0.04106855392456055,
      "error": null
    },
    "assert multiply_int(11, 25) == 275": {
      "result": true,
      "time": 0.0374140739440918,
      "error": null
    },
    "assert multiply_int(14, 19) == 266": {
      "result": true,
      "time": 0.041419029235839844,
      "error": null
    },
    "assert multiply_int(13, 18) == 234": {
      "result": true,
      "time": 0.03962349891662598,
      "error": null
    },
    "assert multiply_int(10, 21) == 210": {
      "result": true,
      "time": 0.03492259979248047,
      "error": null
    },
    "assert multiply_int(8, 19) == 152": {
      "result": true,
      "time": 0.04297304153442383,
      "error": null
    },
    "assert multiply_int(11, 15) == 165": {
      "result": true,
      "time": 0.04054856300354004,
      "error": null
    },
    "assert multiply_int(7, 16) == 112": {
      "result": true,
      "time": 0.04032278060913086,
      "error": null
    },
    "assert multiply_int(6, 21) == 126": {
      "result": true,
      "time": 0.04517388343811035,
      "error": null
    },
    "assert multiply_int(10, 20) == 200": {
      "result": true,
      "time": 0.041861534118652344,
      "error": null
    },
    "assert multiply_int(13, 20) == 260": {
      "result": true,
      "time": 0.04186296463012695,
      "error": null
    },
    "assert multiply_int(6, 16) == 96": {
      "result": true,
      "time": 0.03795480728149414,
      "error": null
    },
    "assert multiply_int(11, 21) == 231": {
      "result": true,
      "time": 0.04431462287902832,
      "error": null
    },
    "assert multiply_int(5, 18) == 90": {
      "result": true,
      "time": 0.04074859619140625,
      "error": null
    },
    "assert multiply_int(14, 21) == 294": {
      "result": true,
      "time": 0.04620790481567383,
      "error": null
    },
    "assert multiply_int(6, 23) == 138": {
      "result": true,
      "time": 0.04755353927612305,
      "error": null
    },
    "assert multiply_int(12, 21) == 252": {
      "result": true,
      "time": 0.03805732727050781,
      "error": null
    },
    "assert multiply_int(6, 17) == 102": {
      "result": true,
      "time": 0.04361891746520996,
      "error": null
    },
    "assert multiply_int(13, 24) == 312": {
      "result": true,
      "time": 0.04111742973327637,
      "error": null
    },
    "assert multiply_int(11, 20) == 220": {
      "result": true,
      "time": 0.05200695991516113,
      "error": null
    },
    "assert multiply_int(9, 24) == 216": {
      "result": true,
      "time": 0.04465341567993164,
      "error": null
    },
    "assert multiply_int(7, 17) == 119": {
      "result": true,
      "time": 0.04015088081359863,
      "error": null
    },
    "assert multiply_int(8, 22) == 176": {
      "result": true,
      "time": 0.0457005500793457,
      "error": null
    },
    "assert multiply_int(5, 15) == 75": {
      "result": true,
      "time": 0.044072628021240234,
      "error": null
    },
    "assert multiply_int(6, 22) == 132": {
      "result": true,
      "time": 0.04706716537475586,
      "error": null
    },
    "assert multiply_int(12, 15) == 180": {
      "result": true,
      "time": 0.045102834701538086,
      "error": null
    },
    "assert multiply_int(10, 25) == 250": {
      "result": true,
      "time": 0.04772377014160156,
      "error": null
    },
    "assert multiply_int(8, 16) == 128": {
      "result": true,
      "time": 0.033507585525512695,
      "error": null
    },
    "assert multiply_int(7, 6) == 42": {
      "result": true,
      "time": 0.04046034812927246,
      "error": null
    },
    "assert multiply_int(5, 14) == 70": {
      "result": true,
      "time": 0.05468916893005371,
      "error": null
    },
    "assert multiply_int(8, 6) == 48": {
      "result": true,
      "time": 0.043023109436035156,
      "error": null
    },
    "assert multiply_int(10, 12) == 120": {
      "result": true,
      "time": 0.047907114028930664,
      "error": null
    },
    "assert multiply_int(3, 8) == 24": {
      "result": true,
      "time": 0.03834939002990723,
      "error": null
    },
    "assert multiply_int(7, 11) == 77": {
      "result": true,
      "time": 0.03661322593688965,
      "error": null
    },
    "assert multiply_int(10, 13) == 130": {
      "result": true,
      "time": 0.04633474349975586,
      "error": null
    },
    "assert multiply_int(7, 5) == 35": {
      "result": true,
      "time": 0.04925370216369629,
      "error": null
    },
    "assert multiply_int(6, 10) == 60": {
      "result": true,
      "time": 0.044959068298339844,
      "error": null
    },
    "assert multiply_int(7, 9) == 63": {
      "result": true,
      "time": 0.037642478942871094,
      "error": null
    },
    "assert multiply_int(3, 7) == 21": {
      "result": true,
      "time": 0.03941988945007324,
      "error": null
    },
    "assert multiply_int(2, 8) == 16": {
      "result": true,
      "time": 0.04543566703796387,
      "error": null
    },
    "assert multiply_int(3, 12) == 36": {
      "result": true,
      "time": 0.043729305267333984,
      "error": null
    },
    "assert multiply_int(9, 13) == 117": {
      "result": true,
      "time": 0.0428166389465332,
      "error": null
    },
    "assert multiply_int(5, 6) == 30": {
      "result": true,
      "time": 0.041779279708862305,
      "error": null
    },
    "assert multiply_int(5, 7) == 35": {
      "result": true,
      "time": 0.0476686954498291,
      "error": null
    },
    "assert multiply_int(9, 11) == 99": {
      "result": true,
      "time": 0.04850602149963379,
      "error": null
    },
    "assert multiply_int(3, 6) == 18": {
      "result": true,
      "time": 0.041474342346191406,
      "error": null
    },
    "assert multiply_int(7, 8) == 56": {
      "result": true,
      "time": 0.03950953483581543,
      "error": null
    },
    "assert multiply_int(3, 11) == 33": {
      "result": true,
      "time": 0.051988840103149414,
      "error": null
    },
    "assert multiply_int(2, 13) == 26": {
      "result": true,
      "time": 0.051694631576538086,
      "error": null
    },
    "assert multiply_int(2, 12) == 24": {
      "result": true,
      "time": 0.04217267036437988,
      "error": null
    },
    "assert multiply_int(2, 11) == 22": {
      "result": true,
      "time": 0.042249202728271484,
      "error": null
    },
    "assert multiply_int(1, 11) == 11": {
      "result": true,
      "time": 0.05618119239807129,
      "error": null
    },
    "assert multiply_int(8, 10) == 80": {
      "result": true,
      "time": 0.06313204765319824,
      "error": null
    },
    "assert multiply_int(5, 9) == 45": {
      "result": true,
      "time": 0.06667613983154297,
      "error": null
    },
    "assert multiply_int(2, 14) == 28": {
      "result": true,
      "time": 0.05711007118225098,
      "error": null
    },
    "assert multiply_int(4, 10) == 40": {
      "result": true,
      "time": 0.06663918495178223,
      "error": null
    },
    "assert multiply_int(1, 9) == 9": {
      "result": true,
      "time": 0.0561518669128418,
      "error": null
    },
    "assert multiply_int(8, 8) == 64": {
      "result": true,
      "time": 0.053021907806396484,
      "error": null
    },
    "assert multiply_int(5, 5) == 25": {
      "result": true,
      "time": 0.05643820762634277,
      "error": null
    },
    "assert multiply_int(2, 4) == 8": {
      "result": true,
      "time": 0.05134725570678711,
      "error": null
    },
    "assert multiply_int(1, 8) == 8": {
      "result": true,
      "time": 0.058084726333618164,
      "error": null
    },
    "assert multiply_int(9, 5) == 45": {
      "result": true,
      "time": 0.07457542419433594,
      "error": null
    },
    "assert multiply_int(1, 12) == 12": {
      "result": true,
      "time": 0.06099963188171387,
      "error": null
    },
    "assert multiply_int(7, 13) == 91": {
      "result": true,
      "time": 0.0564877986907959,
      "error": null
    },
    "assert multiply_int(7, 4) == 28": {
      "result": true,
      "time": 0.05285072326660156,
      "error": null
    },
    "assert multiply_int(6, 8) == 48": {
      "result": true,
      "time": 0.0649709701538086,
      "error": null
    },
    "assert multiply_int(3, 4) == 12": {
      "result": true,
      "time": 0.059539079666137695,
      "error": null
    },
    "assert multiply_int(3, 9) == 27": {
      "result": true,
      "time": 0.06501126289367676,
      "error": null
    },
    "assert multiply_int(4, 4) == 16": {
      "result": true,
      "time": 0.06348848342895508,
      "error": null
    },
    "assert multiply_int(6, 13) == 78": {
      "result": true,
      "time": 0.05189085006713867,
      "error": null
    },
    "assert multiply_int(3, 13) == 39": {
      "result": true,
      "time": 0.061284542083740234,
      "error": null
    },
    "assert multiply_int(3, 10) == 30": {
      "result": true,
      "time": 0.05951404571533203,
      "error": null
    },
    "assert multiply_int(2, 5) == 10": {
      "result": true,
      "time": 0.06235790252685547,
      "error": null
    },
    "assert multiply_int(6, 4) == 24": {
      "result": true,
      "time": 0.055464982986450195,
      "error": null
    },
    "assert multiply_int(2, 3) == 6": {
      "result": true,
      "time": 0.06418371200561523,
      "error": null
    },
    "assert multiply_int(2, 6) == 12": {
      "result": true,
      "time": 0.052739858627319336,
      "error": null
    },
    "assert multiply_int(4, 5) == 20": {
      "result": true,
      "time": 0.05761837959289551,
      "error": null
    },
    "assert multiply_int(5, 13) == 65": {
      "result": true,
      "time": 0.06844115257263184,
      "error": null
    },
    "assert multiply_int(5, 3) == 15": {
      "result": true,
      "time": 0.037545204162597656,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}