{
  "code": "def neg_count(lst):\n    count = 0\n    for num in lst:\n        if num < 0:\n            count = count + 1\n    return count",
  "results": {
    "assert neg_count([-1,-2,3,-4,-5]) == 4": {
      "result": true,
      "time": 0.04662370681762695,
      "error": null
    },
    "assert neg_count([1,2,3]) == 0": {
      "result": true,
      "time": 0.05548357963562012,
      "error": null
    },
    "assert neg_count([1,2,-3,-10,20]) == 2": {
      "result": true,
      "time": 0.038125038146972656,
      "error": null
    },
    "assert neg_count([3, 1, 7, -3, -1]) == 2": {
      "result": true,
      "time": 0.05278801918029785,
      "error": null
    },
    "assert neg_count([-1, -6, 4, -1, -4]) == 4": {
      "result": true,
      "time": 0.051619768142700195,
      "error": null
    },
    "assert neg_count([0, -1, 6, -2, 0]) == 4": {
      "result": false,
      "time": 0.043697357177734375,
      "error": null
    },
    "assert neg_count([-5, -7, 8, -7, -5]) == 4": {
      "result": true,
      "time": 0.046304941177368164,
      "error": null
    },
    "assert neg_count([0, 1, 3, -7, -9]) == 3": {
      "result": false,
      "time": 0.06019306182861328,
      "error": null
    },
    "assert neg_count([-3, -2, 8, -6, -5]) == 4": {
      "result": true,
      "time": 0.06048178672790527,
      "error": null
    },
    "assert neg_count([-1, -2, 8, -2, -2]) == 4": {
      "result": true,
      "time": 0.05236005783081055,
      "error": null
    },
    "assert neg_count([3, -1, 8, -8, -1]) == 3": {
      "result": true,
      "time": 0.05135393142700195,
      "error": null
    },
    "assert neg_count([4, -7, 2, 1, 0]) == 2": {
      "result": false,
      "time": 0.05783510208129883,
      "error": null
    },
    "assert neg_count([-4, -7, 1, -1, -10]) == 4": {
      "result": true,
      "time": 0.06306147575378418,
      "error": null
    },
    "assert neg_count([4, -5, 6, 0, -7]) == 3": {
      "result": false,
      "time": 0.0655827522277832,
      "error": null
    },
    "assert neg_count([1, -3, 8, -8, -3]) == 3": {
      "result": true,
      "time": 0.05361366271972656,
      "error": null
    },
    "assert neg_count([-2, -4, 8, -8, -4]) == 4": {
      "result": true,
      "time": 0.057875871658325195,
      "error": null
    },
    "assert neg_count([0, 2, 2, -7, 0]) == 3": {
      "result": false,
      "time": 0.04748702049255371,
      "error": null
    },
    "assert neg_count([4, -6, 2, -2, -7]) == 3": {
      "result": true,
      "time": 0.05324721336364746,
      "error": null
    },
    "assert neg_count([-1, 1, 6, -9, -6]) == 3": {
      "result": true,
      "time": 0.048221588134765625,
      "error": null
    },
    "assert neg_count([3, -2, 2, -7, -9]) == 3": {
      "result": true,
      "time": 0.048632144927978516,
      "error": null
    },
    "assert neg_count([4, -6, 6, -1, -4]) == 3": {
      "result": true,
      "time": 0.056830644607543945,
      "error": null
    },
    "assert neg_count([3, -6, 1, -7, -1]) == 3": {
      "result": true,
      "time": 0.06557369232177734,
      "error": null
    },
    "assert neg_count([2, 1, 6, -4, -5]) == 2": {
      "result": true,
      "time": 0.05195260047912598,
      "error": null
    },
    "assert neg_count([4, 1, 6, 1, -1]) == 1": {
      "result": true,
      "time": 0.057672739028930664,
      "error": null
    },
    "assert neg_count([2, -2, 8, -5, -5]) == 3": {
      "result": true,
      "time": 0.058470964431762695,
      "error": null
    },
    "assert neg_count([4, -3, 2, -2, -2]) == 3": {
      "result": true,
      "time": 0.04345417022705078,
      "error": null
    },
    "assert neg_count([-1, -4, 2, 0, -7]) == 4": {
      "result": false,
      "time": 0.0495915412902832,
      "error": null
    },
    "assert neg_count([-5, -7, 4, 1, -6]) == 3": {
      "result": true,
      "time": 0.053253889083862305,
      "error": null
    },
    "assert neg_count([2, -2, 6, -7, -5]) == 3": {
      "result": true,
      "time": 0.05580902099609375,
      "error": null
    },
    "assert neg_count([-1, 3, 4, -3, -1]) == 3": {
      "result": true,
      "time": 0.04647231101989746,
      "error": null
    },
    "assert neg_count([2, 3, 7, -1, -7]) == 2": {
      "result": true,
      "time": 0.03780245780944824,
      "error": null
    },
    "assert neg_count([-3, -4, 6, 0, -7]) == 4": {
      "result": false,
      "time": 0.06013965606689453,
      "error": null
    },
    "assert neg_count([-4, 1, 8, -7, -9]) == 3": {
      "result": true,
      "time": 0.04447579383850098,
      "error": null
    },
    "assert neg_count([-2, -5, 5, -1, -10]) == 4": {
      "result": true,
      "time": 0.06232118606567383,
      "error": null
    },
    "assert neg_count([0, -3, 8, -1, 0]) == 4": {
      "result": false,
      "time": 0.047234535217285156,
      "error": null
    },
    "assert neg_count([-2, -2, 3, -8, 0]) == 4": {
      "result": false,
      "time": 0.05182933807373047,
      "error": null
    },
    "assert neg_count([3, 6, 3]) == 0": {
      "result": true,
      "time": 0.05189871788024902,
      "error": null
    },
    "assert neg_count([5, 6, 8]) == 0": {
      "result": true,
      "time": 0.059377431869506836,
      "error": null
    },
    "assert neg_count([1, 2, 4]) == 0": {
      "result": true,
      "time": 0.049208879470825195,
      "error": null
    },
    "assert neg_count([1, 4, 6]) == 0": {
      "result": true,
      "time": 0.054312705993652344,
      "error": null
    },
    "assert neg_count([4, 5, 2]) == 0": {
      "result": true,
      "time": 0.05443739891052246,
      "error": null
    },
    "assert neg_count([4, 4, 6]) == 0": {
      "result": true,
      "time": 0.05299019813537598,
      "error": null
    },
    "assert neg_count([1, 7, 4]) == 0": {
      "result": true,
      "time": 0.04084467887878418,
      "error": null
    },
    "assert neg_count([2, 5, 4]) == 0": {
      "result": true,
      "time": 0.048056602478027344,
      "error": null
    },
    "assert neg_count([3, 4, 3]) == 0": {
      "result": true,
      "time": 0.03745412826538086,
      "error": null
    },
    "assert neg_count([6, 7, 2]) == 0": {
      "result": true,
      "time": 0.039757490158081055,
      "error": null
    },
    "assert neg_count([5, 7, 5]) == 0": {
      "result": true,
      "time": 0.03864455223083496,
      "error": null
    },
    "assert neg_count([2, 3, 5]) == 0": {
      "result": true,
      "time": 0.04335379600524902,
      "error": null
    },
    "assert neg_count([5, 1, 5]) == 0": {
      "result": true,
      "time": 0.040653228759765625,
      "error": null
    },
    "assert neg_count([1, 7, 8]) == 0": {
      "result": true,
      "time": 0.038268327713012695,
      "error": null
    },
    "assert neg_count([4, 2, 4]) == 0": {
      "result": true,
      "time": 0.04798293113708496,
      "error": null
    },
    "assert neg_count([2, 7, 7]) == 0": {
      "result": true,
      "time": 0.04367470741271973,
      "error": null
    },
    "assert neg_count([6, 2, 2]) == 0": {
      "result": true,
      "time": 0.04492473602294922,
      "error": null
    },
    "assert neg_count([1, 7, 1]) == 0": {
      "result": true,
      "time": 0.048125505447387695,
      "error": null
    },
    "assert neg_count([6, 7, 1]) == 0": {
      "result": true,
      "time": 0.043599605560302734,
      "error": null
    },
    "assert neg_count([6, 1, 6]) == 0": {
      "result": true,
      "time": 0.053972721099853516,
      "error": null
    },
    "assert neg_count([4, 3, 8]) == 0": {
      "result": true,
      "time": 0.047080278396606445,
      "error": null
    },
    "assert neg_count([2, 6, 2]) == 0": {
      "result": true,
      "time": 0.04536104202270508,
      "error": null
    },
    "assert neg_count([6, 6, 7]) == 0": {
      "result": true,
      "time": 0.04324674606323242,
      "error": null
    },
    "assert neg_count([5, 4, 5]) == 0": {
      "result": true,
      "time": 0.0363311767578125,
      "error": null
    },
    "assert neg_count([6, 2, 5]) == 0": {
      "result": true,
      "time": 0.04166722297668457,
      "error": null
    },
    "assert neg_count([5, 3, 1]) == 0": {
      "result": true,
      "time": 0.04416227340698242,
      "error": null
    },
    "assert neg_count([5, 5, 5]) == 0": {
      "result": true,
      "time": 0.04870891571044922,
      "error": null
    },
    "assert neg_count([1, 1, 2]) == 0": {
      "result": true,
      "time": 0.04251694679260254,
      "error": null
    },
    "assert neg_count([5, 4, 2]) == 0": {
      "result": true,
      "time": 0.05230975151062012,
      "error": null
    },
    "assert neg_count([4, 6, 5]) == 0": {
      "result": true,
      "time": 0.040616512298583984,
      "error": null
    },
    "assert neg_count([1, 6, 2, -11, 25]) == 1": {
      "result": true,
      "time": 0.048981428146362305,
      "error": null
    },
    "assert neg_count([2, 6, -7, -6, 22]) == 2": {
      "result": true,
      "time": 0.04137873649597168,
      "error": null
    },
    "assert neg_count([2, 5, -5, -14, 20]) == 2": {
      "result": true,
      "time": 0.04869413375854492,
      "error": null
    },
    "assert neg_count([3, 1, -2, -12, 21]) == 2": {
      "result": true,
      "time": 0.04745292663574219,
      "error": null
    },
    "assert neg_count([1, 5, -3, -6, 21]) == 2": {
      "result": true,
      "time": 0.043746232986450195,
      "error": null
    },
    "assert neg_count([1, 4, -1, -13, 16]) == 2": {
      "result": true,
      "time": 0.040476083755493164,
      "error": null
    },
    "assert neg_count([4, 5, -4, -10, 21]) == 2": {
      "result": true,
      "time": 0.044920921325683594,
      "error": null
    },
    "assert neg_count([6, 2, -4, -12, 21]) == 2": {
      "result": true,
      "time": 0.04132795333862305,
      "error": null
    },
    "assert neg_count([1, 1, -6, -14, 18]) == 2": {
      "result": true,
      "time": 0.04581046104431152,
      "error": null
    },
    "assert neg_count([4, 2, -8, -12, 21]) == 2": {
      "result": true,
      "time": 0.041375160217285156,
      "error": null
    },
    "assert neg_count([1, 2, 2, -9, 22]) == 1": {
      "result": true,
      "time": 0.04507875442504883,
      "error": null
    },
    "assert neg_count([6, 4, -4, -11, 19]) == 2": {
      "result": true,
      "time": 0.03883767127990723,
      "error": null
    },
    "assert neg_count([6, 4, 0, -5, 22]) == 2": {
      "result": false,
      "time": 0.042966365814208984,
      "error": null
    },
    "assert neg_count([6, 7, -5, -15, 24]) == 2": {
      "result": true,
      "time": 0.04462289810180664,
      "error": null
    },
    "assert neg_count([1, 4, -8, -11, 23]) == 2": {
      "result": true,
      "time": 0.042081594467163086,
      "error": null
    },
    "assert neg_count([3, 2, -1, -10, 21]) == 2": {
      "result": true,
      "time": 0.0407562255859375,
      "error": null
    },
    "assert neg_count([6, 5, -4, -10, 16]) == 2": {
      "result": true,
      "time": 0.04285025596618652,
      "error": null
    },
    "assert neg_count([6, 1, 1, -10, 25]) == 1": {
      "result": true,
      "time": 0.0457911491394043,
      "error": null
    },
    "assert neg_count([4, 6, -5, -10, 23]) == 2": {
      "result": true,
      "time": 0.04781818389892578,
      "error": null
    },
    "assert neg_count([4, 6, -5, -10, 21]) == 2": {
      "result": true,
      "time": 0.04469561576843262,
      "error": null
    },
    "assert neg_count([1, 4, -4, -13, 16]) == 2": {
      "result": true,
      "time": 0.042493581771850586,
      "error": null
    },
    "assert neg_count([2, 4, -6, -10, 15]) == 2": {
      "result": true,
      "time": 0.044347524642944336,
      "error": null
    },
    "assert neg_count([3, 5, -1, -12, 20]) == 2": {
      "result": true,
      "time": 0.03778266906738281,
      "error": null
    },
    "assert neg_count([6, 6, -8, -8, 22]) == 2": {
      "result": true,
      "time": 0.043257713317871094,
      "error": null
    },
    "assert neg_count([4, 5, -5, -15, 21]) == 2": {
      "result": true,
      "time": 0.04175996780395508,
      "error": null
    },
    "assert neg_count([1, 2, 1, -5, 22]) == 1": {
      "result": true,
      "time": 0.04233574867248535,
      "error": null
    },
    "assert neg_count([2, 2, -2, -14, 21]) == 2": {
      "result": true,
      "time": 0.0453190803527832,
      "error": null
    },
    "assert neg_count([1, 7, -4, -6, 24]) == 2": {
      "result": true,
      "time": 0.03623795509338379,
      "error": null
    },
    "assert neg_count([5, 6, -4, -8, 24]) == 2": {
      "result": true,
      "time": 0.044714927673339844,
      "error": null
    },
    "assert neg_count([1, 7, -7, -7, 21]) == 2": {
      "result": true,
      "time": 0.04434919357299805,
      "error": null
    },
    "assert neg_count([2, 1, 2, -10, 21]) == 1": {
      "result": true,
      "time": 0.0482792854309082,
      "error": null
    },
    "assert neg_count([3, 6, -6, -7, 18]) == 2": {
      "result": true,
      "time": 0.05318474769592285,
      "error": null
    },
    "assert neg_count([6, 1, 0, -14, 21]) == 2": {
      "result": false,
      "time": 0.048680782318115234,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.8888888888888888,
  "general_error": "",
  "has_testcase_error": false
}