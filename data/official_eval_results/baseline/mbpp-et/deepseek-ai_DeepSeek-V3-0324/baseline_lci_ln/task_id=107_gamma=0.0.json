{
  "code": "def count_Hexadecimal(start, end):\n    count = 0\n    for num in range(start, end + 1):\n        hex_str = hex(num)\n        is_hex = True\n        for char in hex_str[2:]:\n            if char not in 'abcdef':\n                is_hex = False\n                break\n        if is_hex:\n            count += 1\n    return count",
  "results": {
    "assert count_Hexadecimal(10,15) == 6": {
      "result": true,
      "time": 0.03791928291320801,
      "error": null
    },
    "assert count_Hexadecimal(2,4) == 0": {
      "result": true,
      "time": 0.03853106498718262,
      "error": null
    },
    "assert count_Hexadecimal(15,16) == 1": {
      "result": true,
      "time": 0.04661726951599121,
      "error": null
    },
    "assert count_Hexadecimal(7, 19) == 6": {
      "result": true,
      "time": 0.04068565368652344,
      "error": null
    },
    "assert count_Hexadecimal(10, 18) == 6": {
      "result": true,
      "time": 0.042385101318359375,
      "error": null
    },
    "assert count_Hexadecimal(5, 15) == 6": {
      "result": true,
      "time": 0.03816533088684082,
      "error": null
    },
    "assert count_Hexadecimal(6, 11) == 2": {
      "result": true,
      "time": 0.03675556182861328,
      "error": null
    },
    "assert count_Hexadecimal(14, 16) == 2": {
      "result": true,
      "time": 0.040853261947631836,
      "error": null
    },
    "assert count_Hexadecimal(15, 12) == 0": {
      "result": true,
      "time": 0.041651010513305664,
      "error": null
    },
    "assert count_Hexadecimal(6, 18) == 6": {
      "result": true,
      "time": 0.047585248947143555,
      "error": null
    },
    "assert count_Hexadecimal(12, 13) == 2": {
      "result": true,
      "time": 0.03837466239929199,
      "error": null
    },
    "assert count_Hexadecimal(8, 15) == 6": {
      "result": true,
      "time": 0.04210305213928223,
      "error": null
    },
    "assert count_Hexadecimal(14, 10) == 0": {
      "result": true,
      "time": 0.04505109786987305,
      "error": null
    },
    "assert count_Hexadecimal(8, 14) == 5": {
      "result": true,
      "time": 0.039078474044799805,
      "error": null
    },
    "assert count_Hexadecimal(7, 18) == 6": {
      "result": true,
      "time": 0.042844295501708984,
      "error": null
    },
    "assert count_Hexadecimal(5, 16) == 6": {
      "result": true,
      "time": 0.035074710845947266,
      "error": null
    },
    "assert count_Hexadecimal(10, 19) == 6": {
      "result": true,
      "time": 0.03739643096923828,
      "error": null
    },
    "assert count_Hexadecimal(10, 12) == 3": {
      "result": true,
      "time": 0.04170346260070801,
      "error": null
    },
    "assert count_Hexadecimal(11, 13) == 3": {
      "result": true,
      "time": 0.04125261306762695,
      "error": null
    },
    "assert count_Hexadecimal(13, 11) == 0": {
      "result": true,
      "time": 0.04331064224243164,
      "error": null
    },
    "assert count_Hexadecimal(8, 20) == 6": {
      "result": true,
      "time": 0.03743624687194824,
      "error": null
    },
    "assert count_Hexadecimal(11, 11) == 1": {
      "result": true,
      "time": 0.042885780334472656,
      "error": null
    },
    "assert count_Hexadecimal(7, 16) == 6": {
      "result": true,
      "time": 0.041745901107788086,
      "error": null
    },
    "assert count_Hexadecimal(11, 17) == 5": {
      "result": true,
      "time": 0.035539865493774414,
      "error": null
    },
    "assert count_Hexadecimal(5, 14) == 5": {
      "result": true,
      "time": 0.03902721405029297,
      "error": null
    },
    "assert count_Hexadecimal(12, 19) == 4": {
      "result": true,
      "time": 0.04537653923034668,
      "error": null
    },
    "assert count_Hexadecimal(11, 20) == 5": {
      "result": true,
      "time": 0.04171276092529297,
      "error": null
    },
    "assert count_Hexadecimal(12, 14) == 3": {
      "result": true,
      "time": 0.04401588439941406,
      "error": null
    },
    "assert count_Hexadecimal(11, 19) == 5": {
      "result": true,
      "time": 0.03973960876464844,
      "error": null
    },
    "assert count_Hexadecimal(15, 10) == 0": {
      "result": true,
      "time": 0.0401918888092041,
      "error": null
    },
    "assert count_Hexadecimal(14, 19) == 2": {
      "result": true,
      "time": 0.03802227973937988,
      "error": null
    },
    "assert count_Hexadecimal(6, 3) == 0": {
      "result": true,
      "time": 0.03949141502380371,
      "error": null
    },
    "assert count_Hexadecimal(5, 3) == 0": {
      "result": true,
      "time": 0.0436556339263916,
      "error": null
    },
    "assert count_Hexadecimal(2, 2) == 0": {
      "result": true,
      "time": 0.042736053466796875,
      "error": null
    },
    "assert count_Hexadecimal(5, 1) == 0": {
      "result": true,
      "time": 0.041106224060058594,
      "error": null
    },
    "assert count_Hexadecimal(2, 1) == 0": {
      "result": true,
      "time": 0.04763436317443848,
      "error": null
    },
    "assert count_Hexadecimal(5, 7) == 0": {
      "result": true,
      "time": 0.03852081298828125,
      "error": null
    },
    "assert count_Hexadecimal(4, 2) == 0": {
      "result": true,
      "time": 0.048764944076538086,
      "error": null
    },
    "assert count_Hexadecimal(4, 5) == 0": {
      "result": true,
      "time": 0.04347372055053711,
      "error": null
    },
    "assert count_Hexadecimal(5, 4) == 0": {
      "result": true,
      "time": 0.03726625442504883,
      "error": null
    },
    "assert count_Hexadecimal(1, 2) == 0": {
      "result": true,
      "time": 0.04421186447143555,
      "error": null
    },
    "assert count_Hexadecimal(1, 7) == 0": {
      "result": true,
      "time": 0.03542208671569824,
      "error": null
    },
    "assert count_Hexadecimal(3, 6) == 0": {
      "result": true,
      "time": 0.053987979888916016,
      "error": null
    },
    "assert count_Hexadecimal(5, 8) == 0": {
      "result": true,
      "time": 0.051831722259521484,
      "error": null
    },
    "assert count_Hexadecimal(1, 4) == 0": {
      "result": true,
      "time": 0.04645943641662598,
      "error": null
    },
    "assert count_Hexadecimal(4, 6) == 0": {
      "result": true,
      "time": 0.03694486618041992,
      "error": null
    },
    "assert count_Hexadecimal(1, 6) == 0": {
      "result": true,
      "time": 0.04822707176208496,
      "error": null
    },
    "assert count_Hexadecimal(4, 3) == 0": {
      "result": true,
      "time": 0.03765153884887695,
      "error": null
    },
    "assert count_Hexadecimal(3, 7) == 0": {
      "result": true,
      "time": 0.03609967231750488,
      "error": null
    },
    "assert count_Hexadecimal(1, 1) == 0": {
      "result": true,
      "time": 0.032357215881347656,
      "error": null
    },
    "assert count_Hexadecimal(3, 1) == 0": {
      "result": true,
      "time": 0.040628671646118164,
      "error": null
    },
    "assert count_Hexadecimal(2, 5) == 0": {
      "result": true,
      "time": 0.03868269920349121,
      "error": null
    },
    "assert count_Hexadecimal(7, 2) == 0": {
      "result": true,
      "time": 0.04163932800292969,
      "error": null
    },
    "assert count_Hexadecimal(3, 4) == 0": {
      "result": true,
      "time": 0.036385536193847656,
      "error": null
    },
    "assert count_Hexadecimal(4, 7) == 0": {
      "result": true,
      "time": 0.036731719970703125,
      "error": null
    },
    "assert count_Hexadecimal(2, 3) == 0": {
      "result": true,
      "time": 0.038049936294555664,
      "error": null
    },
    "assert count_Hexadecimal(7, 9) == 0": {
      "result": true,
      "time": 0.03500938415527344,
      "error": null
    },
    "assert count_Hexadecimal(19, 16) == 0": {
      "result": true,
      "time": 0.03384232521057129,
      "error": null
    },
    "assert count_Hexadecimal(12, 20) == 4": {
      "result": true,
      "time": 0.032036781311035156,
      "error": null
    },
    "assert count_Hexadecimal(17, 15) == 0": {
      "result": true,
      "time": 0.034009456634521484,
      "error": null
    },
    "assert count_Hexadecimal(20, 19) == 0": {
      "result": true,
      "time": 0.033048391342163086,
      "error": null
    },
    "assert count_Hexadecimal(10, 15) == 6": {
      "result": true,
      "time": 0.03517508506774902,
      "error": null
    },
    "assert count_Hexadecimal(16, 20) == 0": {
      "result": true,
      "time": 0.0321347713470459,
      "error": null
    },
    "assert count_Hexadecimal(14, 20) == 2": {
      "result": true,
      "time": 0.03567218780517578,
      "error": null
    },
    "assert count_Hexadecimal(13, 14) == 2": {
      "result": true,
      "time": 0.0406191349029541,
      "error": null
    },
    "assert count_Hexadecimal(10, 11) == 2": {
      "result": true,
      "time": 0.0319974422454834,
      "error": null
    },
    "assert count_Hexadecimal(15, 13) == 0": {
      "result": true,
      "time": 0.040238380432128906,
      "error": null
    },
    "assert count_Hexadecimal(18, 21) == 0": {
      "result": true,
      "time": 0.0364995002746582,
      "error": null
    },
    "assert count_Hexadecimal(20, 21) == 0": {
      "result": true,
      "time": 0.03947091102600098,
      "error": null
    },
    "assert count_Hexadecimal(16, 21) == 0": {
      "result": true,
      "time": 0.03786611557006836,
      "error": null
    },
    "assert count_Hexadecimal(13, 20) == 3": {
      "result": true,
      "time": 0.04168581962585449,
      "error": null
    },
    "assert count_Hexadecimal(10, 17) == 6": {
      "result": true,
      "time": 0.03320574760437012,
      "error": null
    },
    "assert count_Hexadecimal(16, 19) == 0": {
      "result": true,
      "time": 0.040364742279052734,
      "error": null
    },
    "assert count_Hexadecimal(13, 13) == 1": {
      "result": true,
      "time": 0.042058467864990234,
      "error": null
    },
    "assert count_Hexadecimal(17, 13) == 0": {
      "result": true,
      "time": 0.0351414680480957,
      "error": null
    },
    "assert count_Hexadecimal(19, 15) == 0": {
      "result": true,
      "time": 0.03341984748840332,
      "error": null
    },
    "assert count_Hexadecimal(13, 21) == 3": {
      "result": true,
      "time": 0.035094499588012695,
      "error": null
    },
    "assert count_Hexadecimal(11, 18) == 5": {
      "result": true,
      "time": 0.033838510513305664,
      "error": null
    },
    "assert count_Hexadecimal(10, 14) == 5": {
      "result": true,
      "time": 0.03635406494140625,
      "error": null
    },
    "assert count_Hexadecimal(15, 20) == 1": {
      "result": true,
      "time": 0.031000375747680664,
      "error": null
    },
    "assert count_Hexadecimal(10, 21) == 6": {
      "result": true,
      "time": 0.03495454788208008,
      "error": null
    },
    "assert count_Hexadecimal(16, 13) == 0": {
      "result": true,
      "time": 0.035277605056762695,
      "error": null
    },
    "assert count_Hexadecimal(17, 16) == 0": {
      "result": true,
      "time": 0.03426337242126465,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}