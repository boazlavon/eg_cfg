{
  "code": "def substract_elements(tuple1, tuple2):\n    result = []\n    for i in range(len(tuple1)):\n        difference = tuple1[i] - tuple2[i]\n        result.append(difference)\n    return tuple(result)",
  "results": {
    "assert substract_elements((10, 4, 5), (2, 5, 18)) == (8, -1, -13)": {
      "result": true,
      "time": 0.039119720458984375,
      "error": null
    },
    "assert substract_elements((11, 2, 3), (24, 45 ,16)) == (-13, -43, -13)": {
      "result": true,
      "time": 0.0389256477355957,
      "error": null
    },
    "assert substract_elements((7, 18, 9), (10, 11, 12)) == (-3, 7, -3)": {
      "result": true,
      "time": 0.04516005516052246,
      "error": null
    },
    "assert substract_elements((12, 5, 8), (1, 1, 13)) == (11, 4, -5)": {
      "result": true,
      "time": 0.04109334945678711,
      "error": null
    },
    "assert substract_elements((10, 3, 5), (2, 10, 21)) == (8, -7, -16)": {
      "result": true,
      "time": 0.039772987365722656,
      "error": null
    },
    "assert substract_elements((9, 2, 1), (2, 8, 19)) == (7, -6, -18)": {
      "result": true,
      "time": 0.03570103645324707,
      "error": null
    },
    "assert substract_elements((15, 4, 4), (1, 9, 23)) == (14, -5, -19)": {
      "result": true,
      "time": 0.03778696060180664,
      "error": null
    },
    "assert substract_elements((7, 5, 10), (3, 1, 20)) == (4, 4, -10)": {
      "result": true,
      "time": 0.03868532180786133,
      "error": null
    },
    "assert substract_elements((13, 1, 8), (1, 1, 23)) == (12, 0, -15)": {
      "result": true,
      "time": 0.05040788650512695,
      "error": null
    },
    "assert substract_elements((8, 4, 2), (7, 1, 21)) == (1, 3, -19)": {
      "result": true,
      "time": 0.04412269592285156,
      "error": null
    },
    "assert substract_elements((12, 3, 2), (5, 3, 22)) == (7, 0, -20)": {
      "result": true,
      "time": 0.05902433395385742,
      "error": null
    },
    "assert substract_elements((15, 8, 4), (5, 2, 20)) == (10, 6, -16)": {
      "result": true,
      "time": 0.0384519100189209,
      "error": null
    },
    "assert substract_elements((6, 3, 6), (4, 5, 16)) == (2, -2, -10)": {
      "result": true,
      "time": 0.03546500205993652,
      "error": null
    },
    "assert substract_elements((8, 9, 9), (7, 5, 16)) == (1, 4, -7)": {
      "result": true,
      "time": 0.03517913818359375,
      "error": null
    },
    "assert substract_elements((13, 6, 10), (3, 6, 23)) == (10, 0, -13)": {
      "result": true,
      "time": 0.046120643615722656,
      "error": null
    },
    "assert substract_elements((11, 7, 10), (1, 4, 23)) == (10, 3, -13)": {
      "result": true,
      "time": 0.04045867919921875,
      "error": null
    },
    "assert substract_elements((10, 8, 8), (4, 4, 16)) == (6, 4, -8)": {
      "result": true,
      "time": 0.044606685638427734,
      "error": null
    },
    "assert substract_elements((8, 3, 2), (1, 2, 14)) == (7, 1, -12)": {
      "result": true,
      "time": 0.03585481643676758,
      "error": null
    },
    "assert substract_elements((10, 4, 1), (1, 1, 23)) == (9, 3, -22)": {
      "result": true,
      "time": 0.03398728370666504,
      "error": null
    },
    "assert substract_elements((9, 7, 1), (2, 7, 19)) == (7, 0, -18)": {
      "result": true,
      "time": 0.041405439376831055,
      "error": null
    },
    "assert substract_elements((10, 6, 3), (4, 2, 19)) == (6, 4, -16)": {
      "result": true,
      "time": 0.03806805610656738,
      "error": null
    },
    "assert substract_elements((10, 4, 5), (6, 4, 18)) == (4, 0, -13)": {
      "result": true,
      "time": 0.038694143295288086,
      "error": null
    },
    "assert substract_elements((6, 8, 1), (3, 1, 16)) == (3, 7, -15)": {
      "result": true,
      "time": 0.041246652603149414,
      "error": null
    },
    "assert substract_elements((8, 1, 1), (3, 10, 16)) == (5, -9, -15)": {
      "result": true,
      "time": 0.04057455062866211,
      "error": null
    },
    "assert substract_elements((11, 7, 1), (2, 3, 13)) == (9, 4, -12)": {
      "result": true,
      "time": 0.03969550132751465,
      "error": null
    },
    "assert substract_elements((5, 8, 5), (2, 7, 22)) == (3, 1, -17)": {
      "result": true,
      "time": 0.04113316535949707,
      "error": null
    },
    "assert substract_elements((14, 4, 2), (6, 4, 18)) == (8, 0, -16)": {
      "result": true,
      "time": 0.03753256797790527,
      "error": null
    },
    "assert substract_elements((10, 2, 9), (6, 5, 15)) == (4, -3, -6)": {
      "result": true,
      "time": 0.03743791580200195,
      "error": null
    },
    "assert substract_elements((5, 5, 3), (1, 6, 16)) == (4, -1, -13)": {
      "result": true,
      "time": 0.033731698989868164,
      "error": null
    },
    "assert substract_elements((5, 3, 2), (6, 4, 13)) == (-1, -1, -11)": {
      "result": true,
      "time": 0.03395652770996094,
      "error": null
    },
    "assert substract_elements((6, 9, 1), (7, 3, 19)) == (-1, 6, -18)": {
      "result": true,
      "time": 0.04042363166809082,
      "error": null
    },
    "assert substract_elements((11, 1, 5), (5, 6, 13)) == (6, -5, -8)": {
      "result": true,
      "time": 0.03471875190734863,
      "error": null
    },
    "assert substract_elements((7, 3, 4), (3, 3, 22)) == (4, 0, -18)": {
      "result": true,
      "time": 0.03569340705871582,
      "error": null
    },
    "assert substract_elements((11, 2, 1), (1, 9, 23)) == (10, -7, -22)": {
      "result": true,
      "time": 0.039792537689208984,
      "error": null
    },
    "assert substract_elements((8, 7, 7), (7, 6, 22)) == (1, 1, -15)": {
      "result": true,
      "time": 0.03972911834716797,
      "error": null
    },
    "assert substract_elements((8, 8, 3), (5, 1, 21)) == (3, 7, -18)": {
      "result": true,
      "time": 0.03912067413330078,
      "error": null
    },
    "assert substract_elements((13, 5, 1), (29, 40, 20)) == (-16, -35, -19)": {
      "result": true,
      "time": 0.03476572036743164,
      "error": null
    },
    "assert substract_elements((11, 4, 5), (21, 44, 21)) == (-10, -40, -16)": {
      "result": true,
      "time": 0.035925865173339844,
      "error": null
    },
    "assert substract_elements((7, 3, 6), (21, 41, 19)) == (-14, -38, -13)": {
      "result": true,
      "time": 0.03775453567504883,
      "error": null
    },
    "assert substract_elements((9, 1, 7), (23, 42, 17)) == (-14, -41, -10)": {
      "result": true,
      "time": 0.0351870059967041,
      "error": null
    },
    "assert substract_elements((15, 5, 7), (20, 50, 17)) == (-5, -45, -10)": {
      "result": true,
      "time": 0.04254412651062012,
      "error": null
    },
    "assert substract_elements((8, 2, 8), (27, 50, 18)) == (-19, -48, -10)": {
      "result": true,
      "time": 0.040276288986206055,
      "error": null
    },
    "assert substract_elements((16, 2, 2), (23, 43, 16)) == (-7, -41, -14)": {
      "result": true,
      "time": 0.03944730758666992,
      "error": null
    },
    "assert substract_elements((13, 5, 1), (21, 41, 19)) == (-8, -36, -18)": {
      "result": true,
      "time": 0.03789258003234863,
      "error": null
    },
    "assert substract_elements((15, 1, 7), (19, 47, 16)) == (-4, -46, -9)": {
      "result": true,
      "time": 0.037047386169433594,
      "error": null
    },
    "assert substract_elements((7, 6, 4), (24, 42, 15)) == (-17, -36, -11)": {
      "result": true,
      "time": 0.04329323768615723,
      "error": null
    },
    "assert substract_elements((14, 3, 8), (20, 48, 14)) == (-6, -45, -6)": {
      "result": true,
      "time": 0.03636431694030762,
      "error": null
    },
    "assert substract_elements((9, 5, 4), (19, 45, 21)) == (-10, -40, -17)": {
      "result": true,
      "time": 0.03466320037841797,
      "error": null
    },
    "assert substract_elements((7, 2, 2), (20, 42, 11)) == (-13, -40, -9)": {
      "result": true,
      "time": 0.037808895111083984,
      "error": null
    },
    "assert substract_elements((13, 5, 3), (24, 45, 20)) == (-11, -40, -17)": {
      "result": true,
      "time": 0.034142494201660156,
      "error": null
    },
    "assert substract_elements((8, 4, 2), (27, 45, 11)) == (-19, -41, -9)": {
      "result": true,
      "time": 0.036588430404663086,
      "error": null
    },
    "assert substract_elements((11, 6, 2), (22, 49, 18)) == (-11, -43, -16)": {
      "result": true,
      "time": 0.03279733657836914,
      "error": null
    },
    "assert substract_elements((9, 6, 3), (26, 42, 14)) == (-17, -36, -11)": {
      "result": true,
      "time": 0.03716111183166504,
      "error": null
    },
    "assert substract_elements((12, 5, 7), (20, 48, 14)) == (-8, -43, -7)": {
      "result": true,
      "time": 0.03643989562988281,
      "error": null
    },
    "assert substract_elements((16, 3, 8), (20, 43, 14)) == (-4, -40, -6)": {
      "result": true,
      "time": 0.038028717041015625,
      "error": null
    },
    "assert substract_elements((10, 7, 5), (19, 45, 15)) == (-9, -38, -10)": {
      "result": true,
      "time": 0.0315854549407959,
      "error": null
    },
    "assert substract_elements((13, 2, 7), (20, 48, 20)) == (-7, -46, -13)": {
      "result": true,
      "time": 0.03437185287475586,
      "error": null
    },
    "assert substract_elements((6, 5, 5), (26, 43, 14)) == (-20, -38, -9)": {
      "result": true,
      "time": 0.040544986724853516,
      "error": null
    },
    "assert substract_elements((9, 4, 4), (28, 40, 15)) == (-19, -36, -11)": {
      "result": true,
      "time": 0.03763318061828613,
      "error": null
    },
    "assert substract_elements((11, 7, 2), (29, 50, 18)) == (-18, -43, -16)": {
      "result": true,
      "time": 0.04030132293701172,
      "error": null
    },
    "assert substract_elements((6, 1, 5), (27, 45, 20)) == (-21, -44, -15)": {
      "result": true,
      "time": 0.03650617599487305,
      "error": null
    },
    "assert substract_elements((15, 2, 3), (25, 46, 17)) == (-10, -44, -14)": {
      "result": true,
      "time": 0.03664231300354004,
      "error": null
    },
    "assert substract_elements((8, 7, 6), (20, 49, 12)) == (-12, -42, -6)": {
      "result": true,
      "time": 0.03644680976867676,
      "error": null
    },
    "assert substract_elements((9, 6, 4), (25, 45, 15)) == (-16, -39, -11)": {
      "result": true,
      "time": 0.03750801086425781,
      "error": null
    },
    "assert substract_elements((13, 1, 3), (25, 40, 20)) == (-12, -39, -17)": {
      "result": true,
      "time": 0.03245997428894043,
      "error": null
    },
    "assert substract_elements((16, 7, 1), (21, 46, 12)) == (-5, -39, -11)": {
      "result": true,
      "time": 0.037259578704833984,
      "error": null
    },
    "assert substract_elements((15, 5, 5), (29, 47, 16)) == (-14, -42, -11)": {
      "result": true,
      "time": 0.030874967575073242,
      "error": null
    },
    "assert substract_elements((14, 5, 8), (21, 45, 21)) == (-7, -40, -13)": {
      "result": true,
      "time": 0.039423465728759766,
      "error": null
    },
    "assert substract_elements((15, 1, 4), (29, 46, 13)) == (-14, -45, -9)": {
      "result": true,
      "time": 0.03247714042663574,
      "error": null
    },
    "assert substract_elements((8, 21, 12), (11, 13, 12)) == (-3, 8, 0)": {
      "result": true,
      "time": 0.03587985038757324,
      "error": null
    },
    "assert substract_elements((2, 16, 5), (11, 11, 16)) == (-9, 5, -11)": {
      "result": true,
      "time": 0.033335208892822266,
      "error": null
    },
    "assert substract_elements((6, 15, 12), (9, 8, 13)) == (-3, 7, -1)": {
      "result": true,
      "time": 0.03197598457336426,
      "error": null
    },
    "assert substract_elements((6, 21, 4), (15, 12, 7)) == (-9, 9, -3)": {
      "result": true,
      "time": 0.040819406509399414,
      "error": null
    },
    "assert substract_elements((6, 20, 12), (12, 15, 11)) == (-6, 5, 1)": {
      "result": true,
      "time": 0.031742095947265625,
      "error": null
    },
    "assert substract_elements((7, 17, 4), (11, 12, 15)) == (-4, 5, -11)": {
      "result": true,
      "time": 0.040329933166503906,
      "error": null
    },
    "assert substract_elements((3, 16, 12), (15, 14, 13)) == (-12, 2, -1)": {
      "result": true,
      "time": 0.03363680839538574,
      "error": null
    },
    "assert substract_elements((5, 13, 4), (7, 7, 12)) == (-2, 6, -8)": {
      "result": true,
      "time": 0.0358738899230957,
      "error": null
    },
    "assert substract_elements((3, 14, 4), (10, 12, 9)) == (-7, 2, -5)": {
      "result": true,
      "time": 0.03729128837585449,
      "error": null
    },
    "assert substract_elements((6, 15, 12), (14, 14, 12)) == (-8, 1, 0)": {
      "result": true,
      "time": 0.03653526306152344,
      "error": null
    },
    "assert substract_elements((11, 20, 6), (15, 6, 11)) == (-4, 14, -5)": {
      "result": true,
      "time": 0.03720498085021973,
      "error": null
    },
    "assert substract_elements((2, 14, 11), (9, 10, 13)) == (-7, 4, -2)": {
      "result": true,
      "time": 0.030721664428710938,
      "error": null
    },
    "assert substract_elements((9, 23, 5), (10, 12, 14)) == (-1, 11, -9)": {
      "result": true,
      "time": 0.03468966484069824,
      "error": null
    },
    "assert substract_elements((6, 19, 10), (15, 6, 8)) == (-9, 13, 2)": {
      "result": true,
      "time": 0.03817605972290039,
      "error": null
    },
    "assert substract_elements((2, 20, 9), (5, 6, 8)) == (-3, 14, 1)": {
      "result": true,
      "time": 0.03584170341491699,
      "error": null
    },
    "assert substract_elements((11, 23, 11), (14, 7, 7)) == (-3, 16, 4)": {
      "result": true,
      "time": 0.03490567207336426,
      "error": null
    },
    "assert substract_elements((9, 13, 12), (11, 11, 14)) == (-2, 2, -2)": {
      "result": true,
      "time": 0.0331723690032959,
      "error": null
    },
    "assert substract_elements((2, 22, 14), (13, 16, 8)) == (-11, 6, 6)": {
      "result": true,
      "time": 0.03509044647216797,
      "error": null
    },
    "assert substract_elements((2, 17, 11), (7, 10, 10)) == (-5, 7, 1)": {
      "result": true,
      "time": 0.03343057632446289,
      "error": null
    },
    "assert substract_elements((9, 16, 4), (6, 12, 9)) == (3, 4, -5)": {
      "result": true,
      "time": 0.03288888931274414,
      "error": null
    },
    "assert substract_elements((8, 22, 12), (6, 15, 17)) == (2, 7, -5)": {
      "result": true,
      "time": 0.032761335372924805,
      "error": null
    },
    "assert substract_elements((7, 17, 13), (9, 9, 8)) == (-2, 8, 5)": {
      "result": true,
      "time": 0.040503740310668945,
      "error": null
    },
    "assert substract_elements((12, 18, 7), (5, 12, 11)) == (7, 6, -4)": {
      "result": true,
      "time": 0.0351719856262207,
      "error": null
    },
    "assert substract_elements((8, 20, 8), (5, 9, 15)) == (3, 11, -7)": {
      "result": true,
      "time": 0.036826133728027344,
      "error": null
    },
    "assert substract_elements((12, 18, 4), (6, 11, 9)) == (6, 7, -5)": {
      "result": true,
      "time": 0.03891921043395996,
      "error": null
    },
    "assert substract_elements((9, 19, 10), (15, 7, 10)) == (-6, 12, 0)": {
      "result": true,
      "time": 0.03993058204650879,
      "error": null
    },
    "assert substract_elements((2, 20, 9), (9, 14, 11)) == (-7, 6, -2)": {
      "result": true,
      "time": 0.035646677017211914,
      "error": null
    },
    "assert substract_elements((11, 15, 5), (11, 12, 16)) == (0, 3, -11)": {
      "result": true,
      "time": 0.03546404838562012,
      "error": null
    },
    "assert substract_elements((5, 13, 12), (10, 8, 10)) == (-5, 5, 2)": {
      "result": true,
      "time": 0.033550262451171875,
      "error": null
    },
    "assert substract_elements((5, 16, 10), (7, 10, 7)) == (-2, 6, 3)": {
      "result": true,
      "time": 0.03977823257446289,
      "error": null
    },
    "assert substract_elements((2, 15, 13), (10, 11, 17)) == (-8, 4, -4)": {
      "result": true,
      "time": 0.041792869567871094,
      "error": null
    },
    "assert substract_elements((11, 18, 9), (13, 8, 7)) == (-2, 10, 2)": {
      "result": true,
      "time": 0.03512001037597656,
      "error": null
    },
    "assert substract_elements((8, 17, 6), (9, 7, 12)) == (-1, 10, -6)": {
      "result": true,
      "time": 0.039994001388549805,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}