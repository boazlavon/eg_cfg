{
  "code": "from collections import defaultdict\n\ndef freq_element(list_of_lists):\n    frequency_dict = defaultdict(int)\n    for inner_list in list_of_lists:\n        for element in inner_list:\n            frequency_dict[element] += 1\n    result_dict = dict(frequency_dict)\n    return result_dict",
  "results": {
    "assert freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1, 9: 1})": {
      "result": true,
      "time": 0.2695438861846924,
      "error": null
    },
    "assert freq_element([[1,2,3,4],[5,6,7,8],[9,10,11,12]])==({1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1})": {
      "result": true,
      "time": 0.2832987308502197,
      "error": null
    },
    "assert freq_element([[15,20,30,40],[80,90,100,110],[30,30,80,90]])==({30: 3, 80: 2, 90: 2, 15: 1, 20: 1, 40: 1, 100: 1, 110: 1})": {
      "result": true,
      "time": 0.2801353931427002,
      "error": null
    },
    "assert freq_element([[2, 1, 1, 1], [5, 5, 11, 5], [10, 5, 5, 2]]) == Counter({5: 5, 1: 3, 2: 2, 11: 1, 10: 1})": {
      "result": false,
      "time": 0.2932004928588867,
      "error": null
    },
    "assert freq_element([[5, 3, 8, 4], [1, 4, 2, 7], [6, 6, 4, 2]]) == Counter({4: 3, 2: 2, 6: 2, 5: 1, 3: 1, 8: 1, 1: 1, 7: 1})": {
      "result": false,
      "time": 0.2607879638671875,
      "error": null
    },
    "assert freq_element([[4, 1, 6, 4], [3, 9, 5, 3], [3, 6, 13, 5]]) == Counter({3: 3, 4: 2, 6: 2, 5: 2, 1: 1, 9: 1, 13: 1})": {
      "result": false,
      "time": 0.2665269374847412,
      "error": null
    },
    "assert freq_element([[1, 1, 2, 6], [2, 9, 11, 3], [11, 3, 8, 4]]) == Counter({1: 2, 2: 2, 11: 2, 3: 2, 6: 1, 9: 1, 8: 1, 4: 1})": {
      "result": false,
      "time": 0.2807915210723877,
      "error": null
    },
    "assert freq_element([[6, 4, 3, 7], [5, 3, 8, 3], [10, 3, 13, 1]]) == Counter({3: 4, 6: 1, 4: 1, 7: 1, 5: 1, 8: 1, 10: 1, 13: 1, 1: 1})": {
      "result": false,
      "time": 0.2804839611053467,
      "error": null
    },
    "assert freq_element([[1, 2, 3, 5], [6, 9, 10, 4], [4, 4, 11, 7]]) == Counter({4: 3, 1: 1, 2: 1, 3: 1, 5: 1, 6: 1, 9: 1, 10: 1, 11: 1, 7: 1})": {
      "result": false,
      "time": 0.27975010871887207,
      "error": null
    },
    "assert freq_element([[3, 3, 8, 6], [9, 9, 3, 7], [8, 4, 14, 3]]) == Counter({3: 4, 8: 2, 9: 2, 6: 1, 7: 1, 4: 1, 14: 1})": {
      "result": false,
      "time": 0.27499866485595703,
      "error": null
    },
    "assert freq_element([[4, 2, 3, 1], [2, 5, 3, 6], [7, 5, 10, 2]]) == Counter({2: 3, 3: 2, 5: 2, 4: 1, 1: 1, 6: 1, 7: 1, 10: 1})": {
      "result": false,
      "time": 0.2626006603240967,
      "error": null
    },
    "assert freq_element([[1, 5, 7, 4], [2, 5, 4, 5], [5, 4, 8, 1]]) == Counter({5: 4, 4: 3, 1: 2, 7: 1, 2: 1, 8: 1})": {
      "result": false,
      "time": 0.2641181945800781,
      "error": null
    },
    "assert freq_element([[5, 5, 1, 5], [8, 7, 8, 2], [7, 4, 8, 7]]) == Counter({5: 3, 8: 3, 7: 3, 1: 1, 2: 1, 4: 1})": {
      "result": false,
      "time": 0.2666506767272949,
      "error": null
    },
    "assert freq_element([[1, 7, 1, 1], [5, 1, 8, 6], [12, 1, 4, 8]]) == Counter({1: 5, 8: 2, 7: 1, 5: 1, 6: 1, 12: 1, 4: 1})": {
      "result": false,
      "time": 0.29427146911621094,
      "error": null
    },
    "assert freq_element([[2, 1, 3, 6], [1, 6, 8, 1], [5, 2, 11, 7]]) == Counter({1: 3, 2: 2, 6: 2, 3: 1, 8: 1, 5: 1, 11: 1, 7: 1})": {
      "result": false,
      "time": 0.2794818878173828,
      "error": null
    },
    "assert freq_element([[1, 5, 6, 5], [9, 8, 8, 1], [10, 3, 14, 8]]) == Counter({8: 3, 1: 2, 5: 2, 6: 1, 9: 1, 10: 1, 3: 1, 14: 1})": {
      "result": false,
      "time": 0.2715747356414795,
      "error": null
    },
    "assert freq_element([[6, 7, 8, 3], [1, 2, 6, 7], [2, 6, 10, 6]]) == Counter({6: 4, 7: 2, 2: 2, 8: 1, 3: 1, 1: 1, 10: 1})": {
      "result": false,
      "time": 0.2650284767150879,
      "error": null
    },
    "assert freq_element([[4, 6, 5, 6], [2, 6, 3, 3], [2, 5, 4, 8]]) == Counter({6: 3, 4: 2, 5: 2, 2: 2, 3: 2, 8: 1})": {
      "result": false,
      "time": 0.28450441360473633,
      "error": null
    },
    "assert freq_element([[3, 6, 8, 6], [2, 4, 3, 6], [11, 3, 4, 2]]) == Counter({3: 3, 6: 3, 2: 2, 4: 2, 8: 1, 11: 1})": {
      "result": false,
      "time": 0.2808084487915039,
      "error": null
    },
    "assert freq_element([[6, 1, 4, 2], [5, 10, 11, 6], [11, 3, 13, 9]]) == Counter({6: 2, 11: 2, 1: 1, 4: 1, 2: 1, 5: 1, 10: 1, 3: 1, 13: 1, 9: 1})": {
      "result": false,
      "time": 0.2855105400085449,
      "error": null
    },
    "assert freq_element([[3, 3, 3, 6], [6, 1, 3, 3], [3, 2, 13, 2]]) == Counter({3: 6, 6: 2, 2: 2, 1: 1, 13: 1})": {
      "result": false,
      "time": 0.279982328414917,
      "error": null
    },
    "assert freq_element([[5, 7, 3, 4], [4, 2, 1, 3], [12, 4, 7, 2]]) == Counter({4: 3, 7: 2, 3: 2, 2: 2, 5: 1, 1: 1, 12: 1})": {
      "result": false,
      "time": 0.27469968795776367,
      "error": null
    },
    "assert freq_element([[5, 2, 8, 7], [2, 4, 7, 6], [9, 6, 11, 7]]) == Counter({7: 3, 2: 2, 6: 2, 5: 1, 8: 1, 4: 1, 9: 1, 11: 1})": {
      "result": false,
      "time": 0.250582218170166,
      "error": null
    },
    "assert freq_element([[1, 3, 1, 4], [9, 4, 6, 7], [7, 5, 5, 7]]) == Counter({7: 3, 1: 2, 4: 2, 5: 2, 3: 1, 9: 1, 6: 1})": {
      "result": false,
      "time": 0.27841877937316895,
      "error": null
    },
    "assert freq_element([[1, 5, 5, 6], [5, 9, 8, 6], [11, 2, 6, 1]]) == Counter({5: 3, 6: 3, 1: 2, 9: 1, 8: 1, 11: 1, 2: 1})": {
      "result": false,
      "time": 0.2977287769317627,
      "error": null
    },
    "assert freq_element([[4, 5, 4, 7], [1, 1, 11, 7], [10, 5, 5, 4]]) == Counter({4: 3, 5: 3, 7: 2, 1: 2, 11: 1, 10: 1})": {
      "result": false,
      "time": 0.2618293762207031,
      "error": null
    },
    "assert freq_element([[2, 6, 8, 2], [8, 6, 1, 4], [11, 5, 10, 9]]) == Counter({2: 2, 6: 2, 8: 2, 1: 1, 4: 1, 11: 1, 5: 1, 10: 1, 9: 1})": {
      "result": false,
      "time": 0.26618123054504395,
      "error": null
    },
    "assert freq_element([[1, 7, 5, 5], [5, 6, 4, 4], [3, 5, 7, 2]]) == Counter({5: 4, 7: 2, 4: 2, 1: 1, 6: 1, 3: 1, 2: 1})": {
      "result": false,
      "time": 0.2798182964324951,
      "error": null
    },
    "assert freq_element([[4, 2, 6, 4], [3, 7, 8, 5], [6, 3, 14, 1]]) == Counter({4: 2, 6: 2, 3: 2, 2: 1, 7: 1, 8: 1, 5: 1, 14: 1, 1: 1})": {
      "result": false,
      "time": 0.2861928939819336,
      "error": null
    },
    "assert freq_element([[5, 1, 5, 1], [9, 9, 9, 1], [6, 3, 6, 3]]) == Counter({1: 3, 9: 3, 5: 2, 6: 2, 3: 2})": {
      "result": false,
      "time": 0.26921534538269043,
      "error": null
    },
    "assert freq_element([[2, 6, 2, 4], [4, 5, 6, 6], [3, 5, 13, 9]]) == Counter({6: 3, 2: 2, 4: 2, 5: 2, 3: 1, 13: 1, 9: 1})": {
      "result": false,
      "time": 0.2592031955718994,
      "error": null
    },
    "assert freq_element([[6, 7, 1, 1], [8, 6, 10, 4], [11, 6, 14, 10]]) == Counter({6: 3, 1: 2, 10: 2, 7: 1, 8: 1, 4: 1, 11: 1, 14: 1})": {
      "result": false,
      "time": 0.3009181022644043,
      "error": null
    },
    "assert freq_element([[3, 5, 8, 6], [8, 3, 9, 3], [5, 5, 6, 10]]) == Counter({3: 3, 5: 3, 8: 2, 6: 2, 9: 1, 10: 1})": {
      "result": false,
      "time": 0.255967378616333,
      "error": null
    },
    "assert freq_element([[1, 7, 6, 1], [8, 9, 3, 6], [5, 4, 14, 6]]) == Counter({6: 3, 1: 2, 7: 1, 8: 1, 9: 1, 3: 1, 5: 1, 4: 1, 14: 1})": {
      "result": false,
      "time": 0.2802252769470215,
      "error": null
    },
    "assert freq_element([[4, 7, 2, 7], [7, 3, 3, 7], [2, 2, 8, 2]]) == Counter({7: 4, 2: 4, 3: 2, 4: 1, 8: 1})": {
      "result": false,
      "time": 0.2769014835357666,
      "error": null
    },
    "assert freq_element([[2, 2, 3, 7], [3, 9, 8, 5], [6, 6, 6, 1]]) == Counter({6: 3, 2: 2, 3: 2, 7: 1, 9: 1, 8: 1, 5: 1, 1: 1})": {
      "result": false,
      "time": 0.26463961601257324,
      "error": null
    },
    "assert freq_element([[1, 6, 6, 4], [8, 8, 7, 8], [7, 6, 8, 16]]) == Counter({8: 4, 6: 3, 7: 2, 1: 1, 4: 1, 16: 1})": {
      "result": false,
      "time": 0.2598586082458496,
      "error": null
    },
    "assert freq_element([[3, 6, 3, 4], [4, 8, 9, 5], [6, 12, 15, 9]]) == Counter({3: 2, 6: 2, 4: 2, 9: 2, 8: 1, 5: 1, 12: 1, 15: 1})": {
      "result": false,
      "time": 0.2753560543060303,
      "error": null
    },
    "assert freq_element([[1, 2, 4, 7], [2, 11, 2, 5], [12, 6, 13, 7]]) == Counter({2: 3, 7: 2, 1: 1, 4: 1, 11: 1, 5: 1, 12: 1, 6: 1, 13: 1})": {
      "result": false,
      "time": 0.2856605052947998,
      "error": null
    },
    "assert freq_element([[5, 6, 1, 1], [2, 7, 9, 3], [5, 13, 7, 10]]) == Counter({5: 2, 1: 2, 7: 2, 6: 1, 2: 1, 9: 1, 3: 1, 13: 1, 10: 1})": {
      "result": false,
      "time": 0.2767970561981201,
      "error": null
    },
    "assert freq_element([[5, 3, 1, 5], [4, 7, 5, 13], [5, 14, 11, 10]]) == Counter({5: 4, 3: 1, 1: 1, 4: 1, 7: 1, 13: 1, 14: 1, 11: 1, 10: 1})": {
      "result": false,
      "time": 0.26680588722229004,
      "error": null
    },
    "assert freq_element([[5, 2, 2, 6], [10, 10, 8, 8], [10, 13, 9, 9]]) == Counter({10: 3, 2: 2, 8: 2, 9: 2, 5: 1, 6: 1, 13: 1})": {
      "result": false,
      "time": 0.27134013175964355,
      "error": null
    },
    "assert freq_element([[5, 3, 7, 9], [8, 8, 11, 9], [10, 6, 10, 16]]) == Counter({9: 2, 8: 2, 10: 2, 5: 1, 3: 1, 7: 1, 11: 1, 6: 1, 16: 1})": {
      "result": false,
      "time": 0.2681243419647217,
      "error": null
    },
    "assert freq_element([[2, 3, 4, 1], [4, 8, 9, 6], [13, 10, 8, 9]]) == Counter({4: 2, 8: 2, 9: 2, 2: 1, 3: 1, 1: 1, 6: 1, 13: 1, 10: 1})": {
      "result": false,
      "time": 0.2788543701171875,
      "error": null
    },
    "assert freq_element([[6, 5, 3, 3], [8, 11, 7, 7], [13, 5, 7, 17]]) == Counter({7: 3, 5: 2, 3: 2, 6: 1, 8: 1, 11: 1, 13: 1, 17: 1})": {
      "result": false,
      "time": 0.2890031337738037,
      "error": null
    },
    "assert freq_element([[4, 2, 1, 4], [3, 2, 5, 13], [6, 6, 14, 7]]) == Counter({4: 2, 2: 2, 6: 2, 1: 1, 3: 1, 5: 1, 13: 1, 14: 1, 7: 1})": {
      "result": false,
      "time": 0.26393747329711914,
      "error": null
    },
    "assert freq_element([[3, 3, 2, 3], [2, 4, 6, 13], [14, 13, 11, 8]]) == Counter({3: 3, 2: 2, 13: 2, 4: 1, 6: 1, 14: 1, 11: 1, 8: 1})": {
      "result": false,
      "time": 0.2818446159362793,
      "error": null
    },
    "assert freq_element([[4, 4, 8, 2], [1, 10, 11, 9], [6, 10, 11, 15]]) == Counter({4: 2, 10: 2, 11: 2, 8: 1, 2: 1, 1: 1, 9: 1, 6: 1, 15: 1})": {
      "result": false,
      "time": 0.2612640857696533,
      "error": null
    },
    "assert freq_element([[4, 7, 3, 3], [8, 6, 6, 4], [7, 14, 11, 11]]) == Counter({4: 2, 7: 2, 3: 2, 6: 2, 11: 2, 8: 1, 14: 1})": {
      "result": false,
      "time": 0.275937557220459,
      "error": null
    },
    "assert freq_element([[5, 6, 7, 9], [4, 8, 2, 11], [7, 13, 7, 13]]) == Counter({7: 3, 13: 2, 5: 1, 6: 1, 9: 1, 4: 1, 8: 1, 2: 1, 11: 1})": {
      "result": false,
      "time": 0.2818419933319092,
      "error": null
    },
    "assert freq_element([[6, 6, 2, 9], [3, 11, 7, 6], [13, 12, 16, 16]]) == Counter({6: 3, 16: 2, 2: 1, 9: 1, 3: 1, 11: 1, 7: 1, 13: 1, 12: 1})": {
      "result": false,
      "time": 0.2874412536621094,
      "error": null
    },
    "assert freq_element([[1, 3, 1, 7], [8, 5, 5, 7], [10, 15, 6, 17]]) == Counter({1: 2, 7: 2, 5: 2, 3: 1, 8: 1, 10: 1, 15: 1, 6: 1, 17: 1})": {
      "result": false,
      "time": 0.2760474681854248,
      "error": null
    },
    "assert freq_element([[4, 1, 1, 3], [5, 5, 11, 8], [5, 9, 12, 9]]) == Counter({5: 3, 1: 2, 9: 2, 4: 1, 3: 1, 11: 1, 8: 1, 12: 1})": {
      "result": false,
      "time": 0.2795984745025635,
      "error": null
    },
    "assert freq_element([[1, 3, 2, 3], [3, 4, 4, 11], [9, 14, 14, 14]]) == Counter({3: 3, 14: 3, 4: 2, 1: 1, 2: 1, 11: 1, 9: 1})": {
      "result": false,
      "time": 0.2743701934814453,
      "error": null
    },
    "assert freq_element([[5, 5, 3, 9], [8, 9, 3, 12], [7, 9, 12, 17]]) == Counter({9: 3, 5: 2, 3: 2, 12: 2, 8: 1, 7: 1, 17: 1})": {
      "result": false,
      "time": 0.2685666084289551,
      "error": null
    },
    "assert freq_element([[3, 7, 5, 6], [5, 4, 12, 6], [6, 5, 9, 11]]) == Counter({5: 3, 6: 3, 3: 1, 7: 1, 4: 1, 12: 1, 9: 1, 11: 1})": {
      "result": false,
      "time": 0.281339168548584,
      "error": null
    },
    "assert freq_element([[1, 2, 2, 9], [3, 7, 12, 9], [5, 5, 16, 15]]) == Counter({2: 2, 9: 2, 5: 2, 1: 1, 3: 1, 7: 1, 12: 1, 16: 1, 15: 1})": {
      "result": false,
      "time": 0.2832527160644531,
      "error": null
    },
    "assert freq_element([[1, 3, 2, 1], [6, 9, 3, 13], [8, 14, 7, 9]]) == Counter({1: 2, 3: 2, 9: 2, 2: 1, 6: 1, 13: 1, 8: 1, 14: 1, 7: 1})": {
      "result": false,
      "time": 0.2583475112915039,
      "error": null
    },
    "assert freq_element([[6, 6, 6, 5], [5, 11, 4, 10], [4, 15, 14, 10]]) == Counter({6: 3, 5: 2, 4: 2, 10: 2, 11: 1, 15: 1, 14: 1})": {
      "result": false,
      "time": 0.284574031829834,
      "error": null
    },
    "assert freq_element([[3, 6, 2, 7], [5, 7, 7, 8], [14, 14, 14, 15]]) == Counter({7: 3, 14: 3, 3: 1, 6: 1, 2: 1, 5: 1, 8: 1, 15: 1})": {
      "result": false,
      "time": 0.28870677947998047,
      "error": null
    },
    "assert freq_element([[4, 5, 3, 2], [3, 6, 7, 8], [4, 8, 16, 12]]) == Counter({4: 2, 3: 2, 8: 2, 5: 1, 2: 1, 6: 1, 7: 1, 16: 1, 12: 1})": {
      "result": false,
      "time": 0.2746760845184326,
      "error": null
    },
    "assert freq_element([[6, 4, 4, 2], [2, 7, 2, 4], [11, 10, 15, 14]]) == Counter({4: 3, 2: 3, 6: 1, 7: 1, 11: 1, 10: 1, 15: 1, 14: 1})": {
      "result": false,
      "time": 0.29013681411743164,
      "error": null
    },
    "assert freq_element([[4, 2, 7, 1], [4, 7, 8, 13], [4, 9, 10, 15]]) == Counter({4: 3, 7: 2, 2: 1, 1: 1, 8: 1, 13: 1, 9: 1, 10: 1, 15: 1})": {
      "result": false,
      "time": 0.29448938369750977,
      "error": null
    },
    "assert freq_element([[1, 5, 2, 2], [9, 3, 7, 9], [11, 9, 15, 8]]) == Counter({9: 3, 2: 2, 1: 1, 5: 1, 3: 1, 7: 1, 11: 1, 15: 1, 8: 1})": {
      "result": false,
      "time": 0.2749495506286621,
      "error": null
    },
    "assert freq_element([[5, 5, 4, 6], [4, 4, 5, 7], [13, 13, 14, 10]]) == Counter({5: 3, 4: 3, 13: 2, 6: 1, 7: 1, 14: 1, 10: 1})": {
      "result": false,
      "time": 0.28619933128356934,
      "error": null
    },
    "assert freq_element([[1, 3, 6, 9], [10, 5, 9, 3], [7, 15, 15, 15]]) == Counter({15: 3, 3: 2, 9: 2, 1: 1, 6: 1, 10: 1, 5: 1, 7: 1})": {
      "result": false,
      "time": 0.2771451473236084,
      "error": null
    },
    "assert freq_element([[6, 6, 4, 7], [1, 3, 5, 6], [5, 11, 6, 7]]) == Counter({6: 4, 7: 2, 5: 2, 4: 1, 1: 1, 3: 1, 11: 1})": {
      "result": false,
      "time": 0.2764439582824707,
      "error": null
    },
    "assert freq_element([[3, 6, 6, 1], [1, 3, 10, 11], [8, 15, 10, 16]]) == Counter({3: 2, 6: 2, 1: 2, 10: 2, 11: 1, 8: 1, 15: 1, 16: 1})": {
      "result": false,
      "time": 0.2780797481536865,
      "error": null
    },
    "assert freq_element([[2, 3, 3, 7], [8, 8, 7, 3], [14, 15, 9, 13]]) == Counter({3: 3, 7: 2, 8: 2, 2: 1, 14: 1, 15: 1, 9: 1, 13: 1})": {
      "result": false,
      "time": 0.29247522354125977,
      "error": null
    },
    "assert freq_element([[20, 18, 30, 41], [80, 89, 100, 105], [34, 32, 77, 88]]) == Counter({20: 1, 18: 1, 30: 1, 41: 1, 80: 1, 89: 1, 100: 1, 105: 1, 34: 1, 32: 1, 77: 1, 88: 1})": {
      "result": false,
      "time": 0.2925534248352051,
      "error": null
    },
    "assert freq_element([[17, 22, 27, 40], [82, 91, 95, 110], [35, 27, 76, 95]]) == Counter({27: 2, 95: 2, 17: 1, 22: 1, 40: 1, 82: 1, 91: 1, 110: 1, 35: 1, 76: 1})": {
      "result": false,
      "time": 0.32062411308288574,
      "error": null
    },
    "assert freq_element([[17, 16, 30, 35], [83, 90, 102, 110], [27, 26, 82, 88]]) == Counter({17: 1, 16: 1, 30: 1, 35: 1, 83: 1, 90: 1, 102: 1, 110: 1, 27: 1, 26: 1, 82: 1, 88: 1})": {
      "result": false,
      "time": 0.31639599800109863,
      "error": null
    },
    "assert freq_element([[12, 22, 34, 45], [82, 94, 102, 110], [27, 26, 82, 92]]) == Counter({82: 2, 12: 1, 22: 1, 34: 1, 45: 1, 94: 1, 102: 1, 110: 1, 27: 1, 26: 1, 92: 1})": {
      "result": false,
      "time": 0.284130334854126,
      "error": null
    },
    "assert freq_element([[13, 24, 29, 40], [80, 87, 95, 111], [29, 27, 75, 95]]) == Counter({29: 2, 95: 2, 13: 1, 24: 1, 40: 1, 80: 1, 87: 1, 111: 1, 27: 1, 75: 1})": {
      "result": false,
      "time": 0.27172279357910156,
      "error": null
    },
    "assert freq_element([[11, 21, 28, 38], [77, 91, 101, 106], [25, 26, 85, 86]]) == Counter({11: 1, 21: 1, 28: 1, 38: 1, 77: 1, 91: 1, 101: 1, 106: 1, 25: 1, 26: 1, 85: 1, 86: 1})": {
      "result": false,
      "time": 0.2536585330963135,
      "error": null
    },
    "assert freq_element([[20, 15, 31, 42], [78, 93, 105, 110], [26, 31, 81, 92]]) == Counter({31: 2, 20: 1, 15: 1, 42: 1, 78: 1, 93: 1, 105: 1, 110: 1, 26: 1, 81: 1, 92: 1})": {
      "result": false,
      "time": 0.2710411548614502,
      "error": null
    },
    "assert freq_element([[11, 19, 31, 38], [84, 93, 101, 110], [30, 31, 83, 85]]) == Counter({31: 2, 11: 1, 19: 1, 38: 1, 84: 1, 93: 1, 101: 1, 110: 1, 30: 1, 83: 1, 85: 1})": {
      "result": false,
      "time": 0.27263617515563965,
      "error": null
    },
    "assert freq_element([[19, 20, 26, 37], [78, 95, 104, 106], [27, 35, 82, 89]]) == Counter({19: 1, 20: 1, 26: 1, 37: 1, 78: 1, 95: 1, 104: 1, 106: 1, 27: 1, 35: 1, 82: 1, 89: 1})": {
      "result": false,
      "time": 0.2784569263458252,
      "error": null
    },
    "assert freq_element([[18, 18, 27, 39], [77, 91, 105, 108], [31, 30, 76, 89]]) == Counter({18: 2, 27: 1, 39: 1, 77: 1, 91: 1, 105: 1, 108: 1, 31: 1, 30: 1, 76: 1, 89: 1})": {
      "result": false,
      "time": 0.31106114387512207,
      "error": null
    },
    "assert freq_element([[18, 25, 33, 45], [82, 86, 96, 111], [26, 34, 85, 89]]) == Counter({18: 1, 25: 1, 33: 1, 45: 1, 82: 1, 86: 1, 96: 1, 111: 1, 26: 1, 34: 1, 85: 1, 89: 1})": {
      "result": false,
      "time": 0.28252363204956055,
      "error": null
    },
    "assert freq_element([[18, 17, 28, 41], [78, 91, 97, 115], [30, 34, 85, 89]]) == Counter({18: 1, 17: 1, 28: 1, 41: 1, 78: 1, 91: 1, 97: 1, 115: 1, 30: 1, 34: 1, 85: 1, 89: 1})": {
      "result": false,
      "time": 0.25833654403686523,
      "error": null
    },
    "assert freq_element([[15, 20, 35, 40], [78, 88, 100, 114], [28, 29, 81, 88]]) == Counter({88: 2, 15: 1, 20: 1, 35: 1, 40: 1, 78: 1, 100: 1, 114: 1, 28: 1, 29: 1, 81: 1})": {
      "result": false,
      "time": 0.25777196884155273,
      "error": null
    },
    "assert freq_element([[11, 25, 30, 37], [82, 93, 99, 114], [32, 27, 82, 85]]) == Counter({82: 2, 11: 1, 25: 1, 30: 1, 37: 1, 93: 1, 99: 1, 114: 1, 32: 1, 27: 1, 85: 1})": {
      "result": false,
      "time": 0.26531052589416504,
      "error": null
    },
    "assert freq_element([[13, 16, 26, 39], [82, 93, 102, 115], [32, 35, 80, 95]]) == Counter({13: 1, 16: 1, 26: 1, 39: 1, 82: 1, 93: 1, 102: 1, 115: 1, 32: 1, 35: 1, 80: 1, 95: 1})": {
      "result": false,
      "time": 0.27770161628723145,
      "error": null
    },
    "assert freq_element([[11, 21, 25, 40], [84, 92, 103, 106], [25, 31, 80, 93]]) == Counter({25: 2, 11: 1, 21: 1, 40: 1, 84: 1, 92: 1, 103: 1, 106: 1, 31: 1, 80: 1, 93: 1})": {
      "result": false,
      "time": 0.29633498191833496,
      "error": null
    },
    "assert freq_element([[14, 19, 27, 38], [82, 86, 99, 111], [29, 27, 84, 91]]) == Counter({27: 2, 14: 1, 19: 1, 38: 1, 82: 1, 86: 1, 99: 1, 111: 1, 29: 1, 84: 1, 91: 1})": {
      "result": false,
      "time": 0.277329683303833,
      "error": null
    },
    "assert freq_element([[20, 20, 27, 41], [82, 92, 103, 112], [34, 32, 84, 93]]) == Counter({20: 2, 27: 1, 41: 1, 82: 1, 92: 1, 103: 1, 112: 1, 34: 1, 32: 1, 84: 1, 93: 1})": {
      "result": false,
      "time": 0.27500414848327637,
      "error": null
    },
    "assert freq_element([[18, 19, 31, 41], [76, 92, 99, 115], [33, 25, 80, 93]]) == Counter({18: 1, 19: 1, 31: 1, 41: 1, 76: 1, 92: 1, 99: 1, 115: 1, 33: 1, 25: 1, 80: 1, 93: 1})": {
      "result": false,
      "time": 0.2703268527984619,
      "error": null
    },
    "assert freq_element([[14, 18, 32, 36], [80, 92, 99, 110], [26, 28, 78, 85]]) == Counter({14: 1, 18: 1, 32: 1, 36: 1, 80: 1, 92: 1, 99: 1, 110: 1, 26: 1, 28: 1, 78: 1, 85: 1})": {
      "result": false,
      "time": 0.254624605178833,
      "error": null
    },
    "assert freq_element([[13, 16, 26, 45], [84, 87, 103, 114], [31, 31, 83, 94]]) == Counter({31: 2, 13: 1, 16: 1, 26: 1, 45: 1, 84: 1, 87: 1, 103: 1, 114: 1, 83: 1, 94: 1})": {
      "result": false,
      "time": 0.270601749420166,
      "error": null
    },
    "assert freq_element([[14, 15, 26, 35], [79, 91, 102, 108], [28, 32, 80, 87]]) == Counter({14: 1, 15: 1, 26: 1, 35: 1, 79: 1, 91: 1, 102: 1, 108: 1, 28: 1, 32: 1, 80: 1, 87: 1})": {
      "result": false,
      "time": 0.2594640254974365,
      "error": null
    },
    "assert freq_element([[18, 22, 34, 41], [78, 95, 100, 114], [32, 31, 75, 95]]) == Counter({95: 2, 18: 1, 22: 1, 34: 1, 41: 1, 78: 1, 100: 1, 114: 1, 32: 1, 31: 1, 75: 1})": {
      "result": false,
      "time": 0.2892475128173828,
      "error": null
    },
    "assert freq_element([[16, 22, 33, 40], [83, 87, 95, 107], [34, 28, 76, 92]]) == Counter({16: 1, 22: 1, 33: 1, 40: 1, 83: 1, 87: 1, 95: 1, 107: 1, 34: 1, 28: 1, 76: 1, 92: 1})": {
      "result": false,
      "time": 0.27567124366760254,
      "error": null
    },
    "assert freq_element([[19, 17, 29, 41], [83, 90, 99, 106], [29, 29, 84, 86]]) == Counter({29: 3, 19: 1, 17: 1, 41: 1, 83: 1, 90: 1, 99: 1, 106: 1, 84: 1, 86: 1})": {
      "result": false,
      "time": 0.29143691062927246,
      "error": null
    },
    "assert freq_element([[14, 17, 28, 40], [83, 92, 97, 106], [35, 28, 78, 88]]) == Counter({28: 2, 14: 1, 17: 1, 40: 1, 83: 1, 92: 1, 97: 1, 106: 1, 35: 1, 78: 1, 88: 1})": {
      "result": false,
      "time": 0.28162598609924316,
      "error": null
    },
    "assert freq_element([[10, 16, 30, 42], [82, 86, 98, 111], [34, 33, 85, 87]]) == Counter({10: 1, 16: 1, 30: 1, 42: 1, 82: 1, 86: 1, 98: 1, 111: 1, 34: 1, 33: 1, 85: 1, 87: 1})": {
      "result": false,
      "time": 0.27065420150756836,
      "error": null
    },
    "assert freq_element([[19, 15, 31, 44], [78, 90, 98, 108], [30, 28, 76, 85]]) == Counter({19: 1, 15: 1, 31: 1, 44: 1, 78: 1, 90: 1, 98: 1, 108: 1, 30: 1, 28: 1, 76: 1, 85: 1})": {
      "result": false,
      "time": 0.26477980613708496,
      "error": null
    },
    "assert freq_element([[20, 16, 30, 35], [76, 87, 105, 106], [27, 31, 81, 95]]) == Counter({20: 1, 16: 1, 30: 1, 35: 1, 76: 1, 87: 1, 105: 1, 106: 1, 27: 1, 31: 1, 81: 1, 95: 1})": {
      "result": false,
      "time": 0.2660408020019531,
      "error": null
    },
    "assert freq_element([[20, 16, 32, 41], [77, 88, 104, 108], [25, 28, 81, 91]]) == Counter({20: 1, 16: 1, 32: 1, 41: 1, 77: 1, 88: 1, 104: 1, 108: 1, 25: 1, 28: 1, 81: 1, 91: 1})": {
      "result": false,
      "time": 0.286937952041626,
      "error": null
    },
    "assert freq_element([[15, 24, 29, 45], [81, 87, 101, 107], [29, 25, 79, 91]]) == Counter({29: 2, 15: 1, 24: 1, 45: 1, 81: 1, 87: 1, 101: 1, 107: 1, 25: 1, 79: 1, 91: 1})": {
      "result": false,
      "time": 0.25484132766723633,
      "error": null
    },
    "assert freq_element([[12, 17, 32, 45], [84, 88, 101, 115], [32, 33, 83, 86]]) == Counter({32: 2, 12: 1, 17: 1, 45: 1, 84: 1, 88: 1, 101: 1, 115: 1, 33: 1, 83: 1, 86: 1})": {
      "result": false,
      "time": 0.2558128833770752,
      "error": null
    },
    "assert freq_element([[17, 25, 28, 41], [85, 87, 96, 115], [30, 25, 82, 93]]) == Counter({25: 2, 17: 1, 28: 1, 41: 1, 85: 1, 87: 1, 96: 1, 115: 1, 30: 1, 82: 1, 93: 1})": {
      "result": false,
      "time": 0.2792530059814453,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.029411764705882353,
  "general_error": "",
  "has_testcase_error": false
}