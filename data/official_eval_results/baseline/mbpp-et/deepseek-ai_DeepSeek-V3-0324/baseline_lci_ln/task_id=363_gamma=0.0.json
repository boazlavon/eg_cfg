{
  "code": "def add_K_element(tuples_list, k):\n    result = []\n    for tup in tuples_list:\n        new_tuple = []\n        for num in tup:\n            new_num = num + k\n            new_tuple.append(new_num)\n        new_tuple = tuple(new_tuple)\n        result.append(new_tuple)\n    return result",
  "results": {
    "assert add_K_element([(1, 3, 4), (2, 4, 6), (3, 8, 1)], 4) == [(5, 7, 8), (6, 8, 10), (7, 12, 5)]": {
      "result": true,
      "time": 0.05830264091491699,
      "error": null
    },
    "assert add_K_element([(1, 2, 3), (4, 5, 6), (7, 8, 9)], 8) == [(9, 10, 11), (12, 13, 14), (15, 16, 17)]": {
      "result": true,
      "time": 0.05652260780334473,
      "error": null
    },
    "assert add_K_element([(11, 12, 13), (14, 15, 16), (17, 18, 19)], 9) == [(20, 21, 22), (23, 24, 25), (26, 27, 28)]": {
      "result": true,
      "time": 0.05667901039123535,
      "error": null
    },
    "assert add_K_element([(3, 1, 4), (5, 7, 2), (6, 11, 1)], 1) == [(4, 2, 5), (6, 8, 3), (7, 12, 2)]": {
      "result": true,
      "time": 0.05628848075866699,
      "error": null
    },
    "assert add_K_element([(1, 2, 6), (2, 7, 7), (7, 6, 1)], 9) == [(10, 11, 15), (11, 16, 16), (16, 15, 10)]": {
      "result": true,
      "time": 0.056612253189086914,
      "error": null
    },
    "assert add_K_element([(1, 4, 1), (4, 1, 5), (1, 9, 1)], 9) == [(10, 13, 10), (13, 10, 14), (10, 18, 10)]": {
      "result": true,
      "time": 0.048006534576416016,
      "error": null
    },
    "assert add_K_element([(2, 4, 9), (7, 8, 10), (5, 6, 3)], 3) == [(5, 7, 12), (10, 11, 13), (8, 9, 6)]": {
      "result": true,
      "time": 0.05324673652648926,
      "error": null
    },
    "assert add_K_element([(5, 5, 2), (4, 5, 4), (6, 3, 4)], 4) == [(9, 9, 6), (8, 9, 8), (10, 7, 8)]": {
      "result": true,
      "time": 0.04166150093078613,
      "error": null
    },
    "assert add_K_element([(4, 7, 3), (6, 3, 6), (2, 8, 5)], 4) == [(8, 11, 7), (10, 7, 10), (6, 12, 9)]": {
      "result": true,
      "time": 0.053809404373168945,
      "error": null
    },
    "assert add_K_element([(1, 8, 2), (7, 7, 5), (1, 11, 2)], 7) == [(8, 15, 9), (14, 14, 12), (8, 18, 9)]": {
      "result": true,
      "time": 0.06268620491027832,
      "error": null
    },
    "assert add_K_element([(6, 5, 8), (3, 7, 7), (1, 6, 6)], 7) == [(13, 12, 15), (10, 14, 14), (8, 13, 13)]": {
      "result": true,
      "time": 0.048992156982421875,
      "error": null
    },
    "assert add_K_element([(4, 8, 1), (1, 3, 6), (4, 6, 6)], 5) == [(9, 13, 6), (6, 8, 11), (9, 11, 11)]": {
      "result": true,
      "time": 0.04847264289855957,
      "error": null
    },
    "assert add_K_element([(5, 4, 6), (7, 1, 10), (5, 13, 2)], 6) == [(11, 10, 12), (13, 7, 16), (11, 19, 8)]": {
      "result": true,
      "time": 0.045638084411621094,
      "error": null
    },
    "assert add_K_element([(2, 4, 4), (5, 2, 4), (5, 4, 6)], 5) == [(7, 9, 9), (10, 7, 9), (10, 9, 11)]": {
      "result": true,
      "time": 0.059061527252197266,
      "error": null
    },
    "assert add_K_element([(5, 7, 3), (4, 6, 4), (1, 9, 6)], 5) == [(10, 12, 8), (9, 11, 9), (6, 14, 11)]": {
      "result": true,
      "time": 0.06995797157287598,
      "error": null
    },
    "assert add_K_element([(5, 4, 7), (5, 1, 9), (8, 5, 5)], 6) == [(11, 10, 13), (11, 7, 15), (14, 11, 11)]": {
      "result": true,
      "time": 0.060739755630493164,
      "error": null
    },
    "assert add_K_element([(2, 6, 3), (5, 1, 6), (2, 11, 2)], 9) == [(11, 15, 12), (14, 10, 15), (11, 20, 11)]": {
      "result": true,
      "time": 0.06953144073486328,
      "error": null
    },
    "assert add_K_element([(3, 7, 9), (1, 1, 9), (4, 6, 2)], 8) == [(11, 15, 17), (9, 9, 17), (12, 14, 10)]": {
      "result": true,
      "time": 0.056516408920288086,
      "error": null
    },
    "assert add_K_element([(4, 4, 4), (4, 9, 11), (6, 9, 1)], 8) == [(12, 12, 12), (12, 17, 19), (14, 17, 9)]": {
      "result": true,
      "time": 0.07074284553527832,
      "error": null
    },
    "assert add_K_element([(5, 1, 2), (1, 6, 1), (4, 10, 5)], 4) == [(9, 5, 6), (5, 10, 5), (8, 14, 9)]": {
      "result": true,
      "time": 0.058660268783569336,
      "error": null
    },
    "assert add_K_element([(3, 4, 6), (2, 8, 2), (1, 13, 5)], 8) == [(11, 12, 14), (10, 16, 10), (9, 21, 13)]": {
      "result": true,
      "time": 0.0681753158569336,
      "error": null
    },
    "assert add_K_element([(1, 8, 5), (2, 9, 9), (2, 12, 4)], 8) == [(9, 16, 13), (10, 17, 17), (10, 20, 12)]": {
      "result": true,
      "time": 0.06217837333679199,
      "error": null
    },
    "assert add_K_element([(5, 8, 2), (5, 7, 11), (2, 6, 1)], 5) == [(10, 13, 7), (10, 12, 16), (7, 11, 6)]": {
      "result": true,
      "time": 0.062283992767333984,
      "error": null
    },
    "assert add_K_element([(6, 2, 1), (6, 1, 2), (7, 4, 5)], 9) == [(15, 11, 10), (15, 10, 11), (16, 13, 14)]": {
      "result": true,
      "time": 0.06636786460876465,
      "error": null
    },
    "assert add_K_element([(6, 1, 9), (5, 8, 1), (4, 6, 2)], 6) == [(12, 7, 15), (11, 14, 7), (10, 12, 8)]": {
      "result": true,
      "time": 0.05256390571594238,
      "error": null
    },
    "assert add_K_element([(5, 5, 5), (2, 7, 6), (3, 10, 4)], 2) == [(7, 7, 7), (4, 9, 8), (5, 12, 6)]": {
      "result": true,
      "time": 0.0518498420715332,
      "error": null
    },
    "assert add_K_element([(1, 8, 2), (7, 9, 11), (7, 9, 2)], 8) == [(9, 16, 10), (15, 17, 19), (15, 17, 10)]": {
      "result": true,
      "time": 0.05348348617553711,
      "error": null
    },
    "assert add_K_element([(1, 6, 3), (7, 7, 6), (4, 13, 1)], 5) == [(6, 11, 8), (12, 12, 11), (9, 18, 6)]": {
      "result": true,
      "time": 0.05303645133972168,
      "error": null
    },
    "assert add_K_element([(2, 1, 2), (2, 1, 3), (6, 6, 6)], 5) == [(7, 6, 7), (7, 6, 8), (11, 11, 11)]": {
      "result": true,
      "time": 0.07385635375976562,
      "error": null
    },
    "assert add_K_element([(1, 8, 4), (2, 8, 7), (1, 13, 5)], 2) == [(3, 10, 6), (4, 10, 9), (3, 15, 7)]": {
      "result": true,
      "time": 0.055077552795410156,
      "error": null
    },
    "assert add_K_element([(2, 5, 4), (5, 6, 1), (6, 7, 6)], 2) == [(4, 7, 6), (7, 8, 3), (8, 9, 8)]": {
      "result": true,
      "time": 0.05627799034118652,
      "error": null
    },
    "assert add_K_element([(5, 8, 4), (4, 1, 8), (3, 6, 4)], 1) == [(6, 9, 5), (5, 2, 9), (4, 7, 5)]": {
      "result": true,
      "time": 0.04839062690734863,
      "error": null
    },
    "assert add_K_element([(3, 4, 2), (3, 5, 6), (8, 10, 5)], 7) == [(10, 11, 9), (10, 12, 13), (15, 17, 12)]": {
      "result": true,
      "time": 0.05201888084411621,
      "error": null
    },
    "assert add_K_element([(1, 4, 4), (3, 2, 9), (2, 7, 4)], 5) == [(6, 9, 9), (8, 7, 14), (7, 12, 9)]": {
      "result": true,
      "time": 0.05028963088989258,
      "error": null
    },
    "assert add_K_element([(2, 6, 9), (2, 9, 8), (5, 11, 4)], 1) == [(3, 7, 10), (3, 10, 9), (6, 12, 5)]": {
      "result": true,
      "time": 0.05439352989196777,
      "error": null
    },
    "assert add_K_element([(6, 4, 5), (3, 1, 6), (3, 4, 5)], 5) == [(11, 9, 10), (8, 6, 11), (8, 9, 10)]": {
      "result": true,
      "time": 0.053446292877197266,
      "error": null
    },
    "assert add_K_element([(6, 1, 6), (7, 10, 4), (3, 10, 10)], 3) == [(9, 4, 9), (10, 13, 7), (6, 13, 13)]": {
      "result": true,
      "time": 0.04757094383239746,
      "error": null
    },
    "assert add_K_element([(5, 2, 3), (9, 7, 11), (11, 6, 6)], 7) == [(12, 9, 10), (16, 14, 18), (18, 13, 13)]": {
      "result": true,
      "time": 0.0489804744720459,
      "error": null
    },
    "assert add_K_element([(3, 3, 4), (4, 7, 6), (8, 5, 12)], 11) == [(14, 14, 15), (15, 18, 17), (19, 16, 23)]": {
      "result": true,
      "time": 0.04391169548034668,
      "error": null
    },
    "assert add_K_element([(5, 5, 3), (8, 1, 8), (12, 4, 4)], 7) == [(12, 12, 10), (15, 8, 15), (19, 11, 11)]": {
      "result": true,
      "time": 0.04719281196594238,
      "error": null
    },
    "assert add_K_element([(1, 3, 5), (7, 4, 2), (11, 7, 12)], 10) == [(11, 13, 15), (17, 14, 12), (21, 17, 22)]": {
      "result": true,
      "time": 0.04055619239807129,
      "error": null
    },
    "assert add_K_element([(3, 4, 8), (4, 9, 11), (2, 6, 11)], 7) == [(10, 11, 15), (11, 16, 18), (9, 13, 18)]": {
      "result": true,
      "time": 0.04987597465515137,
      "error": null
    },
    "assert add_K_element([(3, 2, 8), (5, 5, 6), (11, 6, 7)], 5) == [(8, 7, 13), (10, 10, 11), (16, 11, 12)]": {
      "result": true,
      "time": 0.06341195106506348,
      "error": null
    },
    "assert add_K_element([(4, 4, 4), (3, 4, 4), (3, 7, 13)], 4) == [(8, 8, 8), (7, 8, 8), (7, 11, 17)]": {
      "result": true,
      "time": 0.04895901679992676,
      "error": null
    },
    "assert add_K_element([(3, 2, 5), (8, 2, 10), (3, 9, 10)], 4) == [(7, 6, 9), (12, 6, 14), (7, 13, 14)]": {
      "result": true,
      "time": 0.055051565170288086,
      "error": null
    },
    "assert add_K_element([(3, 6, 6), (4, 9, 10), (3, 3, 7)], 11) == [(14, 17, 17), (15, 20, 21), (14, 14, 18)]": {
      "result": true,
      "time": 0.05043840408325195,
      "error": null
    },
    "assert add_K_element([(3, 4, 7), (9, 7, 3), (10, 9, 6)], 12) == [(15, 16, 19), (21, 19, 15), (22, 21, 18)]": {
      "result": true,
      "time": 0.05565500259399414,
      "error": null
    },
    "assert add_K_element([(1, 7, 5), (8, 8, 3), (4, 7, 8)], 8) == [(9, 15, 13), (16, 16, 11), (12, 15, 16)]": {
      "result": true,
      "time": 0.05721330642700195,
      "error": null
    },
    "assert add_K_element([(3, 4, 2), (9, 4, 7), (3, 9, 14)], 13) == [(16, 17, 15), (22, 17, 20), (16, 22, 27)]": {
      "result": true,
      "time": 0.06604695320129395,
      "error": null
    },
    "assert add_K_element([(3, 5, 1), (7, 7, 10), (12, 9, 10)], 7) == [(10, 12, 8), (14, 14, 17), (19, 16, 17)]": {
      "result": true,
      "time": 0.053015708923339844,
      "error": null
    },
    "assert add_K_element([(1, 5, 5), (7, 5, 4), (11, 3, 14)], 4) == [(5, 9, 9), (11, 9, 8), (15, 7, 18)]": {
      "result": true,
      "time": 0.058569908142089844,
      "error": null
    },
    "assert add_K_element([(4, 5, 6), (2, 5, 8), (4, 4, 7)], 8) == [(12, 13, 14), (10, 13, 16), (12, 12, 15)]": {
      "result": true,
      "time": 0.06685876846313477,
      "error": null
    },
    "assert add_K_element([(2, 4, 1), (6, 6, 6), (6, 8, 7)], 11) == [(13, 15, 12), (17, 17, 17), (17, 19, 18)]": {
      "result": true,
      "time": 0.06537866592407227,
      "error": null
    },
    "assert add_K_element([(3, 1, 7), (5, 7, 6), (4, 13, 4)], 9) == [(12, 10, 16), (14, 16, 15), (13, 22, 13)]": {
      "result": true,
      "time": 0.0546875,
      "error": null
    },
    "assert add_K_element([(1, 6, 4), (6, 7, 4), (2, 10, 14)], 11) == [(12, 17, 15), (17, 18, 15), (13, 21, 25)]": {
      "result": true,
      "time": 0.06569886207580566,
      "error": null
    },
    "assert add_K_element([(6, 1, 4), (6, 5, 2), (5, 12, 9)], 13) == [(19, 14, 17), (19, 18, 15), (18, 25, 22)]": {
      "result": true,
      "time": 0.06304383277893066,
      "error": null
    },
    "assert add_K_element([(5, 6, 4), (7, 4, 11), (6, 4, 6)], 12) == [(17, 18, 16), (19, 16, 23), (18, 16, 18)]": {
      "result": true,
      "time": 0.06674957275390625,
      "error": null
    },
    "assert add_K_element([(1, 5, 7), (9, 7, 4), (2, 9, 12)], 3) == [(4, 8, 10), (12, 10, 7), (5, 12, 15)]": {
      "result": true,
      "time": 0.0577695369720459,
      "error": null
    },
    "assert add_K_element([(5, 2, 3), (4, 9, 1), (9, 7, 9)], 5) == [(10, 7, 8), (9, 14, 6), (14, 12, 14)]": {
      "result": true,
      "time": 0.04863238334655762,
      "error": null
    },
    "assert add_K_element([(3, 5, 4), (2, 2, 6), (8, 4, 7)], 7) == [(10, 12, 11), (9, 9, 13), (15, 11, 14)]": {
      "result": true,
      "time": 0.04591965675354004,
      "error": null
    },
    "assert add_K_element([(1, 4, 5), (4, 6, 7), (12, 8, 6)], 11) == [(12, 15, 16), (15, 17, 18), (23, 19, 17)]": {
      "result": true,
      "time": 0.0398099422454834,
      "error": null
    },
    "assert add_K_element([(1, 4, 2), (4, 2, 1), (3, 9, 12)], 12) == [(13, 16, 14), (16, 14, 13), (15, 21, 24)]": {
      "result": true,
      "time": 0.05062675476074219,
      "error": null
    },
    "assert add_K_element([(1, 1, 7), (2, 7, 11), (7, 10, 4)], 12) == [(13, 13, 19), (14, 19, 23), (19, 22, 16)]": {
      "result": true,
      "time": 0.03575706481933594,
      "error": null
    },
    "assert add_K_element([(2, 1, 7), (6, 4, 6), (5, 5, 11)], 10) == [(12, 11, 17), (16, 14, 16), (15, 15, 21)]": {
      "result": true,
      "time": 0.038414716720581055,
      "error": null
    },
    "assert add_K_element([(3, 2, 5), (2, 9, 1), (8, 11, 5)], 4) == [(7, 6, 9), (6, 13, 5), (12, 15, 9)]": {
      "result": true,
      "time": 0.043579816818237305,
      "error": null
    },
    "assert add_K_element([(1, 3, 1), (7, 5, 9), (6, 9, 9)], 3) == [(4, 6, 4), (10, 8, 12), (9, 12, 12)]": {
      "result": true,
      "time": 0.03864693641662598,
      "error": null
    },
    "assert add_K_element([(6, 2, 5), (3, 7, 8), (8, 8, 4)], 5) == [(11, 7, 10), (8, 12, 13), (13, 13, 9)]": {
      "result": true,
      "time": 0.04286074638366699,
      "error": null
    },
    "assert add_K_element([(5, 1, 5), (4, 2, 1), (7, 13, 12)], 6) == [(11, 7, 11), (10, 8, 7), (13, 19, 18)]": {
      "result": true,
      "time": 0.03537774085998535,
      "error": null
    },
    "assert add_K_element([(3, 4, 2), (2, 9, 5), (8, 13, 8)], 6) == [(9, 10, 8), (8, 15, 11), (14, 19, 14)]": {
      "result": true,
      "time": 0.03645825386047363,
      "error": null
    },
    "assert add_K_element([(7, 13, 18), (14, 19, 19), (15, 23, 24)], 9) == [(16, 22, 27), (23, 28, 28), (24, 32, 33)]": {
      "result": true,
      "time": 0.041414499282836914,
      "error": null
    },
    "assert add_K_element([(13, 7, 8), (19, 18, 18), (15, 22, 17)], 9) == [(22, 16, 17), (28, 27, 27), (24, 31, 26)]": {
      "result": true,
      "time": 0.0390009880065918,
      "error": null
    },
    "assert add_K_element([(13, 7, 17), (11, 12, 13), (19, 18, 21)], 6) == [(19, 13, 23), (17, 18, 19), (25, 24, 27)]": {
      "result": true,
      "time": 0.03959226608276367,
      "error": null
    },
    "assert add_K_element([(16, 12, 12), (16, 14, 19), (15, 13, 15)], 4) == [(20, 16, 16), (20, 18, 23), (19, 17, 19)]": {
      "result": true,
      "time": 0.0479433536529541,
      "error": null
    },
    "assert add_K_element([(11, 10, 13), (13, 14, 12), (16, 13, 22)], 12) == [(23, 22, 25), (25, 26, 24), (28, 25, 34)]": {
      "result": true,
      "time": 0.04770660400390625,
      "error": null
    },
    "assert add_K_element([(11, 9, 17), (10, 13, 14), (20, 21, 21)], 9) == [(20, 18, 26), (19, 22, 23), (29, 30, 30)]": {
      "result": true,
      "time": 0.046388864517211914,
      "error": null
    },
    "assert add_K_element([(9, 13, 15), (9, 18, 18), (19, 14, 23)], 8) == [(17, 21, 23), (17, 26, 26), (27, 22, 31)]": {
      "result": true,
      "time": 0.04295039176940918,
      "error": null
    },
    "assert add_K_element([(9, 17, 8), (16, 10, 17), (21, 19, 22)], 4) == [(13, 21, 12), (20, 14, 21), (25, 23, 26)]": {
      "result": true,
      "time": 0.0372922420501709,
      "error": null
    },
    "assert add_K_element([(11, 13, 9), (9, 19, 13), (21, 20, 23)], 9) == [(20, 22, 18), (18, 28, 22), (30, 29, 32)]": {
      "result": true,
      "time": 0.039408206939697266,
      "error": null
    },
    "assert add_K_element([(8, 13, 16), (17, 19, 13), (22, 17, 23)], 10) == [(18, 23, 26), (27, 29, 23), (32, 27, 33)]": {
      "result": true,
      "time": 0.04184150695800781,
      "error": null
    },
    "assert add_K_element([(16, 11, 16), (14, 14, 19), (13, 20, 21)], 10) == [(26, 21, 26), (24, 24, 29), (23, 30, 31)]": {
      "result": true,
      "time": 0.04629206657409668,
      "error": null
    },
    "assert add_K_element([(15, 15, 18), (19, 10, 17), (22, 21, 24)], 9) == [(24, 24, 27), (28, 19, 26), (31, 30, 33)]": {
      "result": true,
      "time": 0.0410768985748291,
      "error": null
    },
    "assert add_K_element([(16, 7, 10), (18, 11, 19), (12, 14, 16)], 8) == [(24, 15, 18), (26, 19, 27), (20, 22, 24)]": {
      "result": true,
      "time": 0.04067683219909668,
      "error": null
    },
    "assert add_K_element([(9, 13, 17), (9, 15, 18), (13, 15, 21)], 13) == [(22, 26, 30), (22, 28, 31), (26, 28, 34)]": {
      "result": true,
      "time": 0.039699554443359375,
      "error": null
    },
    "assert add_K_element([(14, 10, 12), (14, 10, 12), (16, 23, 24)], 13) == [(27, 23, 25), (27, 23, 25), (29, 36, 37)]": {
      "result": true,
      "time": 0.03629422187805176,
      "error": null
    },
    "assert add_K_element([(13, 16, 12), (10, 16, 17), (18, 21, 16)], 7) == [(20, 23, 19), (17, 23, 24), (25, 28, 23)]": {
      "result": true,
      "time": 0.04131793975830078,
      "error": null
    },
    "assert add_K_element([(13, 17, 14), (19, 18, 17), (20, 21, 22)], 12) == [(25, 29, 26), (31, 30, 29), (32, 33, 34)]": {
      "result": true,
      "time": 0.04089856147766113,
      "error": null
    },
    "assert add_K_element([(16, 17, 12), (19, 12, 14), (14, 14, 18)], 8) == [(24, 25, 20), (27, 20, 22), (22, 22, 26)]": {
      "result": true,
      "time": 0.04044651985168457,
      "error": null
    },
    "assert add_K_element([(16, 11, 16), (16, 11, 21), (12, 18, 14)], 7) == [(23, 18, 23), (23, 18, 28), (19, 25, 21)]": {
      "result": true,
      "time": 0.044037580490112305,
      "error": null
    },
    "assert add_K_element([(13, 13, 9), (19, 10, 11), (17, 20, 24)], 13) == [(26, 26, 22), (32, 23, 24), (30, 33, 37)]": {
      "result": true,
      "time": 0.04012942314147949,
      "error": null
    },
    "assert add_K_element([(14, 11, 9), (13, 18, 20), (13, 21, 15)], 10) == [(24, 21, 19), (23, 28, 30), (23, 31, 25)]": {
      "result": true,
      "time": 0.040448904037475586,
      "error": null
    },
    "assert add_K_element([(9, 9, 10), (18, 18, 19), (16, 22, 24)], 7) == [(16, 16, 17), (25, 25, 26), (23, 29, 31)]": {
      "result": true,
      "time": 0.04998660087585449,
      "error": null
    },
    "assert add_K_element([(13, 9, 18), (19, 12, 20), (22, 19, 22)], 12) == [(25, 21, 30), (31, 24, 32), (34, 31, 34)]": {
      "result": true,
      "time": 0.04064798355102539,
      "error": null
    },
    "assert add_K_element([(9, 9, 8), (17, 20, 17), (22, 23, 16)], 11) == [(20, 20, 19), (28, 31, 28), (33, 34, 27)]": {
      "result": true,
      "time": 0.041815996170043945,
      "error": null
    },
    "assert add_K_element([(13, 12, 13), (17, 16, 21), (14, 15, 24)], 7) == [(20, 19, 20), (24, 23, 28), (21, 22, 31)]": {
      "result": true,
      "time": 0.050904273986816406,
      "error": null
    },
    "assert add_K_element([(15, 15, 13), (18, 18, 12), (14, 20, 15)], 4) == [(19, 19, 17), (22, 22, 16), (18, 24, 19)]": {
      "result": true,
      "time": 0.045571327209472656,
      "error": null
    },
    "assert add_K_element([(11, 13, 9), (17, 14, 16), (17, 21, 14)], 6) == [(17, 19, 15), (23, 20, 22), (23, 27, 20)]": {
      "result": true,
      "time": 0.04448819160461426,
      "error": null
    },
    "assert add_K_element([(14, 13, 16), (18, 18, 16), (21, 16, 23)], 6) == [(20, 19, 22), (24, 24, 22), (27, 22, 29)]": {
      "result": true,
      "time": 0.0418553352355957,
      "error": null
    },
    "assert add_K_element([(12, 14, 14), (14, 10, 16), (22, 14, 14)], 5) == [(17, 19, 19), (19, 15, 21), (27, 19, 19)]": {
      "result": true,
      "time": 0.03897666931152344,
      "error": null
    },
    "assert add_K_element([(12, 13, 9), (14, 17, 13), (14, 19, 16)], 6) == [(18, 19, 15), (20, 23, 19), (20, 25, 22)]": {
      "result": true,
      "time": 0.037667036056518555,
      "error": null
    },
    "assert add_K_element([(12, 17, 15), (15, 11, 21), (18, 19, 21)], 4) == [(16, 21, 19), (19, 15, 25), (22, 23, 25)]": {
      "result": true,
      "time": 0.039852142333984375,
      "error": null
    },
    "assert add_K_element([(14, 11, 16), (15, 11, 13), (18, 17, 22)], 5) == [(19, 16, 21), (20, 16, 18), (23, 22, 27)]": {
      "result": true,
      "time": 0.043503522872924805,
      "error": null
    },
    "assert add_K_element([(14, 10, 9), (19, 11, 12), (13, 20, 22)], 11) == [(25, 21, 20), (30, 22, 23), (24, 31, 33)]": {
      "result": true,
      "time": 0.04135322570800781,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}