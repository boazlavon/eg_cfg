{
  "code": "def count_Primes_nums(n):\n    if n <= 2:\n        return 0\n    primes = [True] * n\n    primes[0] = False\n    primes[1] = False\n    for i in range(2, int(n ** 0.5) + 1):\n        if primes[i]:\n            for j in range(i * i, n, i):\n                primes[j] = False\n    count = 0\n    for is_prime in primes:\n        if is_prime:\n            count += 1\n    return count",
  "results": {
    "assert count_Primes_nums(5) == 2": {
      "result": true,
      "time": 0.04130291938781738,
      "error": null
    },
    "assert count_Primes_nums(10) == 4": {
      "result": true,
      "time": 0.04286646842956543,
      "error": null
    },
    "assert count_Primes_nums(100) == 25": {
      "result": true,
      "time": 0.036452531814575195,
      "error": null
    },
    "assert count_Primes_nums(2) == 0": {
      "result": true,
      "time": 0.03572344779968262,
      "error": null
    },
    "assert count_Primes_nums(3) == 1": {
      "result": true,
      "time": 0.04150032997131348,
      "error": null
    },
    "assert count_Primes_nums(9) == 4": {
      "result": true,
      "time": 0.04052424430847168,
      "error": null
    },
    "assert count_Primes_nums(7) == 3": {
      "result": true,
      "time": 0.04163479804992676,
      "error": null
    },
    "assert count_Primes_nums(1) == 0": {
      "result": true,
      "time": 0.04572272300720215,
      "error": null
    },
    "assert count_Primes_nums(8) == 4": {
      "result": true,
      "time": 0.04302549362182617,
      "error": null
    },
    "assert count_Primes_nums(4) == 2": {
      "result": true,
      "time": 0.044225454330444336,
      "error": null
    },
    "assert count_Primes_nums(6) == 3": {
      "result": true,
      "time": 0.04135751724243164,
      "error": null
    },
    "assert count_Primes_nums(15) == 6": {
      "result": true,
      "time": 0.041291236877441406,
      "error": null
    },
    "assert count_Primes_nums(11) == 4": {
      "result": true,
      "time": 0.04559493064880371,
      "error": null
    },
    "assert count_Primes_nums(14) == 6": {
      "result": true,
      "time": 0.04558300971984863,
      "error": null
    },
    "assert count_Primes_nums(13) == 5": {
      "result": true,
      "time": 0.042221784591674805,
      "error": null
    },
    "assert count_Primes_nums(12) == 5": {
      "result": true,
      "time": 0.04096221923828125,
      "error": null
    },
    "assert count_Primes_nums(98) == 25": {
      "result": true,
      "time": 0.04453635215759277,
      "error": null
    },
    "assert count_Primes_nums(99) == 25": {
      "result": true,
      "time": 0.03936624526977539,
      "error": null
    },
    "assert count_Primes_nums(104) == 27": {
      "result": true,
      "time": 0.03877568244934082,
      "error": null
    },
    "assert count_Primes_nums(101) == 25": {
      "result": true,
      "time": 0.04722714424133301,
      "error": null
    },
    "assert count_Primes_nums(103) == 26": {
      "result": true,
      "time": 0.042424917221069336,
      "error": null
    },
    "assert count_Primes_nums(97) == 24": {
      "result": true,
      "time": 0.04063105583190918,
      "error": null
    },
    "assert count_Primes_nums(95) == 24": {
      "result": true,
      "time": 0.037389278411865234,
      "error": null
    },
    "assert count_Primes_nums(96) == 24": {
      "result": true,
      "time": 0.04272818565368652,
      "error": null
    },
    "assert count_Primes_nums(102) == 26": {
      "result": true,
      "time": 0.04247260093688965,
      "error": null
    },
    "assert count_Primes_nums(105) == 27": {
      "result": true,
      "time": 0.04695463180541992,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}