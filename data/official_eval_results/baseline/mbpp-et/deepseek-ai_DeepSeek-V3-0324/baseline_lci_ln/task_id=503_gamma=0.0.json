{
  "code": "def add_consecutive_nums(numbers):\n    result = []\n    for i in range(len(numbers) - 1):\n        current_num = numbers[i]\n        next_num = numbers[i + 1]\n        sum_pair = current_num + next_num\n        result.append(sum_pair)\n    return result",
  "results": {
    "assert add_consecutive_nums([1, 1, 3, 4, 4, 5, 6, 7])==[2, 4, 7, 8, 9, 11, 13]": {
      "result": true,
      "time": 0.04008150100708008,
      "error": null
    },
    "assert add_consecutive_nums([4, 5, 8, 9, 6, 10])==[9, 13, 17, 15, 16]": {
      "result": true,
      "time": 0.03767824172973633,
      "error": null
    },
    "assert add_consecutive_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[3, 5, 7, 9, 11, 13, 15, 17, 19]": {
      "result": true,
      "time": 0.04073834419250488,
      "error": null
    },
    "assert add_consecutive_nums([1, 4, 1, 5, 7, 8, 1, 10]) == [5, 5, 6, 12, 15, 9, 11]": {
      "result": true,
      "time": 0.03896188735961914,
      "error": null
    },
    "assert add_consecutive_nums([6, 1, 8, 3, 1, 10, 9, 12]) == [7, 9, 11, 4, 11, 19, 21]": {
      "result": true,
      "time": 0.0391848087310791,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 2, 3, 9, 2, 4, 6]) == [6, 7, 5, 12, 11, 6, 10]": {
      "result": true,
      "time": 0.04369091987609863,
      "error": null
    },
    "assert add_consecutive_nums([4, 1, 7, 5, 5, 3, 7, 11]) == [5, 8, 12, 10, 8, 10, 18]": {
      "result": true,
      "time": 0.03560614585876465,
      "error": null
    },
    "assert add_consecutive_nums([6, 5, 1, 8, 1, 5, 9, 3]) == [11, 6, 9, 9, 6, 14, 12]": {
      "result": true,
      "time": 0.045441627502441406,
      "error": null
    },
    "assert add_consecutive_nums([2, 2, 7, 1, 9, 4, 11, 6]) == [4, 9, 8, 10, 13, 15, 17]": {
      "result": true,
      "time": 0.05316519737243652,
      "error": null
    },
    "assert add_consecutive_nums([4, 6, 6, 1, 3, 3, 10, 8]) == [10, 12, 7, 4, 6, 13, 18]": {
      "result": true,
      "time": 0.054772138595581055,
      "error": null
    },
    "assert add_consecutive_nums([6, 1, 2, 9, 4, 2, 3, 3]) == [7, 3, 11, 13, 6, 5, 6]": {
      "result": true,
      "time": 0.04879307746887207,
      "error": null
    },
    "assert add_consecutive_nums([1, 1, 8, 4, 9, 9, 4, 8]) == [2, 9, 12, 13, 18, 13, 12]": {
      "result": true,
      "time": 0.06064581871032715,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 6, 5, 7, 7, 3, 7]) == [6, 11, 11, 12, 14, 10, 10]": {
      "result": true,
      "time": 0.04190564155578613,
      "error": null
    },
    "assert add_consecutive_nums([2, 2, 2, 6, 2, 6, 1, 6]) == [4, 4, 8, 8, 8, 7, 7]": {
      "result": true,
      "time": 0.0558779239654541,
      "error": null
    },
    "assert add_consecutive_nums([3, 6, 3, 7, 5, 2, 1, 3]) == [9, 9, 10, 12, 7, 3, 4]": {
      "result": true,
      "time": 0.0599665641784668,
      "error": null
    },
    "assert add_consecutive_nums([2, 3, 1, 6, 9, 1, 1, 9]) == [5, 4, 7, 15, 10, 2, 10]": {
      "result": true,
      "time": 0.04250526428222656,
      "error": null
    },
    "assert add_consecutive_nums([1, 1, 1, 4, 2, 3, 6, 3]) == [2, 2, 5, 6, 5, 9, 9]": {
      "result": true,
      "time": 0.041712045669555664,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 5, 3, 3, 10, 11, 5]) == [6, 10, 8, 6, 13, 21, 16]": {
      "result": true,
      "time": 0.046682119369506836,
      "error": null
    },
    "assert add_consecutive_nums([1, 6, 8, 3, 3, 5, 1, 12]) == [7, 14, 11, 6, 8, 6, 13]": {
      "result": true,
      "time": 0.05280590057373047,
      "error": null
    },
    "assert add_consecutive_nums([1, 2, 4, 2, 1, 8, 11, 8]) == [3, 6, 6, 3, 9, 19, 19]": {
      "result": true,
      "time": 0.04452204704284668,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 1, 6, 2, 8, 3, 6]) == [12, 7, 7, 8, 10, 11, 9]": {
      "result": true,
      "time": 0.04837203025817871,
      "error": null
    },
    "assert add_consecutive_nums([3, 1, 7, 9, 9, 5, 9, 9]) == [4, 8, 16, 18, 14, 14, 18]": {
      "result": true,
      "time": 0.04097604751586914,
      "error": null
    },
    "assert add_consecutive_nums([4, 4, 6, 6, 8, 8, 2, 3]) == [8, 10, 12, 14, 16, 10, 5]": {
      "result": true,
      "time": 0.045000314712524414,
      "error": null
    },
    "assert add_consecutive_nums([4, 5, 2, 6, 8, 10, 11, 3]) == [9, 7, 8, 14, 18, 21, 14]": {
      "result": true,
      "time": 0.04655718803405762,
      "error": null
    },
    "assert add_consecutive_nums([1, 6, 6, 9, 6, 2, 11, 9]) == [7, 12, 15, 15, 8, 13, 20]": {
      "result": true,
      "time": 0.06122565269470215,
      "error": null
    },
    "assert add_consecutive_nums([4, 5, 2, 1, 5, 5, 11, 11]) == [9, 7, 3, 6, 10, 16, 22]": {
      "result": true,
      "time": 0.04439949989318848,
      "error": null
    },
    "assert add_consecutive_nums([5, 4, 8, 6, 8, 1, 2, 6]) == [9, 12, 14, 14, 9, 3, 8]": {
      "result": true,
      "time": 0.0430145263671875,
      "error": null
    },
    "assert add_consecutive_nums([3, 2, 2, 9, 3, 4, 5, 11]) == [5, 4, 11, 12, 7, 9, 16]": {
      "result": true,
      "time": 0.05504441261291504,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 3, 4, 5, 5, 9, 4]) == [12, 9, 7, 9, 10, 14, 13]": {
      "result": true,
      "time": 0.04677724838256836,
      "error": null
    },
    "assert add_consecutive_nums([5, 4, 3, 1, 9, 2, 7, 10]) == [9, 7, 4, 10, 11, 9, 17]": {
      "result": true,
      "time": 0.06742143630981445,
      "error": null
    },
    "assert add_consecutive_nums([5, 6, 1, 3, 3, 8, 9, 8]) == [11, 7, 4, 6, 11, 17, 17]": {
      "result": true,
      "time": 0.04704022407531738,
      "error": null
    },
    "assert add_consecutive_nums([4, 1, 2, 2, 7, 5, 2, 10]) == [5, 3, 4, 9, 12, 7, 12]": {
      "result": true,
      "time": 0.0407717227935791,
      "error": null
    },
    "assert add_consecutive_nums([2, 1, 4, 9, 1, 8, 8, 10]) == [3, 5, 13, 10, 9, 16, 18]": {
      "result": true,
      "time": 0.04151463508605957,
      "error": null
    },
    "assert add_consecutive_nums([5, 1, 5, 8, 6, 10, 1, 4]) == [6, 6, 13, 14, 16, 11, 5]": {
      "result": true,
      "time": 0.04105019569396973,
      "error": null
    },
    "assert add_consecutive_nums([4, 3, 5, 9, 6, 10, 9, 11]) == [7, 8, 14, 15, 16, 19, 20]": {
      "result": true,
      "time": 0.04711651802062988,
      "error": null
    },
    "assert add_consecutive_nums([6, 2, 7, 5, 9, 7, 3, 11]) == [8, 9, 12, 14, 16, 10, 14]": {
      "result": true,
      "time": 0.04382467269897461,
      "error": null
    },
    "assert add_consecutive_nums([7, 4, 6, 11, 5, 9]) == [11, 10, 17, 16, 14]": {
      "result": true,
      "time": 0.041138648986816406,
      "error": null
    },
    "assert add_consecutive_nums([5, 7, 7, 5, 8, 14]) == [12, 14, 12, 13, 22]": {
      "result": true,
      "time": 0.04291987419128418,
      "error": null
    },
    "assert add_consecutive_nums([8, 5, 4, 12, 6, 12]) == [13, 9, 16, 18, 18]": {
      "result": true,
      "time": 0.03643202781677246,
      "error": null
    },
    "assert add_consecutive_nums([6, 4, 4, 14, 10, 13]) == [10, 8, 18, 24, 23]": {
      "result": true,
      "time": 0.03817582130432129,
      "error": null
    },
    "assert add_consecutive_nums([4, 10, 12, 6, 11, 7]) == [14, 22, 18, 17, 18]": {
      "result": true,
      "time": 0.04812312126159668,
      "error": null
    },
    "assert add_consecutive_nums([9, 4, 7, 14, 5, 14]) == [13, 11, 21, 19, 19]": {
      "result": true,
      "time": 0.0415804386138916,
      "error": null
    },
    "assert add_consecutive_nums([6, 1, 4, 9, 7, 9]) == [7, 5, 13, 16, 16]": {
      "result": true,
      "time": 0.0343775749206543,
      "error": null
    },
    "assert add_consecutive_nums([9, 4, 8, 7, 1, 6]) == [13, 12, 15, 8, 7]": {
      "result": true,
      "time": 0.03628206253051758,
      "error": null
    },
    "assert add_consecutive_nums([8, 4, 12, 12, 8, 13]) == [12, 16, 24, 20, 21]": {
      "result": true,
      "time": 0.04206061363220215,
      "error": null
    },
    "assert add_consecutive_nums([6, 9, 6, 10, 1, 12]) == [15, 15, 16, 11, 13]": {
      "result": true,
      "time": 0.038388729095458984,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 7, 9, 2, 15]) == [12, 13, 16, 11, 17]": {
      "result": true,
      "time": 0.05436849594116211,
      "error": null
    },
    "assert add_consecutive_nums([9, 10, 8, 11, 8, 12]) == [19, 18, 19, 19, 20]": {
      "result": true,
      "time": 0.0568699836730957,
      "error": null
    },
    "assert add_consecutive_nums([9, 4, 5, 10, 4, 7]) == [13, 9, 15, 14, 11]": {
      "result": true,
      "time": 0.052320003509521484,
      "error": null
    },
    "assert add_consecutive_nums([2, 9, 6, 8, 2, 6]) == [11, 15, 14, 10, 8]": {
      "result": true,
      "time": 0.05487322807312012,
      "error": null
    },
    "assert add_consecutive_nums([9, 5, 13, 11, 10, 13]) == [14, 18, 24, 21, 23]": {
      "result": true,
      "time": 0.044638872146606445,
      "error": null
    },
    "assert add_consecutive_nums([9, 1, 4, 13, 8, 12]) == [10, 5, 17, 21, 20]": {
      "result": true,
      "time": 0.047302961349487305,
      "error": null
    },
    "assert add_consecutive_nums([9, 9, 13, 6, 7, 8]) == [18, 22, 19, 13, 15]": {
      "result": true,
      "time": 0.047333478927612305,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 10, 9, 8, 7]) == [6, 15, 19, 17, 15]": {
      "result": true,
      "time": 0.04317355155944824,
      "error": null
    },
    "assert add_consecutive_nums([1, 3, 9, 13, 11, 5]) == [4, 12, 22, 24, 16]": {
      "result": true,
      "time": 0.04708147048950195,
      "error": null
    },
    "assert add_consecutive_nums([2, 8, 4, 11, 7, 11]) == [10, 12, 15, 18, 18]": {
      "result": true,
      "time": 0.045984506607055664,
      "error": null
    },
    "assert add_consecutive_nums([7, 8, 13, 11, 2, 6]) == [15, 21, 24, 13, 8]": {
      "result": true,
      "time": 0.03963184356689453,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 4, 13, 6, 8]) == [12, 10, 17, 19, 14]": {
      "result": true,
      "time": 0.036466121673583984,
      "error": null
    },
    "assert add_consecutive_nums([4, 8, 10, 7, 5, 5]) == [12, 18, 17, 12, 10]": {
      "result": true,
      "time": 0.035495758056640625,
      "error": null
    },
    "assert add_consecutive_nums([3, 1, 8, 10, 8, 11]) == [4, 9, 18, 18, 19]": {
      "result": true,
      "time": 0.034717559814453125,
      "error": null
    },
    "assert add_consecutive_nums([8, 5, 10, 5, 3, 9]) == [13, 15, 15, 8, 12]": {
      "result": true,
      "time": 0.03465700149536133,
      "error": null
    },
    "assert add_consecutive_nums([7, 9, 7, 12, 7, 7]) == [16, 16, 19, 19, 14]": {
      "result": true,
      "time": 0.034293413162231445,
      "error": null
    },
    "assert add_consecutive_nums([7, 2, 9, 9, 11, 12]) == [9, 11, 18, 20, 23]": {
      "result": true,
      "time": 0.03489041328430176,
      "error": null
    },
    "assert add_consecutive_nums([6, 5, 7, 7, 8, 14]) == [11, 12, 14, 15, 22]": {
      "result": true,
      "time": 0.03956198692321777,
      "error": null
    },
    "assert add_consecutive_nums([8, 2, 3, 13, 7, 9]) == [10, 5, 16, 20, 16]": {
      "result": true,
      "time": 0.029053926467895508,
      "error": null
    },
    "assert add_consecutive_nums([2, 9, 10, 10, 5, 14]) == [11, 19, 20, 15, 19]": {
      "result": true,
      "time": 0.03492164611816406,
      "error": null
    },
    "assert add_consecutive_nums([2, 8, 8, 4, 2, 10]) == [10, 16, 12, 6, 12]": {
      "result": true,
      "time": 0.03229355812072754,
      "error": null
    },
    "assert add_consecutive_nums([3, 7, 5, 8, 8, 8]) == [10, 12, 13, 16, 16]": {
      "result": true,
      "time": 0.03202700614929199,
      "error": null
    },
    "assert add_consecutive_nums([9, 3, 13, 9, 3, 5]) == [12, 16, 22, 12, 8]": {
      "result": true,
      "time": 0.03336906433105469,
      "error": null
    },
    "assert add_consecutive_nums([4, 6, 8, 6, 2, 9, 6, 6, 6, 9]) == [10, 14, 14, 8, 11, 15, 12, 12, 15]": {
      "result": true,
      "time": 0.03365755081176758,
      "error": null
    },
    "assert add_consecutive_nums([1, 2, 4, 5, 7, 4, 2, 3, 6, 5]) == [3, 6, 9, 12, 11, 6, 5, 9, 11]": {
      "result": true,
      "time": 0.03729867935180664,
      "error": null
    },
    "assert add_consecutive_nums([5, 4, 2, 3, 2, 7, 5, 6, 12, 11]) == [9, 6, 5, 5, 9, 12, 11, 18, 23]": {
      "result": true,
      "time": 0.032377004623413086,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 7, 1, 1, 4, 3, 11, 12, 15]) == [6, 12, 8, 2, 5, 7, 14, 23, 27]": {
      "result": true,
      "time": 0.03326010704040527,
      "error": null
    },
    "assert add_consecutive_nums([6, 3, 8, 4, 8, 9, 11, 9, 6, 12]) == [9, 11, 12, 12, 17, 20, 20, 15, 18]": {
      "result": true,
      "time": 0.037273406982421875,
      "error": null
    },
    "assert add_consecutive_nums([4, 3, 1, 4, 7, 10, 4, 10, 11, 14]) == [7, 4, 5, 11, 17, 14, 14, 21, 25]": {
      "result": true,
      "time": 0.03316950798034668,
      "error": null
    },
    "assert add_consecutive_nums([5, 2, 4, 6, 8, 8, 3, 11, 11, 13]) == [7, 6, 10, 14, 16, 11, 14, 22, 24]": {
      "result": true,
      "time": 0.03687429428100586,
      "error": null
    },
    "assert add_consecutive_nums([2, 5, 6, 5, 7, 5, 11, 8, 12, 7]) == [7, 11, 11, 12, 12, 16, 19, 20, 19]": {
      "result": true,
      "time": 0.03578352928161621,
      "error": null
    },
    "assert add_consecutive_nums([1, 4, 2, 4, 9, 11, 9, 3, 12, 6]) == [5, 6, 6, 13, 20, 20, 12, 15, 18]": {
      "result": true,
      "time": 0.033274173736572266,
      "error": null
    },
    "assert add_consecutive_nums([2, 4, 8, 1, 9, 11, 3, 8, 11, 15]) == [6, 12, 9, 10, 20, 14, 11, 19, 26]": {
      "result": true,
      "time": 0.03109002113342285,
      "error": null
    },
    "assert add_consecutive_nums([5, 4, 2, 4, 6, 1, 11, 9, 4, 8]) == [9, 6, 6, 10, 7, 12, 20, 13, 12]": {
      "result": true,
      "time": 0.03542518615722656,
      "error": null
    },
    "assert add_consecutive_nums([3, 6, 4, 5, 2, 4, 4, 13, 10, 7]) == [9, 10, 9, 7, 6, 8, 17, 23, 17]": {
      "result": true,
      "time": 0.043417930603027344,
      "error": null
    },
    "assert add_consecutive_nums([1, 3, 6, 2, 1, 5, 6, 9, 4, 5]) == [4, 9, 8, 3, 6, 11, 15, 13, 9]": {
      "result": true,
      "time": 0.033570289611816406,
      "error": null
    },
    "assert add_consecutive_nums([5, 7, 8, 5, 5, 3, 7, 5, 9, 5]) == [12, 15, 13, 10, 8, 10, 12, 14, 14]": {
      "result": true,
      "time": 0.03001260757446289,
      "error": null
    },
    "assert add_consecutive_nums([3, 7, 2, 2, 1, 1, 7, 3, 13, 15]) == [10, 9, 4, 3, 2, 8, 10, 16, 28]": {
      "result": true,
      "time": 0.04636526107788086,
      "error": null
    },
    "assert add_consecutive_nums([6, 3, 4, 6, 3, 7, 5, 10, 9, 5]) == [9, 7, 10, 9, 10, 12, 15, 19, 14]": {
      "result": true,
      "time": 0.0395045280456543,
      "error": null
    },
    "assert add_consecutive_nums([6, 2, 1, 9, 1, 8, 5, 3, 12, 15]) == [8, 3, 10, 10, 9, 13, 8, 15, 27]": {
      "result": true,
      "time": 0.039435386657714844,
      "error": null
    },
    "assert add_consecutive_nums([3, 2, 7, 6, 9, 9, 10, 6, 12, 10]) == [5, 9, 13, 15, 18, 19, 16, 18, 22]": {
      "result": true,
      "time": 0.035442352294921875,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 3, 5, 5, 8, 6, 12, 12, 8]) == [6, 8, 8, 10, 13, 14, 18, 24, 20]": {
      "result": true,
      "time": 0.0375218391418457,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 8, 9, 3, 5, 9, 6, 6, 6]) == [12, 14, 17, 12, 8, 14, 15, 12, 12]": {
      "result": true,
      "time": 0.031064987182617188,
      "error": null
    },
    "assert add_consecutive_nums([1, 4, 7, 1, 2, 2, 5, 10, 13, 14]) == [5, 11, 8, 3, 4, 7, 15, 23, 27]": {
      "result": true,
      "time": 0.0343935489654541,
      "error": null
    },
    "assert add_consecutive_nums([2, 5, 3, 8, 10, 4, 6, 13, 11, 14]) == [7, 8, 11, 18, 14, 10, 19, 24, 25]": {
      "result": true,
      "time": 0.03389334678649902,
      "error": null
    },
    "assert add_consecutive_nums([2, 5, 1, 2, 2, 1, 7, 8, 6, 14]) == [7, 6, 3, 4, 3, 8, 15, 14, 20]": {
      "result": true,
      "time": 0.03467750549316406,
      "error": null
    },
    "assert add_consecutive_nums([3, 2, 3, 8, 9, 7, 6, 5, 8, 12]) == [5, 5, 11, 17, 16, 13, 11, 13, 20]": {
      "result": true,
      "time": 0.037145376205444336,
      "error": null
    },
    "assert add_consecutive_nums([3, 6, 8, 3, 9, 7, 6, 10, 7, 12]) == [9, 14, 11, 12, 16, 13, 16, 17, 19]": {
      "result": true,
      "time": 0.0352175235748291,
      "error": null
    },
    "assert add_consecutive_nums([5, 4, 7, 2, 2, 8, 6, 5, 7, 10]) == [9, 11, 9, 4, 10, 14, 11, 12, 17]": {
      "result": true,
      "time": 0.033130645751953125,
      "error": null
    },
    "assert add_consecutive_nums([5, 1, 7, 5, 3, 11, 7, 12, 10, 15]) == [6, 8, 12, 8, 14, 18, 19, 22, 25]": {
      "result": true,
      "time": 0.036075592041015625,
      "error": null
    },
    "assert add_consecutive_nums([2, 5, 4, 5, 1, 5, 8, 13, 5, 12]) == [7, 9, 9, 6, 6, 13, 21, 18, 17]": {
      "result": true,
      "time": 0.0352632999420166,
      "error": null
    },
    "assert add_consecutive_nums([4, 6, 7, 4, 1, 11, 11, 8, 7, 8]) == [10, 13, 11, 5, 12, 22, 19, 15, 15]": {
      "result": true,
      "time": 0.03799557685852051,
      "error": null
    },
    "assert add_consecutive_nums([4, 1, 5, 7, 4, 3, 6, 5, 12, 11]) == [5, 6, 12, 11, 7, 9, 11, 17, 23]": {
      "result": true,
      "time": 0.034778594970703125,
      "error": null
    },
    "assert add_consecutive_nums([1, 4, 6, 6, 6, 6, 9, 6, 9, 11]) == [5, 10, 12, 12, 12, 15, 15, 15, 20]": {
      "result": true,
      "time": 0.03397655487060547,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 8, 9, 10, 6, 6, 7, 12, 7]) == [12, 14, 17, 19, 16, 12, 13, 19, 19]": {
      "result": true,
      "time": 0.03625607490539551,
      "error": null
    },
    "assert add_consecutive_nums([4, 1, 4, 8, 1, 10, 2, 12, 8, 5]) == [5, 5, 12, 9, 11, 12, 14, 20, 13]": {
      "result": true,
      "time": 0.031223773956298828,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}