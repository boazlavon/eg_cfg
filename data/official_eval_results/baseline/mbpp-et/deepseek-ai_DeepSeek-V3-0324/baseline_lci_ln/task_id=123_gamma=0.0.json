{
  "code": "def amicable_numbers_sum(limit):\n    def sum_proper_divisors(n):\n        if n == 1:\n            return 0\n        sum_div = 1\n        sqrt_n = int(n ** 0.5)\n        for i in range(2, sqrt_n + 1):\n            if n % i == 0:\n                sum_div += i\n                counterpart = n // i\n                if counterpart != i:\n                    sum_div += counterpart\n        return sum_div\n\n    amicable_sum = 0\n    checked = set()\n    for a in range(1, limit + 1):\n        if a in checked:\n            continue\n        b = sum_proper_divisors(a)\n        if b != a and sum_proper_divisors(b) == a and b <= limit:\n            amicable_sum += a\n            if b > a:\n                amicable_sum += b\n            checked.add(a)\n            checked.add(b)\n    return amicable_sum",
  "results": {
    "assert amicable_numbers_sum(999)==504": {
      "result": false,
      "time": 0.03899979591369629,
      "error": null
    },
    "assert amicable_numbers_sum(9999)==31626": {
      "result": false,
      "time": 0.09891963005065918,
      "error": null
    },
    "assert amicable_numbers_sum(99)==0": {
      "result": false,
      "time": 0.04799342155456543,
      "error": null
    },
    "assert amicable_numbers_sum(997) == 504": {
      "result": false,
      "time": 0.04340362548828125,
      "error": null
    },
    "assert amicable_numbers_sum(999) == 504": {
      "result": false,
      "time": 0.03897500038146973,
      "error": null
    },
    "assert amicable_numbers_sum(998) == 504": {
      "result": false,
      "time": 0.04238176345825195,
      "error": null
    },
    "assert amicable_numbers_sum(995) == 504": {
      "result": false,
      "time": 0.04900503158569336,
      "error": null
    },
    "assert amicable_numbers_sum(994) == 504": {
      "result": false,
      "time": 0.05580925941467285,
      "error": null
    },
    "assert amicable_numbers_sum(1001) == 504": {
      "result": false,
      "time": 0.04584956169128418,
      "error": null
    },
    "assert amicable_numbers_sum(1000) == 504": {
      "result": false,
      "time": 0.0463557243347168,
      "error": null
    },
    "assert amicable_numbers_sum(1004) == 504": {
      "result": false,
      "time": 0.040129661560058594,
      "error": null
    },
    "assert amicable_numbers_sum(1003) == 504": {
      "result": false,
      "time": 0.04664921760559082,
      "error": null
    },
    "assert amicable_numbers_sum(1002) == 504": {
      "result": false,
      "time": 0.04526710510253906,
      "error": null
    },
    "assert amicable_numbers_sum(996) == 504": {
      "result": false,
      "time": 0.04876422882080078,
      "error": null
    },
    "assert amicable_numbers_sum(10106) == 31626": {
      "result": false,
      "time": 0.10628318786621094,
      "error": null
    },
    "assert amicable_numbers_sum(10465) == 31626": {
      "result": false,
      "time": 0.1157228946685791,
      "error": null
    },
    "assert amicable_numbers_sum(9063) == 31626": {
      "result": false,
      "time": 0.09302020072937012,
      "error": null
    },
    "assert amicable_numbers_sum(10085) == 31626": {
      "result": false,
      "time": 0.11341094970703125,
      "error": null
    },
    "assert amicable_numbers_sum(10694) == 31626": {
      "result": false,
      "time": 0.10835719108581543,
      "error": null
    },
    "assert amicable_numbers_sum(9085) == 31626": {
      "result": false,
      "time": 0.09199070930480957,
      "error": null
    },
    "assert amicable_numbers_sum(10769) == 42370": {
      "result": false,
      "time": 0.1224207878112793,
      "error": null
    },
    "assert amicable_numbers_sum(9553) == 31626": {
      "result": false,
      "time": 0.10513710975646973,
      "error": null
    },
    "assert amicable_numbers_sum(8951) == 31626": {
      "result": false,
      "time": 0.09841775894165039,
      "error": null
    },
    "assert amicable_numbers_sum(9393) == 31626": {
      "result": false,
      "time": 0.10394287109375,
      "error": null
    },
    "assert amicable_numbers_sum(10611) == 31626": {
      "result": false,
      "time": 0.11936640739440918,
      "error": null
    },
    "assert amicable_numbers_sum(10259) == 31626": {
      "result": false,
      "time": 0.10239839553833008,
      "error": null
    },
    "assert amicable_numbers_sum(10565) == 31626": {
      "result": false,
      "time": 0.11376833915710449,
      "error": null
    },
    "assert amicable_numbers_sum(9375) == 31626": {
      "result": false,
      "time": 0.09148693084716797,
      "error": null
    },
    "assert amicable_numbers_sum(9011) == 31626": {
      "result": false,
      "time": 0.09353947639465332,
      "error": null
    },
    "assert amicable_numbers_sum(9714) == 31626": {
      "result": false,
      "time": 0.10708236694335938,
      "error": null
    },
    "assert amicable_numbers_sum(9721) == 31626": {
      "result": false,
      "time": 0.10805010795593262,
      "error": null
    },
    "assert amicable_numbers_sum(10431) == 31626": {
      "result": false,
      "time": 0.11772656440734863,
      "error": null
    },
    "assert amicable_numbers_sum(9299) == 31626": {
      "result": false,
      "time": 0.1028890609741211,
      "error": null
    },
    "assert amicable_numbers_sum(9081) == 31626": {
      "result": false,
      "time": 0.09554672241210938,
      "error": null
    },
    "assert amicable_numbers_sum(10028) == 31626": {
      "result": false,
      "time": 0.10637426376342773,
      "error": null
    },
    "assert amicable_numbers_sum(10673) == 31626": {
      "result": false,
      "time": 0.11841893196105957,
      "error": null
    },
    "assert amicable_numbers_sum(9992) == 31626": {
      "result": false,
      "time": 0.10658597946166992,
      "error": null
    },
    "assert amicable_numbers_sum(9137) == 31626": {
      "result": false,
      "time": 0.09611392021179199,
      "error": null
    },
    "assert amicable_numbers_sum(9403) == 31626": {
      "result": false,
      "time": 0.0937349796295166,
      "error": null
    },
    "assert amicable_numbers_sum(10549) == 31626": {
      "result": false,
      "time": 0.10898303985595703,
      "error": null
    },
    "assert amicable_numbers_sum(10296) == 31626": {
      "result": false,
      "time": 0.10948896408081055,
      "error": null
    },
    "assert amicable_numbers_sum(9720) == 31626": {
      "result": false,
      "time": 0.10857295989990234,
      "error": null
    },
    "assert amicable_numbers_sum(10664) == 31626": {
      "result": false,
      "time": 0.11762714385986328,
      "error": null
    },
    "assert amicable_numbers_sum(9618) == 31626": {
      "result": false,
      "time": 0.10248088836669922,
      "error": null
    },
    "assert amicable_numbers_sum(9546) == 31626": {
      "result": false,
      "time": 0.11307144165039062,
      "error": null
    },
    "assert amicable_numbers_sum(9050) == 31626": {
      "result": false,
      "time": 0.1116797924041748,
      "error": null
    },
    "assert amicable_numbers_sum(10267) == 31626": {
      "result": false,
      "time": 0.12654924392700195,
      "error": null
    },
    "assert amicable_numbers_sum(94) == 0": {
      "result": false,
      "time": 0.06265544891357422,
      "error": null
    },
    "assert amicable_numbers_sum(103) == 0": {
      "result": false,
      "time": 0.05465364456176758,
      "error": null
    },
    "assert amicable_numbers_sum(102) == 0": {
      "result": false,
      "time": 0.051276445388793945,
      "error": null
    },
    "assert amicable_numbers_sum(98) == 0": {
      "result": false,
      "time": 0.06990408897399902,
      "error": null
    },
    "assert amicable_numbers_sum(96) == 0": {
      "result": false,
      "time": 0.062026023864746094,
      "error": null
    },
    "assert amicable_numbers_sum(104) == 0": {
      "result": false,
      "time": 0.062277793884277344,
      "error": null
    },
    "assert amicable_numbers_sum(95) == 0": {
      "result": false,
      "time": 0.06682896614074707,
      "error": null
    },
    "assert amicable_numbers_sum(101) == 0": {
      "result": false,
      "time": 0.050232887268066406,
      "error": null
    },
    "assert amicable_numbers_sum(97) == 0": {
      "result": false,
      "time": 0.06181502342224121,
      "error": null
    },
    "assert amicable_numbers_sum(100) == 0": {
      "result": false,
      "time": 0.05084538459777832,
      "error": null
    },
    "assert amicable_numbers_sum(99) == 0": {
      "result": false,
      "time": 0.06304931640625,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": "",
  "has_testcase_error": false
}