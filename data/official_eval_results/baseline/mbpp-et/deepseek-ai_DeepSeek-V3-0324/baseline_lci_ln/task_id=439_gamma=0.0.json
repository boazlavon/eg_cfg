{
  "code": "def multiple_to_single(lst):\n    result_str = \"\"\n    for num in lst:\n        num_str = str(num)\n        result_str = result_str + num_str\n    result_int = int(result_str)\n    return result_int",
  "results": {
    "assert multiple_to_single([11, 33, 50])==113350": {
      "result": true,
      "time": 0.03836941719055176,
      "error": null
    },
    "assert multiple_to_single([-1,2,3,4,5,6])==-123456": {
      "result": true,
      "time": 0.04512977600097656,
      "error": null
    },
    "assert multiple_to_single([10,15,20,25])==10152025": {
      "result": true,
      "time": 0.04260969161987305,
      "error": null
    },
    "assert multiple_to_single([7, 36, 50]) == 73650": {
      "result": true,
      "time": 0.035659074783325195,
      "error": null
    },
    "assert multiple_to_single([13, 38, 48]) == 133848": {
      "result": true,
      "time": 0.03600478172302246,
      "error": null
    },
    "assert multiple_to_single([8, 29, 48]) == 82948": {
      "result": true,
      "time": 0.037732839584350586,
      "error": null
    },
    "assert multiple_to_single([12, 28, 48]) == 122848": {
      "result": true,
      "time": 0.0380856990814209,
      "error": null
    },
    "assert multiple_to_single([15, 32, 45]) == 153245": {
      "result": true,
      "time": 0.036513328552246094,
      "error": null
    },
    "assert multiple_to_single([15, 36, 46]) == 153646": {
      "result": true,
      "time": 0.0406641960144043,
      "error": null
    },
    "assert multiple_to_single([12, 37, 54]) == 123754": {
      "result": true,
      "time": 0.03397989273071289,
      "error": null
    },
    "assert multiple_to_single([11, 35, 46]) == 113546": {
      "result": true,
      "time": 0.03171682357788086,
      "error": null
    },
    "assert multiple_to_single([8, 32, 55]) == 83255": {
      "result": true,
      "time": 0.047944068908691406,
      "error": null
    },
    "assert multiple_to_single([12, 29, 47]) == 122947": {
      "result": true,
      "time": 0.04296374320983887,
      "error": null
    },
    "assert multiple_to_single([14, 37, 51]) == 143751": {
      "result": true,
      "time": 0.06083345413208008,
      "error": null
    },
    "assert multiple_to_single([9, 29, 50]) == 92950": {
      "result": true,
      "time": 0.037554264068603516,
      "error": null
    },
    "assert multiple_to_single([11, 38, 45]) == 113845": {
      "result": true,
      "time": 0.05152583122253418,
      "error": null
    },
    "assert multiple_to_single([8, 37, 51]) == 83751": {
      "result": true,
      "time": 0.046363115310668945,
      "error": null
    },
    "assert multiple_to_single([12, 33, 49]) == 123349": {
      "result": true,
      "time": 0.03555727005004883,
      "error": null
    },
    "assert multiple_to_single([12, 38, 49]) == 123849": {
      "result": true,
      "time": 0.04375576972961426,
      "error": null
    },
    "assert multiple_to_single([13, 37, 50]) == 133750": {
      "result": true,
      "time": 0.04466581344604492,
      "error": null
    },
    "assert multiple_to_single([7, 29, 47]) == 72947": {
      "result": true,
      "time": 0.050665855407714844,
      "error": null
    },
    "assert multiple_to_single([16, 31, 51]) == 163151": {
      "result": true,
      "time": 0.04513430595397949,
      "error": null
    },
    "assert multiple_to_single([13, 34, 55]) == 133455": {
      "result": true,
      "time": 0.04219388961791992,
      "error": null
    },
    "assert multiple_to_single([12, 38, 55]) == 123855": {
      "result": true,
      "time": 0.043157339096069336,
      "error": null
    },
    "assert multiple_to_single([6, 31, 52]) == 63152": {
      "result": true,
      "time": 0.047577857971191406,
      "error": null
    },
    "assert multiple_to_single([13, 38, 49]) == 133849": {
      "result": true,
      "time": 0.04092240333557129,
      "error": null
    },
    "assert multiple_to_single([9, 33, 55]) == 93355": {
      "result": true,
      "time": 0.05086779594421387,
      "error": null
    },
    "assert multiple_to_single([16, 29, 49]) == 162949": {
      "result": true,
      "time": 0.04598712921142578,
      "error": null
    },
    "assert multiple_to_single([14, 34, 53]) == 143453": {
      "result": true,
      "time": 0.04774737358093262,
      "error": null
    },
    "assert multiple_to_single([11, 30, 51]) == 113051": {
      "result": true,
      "time": 0.04908895492553711,
      "error": null
    },
    "assert multiple_to_single([11, 34, 47]) == 113447": {
      "result": true,
      "time": 0.06505608558654785,
      "error": null
    },
    "assert multiple_to_single([11, 29, 48]) == 112948": {
      "result": true,
      "time": 0.04776287078857422,
      "error": null
    },
    "assert multiple_to_single([14, 29, 49]) == 142949": {
      "result": true,
      "time": 0.04567694664001465,
      "error": null
    },
    "assert multiple_to_single([13, 38, 54]) == 133854": {
      "result": true,
      "time": 0.04213094711303711,
      "error": null
    },
    "assert multiple_to_single([9, 33, 53]) == 93353": {
      "result": true,
      "time": 0.041860103607177734,
      "error": null
    },
    "assert multiple_to_single([12, 30, 49]) == 123049": {
      "result": true,
      "time": 0.05712890625,
      "error": null
    },
    "assert multiple_to_single([0, 2, 3, 1, 7, 5]) == 23175": {
      "result": true,
      "time": 0.034966230392456055,
      "error": null
    },
    "assert multiple_to_single([-5, 1, 5, 6, 8, 3]) == -515683": {
      "result": true,
      "time": 0.04329538345336914,
      "error": null
    },
    "assert multiple_to_single([0, 6, 7, 3, 7, 3]) == 67373": {
      "result": true,
      "time": 0.050005197525024414,
      "error": null
    },
    "assert multiple_to_single([-3, 3, 7, 9, 8, 1]) == -337981": {
      "result": true,
      "time": 0.04583406448364258,
      "error": null
    },
    "assert multiple_to_single([-5, 2, 8, 1, 3, 3]) == -528133": {
      "result": true,
      "time": 0.041220664978027344,
      "error": null
    },
    "assert multiple_to_single([-4, 7, 7, 5, 1, 3]) == -477513": {
      "result": true,
      "time": 0.05653071403503418,
      "error": null
    },
    "assert multiple_to_single([-5, 4, 5, 4, 9, 10]) == -5454910": {
      "result": true,
      "time": 0.05417966842651367,
      "error": null
    },
    "assert multiple_to_single([1, 4, 4, 9, 5, 5]) == 144955": {
      "result": true,
      "time": 0.0452418327331543,
      "error": null
    },
    "assert multiple_to_single([-6, 3, 3, 3, 9, 3]) == -633393": {
      "result": true,
      "time": 0.04333329200744629,
      "error": null
    },
    "assert multiple_to_single([-1, 3, 7, 9, 5, 3]) == -137953": {
      "result": true,
      "time": 0.042896270751953125,
      "error": null
    },
    "assert multiple_to_single([-4, 6, 2, 7, 4, 11]) == -4627411": {
      "result": true,
      "time": 0.05197572708129883,
      "error": null
    },
    "assert multiple_to_single([1, 5, 4, 9, 9, 8]) == 154998": {
      "result": true,
      "time": 0.04207038879394531,
      "error": null
    },
    "assert multiple_to_single([-5, 7, 5, 2, 7, 4]) == -575274": {
      "result": true,
      "time": 0.04700207710266113,
      "error": null
    },
    "assert multiple_to_single([4, 5, 5, 4, 2, 7]) == 455427": {
      "result": true,
      "time": 0.042682647705078125,
      "error": null
    },
    "assert multiple_to_single([-1, 3, 5, 3, 2, 9]) == -135329": {
      "result": true,
      "time": 0.03713417053222656,
      "error": null
    },
    "assert multiple_to_single([-5, 7, 6, 3, 10, 3]) == -5763103": {
      "result": true,
      "time": 0.034786224365234375,
      "error": null
    },
    "assert multiple_to_single([2, 2, 4, 8, 1, 6]) == 224816": {
      "result": true,
      "time": 0.04455995559692383,
      "error": null
    },
    "assert multiple_to_single([-2, 3, 1, 7, 9, 8]) == -231798": {
      "result": true,
      "time": 0.05168652534484863,
      "error": null
    },
    "assert multiple_to_single([0, 4, 3, 4, 8, 11]) == 434811": {
      "result": true,
      "time": 0.057433366775512695,
      "error": null
    },
    "assert multiple_to_single([4, 7, 7, 1, 8, 6]) == 477186": {
      "result": true,
      "time": 0.04959750175476074,
      "error": null
    },
    "assert multiple_to_single([4, 2, 6, 3, 6, 5]) == 426365": {
      "result": true,
      "time": 0.047212839126586914,
      "error": null
    },
    "assert multiple_to_single([4, 7, 5, 2, 9, 2]) == 475292": {
      "result": true,
      "time": 0.0367581844329834,
      "error": null
    },
    "assert multiple_to_single([0, 4, 4, 3, 10, 9]) == 443109": {
      "result": true,
      "time": 0.04692363739013672,
      "error": null
    },
    "assert multiple_to_single([-1, 3, 2, 9, 6, 9]) == -132969": {
      "result": true,
      "time": 0.04574179649353027,
      "error": null
    },
    "assert multiple_to_single([-6, 2, 8, 2, 2, 10]) == -6282210": {
      "result": true,
      "time": 0.04410099983215332,
      "error": null
    },
    "assert multiple_to_single([-6, 1, 6, 6, 7, 9]) == -616679": {
      "result": true,
      "time": 0.0511164665222168,
      "error": null
    },
    "assert multiple_to_single([-4, 5, 7, 6, 9, 9]) == -457699": {
      "result": true,
      "time": 0.04706096649169922,
      "error": null
    },
    "assert multiple_to_single([-1, 1, 8, 1, 8, 10]) == -1181810": {
      "result": true,
      "time": 0.05147576332092285,
      "error": null
    },
    "assert multiple_to_single([4, 5, 6, 2, 7, 10]) == 4562710": {
      "result": true,
      "time": 0.0458834171295166,
      "error": null
    },
    "assert multiple_to_single([2, 5, 5, 1, 3, 6]) == 255136": {
      "result": true,
      "time": 0.049698591232299805,
      "error": null
    },
    "assert multiple_to_single([3, 7, 7, 7, 3, 1]) == 377731": {
      "result": true,
      "time": 0.05788064002990723,
      "error": null
    },
    "assert multiple_to_single([3, 2, 6, 1, 1, 1]) == 326111": {
      "result": true,
      "time": 0.05255770683288574,
      "error": null
    },
    "assert multiple_to_single([4, 4, 4, 9, 4, 5]) == 444945": {
      "result": true,
      "time": 0.0522308349609375,
      "error": null
    },
    "assert multiple_to_single([7, 13, 21, 27]) == 7132127": {
      "result": true,
      "time": 0.045397281646728516,
      "error": null
    },
    "assert multiple_to_single([6, 19, 22, 28]) == 6192228": {
      "result": true,
      "time": 0.05242133140563965,
      "error": null
    },
    "assert multiple_to_single([6, 14, 20, 25]) == 6142025": {
      "result": true,
      "time": 0.03903627395629883,
      "error": null
    },
    "assert multiple_to_single([14, 20, 22, 22]) == 14202222": {
      "result": true,
      "time": 0.05268669128417969,
      "error": null
    },
    "assert multiple_to_single([15, 12, 19, 24]) == 15121924": {
      "result": true,
      "time": 0.053830623626708984,
      "error": null
    },
    "assert multiple_to_single([8, 14, 18, 23]) == 8141823": {
      "result": true,
      "time": 0.04846549034118652,
      "error": null
    },
    "assert multiple_to_single([13, 16, 17, 20]) == 13161720": {
      "result": true,
      "time": 0.052190542221069336,
      "error": null
    },
    "assert multiple_to_single([15, 19, 18, 25]) == 15191825": {
      "result": true,
      "time": 0.03213810920715332,
      "error": null
    },
    "assert multiple_to_single([13, 12, 17, 24]) == 13121724": {
      "result": true,
      "time": 0.04642629623413086,
      "error": null
    },
    "assert multiple_to_single([7, 10, 16, 23]) == 7101623": {
      "result": true,
      "time": 0.061414241790771484,
      "error": null
    },
    "assert multiple_to_single([10, 18, 15, 23]) == 10181523": {
      "result": true,
      "time": 0.04657435417175293,
      "error": null
    },
    "assert multiple_to_single([10, 14, 25, 29]) == 10142529": {
      "result": true,
      "time": 0.03522229194641113,
      "error": null
    },
    "assert multiple_to_single([9, 20, 16, 22]) == 9201622": {
      "result": true,
      "time": 0.04563403129577637,
      "error": null
    },
    "assert multiple_to_single([9, 14, 17, 22]) == 9141722": {
      "result": true,
      "time": 0.04038357734680176,
      "error": null
    },
    "assert multiple_to_single([9, 12, 23, 20]) == 9122320": {
      "result": true,
      "time": 0.05759596824645996,
      "error": null
    },
    "assert multiple_to_single([10, 11, 20, 20]) == 10112020": {
      "result": true,
      "time": 0.04800534248352051,
      "error": null
    },
    "assert multiple_to_single([14, 13, 25, 29]) == 14132529": {
      "result": true,
      "time": 0.04604387283325195,
      "error": null
    },
    "assert multiple_to_single([5, 17, 22, 20]) == 5172220": {
      "result": true,
      "time": 0.03503727912902832,
      "error": null
    },
    "assert multiple_to_single([6, 16, 18, 21]) == 6161821": {
      "result": true,
      "time": 0.03711104393005371,
      "error": null
    },
    "assert multiple_to_single([10, 13, 17, 21]) == 10131721": {
      "result": true,
      "time": 0.03771042823791504,
      "error": null
    },
    "assert multiple_to_single([9, 12, 24, 26]) == 9122426": {
      "result": true,
      "time": 0.03749203681945801,
      "error": null
    },
    "assert multiple_to_single([10, 19, 17, 26]) == 10191726": {
      "result": true,
      "time": 0.03219175338745117,
      "error": null
    },
    "assert multiple_to_single([5, 19, 15, 20]) == 5191520": {
      "result": true,
      "time": 0.0317535400390625,
      "error": null
    },
    "assert multiple_to_single([8, 10, 24, 24]) == 8102424": {
      "result": true,
      "time": 0.03276181221008301,
      "error": null
    },
    "assert multiple_to_single([6, 14, 23, 26]) == 6142326": {
      "result": true,
      "time": 0.03366541862487793,
      "error": null
    },
    "assert multiple_to_single([6, 19, 21, 22]) == 6192122": {
      "result": true,
      "time": 0.03126358985900879,
      "error": null
    },
    "assert multiple_to_single([14, 15, 20, 30]) == 14152030": {
      "result": true,
      "time": 0.03968667984008789,
      "error": null
    },
    "assert multiple_to_single([6, 11, 15, 22]) == 6111522": {
      "result": true,
      "time": 0.038848876953125,
      "error": null
    },
    "assert multiple_to_single([7, 18, 24, 29]) == 7182429": {
      "result": true,
      "time": 0.030174732208251953,
      "error": null
    },
    "assert multiple_to_single([5, 14, 19, 28]) == 5141928": {
      "result": true,
      "time": 0.03220248222351074,
      "error": null
    },
    "assert multiple_to_single([8, 14, 25, 26]) == 8142526": {
      "result": true,
      "time": 0.04126286506652832,
      "error": null
    },
    "assert multiple_to_single([15, 17, 18, 22]) == 15171822": {
      "result": true,
      "time": 0.04066824913024902,
      "error": null
    },
    "assert multiple_to_single([8, 20, 25, 23]) == 8202523": {
      "result": true,
      "time": 0.03470802307128906,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}