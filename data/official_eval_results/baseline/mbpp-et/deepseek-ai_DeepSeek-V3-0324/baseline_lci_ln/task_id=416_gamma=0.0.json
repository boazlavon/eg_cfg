{
  "code": "def breakSum(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    sum1 = n // 2\n    sum2 = n // 3\n    sum3 = n // 4\n    total = sum1 + sum2 + sum3\n    if total > n:\n        part1 = breakSum(sum1)\n        part2 = breakSum(sum2)\n        part3 = breakSum(sum3)\n        max_sum = part1 + part2 + part3\n        if max_sum > n:\n            return max_sum\n        else:\n            return n\n    else:\n        return n",
  "results": {
    "assert breakSum(12) == 13": {
      "result": true,
      "time": 0.032750606536865234,
      "error": null
    },
    "assert breakSum(24) == 27": {
      "result": true,
      "time": 0.042218923568725586,
      "error": null
    },
    "assert breakSum(23) == 23": {
      "result": true,
      "time": 0.04065513610839844,
      "error": null
    },
    "assert breakSum(17) == 17": {
      "result": true,
      "time": 0.03941535949707031,
      "error": null
    },
    "assert breakSum(7) == 7": {
      "result": true,
      "time": 0.04366135597229004,
      "error": null
    },
    "assert breakSum(14) == 14": {
      "result": true,
      "time": 0.037091970443725586,
      "error": null
    },
    "assert breakSum(10) == 10": {
      "result": true,
      "time": 0.04053020477294922,
      "error": null
    },
    "assert breakSum(13) == 13": {
      "result": true,
      "time": 0.03785204887390137,
      "error": null
    },
    "assert breakSum(16) == 17": {
      "result": true,
      "time": 0.04091215133666992,
      "error": null
    },
    "assert breakSum(15) == 15": {
      "result": true,
      "time": 0.04354286193847656,
      "error": null
    },
    "assert breakSum(11) == 11": {
      "result": true,
      "time": 0.04864072799682617,
      "error": null
    },
    "assert breakSum(8) == 8": {
      "result": true,
      "time": 0.03333425521850586,
      "error": null
    },
    "assert breakSum(19) == 19": {
      "result": true,
      "time": 0.031806230545043945,
      "error": null
    },
    "assert breakSum(20) == 21": {
      "result": true,
      "time": 0.0429532527923584,
      "error": null
    },
    "assert breakSum(21) == 22": {
      "result": true,
      "time": 0.047777652740478516,
      "error": null
    },
    "assert breakSum(27) == 28": {
      "result": true,
      "time": 0.03607320785522461,
      "error": null
    },
    "assert breakSum(22) == 23": {
      "result": true,
      "time": 0.039665937423706055,
      "error": null
    },
    "assert breakSum(25) == 27": {
      "result": true,
      "time": 0.03702425956726074,
      "error": null
    },
    "assert breakSum(28) == 30": {
      "result": true,
      "time": 0.03938937187194824,
      "error": null
    },
    "assert breakSum(29) == 30": {
      "result": true,
      "time": 0.04630875587463379,
      "error": null
    },
    "assert breakSum(26) == 27": {
      "result": true,
      "time": 0.04137754440307617,
      "error": null
    },
    "assert breakSum(18) == 19": {
      "result": true,
      "time": 0.03307795524597168,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}