{
  "code": "def is_num_decagonal(n):\n    # Calculate the first term in the formula\n    term1 = 4 * n\n    # Calculate the second term in the formula\n    term2 = n - 1\n    # Multiply the terms\n    product = term1 * term2\n    # Calculate the final decagonal number\n    decagonal_number = product + n\n    return decagonal_number",
  "results": {
    "assert is_num_decagonal(3) == 27": {
      "result": true,
      "time": 0.03386068344116211,
      "error": null
    },
    "assert is_num_decagonal(7) == 175": {
      "result": true,
      "time": 0.04056739807128906,
      "error": null
    },
    "assert is_num_decagonal(10) == 370": {
      "result": true,
      "time": 0.037071943283081055,
      "error": null
    },
    "assert is_num_decagonal(5) == 85": {
      "result": true,
      "time": 0.036754608154296875,
      "error": null
    },
    "assert is_num_decagonal(1) == 1": {
      "result": true,
      "time": 0.03847479820251465,
      "error": null
    },
    "assert is_num_decagonal(2) == 10": {
      "result": true,
      "time": 0.033979177474975586,
      "error": null
    },
    "assert is_num_decagonal(8) == 232": {
      "result": true,
      "time": 0.0366058349609375,
      "error": null
    },
    "assert is_num_decagonal(4) == 52": {
      "result": true,
      "time": 0.03009510040283203,
      "error": null
    },
    "assert is_num_decagonal(11) == 451": {
      "result": true,
      "time": 0.03851819038391113,
      "error": null
    },
    "assert is_num_decagonal(6) == 126": {
      "result": true,
      "time": 0.03614640235900879,
      "error": null
    },
    "assert is_num_decagonal(12) == 540": {
      "result": true,
      "time": 0.02895498275756836,
      "error": null
    },
    "assert is_num_decagonal(15) == 855": {
      "result": true,
      "time": 0.04307675361633301,
      "error": null
    },
    "assert is_num_decagonal(14) == 742": {
      "result": true,
      "time": 0.034041404724121094,
      "error": null
    },
    "assert is_num_decagonal(13) == 637": {
      "result": true,
      "time": 0.03170633316040039,
      "error": null
    },
    "assert is_num_decagonal(9) == 297": {
      "result": true,
      "time": 0.03182172775268555,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}