{
  "code": "def rotate_left(lst, n, m):\n    # Create a copy of the original list to avoid modifying it directly\n    rotated_list = lst.copy()\n    \n    # Calculate the effective rotation count by taking modulo with list length\n    effective_rotation = n % len(rotated_list)\n    \n    # Perform the rotation 'm' times\n    for _ in range(m):\n        # Slice the list into two parts: the part to move to the end and the rest\n        part_to_move = rotated_list[:effective_rotation]\n        remaining_part = rotated_list[effective_rotation:]\n        \n        # Combine the remaining part with the part to move\n        rotated_list = remaining_part + part_to_move\n    \n    return rotated_list",
  "results": {
    "assert rotate_left([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],3,4)==[4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4]": {
      "result": false,
      "time": 0.04405999183654785,
      "error": null
    },
    "assert rotate_left([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],2,2)==[3, 4, 5, 6, 7, 8, 9, 10, 1, 2]": {
      "result": false,
      "time": 0.044473886489868164,
      "error": null
    },
    "assert rotate_left([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],5,2)==[6, 7, 8, 9, 10, 1, 2]": {
      "result": false,
      "time": 0.0416867733001709,
      "error": null
    },
    "assert rotate_left([6, 1, 5, 1, 1, 4, 5, 10, 9, 15], 3, 1) == [1, 1, 4, 5, 10, 9, 15, 6]": {
      "result": false,
      "time": 0.04148697853088379,
      "error": null
    },
    "assert rotate_left([1, 4, 1, 7, 9, 1, 7, 10, 12, 10], 2, 8) == [1, 7, 9, 1, 7, 10, 12, 10, 1, 4, 1, 7, 9, 1, 7, 10]": {
      "result": false,
      "time": 0.050679922103881836,
      "error": null
    },
    "assert rotate_left([1, 5, 1, 9, 9, 1, 7, 10, 8, 11], 3, 7) == [9, 9, 1, 7, 10, 8, 11, 1, 5, 1, 9, 9, 1, 7]": {
      "result": false,
      "time": 0.04059243202209473,
      "error": null
    },
    "assert rotate_left([5, 3, 5, 1, 2, 2, 8, 13, 9, 8], 5, 7) == [2, 8, 13, 9, 8, 5, 3, 5, 1, 2, 2, 8]": {
      "result": false,
      "time": 0.04262256622314453,
      "error": null
    },
    "assert rotate_left([3, 6, 1, 8, 7, 3, 10, 4, 4, 9], 7, 5) == [4, 4, 9, 3, 6, 1, 8, 7]": {
      "result": false,
      "time": 0.042916059494018555,
      "error": null
    },
    "assert rotate_left([1, 4, 3, 7, 8, 2, 6, 3, 8, 8], 7, 9) == [3, 8, 8, 1, 4, 3, 7, 8, 2, 6, 3, 8]": {
      "result": false,
      "time": 0.0497896671295166,
      "error": null
    },
    "assert rotate_left([4, 5, 2, 2, 2, 4, 7, 11, 12, 14], 2, 4) == [2, 2, 2, 4, 7, 11, 12, 14, 4, 5, 2, 2]": {
      "result": false,
      "time": 0.0536496639251709,
      "error": null
    },
    "assert rotate_left([5, 5, 4, 1, 6, 9, 5, 6, 10, 7], 8, 7) == [10, 7, 5, 5, 4, 1, 6, 9, 5]": {
      "result": false,
      "time": 0.04034924507141113,
      "error": null
    },
    "assert rotate_left([3, 1, 5, 6, 5, 9, 7, 8, 5, 9], 1, 4) == [1, 5, 6, 5, 9, 7, 8, 5, 9, 3, 1, 5, 6]": {
      "result": false,
      "time": 0.042665958404541016,
      "error": null
    },
    "assert rotate_left([5, 1, 1, 9, 7, 1, 4, 4, 8, 8], 2, 5) == [1, 9, 7, 1, 4, 4, 8, 8, 5, 1, 1, 9, 7]": {
      "result": false,
      "time": 0.039224863052368164,
      "error": null
    },
    "assert rotate_left([3, 5, 4, 7, 6, 2, 12, 7, 9, 15], 3, 3) == [7, 6, 2, 12, 7, 9, 15, 3, 5, 4]": {
      "result": false,
      "time": 0.04485344886779785,
      "error": null
    },
    "assert rotate_left([1, 3, 3, 1, 2, 10, 12, 12, 10, 5], 1, 9) == [3, 3, 1, 2, 10, 12, 12, 10, 5, 1, 3, 3, 1, 2, 10, 12, 12, 10]": {
      "result": false,
      "time": 0.053383827209472656,
      "error": null
    },
    "assert rotate_left([4, 7, 5, 4, 5, 3, 9, 12, 4, 15], 3, 8) == [4, 5, 3, 9, 12, 4, 15, 4, 7, 5, 4, 5, 3, 9, 12]": {
      "result": false,
      "time": 0.0424039363861084,
      "error": null
    },
    "assert rotate_left([5, 6, 5, 8, 4, 9, 11, 13, 7, 15], 6, 7) == [11, 13, 7, 15, 5, 6, 5, 8, 4, 9, 11]": {
      "result": false,
      "time": 0.048919677734375,
      "error": null
    },
    "assert rotate_left([1, 3, 1, 5, 6, 5, 3, 13, 8, 8], 2, 7) == [1, 5, 6, 5, 3, 13, 8, 8, 1, 3, 1, 5, 6, 5, 3]": {
      "result": false,
      "time": 0.04278731346130371,
      "error": null
    },
    "assert rotate_left([4, 6, 1, 2, 1, 3, 6, 10, 4, 12], 3, 3) == [2, 1, 3, 6, 10, 4, 12, 4, 6, 1]": {
      "result": false,
      "time": 0.04431581497192383,
      "error": null
    },
    "assert rotate_left([4, 7, 7, 2, 2, 6, 7, 3, 6, 10], 5, 9) == [6, 7, 3, 6, 10, 4, 7, 7, 2, 2, 6, 7, 3, 6]": {
      "result": false,
      "time": 0.0491795539855957,
      "error": null
    },
    "assert rotate_left([1, 1, 1, 7, 5, 1, 4, 13, 14, 8], 4, 8) == [5, 1, 4, 13, 14, 8, 1, 1, 1, 7, 5, 1, 4, 13]": {
      "result": false,
      "time": 0.058936119079589844,
      "error": null
    },
    "assert rotate_left([5, 2, 1, 4, 2, 7, 7, 5, 7, 11], 2, 6) == [1, 4, 2, 7, 7, 5, 7, 11, 5, 2, 1, 4, 2, 7]": {
      "result": false,
      "time": 0.03975510597229004,
      "error": null
    },
    "assert rotate_left([6, 6, 5, 9, 5, 7, 9, 4, 11, 8], 3, 6) == [9, 5, 7, 9, 4, 11, 8, 6, 6, 5, 9, 5, 7]": {
      "result": false,
      "time": 0.044495582580566406,
      "error": null
    },
    "assert rotate_left([1, 7, 1, 7, 9, 11, 4, 7, 5, 11], 8, 4) == [5, 11, 1, 7, 1, 7]": {
      "result": false,
      "time": 0.0439603328704834,
      "error": null
    },
    "assert rotate_left([4, 6, 4, 7, 3, 8, 2, 4, 5, 12], 5, 6) == [8, 2, 4, 5, 12, 4, 6, 4, 7, 3, 8]": {
      "result": false,
      "time": 0.045068979263305664,
      "error": null
    },
    "assert rotate_left([3, 6, 7, 1, 2, 2, 3, 12, 9, 14], 1, 8) == [6, 7, 1, 2, 2, 3, 12, 9, 14, 3, 6, 7, 1, 2, 2, 3, 12]": {
      "result": false,
      "time": 0.05382680892944336,
      "error": null
    },
    "assert rotate_left([2, 4, 8, 9, 3, 5, 10, 8, 13, 11], 6, 4) == [10, 8, 13, 11, 2, 4, 8, 9]": {
      "result": false,
      "time": 0.04716825485229492,
      "error": null
    },
    "assert rotate_left([4, 5, 3, 1, 7, 1, 4, 4, 14, 15], 8, 9) == [14, 15, 4, 5, 3, 1, 7, 1, 4, 4, 14]": {
      "result": false,
      "time": 0.05264544486999512,
      "error": null
    },
    "assert rotate_left([2, 7, 2, 5, 8, 3, 7, 4, 6, 13], 7, 1) == [4, 6, 13, 2]": {
      "result": false,
      "time": 0.04053926467895508,
      "error": null
    },
    "assert rotate_left([1, 5, 8, 6, 9, 7, 2, 12, 14, 15], 7, 3) == [12, 14, 15, 1, 5, 8]": {
      "result": false,
      "time": 0.05383157730102539,
      "error": null
    },
    "assert rotate_left([3, 6, 6, 7, 10, 3, 4, 8, 5, 9], 5, 5) == [3, 4, 8, 5, 9, 3, 6, 6, 7, 10]": {
      "result": true,
      "time": 0.04873538017272949,
      "error": null
    },
    "assert rotate_left([5, 3, 5, 4, 1, 7, 6, 3, 10, 10], 2, 9) == [5, 4, 1, 7, 6, 3, 10, 10, 5, 3, 5, 4, 1, 7, 6, 3, 10]": {
      "result": false,
      "time": 0.04607677459716797,
      "error": null
    },
    "assert rotate_left([5, 7, 2, 7, 4, 7, 7, 8, 10, 11], 7, 2) == [8, 10, 11, 5, 7]": {
      "result": false,
      "time": 0.05073833465576172,
      "error": null
    },
    "assert rotate_left([5, 2, 1, 5, 5, 9, 8, 11, 5, 11], 7, 9) == [11, 5, 11, 5, 2, 1, 5, 5, 9, 8, 11, 5]": {
      "result": false,
      "time": 0.05220460891723633,
      "error": null
    },
    "assert rotate_left([2, 1, 4, 9, 1, 10, 9, 10, 12, 11], 6, 3) == [9, 10, 12, 11, 2, 1, 4]": {
      "result": false,
      "time": 0.048113346099853516,
      "error": null
    },
    "assert rotate_left([6, 6, 6, 7, 3, 3, 8, 4, 7, 7], 6, 7) == [8, 4, 7, 7, 6, 6, 6, 7, 3, 3, 8]": {
      "result": false,
      "time": 0.05114030838012695,
      "error": null
    },
    "assert rotate_left([3, 3, 6, 9, 5, 11, 2, 4, 11, 7], 2, 1) == [6, 9, 5, 11, 2, 4, 11, 7, 3]": {
      "result": false,
      "time": 0.0484621524810791,
      "error": null
    },
    "assert rotate_left([4, 7, 6, 2, 4, 11, 4, 13, 14, 9], 4, 2) == [4, 11, 4, 13, 14, 9, 4, 7]": {
      "result": false,
      "time": 0.05910348892211914,
      "error": null
    },
    "assert rotate_left([6, 2, 8, 5, 7, 1, 5, 7, 9, 11], 3, 6) == [5, 7, 1, 5, 7, 9, 11, 6, 2, 8, 5, 7, 1]": {
      "result": false,
      "time": 0.046530723571777344,
      "error": null
    },
    "assert rotate_left([4, 6, 4, 6, 7, 1, 7, 8, 6, 13], 3, 4) == [6, 7, 1, 7, 8, 6, 13, 4, 6, 4, 6]": {
      "result": false,
      "time": 0.057984113693237305,
      "error": null
    },
    "assert rotate_left([2, 2, 3, 5, 2, 7, 12, 8, 6, 12], 1, 4) == [2, 3, 5, 2, 7, 12, 8, 6, 12, 2, 2, 3, 5]": {
      "result": false,
      "time": 0.05296206474304199,
      "error": null
    },
    "assert rotate_left([5, 6, 4, 6, 6, 5, 6, 4, 13, 15], 1, 2) == [6, 4, 6, 6, 5, 6, 4, 13, 15, 5, 6]": {
      "result": false,
      "time": 0.05405068397521973,
      "error": null
    },
    "assert rotate_left([5, 1, 8, 9, 2, 8, 9, 11, 5, 13], 6, 4) == [9, 11, 5, 13, 5, 1, 8, 9]": {
      "result": false,
      "time": 0.05518221855163574,
      "error": null
    },
    "assert rotate_left([4, 4, 6, 7, 2, 1, 11, 6, 10, 15], 5, 6) == [1, 11, 6, 10, 15, 4, 4, 6, 7, 2, 1]": {
      "result": false,
      "time": 0.05280423164367676,
      "error": null
    },
    "assert rotate_left([6, 5, 6, 5, 5, 1, 8, 7, 14, 12], 5, 1) == [1, 8, 7, 14, 12, 6]": {
      "result": false,
      "time": 0.04590749740600586,
      "error": null
    },
    "assert rotate_left([1, 3, 2, 5, 1, 9, 6, 10, 9, 8], 3, 2) == [5, 1, 9, 6, 10, 9, 8, 1, 3]": {
      "result": false,
      "time": 0.051133155822753906,
      "error": null
    },
    "assert rotate_left([3, 6, 7, 6, 8, 2, 8, 9, 5, 11], 1, 2) == [6, 7, 6, 8, 2, 8, 9, 5, 11, 3, 6]": {
      "result": false,
      "time": 0.06196904182434082,
      "error": null
    },
    "assert rotate_left([4, 4, 4, 9, 1, 9, 11, 6, 12, 9], 4, 7) == [1, 9, 11, 6, 12, 9, 4, 4, 4, 9, 1, 9, 11]": {
      "result": false,
      "time": 0.06354022026062012,
      "error": null
    },
    "assert rotate_left([3, 7, 5, 9, 4, 1, 6, 4, 5, 5], 7, 3) == [4, 5, 5, 3, 7, 5]": {
      "result": false,
      "time": 0.04750704765319824,
      "error": null
    },
    "assert rotate_left([3, 4, 2, 5, 5, 1, 2, 9, 14, 6], 5, 1) == [1, 2, 9, 14, 6, 3]": {
      "result": false,
      "time": 0.05233049392700195,
      "error": null
    },
    "assert rotate_left([5, 5, 3, 5, 5, 2, 7, 10, 11, 10], 2, 3) == [3, 5, 5, 2, 7, 10, 11, 10, 5, 5, 3]": {
      "result": false,
      "time": 0.06100630760192871,
      "error": null
    },
    "assert rotate_left([2, 6, 7, 7, 7, 1, 3, 13, 14, 13], 4, 2) == [7, 1, 3, 13, 14, 13, 2, 6]": {
      "result": false,
      "time": 0.053732872009277344,
      "error": null
    },
    "assert rotate_left([1, 6, 1, 3, 7, 5, 7, 6, 13, 11], 4, 5) == [7, 5, 7, 6, 13, 11, 1, 6, 1, 3, 7]": {
      "result": false,
      "time": 0.04981279373168945,
      "error": null
    },
    "assert rotate_left([3, 1, 5, 8, 6, 5, 9, 6, 8, 7], 4, 6) == [6, 5, 9, 6, 8, 7, 3, 1, 5, 8, 6, 5]": {
      "result": false,
      "time": 0.05216073989868164,
      "error": null
    },
    "assert rotate_left([2, 5, 6, 1, 4, 11, 4, 6, 7, 6], 1, 1) == [5, 6, 1, 4, 11, 4, 6, 7, 6, 2]": {
      "result": true,
      "time": 0.04672741889953613,
      "error": null
    },
    "assert rotate_left([2, 3, 7, 1, 2, 10, 12, 13, 14, 10], 4, 7) == [2, 10, 12, 13, 14, 10, 2, 3, 7, 1, 2, 10, 12]": {
      "result": false,
      "time": 0.04526495933532715,
      "error": null
    },
    "assert rotate_left([4, 7, 8, 5, 5, 1, 7, 7, 4, 8], 6, 2) == [7, 7, 4, 8, 4, 7]": {
      "result": false,
      "time": 0.05478715896606445,
      "error": null
    },
    "assert rotate_left([4, 2, 8, 2, 10, 3, 9, 13, 6, 15], 3, 6) == [2, 10, 3, 9, 13, 6, 15, 4, 2, 8, 2, 10, 3]": {
      "result": false,
      "time": 0.060857534408569336,
      "error": null
    },
    "assert rotate_left([4, 5, 2, 7, 5, 4, 11, 10, 4, 5], 1, 3) == [5, 2, 7, 5, 4, 11, 10, 4, 5, 4, 5, 2]": {
      "result": false,
      "time": 0.05047273635864258,
      "error": null
    },
    "assert rotate_left([3, 3, 6, 4, 9, 4, 2, 8, 13, 14], 4, 6) == [9, 4, 2, 8, 13, 14, 3, 3, 6, 4, 9, 4]": {
      "result": false,
      "time": 0.0637061595916748,
      "error": null
    },
    "assert rotate_left([3, 6, 5, 5, 7, 11, 8, 10, 4, 11], 1, 6) == [6, 5, 5, 7, 11, 8, 10, 4, 11, 3, 6, 5, 5, 7, 11]": {
      "result": false,
      "time": 0.04900693893432617,
      "error": null
    },
    "assert rotate_left([5, 6, 6, 5, 8, 3, 7, 3, 5, 5], 4, 3) == [8, 3, 7, 3, 5, 5, 5, 6, 6]": {
      "result": false,
      "time": 0.058161258697509766,
      "error": null
    },
    "assert rotate_left([1, 6, 6, 9, 4, 8, 6, 5, 8, 14], 4, 5) == [4, 8, 6, 5, 8, 14, 1, 6, 6, 9, 4]": {
      "result": false,
      "time": 0.055921316146850586,
      "error": null
    },
    "assert rotate_left([4, 7, 7, 9, 1, 9, 10, 3, 9, 10], 5, 6) == [9, 10, 3, 9, 10, 4, 7, 7, 9, 1, 9]": {
      "result": false,
      "time": 0.058619022369384766,
      "error": null
    },
    "assert rotate_left([1, 7, 8, 7, 2, 4, 6, 13, 14, 5], 5, 7) == [4, 6, 13, 14, 5, 1, 7, 8, 7, 2, 4, 6]": {
      "result": false,
      "time": 0.05020904541015625,
      "error": null
    },
    "assert rotate_left([6, 3, 1, 4, 1, 4, 9, 3, 14, 5], 4, 1) == [1, 4, 9, 3, 14, 5, 6]": {
      "result": false,
      "time": 0.046914100646972656,
      "error": null
    },
    "assert rotate_left([4, 1, 8, 6, 7, 5, 5, 6, 9, 12], 3, 4) == [6, 7, 5, 5, 6, 9, 12, 4, 1, 8, 6]": {
      "result": false,
      "time": 0.0605165958404541,
      "error": null
    },
    "assert rotate_left([4, 6, 6, 6, 7, 1, 8, 3, 14, 14], 6, 1) == [8, 3, 14, 14, 4]": {
      "result": false,
      "time": 0.05161404609680176,
      "error": null
    },
    "assert rotate_left([1, 6, 1, 3, 8, 9, 12, 3, 4, 7], 2, 5) == [1, 3, 8, 9, 12, 3, 4, 7, 1, 6, 1, 3, 8]": {
      "result": false,
      "time": 0.052437543869018555,
      "error": null
    },
    "assert rotate_left([6, 1, 7, 5, 3, 1, 8, 10, 13, 5], 5, 5) == [1, 8, 10, 13, 5, 6, 1, 7, 5, 3]": {
      "result": true,
      "time": 0.0439152717590332,
      "error": null
    },
    "assert rotate_left([2, 2, 3, 5, 4, 2, 3, 5, 11, 9], 3, 3) == [5, 4, 2, 3, 5, 11, 9, 2, 2, 3]": {
      "result": false,
      "time": 0.041117191314697266,
      "error": null
    },
    "assert rotate_left([4, 6, 4, 8, 7, 3, 12, 13, 4, 11], 10, 7) == [4, 6, 4, 8, 7, 3, 12]": {
      "result": false,
      "time": 0.04497027397155762,
      "error": null
    },
    "assert rotate_left([2, 7, 5, 2, 8, 10, 12, 9, 9, 11], 1, 6) == [7, 5, 2, 8, 10, 12, 9, 9, 11, 2, 7, 5, 2, 8, 10]": {
      "result": false,
      "time": 0.03911256790161133,
      "error": null
    },
    "assert rotate_left([2, 5, 4, 5, 8, 6, 7, 11, 9, 11], 6, 1) == [7, 11, 9, 11, 2]": {
      "result": false,
      "time": 0.0416567325592041,
      "error": null
    },
    "assert rotate_left([5, 5, 2, 5, 7, 6, 12, 11, 14, 12], 8, 1) == [14, 12, 5]": {
      "result": false,
      "time": 0.04008150100708008,
      "error": null
    },
    "assert rotate_left([2, 1, 8, 3, 7, 10, 10, 3, 14, 10], 2, 6) == [8, 3, 7, 10, 10, 3, 14, 10, 2, 1, 8, 3, 7, 10]": {
      "result": false,
      "time": 0.044960737228393555,
      "error": null
    },
    "assert rotate_left([5, 1, 2, 3, 4, 5, 10, 12, 13, 9], 10, 5) == [5, 1, 2, 3, 4]": {
      "result": false,
      "time": 0.038031816482543945,
      "error": null
    },
    "assert rotate_left([2, 4, 3, 4, 5, 3, 10, 7, 4, 13], 4, 2) == [5, 3, 10, 7, 4, 13, 2, 4]": {
      "result": false,
      "time": 0.04388260841369629,
      "error": null
    },
    "assert rotate_left([2, 5, 6, 4, 9, 9, 10, 8, 8, 15], 7, 1) == [8, 8, 15, 2]": {
      "result": false,
      "time": 0.04479813575744629,
      "error": null
    },
    "assert rotate_left([2, 6, 1, 6, 4, 10, 9, 4, 12, 12], 1, 6) == [6, 1, 6, 4, 10, 9, 4, 12, 12, 2, 6, 1, 6, 4, 10]": {
      "result": false,
      "time": 0.04314422607421875,
      "error": null
    },
    "assert rotate_left([3, 3, 3, 5, 7, 10, 4, 11, 8, 12], 5, 3) == [10, 4, 11, 8, 12, 3, 3, 3]": {
      "result": false,
      "time": 0.0416719913482666,
      "error": null
    },
    "assert rotate_left([1, 5, 1, 1, 8, 7, 10, 5, 11, 12], 9, 6) == [12, 1, 5, 1, 1, 8, 7]": {
      "result": false,
      "time": 0.05150651931762695,
      "error": null
    },
    "assert rotate_left([1, 5, 3, 7, 10, 2, 11, 11, 6, 8], 6, 5) == [11, 11, 6, 8, 1, 5, 3, 7, 10]": {
      "result": false,
      "time": 0.046865224838256836,
      "error": null
    },
    "assert rotate_left([3, 3, 2, 8, 7, 1, 6, 6, 5, 6], 3, 6) == [8, 7, 1, 6, 6, 5, 6, 3, 3, 2, 8, 7, 1]": {
      "result": false,
      "time": 0.053138017654418945,
      "error": null
    },
    "assert rotate_left([6, 4, 5, 1, 4, 10, 5, 13, 13, 12], 3, 2) == [1, 4, 10, 5, 13, 13, 12, 6, 4]": {
      "result": false,
      "time": 0.03908586502075195,
      "error": null
    },
    "assert rotate_left([5, 4, 6, 1, 7, 5, 7, 9, 14, 8], 6, 3) == [7, 9, 14, 8, 5, 4, 6]": {
      "result": false,
      "time": 0.04303455352783203,
      "error": null
    },
    "assert rotate_left([6, 2, 8, 6, 4, 9, 10, 8, 6, 11], 3, 2) == [6, 4, 9, 10, 8, 6, 11, 6, 2]": {
      "result": false,
      "time": 0.04456734657287598,
      "error": null
    },
    "assert rotate_left([6, 5, 7, 2, 2, 9, 4, 5, 5, 8], 7, 6) == [5, 5, 8, 6, 5, 7, 2, 2, 9]": {
      "result": false,
      "time": 0.04476356506347656,
      "error": null
    },
    "assert rotate_left([1, 2, 7, 1, 7, 6, 5, 8, 13, 11], 5, 4) == [6, 5, 8, 13, 11, 1, 2, 7, 1]": {
      "result": false,
      "time": 0.04461979866027832,
      "error": null
    },
    "assert rotate_left([4, 1, 6, 6, 4, 1, 9, 9, 12, 8], 5, 3) == [1, 9, 9, 12, 8, 4, 1, 6]": {
      "result": false,
      "time": 0.03824162483215332,
      "error": null
    },
    "assert rotate_left([1, 4, 3, 9, 1, 8, 7, 7, 12, 6], 8, 7) == [12, 6, 1, 4, 3, 9, 1, 8, 7]": {
      "result": false,
      "time": 0.047312021255493164,
      "error": null
    },
    "assert rotate_left([1, 6, 6, 9, 4, 9, 8, 11, 14, 8], 5, 6) == [9, 8, 11, 14, 8, 1, 6, 6, 9, 4, 9]": {
      "result": false,
      "time": 0.04332995414733887,
      "error": null
    },
    "assert rotate_left([4, 6, 6, 2, 5, 3, 7, 3, 7, 8], 3, 1) == [2, 5, 3, 7, 3, 7, 8, 4]": {
      "result": false,
      "time": 0.04539847373962402,
      "error": null
    },
    "assert rotate_left([4, 7, 7, 9, 4, 11, 3, 12, 8, 7], 9, 3) == [7, 4, 7, 7]": {
      "result": false,
      "time": 0.04192638397216797,
      "error": null
    },
    "assert rotate_left([5, 7, 2, 6, 9, 8, 11, 11, 14, 5], 4, 2) == [9, 8, 11, 11, 14, 5, 5, 7]": {
      "result": false,
      "time": 0.04815864562988281,
      "error": null
    },
    "assert rotate_left([6, 6, 3, 9, 8, 10, 4, 11, 7, 7], 5, 6) == [10, 4, 11, 7, 7, 6, 6, 3, 9, 8, 10]": {
      "result": false,
      "time": 0.042973995208740234,
      "error": null
    },
    "assert rotate_left([1, 3, 4, 9, 2, 1, 5, 9, 4, 10], 1, 3) == [3, 4, 9, 2, 1, 5, 9, 4, 10, 1, 3, 4]": {
      "result": false,
      "time": 0.0469212532043457,
      "error": null
    },
    "assert rotate_left([2, 6, 1, 8, 2, 7, 10, 12, 10, 11], 6, 6) == [10, 12, 10, 11, 2, 6, 1, 8, 2, 7]": {
      "result": true,
      "time": 0.053720951080322266,
      "error": null
    },
    "assert rotate_left([6, 4, 7, 6, 7, 4, 6, 12, 12, 6], 8, 7) == [12, 6, 6, 4, 7, 6, 7, 4, 6]": {
      "result": false,
      "time": 0.047952890396118164,
      "error": null
    },
    "assert rotate_left([4, 5, 6, 5, 4, 5, 4, 9, 7, 8], 2, 3) == [6, 5, 4, 5, 4, 9, 7, 8, 4, 5, 6]": {
      "result": false,
      "time": 0.046012163162231445,
      "error": null
    },
    "assert rotate_left([1, 3, 4, 7, 4, 9, 10, 4, 8, 9], 2, 5) == [4, 7, 4, 9, 10, 4, 8, 9, 1, 3, 4, 7, 4]": {
      "result": false,
      "time": 0.04518246650695801,
      "error": null
    },
    "assert rotate_left([3, 4, 7, 2, 7, 1, 5, 12, 4, 10], 3, 2) == [2, 7, 1, 5, 12, 4, 10, 3, 4]": {
      "result": false,
      "time": 0.044925689697265625,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0392156862745098,
  "general_error": "",
  "has_testcase_error": false
}