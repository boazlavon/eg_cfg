{
  "code": "import math\n\ndef convert(complex_num):\n    if isinstance(complex_num, (int, float)):\n        real_part = complex_num\n        imag_part = 0.0\n    else:\n        real_part = complex_num.real\n        imag_part = complex_num.imag\n    \n    magnitude = math.sqrt(real_part ** 2 + imag_part ** 2)\n    \n    if real_part == 0:\n        if imag_part > 0:\n            angle = math.pi / 2\n        elif imag_part < 0:\n            angle = -math.pi / 2\n        else:\n            angle = 0.0\n    else:\n        angle = math.atan2(imag_part, real_part)\n    \n    return (magnitude, angle)",
  "results": {
    "assert convert(1) == (1.0, 0.0)": {
      "result": true,
      "time": 0.0747525691986084,
      "error": null
    },
    "assert convert(4) == (4.0,0.0)": {
      "result": true,
      "time": 0.08922100067138672,
      "error": null
    },
    "assert convert(5) == (5.0,0.0)": {
      "result": true,
      "time": 0.08336687088012695,
      "error": null
    },
    "assert convert(5) == (5.0, 0.0)": {
      "result": true,
      "time": 0.08381462097167969,
      "error": null
    },
    "assert convert(4) == (4.0, 0.0)": {
      "result": true,
      "time": 0.08399724960327148,
      "error": null
    },
    "assert convert(2) == (2.0, 0.0)": {
      "result": true,
      "time": 0.08476853370666504,
      "error": null
    },
    "assert convert(3) == (3.0, 0.0)": {
      "result": true,
      "time": 0.08204126358032227,
      "error": null
    },
    "assert convert(6) == (6.0, 0.0)": {
      "result": true,
      "time": 0.07845854759216309,
      "error": null
    },
    "assert convert(7) == (7.0, 0.0)": {
      "result": true,
      "time": 0.07513809204101562,
      "error": null
    },
    "assert convert(8) == (8.0, 0.0)": {
      "result": true,
      "time": 0.07736039161682129,
      "error": null
    },
    "assert convert(9) == (9.0, 0.0)": {
      "result": true,
      "time": 0.08321762084960938,
      "error": null
    },
    "assert convert(10) == (10.0, 0.0)": {
      "result": true,
      "time": 0.08690977096557617,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}