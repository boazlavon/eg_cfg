{
  "code": "def min_Operations(a, b):\n    operations = 0\n    while a != b:\n        if a > b:\n            difference = a - b\n            if difference >= b:\n                quotient = difference // b\n                operations += quotient\n                a -= quotient * b\n            else:\n                operations += 1\n                a -= b\n        else:\n            difference = b - a\n            if difference >= a:\n                quotient = difference // a\n                operations += quotient\n                b -= quotient * a\n            else:\n                operations += 1\n                b -= a\n    return operations",
  "results": {
    "assert min_Operations(2,4) == 1": {
      "result": true,
      "time": 0.05928921699523926,
      "error": null
    },
    "assert min_Operations(4,10) == 4": {
      "result": false,
      "time": 0.048566579818725586,
      "error": null
    },
    "assert min_Operations(1,4) == 3": {
      "result": true,
      "time": 0.05893063545227051,
      "error": null
    },
    "assert min_Operations(1, 7) == 6": {
      "result": true,
      "time": 0.04549908638000488,
      "error": null
    },
    "assert min_Operations(5, 7) == 6": {
      "result": false,
      "time": 0.05327415466308594,
      "error": null
    },
    "assert min_Operations(4, 6) == 2": {
      "result": true,
      "time": 0.04770708084106445,
      "error": null
    },
    "assert min_Operations(2, 9) == 8": {
      "result": false,
      "time": 0.0590057373046875,
      "error": null
    },
    "assert min_Operations(1, 1) == 0": {
      "result": true,
      "time": 0.06068754196166992,
      "error": null
    },
    "assert min_Operations(2, 7) == 6": {
      "result": false,
      "time": 0.0496525764465332,
      "error": null
    },
    "assert min_Operations(2, 5) == 4": {
      "result": false,
      "time": 0.06420302391052246,
      "error": null
    },
    "assert min_Operations(7, 9) == 8": {
      "result": false,
      "time": 0.04411768913269043,
      "error": null
    },
    "assert min_Operations(3, 3) == 0": {
      "result": true,
      "time": 0.043950557708740234,
      "error": null
    },
    "assert min_Operations(6, 6) == 0": {
      "result": true,
      "time": 0.0475010871887207,
      "error": null
    },
    "assert min_Operations(5, 5) == 0": {
      "result": true,
      "time": 0.04222297668457031,
      "error": null
    },
    "assert min_Operations(4, 7) == 6": {
      "result": false,
      "time": 0.041541099548339844,
      "error": null
    },
    "assert min_Operations(1, 4) == 3": {
      "result": true,
      "time": 0.03960728645324707,
      "error": null
    },
    "assert min_Operations(7, 8) == 7": {
      "result": true,
      "time": 0.05084228515625,
      "error": null
    },
    "assert min_Operations(3, 9) == 2": {
      "result": true,
      "time": 0.04717302322387695,
      "error": null
    },
    "assert min_Operations(6, 7) == 6": {
      "result": true,
      "time": 0.04035639762878418,
      "error": null
    },
    "assert min_Operations(2, 6) == 2": {
      "result": true,
      "time": 0.04567122459411621,
      "error": null
    },
    "assert min_Operations(4, 8) == 1": {
      "result": true,
      "time": 0.04339170455932617,
      "error": null
    },
    "assert min_Operations(3, 8) == 7": {
      "result": false,
      "time": 0.04359912872314453,
      "error": null
    },
    "assert min_Operations(6, 8) == 3": {
      "result": true,
      "time": 0.040248870849609375,
      "error": null
    },
    "assert min_Operations(1, 9) == 8": {
      "result": true,
      "time": 0.044179439544677734,
      "error": null
    },
    "assert min_Operations(5, 6) == 5": {
      "result": true,
      "time": 0.041656494140625,
      "error": null
    },
    "assert min_Operations(3, 14) == 13": {
      "result": false,
      "time": 0.0418393611907959,
      "error": null
    },
    "assert min_Operations(8, 10) == 4": {
      "result": true,
      "time": 0.052332401275634766,
      "error": null
    },
    "assert min_Operations(8, 11) == 10": {
      "result": false,
      "time": 0.03634524345397949,
      "error": null
    },
    "assert min_Operations(5, 14) == 13": {
      "result": false,
      "time": 0.04771995544433594,
      "error": null
    },
    "assert min_Operations(8, 9) == 8": {
      "result": true,
      "time": 0.04882955551147461,
      "error": null
    },
    "assert min_Operations(7, 13) == 12": {
      "result": false,
      "time": 0.04447054862976074,
      "error": null
    },
    "assert min_Operations(9, 11) == 10": {
      "result": false,
      "time": 0.04450559616088867,
      "error": null
    },
    "assert min_Operations(1, 15) == 14": {
      "result": true,
      "time": 0.04938697814941406,
      "error": null
    },
    "assert min_Operations(4, 10) == 4": {
      "result": false,
      "time": 0.044205665588378906,
      "error": null
    },
    "assert min_Operations(7, 15) == 14": {
      "result": false,
      "time": 0.03703904151916504,
      "error": null
    },
    "assert min_Operations(1, 12) == 11": {
      "result": true,
      "time": 0.043639421463012695,
      "error": null
    },
    "assert min_Operations(3, 10) == 9": {
      "result": false,
      "time": 0.0509495735168457,
      "error": null
    },
    "assert min_Operations(8, 13) == 12": {
      "result": false,
      "time": 0.04242277145385742,
      "error": null
    },
    "assert min_Operations(1, 13) == 12": {
      "result": true,
      "time": 0.0379335880279541,
      "error": null
    },
    "assert min_Operations(4, 9) == 8": {
      "result": false,
      "time": 0.036840200424194336,
      "error": null
    },
    "assert min_Operations(7, 11) == 10": {
      "result": false,
      "time": 0.042731285095214844,
      "error": null
    },
    "assert min_Operations(4, 5) == 4": {
      "result": true,
      "time": 0.04377388954162598,
      "error": null
    },
    "assert min_Operations(9, 12) == 3": {
      "result": true,
      "time": 0.03716397285461426,
      "error": null
    },
    "assert min_Operations(3, 6) == 1": {
      "result": true,
      "time": 0.037622690200805664,
      "error": null
    },
    "assert min_Operations(1, 6) == 5": {
      "result": true,
      "time": 0.041489601135253906,
      "error": null
    },
    "assert min_Operations(1, 8) == 7": {
      "result": true,
      "time": 0.05984783172607422,
      "error": null
    },
    "assert min_Operations(7, 10) == 9": {
      "result": false,
      "time": 0.04134988784790039,
      "error": null
    },
    "assert min_Operations(2, 12) == 5": {
      "result": true,
      "time": 0.05437493324279785,
      "error": null
    },
    "assert min_Operations(1, 3) == 2": {
      "result": true,
      "time": 0.03518176078796387,
      "error": null
    },
    "assert min_Operations(2, 3) == 2": {
      "result": true,
      "time": 0.04743003845214844,
      "error": null
    },
    "assert min_Operations(2, 2) == 0": {
      "result": true,
      "time": 0.04888510704040527,
      "error": null
    },
    "assert min_Operations(3, 4) == 3": {
      "result": true,
      "time": 0.0385279655456543,
      "error": null
    },
    "assert min_Operations(2, 8) == 3": {
      "result": true,
      "time": 0.037925004959106445,
      "error": null
    },
    "assert min_Operations(3, 7) == 6": {
      "result": false,
      "time": 0.03892993927001953,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6111111111111112,
  "general_error": "",
  "has_testcase_error": false
}