{
  "code": "def index_multiplication(tuple1, tuple2):\n    result = []\n    for i in range(len(tuple1)):\n        current_tuple1 = tuple1[i]\n        current_tuple2 = tuple2[i]\n        multiplied_tuple = ()\n        for j in range(len(current_tuple1)):\n            product = current_tuple1[j] * current_tuple2[j]\n            multiplied_tuple += (product,)\n        result.append(multiplied_tuple)\n    return tuple(result)",
  "results": {
    "assert index_multiplication(((1, 3), (4, 5), (2, 9), (1, 10)),((6, 7), (3, 9), (1, 1), (7, 3)) ) == ((6, 21), (12, 45), (2, 9), (7, 30))": {
      "result": true,
      "time": 0.0378565788269043,
      "error": null
    },
    "assert index_multiplication(((2, 4), (5, 6), (3, 10), (2, 11)),((7, 8), (4, 10), (2, 2), (8, 4)) ) == ((14, 32), (20, 60), (6, 20), (16, 44))": {
      "result": true,
      "time": 0.03394150733947754,
      "error": null
    },
    "assert index_multiplication(((3, 5), (6, 7), (4, 11), (3, 12)),((8, 9), (5, 11), (3, 3), (9, 5)) ) == ((24, 45), (30, 77), (12, 33), (27, 60))": {
      "result": true,
      "time": 0.03603076934814453,
      "error": null
    },
    "assert index_multiplication(((2, 4), (7, 1), (2, 10), (1, 7)), ((11, 9), (8, 10), (5, 4), (10, 8))) == ((22, 36), (56, 10), (10, 40), (10, 56))": {
      "result": true,
      "time": 0.03702282905578613,
      "error": null
    },
    "assert index_multiplication(((3, 4), (4, 2), (2, 4), (1, 14)), ((10, 9), (5, 10), (6, 6), (12, 3))) == ((30, 36), (20, 20), (12, 24), (12, 42))": {
      "result": true,
      "time": 0.035549163818359375,
      "error": null
    },
    "assert index_multiplication(((5, 3), (5, 6), (7, 11), (3, 8)), ((6, 8), (8, 9), (6, 2), (8, 5))) == ((30, 24), (40, 54), (42, 22), (24, 40))": {
      "result": true,
      "time": 0.030676841735839844,
      "error": null
    },
    "assert index_multiplication(((3, 4), (6, 3), (1, 14), (2, 7)), ((8, 5), (3, 7), (5, 2), (9, 2))) == ((24, 20), (18, 21), (5, 28), (18, 14))": {
      "result": true,
      "time": 0.03145098686218262,
      "error": null
    },
    "assert index_multiplication(((5, 8), (4, 5), (7, 12), (2, 5)), ((6, 3), (2, 9), (4, 4), (6, 8))) == ((30, 24), (8, 45), (28, 48), (12, 40))": {
      "result": true,
      "time": 0.030844926834106445,
      "error": null
    },
    "assert index_multiplication(((3, 6), (3, 6), (1, 9), (3, 9)), ((3, 12), (5, 5), (5, 3), (11, 4))) == ((9, 72), (15, 30), (5, 27), (33, 36))": {
      "result": true,
      "time": 0.03440237045288086,
      "error": null
    },
    "assert index_multiplication(((2, 6), (3, 8), (3, 4), (2, 7)), ((5, 9), (1, 6), (6, 3), (10, 1))) == ((10, 54), (3, 48), (18, 12), (20, 7))": {
      "result": true,
      "time": 0.0335690975189209,
      "error": null
    },
    "assert index_multiplication(((4, 8), (3, 7), (1, 7), (5, 7)), ((10, 8), (1, 14), (1, 4), (9, 3))) == ((40, 64), (3, 98), (1, 28), (45, 21))": {
      "result": true,
      "time": 0.03330588340759277,
      "error": null
    },
    "assert index_multiplication(((4, 2), (3, 7), (2, 9), (5, 8)), ((7, 11), (3, 10), (2, 5), (7, 6))) == ((28, 22), (9, 70), (4, 45), (35, 48))": {
      "result": true,
      "time": 0.03778505325317383,
      "error": null
    },
    "assert index_multiplication(((5, 3), (1, 1), (4, 5), (6, 7)), ((9, 5), (1, 9), (4, 6), (12, 4))) == ((45, 15), (1, 9), (16, 30), (72, 28))": {
      "result": true,
      "time": 0.04240250587463379,
      "error": null
    },
    "assert index_multiplication(((4, 2), (2, 7), (6, 4), (2, 12)), ((11, 8), (1, 14), (1, 3), (12, 8))) == ((44, 16), (2, 98), (6, 12), (24, 96))": {
      "result": true,
      "time": 0.04322218894958496,
      "error": null
    },
    "assert index_multiplication(((1, 5), (1, 9), (3, 11), (4, 15)), ((2, 8), (5, 4), (5, 2), (3, 3))) == ((2, 40), (5, 36), (15, 22), (12, 45))": {
      "result": true,
      "time": 0.0426020622253418,
      "error": null
    },
    "assert index_multiplication(((4, 3), (6, 10), (5, 9), (6, 15)), ((11, 12), (2, 8), (4, 3), (7, 8))) == ((44, 36), (12, 80), (20, 27), (42, 120))": {
      "result": true,
      "time": 0.04089641571044922,
      "error": null
    },
    "assert index_multiplication(((4, 4), (1, 1), (2, 12), (5, 5)), ((6, 11), (4, 12), (2, 4), (2, 3))) == ((24, 44), (4, 12), (4, 48), (10, 15))": {
      "result": true,
      "time": 0.047980546951293945,
      "error": null
    },
    "assert index_multiplication(((4, 2), (5, 4), (6, 9), (6, 7)), ((8, 7), (5, 7), (1, 5), (8, 2))) == ((32, 14), (25, 28), (6, 45), (48, 14))": {
      "result": true,
      "time": 0.04854846000671387,
      "error": null
    },
    "assert index_multiplication(((1, 4), (1, 4), (6, 8), (2, 6)), ((4, 12), (7, 4), (3, 2), (6, 8))) == ((4, 48), (7, 16), (18, 16), (12, 48))": {
      "result": true,
      "time": 0.04453277587890625,
      "error": null
    },
    "assert index_multiplication(((4, 8), (7, 7), (7, 11), (3, 8)), ((9, 4), (7, 6), (4, 1), (4, 8))) == ((36, 32), (49, 42), (28, 11), (12, 64))": {
      "result": true,
      "time": 0.045348167419433594,
      "error": null
    },
    "assert index_multiplication(((4, 5), (1, 9), (2, 5), (3, 8)), ((1, 12), (4, 10), (5, 4), (5, 6))) == ((4, 60), (4, 90), (10, 20), (15, 48))": {
      "result": true,
      "time": 0.04851198196411133,
      "error": null
    },
    "assert index_multiplication(((1, 7), (1, 3), (1, 10), (5, 9)), ((7, 5), (7, 5), (6, 6), (9, 1))) == ((7, 35), (7, 15), (6, 60), (45, 9))": {
      "result": true,
      "time": 0.04858136177062988,
      "error": null
    },
    "assert index_multiplication(((5, 7), (8, 8), (2, 11), (5, 6)), ((7, 7), (3, 5), (2, 5), (7, 7))) == ((35, 49), (24, 40), (4, 55), (35, 42))": {
      "result": true,
      "time": 0.040071964263916016,
      "error": null
    },
    "assert index_multiplication(((6, 1), (1, 5), (6, 5), (4, 14)), ((7, 3), (2, 12), (3, 3), (6, 7))) == ((42, 3), (2, 60), (18, 15), (24, 98))": {
      "result": true,
      "time": 0.037981271743774414,
      "error": null
    },
    "assert index_multiplication(((6, 8), (8, 3), (4, 5), (5, 5)), ((7, 6), (4, 14), (6, 6), (3, 5))) == ((42, 48), (32, 42), (24, 30), (15, 25))": {
      "result": true,
      "time": 0.04136085510253906,
      "error": null
    },
    "assert index_multiplication(((4, 2), (7, 1), (1, 5), (2, 7)), ((3, 11), (5, 4), (5, 6), (12, 1))) == ((12, 22), (35, 4), (5, 30), (24, 7))": {
      "result": true,
      "time": 0.05208635330200195,
      "error": null
    },
    "assert index_multiplication(((5, 3), (4, 6), (1, 9), (1, 8)), ((7, 3), (7, 6), (5, 2), (5, 8))) == ((35, 9), (28, 36), (5, 18), (5, 64))": {
      "result": true,
      "time": 0.04825782775878906,
      "error": null
    },
    "assert index_multiplication(((1, 3), (6, 1), (1, 6), (6, 9)), ((9, 5), (2, 8), (1, 2), (7, 1))) == ((9, 15), (12, 8), (1, 12), (42, 9))": {
      "result": true,
      "time": 0.04942965507507324,
      "error": null
    },
    "assert index_multiplication(((4, 3), (2, 7), (2, 8), (1, 5)), ((10, 12), (4, 8), (6, 6), (9, 1))) == ((40, 36), (8, 56), (12, 48), (9, 5))": {
      "result": true,
      "time": 0.04620194435119629,
      "error": null
    },
    "assert index_multiplication(((5, 5), (2, 1), (4, 4), (5, 9)), ((1, 8), (2, 8), (2, 4), (7, 8))) == ((5, 40), (4, 8), (8, 16), (35, 72))": {
      "result": true,
      "time": 0.048056602478027344,
      "error": null
    },
    "assert index_multiplication(((6, 4), (8, 9), (7, 10), (6, 14)), ((11, 7), (8, 6), (3, 2), (4, 4))) == ((66, 28), (64, 54), (21, 20), (24, 56))": {
      "result": true,
      "time": 0.0424196720123291,
      "error": null
    },
    "assert index_multiplication(((2, 5), (5, 1), (2, 11), (2, 12)), ((5, 11), (7, 9), (4, 2), (6, 1))) == ((10, 55), (35, 9), (8, 22), (12, 12))": {
      "result": true,
      "time": 0.03900432586669922,
      "error": null
    },
    "assert index_multiplication(((5, 1), (5, 7), (3, 11), (6, 15)), ((9, 9), (1, 4), (4, 6), (3, 3))) == ((45, 9), (5, 28), (12, 66), (18, 45))": {
      "result": true,
      "time": 0.05095815658569336,
      "error": null
    },
    "assert index_multiplication(((1, 3), (7, 9), (2, 6), (2, 6)), ((9, 10), (3, 12), (1, 4), (7, 1))) == ((9, 30), (21, 108), (2, 24), (14, 6))": {
      "result": true,
      "time": 0.04867434501647949,
      "error": null
    },
    "assert index_multiplication(((5, 2), (6, 8), (6, 6), (4, 11)), ((11, 6), (2, 13), (1, 6), (12, 4))) == ((55, 12), (12, 104), (6, 36), (48, 44))": {
      "result": true,
      "time": 0.05573916435241699,
      "error": null
    },
    "assert index_multiplication(((4, 2), (3, 4), (4, 12), (1, 11)), ((5, 9), (6, 4), (5, 2), (6, 1))) == ((20, 18), (18, 16), (20, 24), (6, 11))": {
      "result": true,
      "time": 0.043364763259887695,
      "error": null
    },
    "assert index_multiplication(((3, 3), (6, 4), (1, 13), (1, 12)), ((9, 13), (5, 11), (1, 4), (11, 4))) == ((27, 39), (30, 44), (1, 52), (11, 48))": {
      "result": true,
      "time": 0.045363426208496094,
      "error": null
    },
    "assert index_multiplication(((2, 7), (1, 4), (6, 13), (3, 14)), ((10, 9), (1, 15), (2, 4), (3, 1))) == ((20, 63), (1, 60), (12, 52), (9, 14))": {
      "result": true,
      "time": 0.04702639579772949,
      "error": null
    },
    "assert index_multiplication(((4, 3), (1, 1), (5, 6), (3, 11)), ((3, 3), (9, 15), (4, 4), (10, 8))) == ((12, 9), (9, 15), (20, 24), (30, 88))": {
      "result": true,
      "time": 0.041185617446899414,
      "error": null
    },
    "assert index_multiplication(((4, 5), (7, 7), (4, 13), (1, 6)), ((3, 4), (6, 6), (6, 5), (8, 4))) == ((12, 20), (42, 42), (24, 65), (8, 24))": {
      "result": true,
      "time": 0.042847394943237305,
      "error": null
    },
    "assert index_multiplication(((6, 6), (5, 6), (6, 12), (4, 9)), ((5, 11), (7, 13), (6, 6), (6, 7))) == ((30, 66), (35, 78), (36, 72), (24, 63))": {
      "result": true,
      "time": 0.05258917808532715,
      "error": null
    },
    "assert index_multiplication(((6, 9), (4, 5), (7, 8), (5, 12)), ((3, 6), (5, 9), (3, 5), (4, 6))) == ((18, 54), (20, 45), (21, 40), (20, 72))": {
      "result": true,
      "time": 0.049155473709106445,
      "error": null
    },
    "assert index_multiplication(((5, 5), (10, 3), (7, 13), (3, 6)), ((5, 9), (2, 13), (7, 2), (8, 1))) == ((25, 45), (20, 39), (49, 26), (24, 6))": {
      "result": true,
      "time": 0.0472564697265625,
      "error": null
    },
    "assert index_multiplication(((3, 3), (10, 7), (6, 8), (1, 14)), ((4, 13), (4, 11), (4, 1), (13, 2))) == ((12, 39), (40, 77), (24, 8), (13, 28))": {
      "result": true,
      "time": 0.054018497467041016,
      "error": null
    },
    "assert index_multiplication(((5, 8), (10, 1), (1, 15), (4, 13)), ((9, 9), (4, 8), (6, 2), (13, 7))) == ((45, 72), (40, 8), (6, 30), (52, 91))": {
      "result": true,
      "time": 0.03953194618225098,
      "error": null
    },
    "assert index_multiplication(((6, 1), (5, 5), (3, 9), (1, 16)), ((8, 10), (7, 9), (7, 5), (11, 6))) == ((48, 10), (35, 45), (21, 45), (11, 96))": {
      "result": true,
      "time": 0.037917137145996094,
      "error": null
    },
    "assert index_multiplication(((1, 1), (3, 9), (3, 9), (3, 11)), ((9, 12), (2, 12), (4, 4), (3, 6))) == ((9, 12), (6, 108), (12, 36), (9, 66))": {
      "result": true,
      "time": 0.03982353210449219,
      "error": null
    },
    "assert index_multiplication(((1, 1), (1, 10), (3, 11), (7, 9)), ((11, 8), (2, 13), (6, 6), (8, 9))) == ((11, 8), (2, 130), (18, 66), (56, 81))": {
      "result": true,
      "time": 0.044557809829711914,
      "error": null
    },
    "assert index_multiplication(((4, 3), (6, 3), (3, 6), (3, 12)), ((7, 3), (9, 12), (2, 6), (7, 3))) == ((28, 9), (54, 36), (6, 36), (21, 36))": {
      "result": true,
      "time": 0.05104255676269531,
      "error": null
    },
    "assert index_multiplication(((5, 2), (8, 8), (4, 11), (2, 10)), ((11, 8), (3, 6), (5, 7), (11, 5))) == ((55, 16), (24, 48), (20, 77), (22, 50))": {
      "result": true,
      "time": 0.044547080993652344,
      "error": null
    },
    "assert index_multiplication(((5, 6), (4, 3), (7, 13), (5, 14)), ((9, 5), (3, 14), (7, 4), (5, 6))) == ((45, 30), (12, 42), (49, 52), (25, 84))": {
      "result": true,
      "time": 0.0465548038482666,
      "error": null
    },
    "assert index_multiplication(((3, 2), (4, 10), (8, 9), (4, 16)), ((12, 11), (8, 10), (5, 6), (8, 1))) == ((36, 22), (32, 100), (40, 54), (32, 16))": {
      "result": true,
      "time": 0.04118990898132324,
      "error": null
    },
    "assert index_multiplication(((7, 9), (8, 5), (2, 6), (7, 6)), ((12, 7), (2, 11), (5, 1), (9, 8))) == ((84, 63), (16, 55), (10, 6), (63, 48))": {
      "result": true,
      "time": 0.0447080135345459,
      "error": null
    },
    "assert index_multiplication(((1, 5), (9, 6), (4, 10), (7, 11)), ((2, 10), (5, 9), (3, 4), (13, 2))) == ((2, 50), (45, 54), (12, 40), (91, 22))": {
      "result": true,
      "time": 0.04967236518859863,
      "error": null
    },
    "assert index_multiplication(((7, 9), (7, 7), (6, 9), (6, 6)), ((9, 9), (2, 14), (1, 4), (12, 6))) == ((63, 81), (14, 98), (6, 36), (72, 36))": {
      "result": true,
      "time": 0.053816795349121094,
      "error": null
    },
    "assert index_multiplication(((5, 5), (10, 3), (1, 12), (5, 13)), ((2, 7), (5, 11), (7, 2), (4, 3))) == ((10, 35), (50, 33), (7, 24), (20, 39))": {
      "result": true,
      "time": 0.04633688926696777,
      "error": null
    },
    "assert index_multiplication(((1, 6), (3, 6), (8, 5), (3, 6)), ((2, 9), (1, 8), (5, 4), (7, 1))) == ((2, 54), (3, 48), (40, 20), (21, 6))": {
      "result": true,
      "time": 0.04784440994262695,
      "error": null
    },
    "assert index_multiplication(((1, 7), (10, 11), (8, 12), (2, 13)), ((4, 3), (1, 8), (1, 5), (5, 3))) == ((4, 21), (10, 88), (8, 60), (10, 39))": {
      "result": true,
      "time": 0.0428471565246582,
      "error": null
    },
    "assert index_multiplication(((6, 7), (4, 7), (4, 7), (3, 13)), ((8, 12), (2, 9), (7, 5), (13, 8))) == ((48, 84), (8, 63), (28, 35), (39, 104))": {
      "result": true,
      "time": 0.04443001747131348,
      "error": null
    },
    "assert index_multiplication(((1, 2), (5, 1), (7, 15), (4, 14)), ((9, 3), (5, 11), (2, 2), (13, 3))) == ((9, 6), (25, 11), (14, 30), (52, 42))": {
      "result": true,
      "time": 0.04348039627075195,
      "error": null
    },
    "assert index_multiplication(((2, 4), (4, 9), (8, 12), (2, 15)), ((4, 9), (2, 5), (7, 6), (11, 2))) == ((8, 36), (8, 45), (56, 72), (22, 30))": {
      "result": true,
      "time": 0.03719973564147949,
      "error": null
    },
    "assert index_multiplication(((7, 2), (6, 8), (8, 14), (6, 14)), ((4, 4), (8, 15), (6, 6), (5, 9))) == ((28, 8), (48, 120), (48, 84), (30, 126))": {
      "result": true,
      "time": 0.03867149353027344,
      "error": null
    },
    "assert index_multiplication(((7, 3), (5, 10), (7, 9), (1, 8)), ((6, 12), (3, 5), (3, 3), (5, 4))) == ((42, 36), (15, 50), (21, 27), (5, 32))": {
      "result": true,
      "time": 0.04087257385253906,
      "error": null
    },
    "assert index_multiplication(((2, 7), (8, 10), (1, 5), (3, 6)), ((3, 13), (5, 8), (1, 5), (10, 8))) == ((6, 91), (40, 80), (1, 25), (30, 48))": {
      "result": true,
      "time": 0.04263615608215332,
      "error": null
    },
    "assert index_multiplication(((3, 3), (3, 8), (7, 12), (3, 10)), ((7, 10), (2, 7), (6, 1), (4, 8))) == ((21, 30), (6, 56), (42, 12), (12, 80))": {
      "result": true,
      "time": 0.03683066368103027,
      "error": null
    },
    "assert index_multiplication(((6, 9), (1, 5), (8, 11), (4, 8)), ((4, 7), (2, 7), (2, 4), (7, 3))) == ((24, 63), (2, 35), (16, 44), (28, 24))": {
      "result": true,
      "time": 0.0424802303314209,
      "error": null
    },
    "assert index_multiplication(((3, 3), (4, 1), (1, 14), (3, 12)), ((3, 10), (7, 10), (7, 7), (5, 1))) == ((9, 30), (28, 10), (7, 98), (15, 12))": {
      "result": true,
      "time": 0.0411221981048584,
      "error": null
    },
    "assert index_multiplication(((4, 4), (9, 3), (8, 8), (6, 13)), ((5, 13), (6, 13), (3, 6), (9, 8))) == ((20, 52), (54, 39), (24, 48), (54, 104))": {
      "result": true,
      "time": 0.04684138298034668,
      "error": null
    },
    "assert index_multiplication(((1, 7), (4, 5), (3, 11), (3, 10)), ((12, 5), (1, 13), (4, 1), (4, 1))) == ((12, 35), (4, 65), (12, 11), (12, 10))": {
      "result": true,
      "time": 0.0444493293762207,
      "error": null
    },
    "assert index_multiplication(((7, 6), (7, 9), (8, 16), (5, 12)), ((10, 10), (2, 6), (3, 3), (11, 7))) == ((70, 60), (14, 54), (24, 48), (55, 84))": {
      "result": true,
      "time": 0.04038238525390625,
      "error": null
    },
    "assert index_multiplication(((1, 5), (5, 8), (2, 10), (6, 15)), ((4, 9), (2, 15), (6, 5), (12, 10))) == ((4, 45), (10, 120), (12, 50), (72, 150))": {
      "result": true,
      "time": 0.04168391227722168,
      "error": null
    },
    "assert index_multiplication(((3, 7), (8, 3), (5, 12), (7, 9)), ((4, 12), (9, 10), (5, 5), (5, 1))) == ((12, 84), (72, 30), (25, 60), (35, 9))": {
      "result": true,
      "time": 0.04227018356323242,
      "error": null
    },
    "assert index_multiplication(((3, 1), (3, 12), (8, 6), (1, 15)), ((9, 5), (4, 10), (1, 6), (12, 1))) == ((27, 5), (12, 120), (8, 36), (12, 15))": {
      "result": true,
      "time": 0.03381776809692383,
      "error": null
    },
    "assert index_multiplication(((2, 7), (1, 3), (3, 13), (3, 11)), ((11, 12), (6, 16), (4, 8), (6, 7))) == ((22, 84), (6, 48), (12, 104), (18, 77))": {
      "result": true,
      "time": 0.035874128341674805,
      "error": null
    },
    "assert index_multiplication(((8, 5), (4, 9), (9, 13), (5, 7)), ((8, 10), (2, 8), (5, 8), (9, 7))) == ((64, 50), (8, 72), (45, 104), (45, 49))": {
      "result": true,
      "time": 0.04295778274536133,
      "error": null
    },
    "assert index_multiplication(((3, 7), (8, 10), (6, 11), (5, 17)), ((5, 5), (5, 13), (1, 6), (4, 10))) == ((15, 35), (40, 130), (6, 66), (20, 170))": {
      "result": true,
      "time": 0.04743218421936035,
      "error": null
    },
    "assert index_multiplication(((4, 1), (6, 9), (2, 11), (2, 7)), ((13, 11), (6, 12), (7, 4), (7, 3))) == ((52, 11), (36, 108), (14, 44), (14, 21))": {
      "result": true,
      "time": 0.04211831092834473,
      "error": null
    },
    "assert index_multiplication(((4, 7), (8, 11), (5, 11), (8, 13)), ((8, 7), (3, 14), (5, 6), (8, 6))) == ((32, 49), (24, 154), (25, 66), (64, 78))": {
      "result": true,
      "time": 0.03649091720581055,
      "error": null
    },
    "assert index_multiplication(((5, 3), (6, 3), (3, 13), (2, 14)), ((9, 7), (3, 9), (4, 5), (11, 6))) == ((45, 21), (18, 27), (12, 65), (22, 84))": {
      "result": true,
      "time": 0.03816103935241699,
      "error": null
    },
    "assert index_multiplication(((8, 6), (5, 3), (3, 16), (5, 14)), ((11, 13), (2, 13), (7, 6), (13, 4))) == ((88, 78), (10, 39), (21, 96), (65, 56))": {
      "result": true,
      "time": 0.039206504821777344,
      "error": null
    },
    "assert index_multiplication(((7, 10), (1, 8), (2, 11), (8, 14)), ((12, 12), (7, 11), (4, 4), (7, 8))) == ((84, 120), (7, 88), (8, 44), (56, 112))": {
      "result": true,
      "time": 0.04560112953186035,
      "error": null
    },
    "assert index_multiplication(((1, 1), (11, 11), (2, 13), (8, 10)), ((9, 10), (3, 14), (2, 5), (14, 2))) == ((9, 10), (33, 154), (4, 65), (112, 20))": {
      "result": true,
      "time": 0.044344425201416016,
      "error": null
    },
    "assert index_multiplication(((1, 3), (9, 6), (2, 12), (5, 9)), ((13, 10), (6, 16), (4, 4), (6, 9))) == ((13, 30), (54, 96), (8, 48), (30, 81))": {
      "result": true,
      "time": 0.03971695899963379,
      "error": null
    },
    "assert index_multiplication(((6, 8), (4, 2), (8, 8), (4, 14)), ((3, 5), (6, 8), (8, 4), (11, 5))) == ((18, 40), (24, 16), (64, 32), (44, 70))": {
      "result": true,
      "time": 0.040970563888549805,
      "error": null
    },
    "assert index_multiplication(((7, 7), (10, 9), (3, 8), (4, 9)), ((6, 6), (9, 15), (3, 5), (5, 10))) == ((42, 42), (90, 135), (9, 40), (20, 90))": {
      "result": true,
      "time": 0.03873181343078613,
      "error": null
    },
    "assert index_multiplication(((4, 3), (10, 9), (6, 10), (2, 10)), ((6, 8), (7, 11), (8, 1), (14, 10))) == ((24, 24), (70, 99), (48, 10), (28, 100))": {
      "result": true,
      "time": 0.04748964309692383,
      "error": null
    },
    "assert index_multiplication(((7, 2), (11, 11), (5, 11), (4, 8)), ((8, 8), (2, 12), (2, 6), (5, 3))) == ((56, 16), (22, 132), (10, 66), (20, 24))": {
      "result": true,
      "time": 0.039615631103515625,
      "error": null
    },
    "assert index_multiplication(((8, 1), (7, 3), (8, 6), (1, 10)), ((10, 12), (8, 9), (6, 5), (10, 9))) == ((80, 12), (56, 27), (48, 30), (10, 90))": {
      "result": true,
      "time": 0.03530097007751465,
      "error": null
    },
    "assert index_multiplication(((8, 10), (3, 12), (2, 10), (8, 14)), ((4, 6), (5, 14), (3, 6), (13, 9))) == ((32, 60), (15, 168), (6, 60), (104, 126))": {
      "result": true,
      "time": 0.035547494888305664,
      "error": null
    },
    "assert index_multiplication(((5, 8), (5, 8), (9, 7), (3, 16)), ((11, 7), (7, 12), (3, 4), (5, 2))) == ((55, 56), (35, 96), (27, 28), (15, 32))": {
      "result": true,
      "time": 0.040338993072509766,
      "error": null
    },
    "assert index_multiplication(((3, 8), (5, 6), (9, 11), (2, 8)), ((12, 9), (7, 16), (6, 8), (4, 2))) == ((36, 72), (35, 96), (54, 88), (8, 16))": {
      "result": true,
      "time": 0.044025421142578125,
      "error": null
    },
    "assert index_multiplication(((2, 9), (8, 10), (9, 11), (1, 12)), ((9, 11), (2, 10), (1, 3), (4, 6))) == ((18, 99), (16, 100), (9, 33), (4, 72))": {
      "result": true,
      "time": 0.03158235549926758,
      "error": null
    },
    "assert index_multiplication(((5, 8), (4, 3), (1, 13), (2, 17)), ((4, 8), (4, 8), (6, 5), (13, 8))) == ((20, 64), (16, 24), (6, 65), (26, 136))": {
      "result": true,
      "time": 0.043068885803222656,
      "error": null
    },
    "assert index_multiplication(((5, 2), (4, 12), (8, 7), (1, 8)), ((13, 9), (2, 16), (4, 6), (7, 1))) == ((65, 18), (8, 192), (32, 42), (7, 8))": {
      "result": true,
      "time": 0.04239678382873535,
      "error": null
    },
    "assert index_multiplication(((5, 3), (11, 6), (3, 11), (8, 11)), ((9, 13), (6, 8), (5, 6), (8, 3))) == ((45, 39), (66, 48), (15, 66), (64, 33))": {
      "result": true,
      "time": 0.040708303451538086,
      "error": null
    },
    "assert index_multiplication(((7, 8), (4, 7), (4, 7), (3, 17)), ((12, 14), (10, 11), (5, 6), (7, 3))) == ((84, 112), (40, 77), (20, 42), (21, 51))": {
      "result": true,
      "time": 0.043070077896118164,
      "error": null
    },
    "assert index_multiplication(((3, 10), (3, 8), (3, 8), (4, 11)), ((11, 10), (8, 8), (8, 2), (12, 5))) == ((33, 100), (24, 64), (24, 16), (48, 55))": {
      "result": true,
      "time": 0.03932523727416992,
      "error": null
    },
    "assert index_multiplication(((2, 10), (3, 3), (9, 10), (7, 10)), ((6, 11), (9, 9), (3, 1), (4, 2))) == ((12, 110), (27, 27), (27, 10), (28, 20))": {
      "result": true,
      "time": 0.04223513603210449,
      "error": null
    },
    "assert index_multiplication(((1, 5), (4, 4), (6, 10), (5, 13)), ((4, 4), (1, 8), (2, 2), (9, 8))) == ((4, 20), (4, 32), (12, 20), (45, 104))": {
      "result": true,
      "time": 0.04464292526245117,
      "error": null
    },
    "assert index_multiplication(((3, 3), (8, 5), (6, 9), (6, 13)), ((12, 11), (8, 13), (4, 7), (14, 5))) == ((36, 33), (64, 65), (24, 63), (84, 65))": {
      "result": true,
      "time": 0.04305458068847656,
      "error": null
    },
    "assert index_multiplication(((5, 5), (1, 6), (7, 7), (1, 13)), ((13, 14), (5, 8), (8, 1), (5, 2))) == ((65, 70), (5, 48), (56, 7), (5, 26))": {
      "result": true,
      "time": 0.04415273666381836,
      "error": null
    },
    "assert index_multiplication(((3, 2), (1, 12), (3, 10), (3, 16)), ((11, 7), (5, 6), (1, 8), (13, 8))) == ((33, 14), (5, 72), (3, 80), (39, 128))": {
      "result": true,
      "time": 0.03940415382385254,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}