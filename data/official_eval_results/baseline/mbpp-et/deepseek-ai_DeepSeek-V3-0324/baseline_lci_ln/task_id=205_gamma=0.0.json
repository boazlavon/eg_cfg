{
  "code": "def inversion_elements(input_tuple):\n    inverted_list = []\n    for num in input_tuple:\n        inverted_num = -num - 1\n        inverted_list.append(inverted_num)\n    inverted_tuple = tuple(inverted_list)\n    return inverted_tuple",
  "results": {
    "assert inversion_elements((7, 8, 9, 1, 10, 7)) == (-8, -9, -10, -2, -11, -8)": {
      "result": true,
      "time": 0.046292781829833984,
      "error": null
    },
    "assert inversion_elements((2, 4, 5, 6, 1, 7)) == (-3, -5, -6, -7, -2, -8)": {
      "result": true,
      "time": 0.049898386001586914,
      "error": null
    },
    "assert inversion_elements((8, 9, 11, 14, 12, 13)) == (-9, -10, -12, -15, -13, -14)": {
      "result": true,
      "time": 0.03771376609802246,
      "error": null
    },
    "assert inversion_elements((6, 6, 4, 2, 9, 5)) == (-7, -7, -5, -3, -10, -6)": {
      "result": true,
      "time": 0.04179668426513672,
      "error": null
    },
    "assert inversion_elements((2, 6, 13, 2, 13, 6)) == (-3, -7, -14, -3, -14, -7)": {
      "result": true,
      "time": 0.03750348091125488,
      "error": null
    },
    "assert inversion_elements((6, 3, 4, 3, 9, 6)) == (-7, -4, -5, -4, -10, -7)": {
      "result": true,
      "time": 0.0426325798034668,
      "error": null
    },
    "assert inversion_elements((3, 12, 10, 1, 7, 12)) == (-4, -13, -11, -2, -8, -13)": {
      "result": true,
      "time": 0.03873944282531738,
      "error": null
    },
    "assert inversion_elements((5, 8, 8, 6, 13, 3)) == (-6, -9, -9, -7, -14, -4)": {
      "result": true,
      "time": 0.04247760772705078,
      "error": null
    },
    "assert inversion_elements((11, 12, 14, 1, 5, 11)) == (-12, -13, -15, -2, -6, -12)": {
      "result": true,
      "time": 0.037837982177734375,
      "error": null
    },
    "assert inversion_elements((8, 4, 7, 6, 11, 7)) == (-9, -5, -8, -7, -12, -8)": {
      "result": true,
      "time": 0.0334324836730957,
      "error": null
    },
    "assert inversion_elements((9, 13, 10, 2, 13, 11)) == (-10, -14, -11, -3, -14, -12)": {
      "result": true,
      "time": 0.037634849548339844,
      "error": null
    },
    "assert inversion_elements((11, 12, 6, 2, 10, 4)) == (-12, -13, -7, -3, -11, -5)": {
      "result": true,
      "time": 0.04506325721740723,
      "error": null
    },
    "assert inversion_elements((5, 13, 5, 1, 7, 8)) == (-6, -14, -6, -2, -8, -9)": {
      "result": true,
      "time": 0.04459881782531738,
      "error": null
    },
    "assert inversion_elements((4, 9, 8, 5, 9, 3)) == (-5, -10, -9, -6, -10, -4)": {
      "result": true,
      "time": 0.0435633659362793,
      "error": null
    },
    "assert inversion_elements((3, 7, 13, 3, 14, 8)) == (-4, -8, -14, -4, -15, -9)": {
      "result": true,
      "time": 0.04071521759033203,
      "error": null
    },
    "assert inversion_elements((6, 3, 9, 6, 12, 9)) == (-7, -4, -10, -7, -13, -10)": {
      "result": true,
      "time": 0.03634905815124512,
      "error": null
    },
    "assert inversion_elements((12, 3, 8, 5, 14, 11)) == (-13, -4, -9, -6, -15, -12)": {
      "result": true,
      "time": 0.03990960121154785,
      "error": null
    },
    "assert inversion_elements((6, 3, 13, 4, 9, 11)) == (-7, -4, -14, -5, -10, -12)": {
      "result": true,
      "time": 0.044423580169677734,
      "error": null
    },
    "assert inversion_elements((9, 6, 11, 5, 12, 4)) == (-10, -7, -12, -6, -13, -5)": {
      "result": true,
      "time": 0.041905879974365234,
      "error": null
    },
    "assert inversion_elements((11, 11, 7, 1, 5, 3)) == (-12, -12, -8, -2, -6, -4)": {
      "result": true,
      "time": 0.04941082000732422,
      "error": null
    },
    "assert inversion_elements((9, 4, 10, 5, 14, 8)) == (-10, -5, -11, -6, -15, -9)": {
      "result": true,
      "time": 0.05243182182312012,
      "error": null
    },
    "assert inversion_elements((12, 5, 10, 5, 9, 3)) == (-13, -6, -11, -6, -10, -4)": {
      "result": true,
      "time": 0.03689169883728027,
      "error": null
    },
    "assert inversion_elements((12, 4, 10, 5, 15, 9)) == (-13, -5, -11, -6, -16, -10)": {
      "result": true,
      "time": 0.036472320556640625,
      "error": null
    },
    "assert inversion_elements((9, 5, 14, 6, 5, 2)) == (-10, -6, -15, -7, -6, -3)": {
      "result": true,
      "time": 0.04195713996887207,
      "error": null
    },
    "assert inversion_elements((9, 13, 10, 4, 14, 4)) == (-10, -14, -11, -5, -15, -5)": {
      "result": true,
      "time": 0.04223060607910156,
      "error": null
    },
    "assert inversion_elements((2, 8, 6, 3, 10, 12)) == (-3, -9, -7, -4, -11, -13)": {
      "result": true,
      "time": 0.04044628143310547,
      "error": null
    },
    "assert inversion_elements((6, 4, 13, 4, 11, 9)) == (-7, -5, -14, -5, -12, -10)": {
      "result": true,
      "time": 0.043949127197265625,
      "error": null
    },
    "assert inversion_elements((10, 6, 4, 5, 8, 11)) == (-11, -7, -5, -6, -9, -12)": {
      "result": true,
      "time": 0.03691744804382324,
      "error": null
    },
    "assert inversion_elements((5, 6, 7, 6, 14, 6)) == (-6, -7, -8, -7, -15, -7)": {
      "result": true,
      "time": 0.03626298904418945,
      "error": null
    },
    "assert inversion_elements((12, 10, 10, 2, 14, 5)) == (-13, -11, -11, -3, -15, -6)": {
      "result": true,
      "time": 0.03806447982788086,
      "error": null
    },
    "assert inversion_elements((7, 7, 14, 1, 6, 3)) == (-8, -8, -15, -2, -7, -4)": {
      "result": true,
      "time": 0.05296587944030762,
      "error": null
    },
    "assert inversion_elements((5, 5, 5, 5, 14, 6)) == (-6, -6, -6, -6, -15, -7)": {
      "result": true,
      "time": 0.036062002182006836,
      "error": null
    },
    "assert inversion_elements((4, 4, 5, 4, 6, 6)) == (-5, -5, -6, -5, -7, -7)": {
      "result": true,
      "time": 0.04088592529296875,
      "error": null
    },
    "assert inversion_elements((2, 6, 6, 2, 8, 12)) == (-3, -7, -7, -3, -9, -13)": {
      "result": true,
      "time": 0.0390009880065918,
      "error": null
    },
    "assert inversion_elements((8, 4, 11, 3, 12, 10)) == (-9, -5, -12, -4, -13, -11)": {
      "result": true,
      "time": 0.03992581367492676,
      "error": null
    },
    "assert inversion_elements((3, 12, 8, 1, 9, 5)) == (-4, -13, -9, -2, -10, -6)": {
      "result": true,
      "time": 0.04496312141418457,
      "error": null
    },
    "assert inversion_elements((3, 1, 1, 9, 5, 10)) == (-4, -2, -2, -10, -6, -11)": {
      "result": true,
      "time": 0.036396026611328125,
      "error": null
    },
    "assert inversion_elements((3, 4, 6, 2, 6, 8)) == (-4, -5, -7, -3, -7, -9)": {
      "result": true,
      "time": 0.04759836196899414,
      "error": null
    },
    "assert inversion_elements((2, 1, 10, 10, 5, 9)) == (-3, -2, -11, -11, -6, -10)": {
      "result": true,
      "time": 0.0458681583404541,
      "error": null
    },
    "assert inversion_elements((2, 2, 10, 11, 5, 10)) == (-3, -3, -11, -12, -6, -11)": {
      "result": true,
      "time": 0.03694462776184082,
      "error": null
    },
    "assert inversion_elements((1, 7, 2, 1, 6, 4)) == (-2, -8, -3, -2, -7, -5)": {
      "result": true,
      "time": 0.04053616523742676,
      "error": null
    },
    "assert inversion_elements((1, 3, 2, 1, 6, 10)) == (-2, -4, -3, -2, -7, -11)": {
      "result": true,
      "time": 0.04814600944519043,
      "error": null
    },
    "assert inversion_elements((5, 8, 2, 5, 6, 6)) == (-6, -9, -3, -6, -7, -7)": {
      "result": true,
      "time": 0.04334211349487305,
      "error": null
    },
    "assert inversion_elements((4, 8, 3, 8, 6, 4)) == (-5, -9, -4, -9, -7, -5)": {
      "result": true,
      "time": 0.042714595794677734,
      "error": null
    },
    "assert inversion_elements((4, 9, 6, 10, 4, 2)) == (-5, -10, -7, -11, -5, -3)": {
      "result": true,
      "time": 0.041144609451293945,
      "error": null
    },
    "assert inversion_elements((3, 8, 1, 9, 3, 5)) == (-4, -9, -2, -10, -4, -6)": {
      "result": true,
      "time": 0.03701138496398926,
      "error": null
    },
    "assert inversion_elements((5, 1, 4, 7, 4, 4)) == (-6, -2, -5, -8, -5, -5)": {
      "result": true,
      "time": 0.03544950485229492,
      "error": null
    },
    "assert inversion_elements((1, 1, 2, 7, 6, 10)) == (-2, -2, -3, -8, -7, -11)": {
      "result": true,
      "time": 0.03708314895629883,
      "error": null
    },
    "assert inversion_elements((6, 4, 2, 8, 1, 12)) == (-7, -5, -3, -9, -2, -13)": {
      "result": true,
      "time": 0.044176578521728516,
      "error": null
    },
    "assert inversion_elements((1, 7, 8, 8, 4, 12)) == (-2, -8, -9, -9, -5, -13)": {
      "result": true,
      "time": 0.039406776428222656,
      "error": null
    },
    "assert inversion_elements((4, 5, 10, 5, 4, 3)) == (-5, -6, -11, -6, -5, -4)": {
      "result": true,
      "time": 0.038771629333496094,
      "error": null
    },
    "assert inversion_elements((2, 9, 9, 11, 3, 3)) == (-3, -10, -10, -12, -4, -4)": {
      "result": true,
      "time": 0.048436880111694336,
      "error": null
    },
    "assert inversion_elements((3, 1, 7, 7, 1, 3)) == (-4, -2, -8, -8, -2, -4)": {
      "result": true,
      "time": 0.036960601806640625,
      "error": null
    },
    "assert inversion_elements((3, 4, 7, 7, 1, 7)) == (-4, -5, -8, -8, -2, -8)": {
      "result": true,
      "time": 0.03728318214416504,
      "error": null
    },
    "assert inversion_elements((2, 1, 7, 8, 2, 7)) == (-3, -2, -8, -9, -3, -8)": {
      "result": true,
      "time": 0.04070281982421875,
      "error": null
    },
    "assert inversion_elements((6, 9, 3, 7, 2, 8)) == (-7, -10, -4, -8, -3, -9)": {
      "result": true,
      "time": 0.04011082649230957,
      "error": null
    },
    "assert inversion_elements((6, 7, 3, 10, 5, 4)) == (-7, -8, -4, -11, -6, -5)": {
      "result": true,
      "time": 0.0451357364654541,
      "error": null
    },
    "assert inversion_elements((7, 2, 9, 1, 1, 6)) == (-8, -3, -10, -2, -2, -7)": {
      "result": true,
      "time": 0.03998279571533203,
      "error": null
    },
    "assert inversion_elements((2, 9, 2, 5, 5, 3)) == (-3, -10, -3, -6, -6, -4)": {
      "result": true,
      "time": 0.051012277603149414,
      "error": null
    },
    "assert inversion_elements((3, 6, 7, 2, 3, 5)) == (-4, -7, -8, -3, -4, -6)": {
      "result": true,
      "time": 0.04049086570739746,
      "error": null
    },
    "assert inversion_elements((7, 6, 2, 9, 6, 9)) == (-8, -7, -3, -10, -7, -10)": {
      "result": true,
      "time": 0.044233083724975586,
      "error": null
    },
    "assert inversion_elements((3, 4, 5, 11, 6, 4)) == (-4, -5, -6, -12, -7, -5)": {
      "result": true,
      "time": 0.04133439064025879,
      "error": null
    },
    "assert inversion_elements((2, 5, 4, 7, 4, 8)) == (-3, -6, -5, -8, -5, -9)": {
      "result": true,
      "time": 0.04199552536010742,
      "error": null
    },
    "assert inversion_elements((7, 2, 2, 9, 6, 11)) == (-8, -3, -3, -10, -7, -12)": {
      "result": true,
      "time": 0.05884599685668945,
      "error": null
    },
    "assert inversion_elements((2, 2, 8, 1, 2, 3)) == (-3, -3, -9, -2, -3, -4)": {
      "result": true,
      "time": 0.046092987060546875,
      "error": null
    },
    "assert inversion_elements((6, 4, 6, 7, 6, 12)) == (-7, -5, -7, -8, -7, -13)": {
      "result": true,
      "time": 0.05045723915100098,
      "error": null
    },
    "assert inversion_elements((7, 6, 10, 11, 5, 2)) == (-8, -7, -11, -12, -6, -3)": {
      "result": true,
      "time": 0.05408000946044922,
      "error": null
    },
    "assert inversion_elements((7, 2, 3, 4, 6, 4)) == (-8, -3, -4, -5, -7, -5)": {
      "result": true,
      "time": 0.05538320541381836,
      "error": null
    },
    "assert inversion_elements((3, 8, 8, 3, 4, 10)) == (-4, -9, -9, -4, -5, -11)": {
      "result": true,
      "time": 0.05690407752990723,
      "error": null
    },
    "assert inversion_elements((7, 4, 9, 17, 13, 10)) == (-8, -5, -10, -18, -14, -11)": {
      "result": true,
      "time": 0.05503034591674805,
      "error": null
    },
    "assert inversion_elements((8, 7, 15, 19, 17, 12)) == (-9, -8, -16, -20, -18, -13)": {
      "result": true,
      "time": 0.04926419258117676,
      "error": null
    },
    "assert inversion_elements((10, 9, 10, 14, 16, 14)) == (-11, -10, -11, -15, -17, -15)": {
      "result": true,
      "time": 0.05019044876098633,
      "error": null
    },
    "assert inversion_elements((3, 5, 8, 14, 17, 9)) == (-4, -6, -9, -15, -18, -10)": {
      "result": true,
      "time": 0.0573420524597168,
      "error": null
    },
    "assert inversion_elements((6, 10, 8, 16, 13, 10)) == (-7, -11, -9, -17, -14, -11)": {
      "result": true,
      "time": 0.056448936462402344,
      "error": null
    },
    "assert inversion_elements((13, 5, 11, 11, 9, 11)) == (-14, -6, -12, -12, -10, -12)": {
      "result": true,
      "time": 0.06400299072265625,
      "error": null
    },
    "assert inversion_elements((10, 6, 15, 16, 15, 11)) == (-11, -7, -16, -17, -16, -12)": {
      "result": true,
      "time": 0.0465238094329834,
      "error": null
    },
    "assert inversion_elements((3, 13, 8, 12, 13, 18)) == (-4, -14, -9, -13, -14, -19)": {
      "result": true,
      "time": 0.0477137565612793,
      "error": null
    },
    "assert inversion_elements((5, 8, 15, 13, 8, 11)) == (-6, -9, -16, -14, -9, -12)": {
      "result": true,
      "time": 0.05555105209350586,
      "error": null
    },
    "assert inversion_elements((11, 4, 15, 18, 10, 12)) == (-12, -5, -16, -19, -11, -13)": {
      "result": true,
      "time": 0.051255226135253906,
      "error": null
    },
    "assert inversion_elements((9, 13, 9, 17, 11, 14)) == (-10, -14, -10, -18, -12, -15)": {
      "result": true,
      "time": 0.054184675216674805,
      "error": null
    },
    "assert inversion_elements((7, 4, 11, 18, 12, 16)) == (-8, -5, -12, -19, -13, -17)": {
      "result": true,
      "time": 0.04398202896118164,
      "error": null
    },
    "assert inversion_elements((4, 8, 6, 12, 13, 10)) == (-5, -9, -7, -13, -14, -11)": {
      "result": true,
      "time": 0.049880266189575195,
      "error": null
    },
    "assert inversion_elements((12, 4, 15, 14, 12, 8)) == (-13, -5, -16, -15, -13, -9)": {
      "result": true,
      "time": 0.0494692325592041,
      "error": null
    },
    "assert inversion_elements((7, 7, 11, 12, 15, 8)) == (-8, -8, -12, -13, -16, -9)": {
      "result": true,
      "time": 0.057848215103149414,
      "error": null
    },
    "assert inversion_elements((6, 13, 14, 13, 16, 18)) == (-7, -14, -15, -14, -17, -19)": {
      "result": true,
      "time": 0.06108593940734863,
      "error": null
    },
    "assert inversion_elements((11, 14, 11, 11, 10, 10)) == (-12, -15, -12, -12, -11, -11)": {
      "result": true,
      "time": 0.054628849029541016,
      "error": null
    },
    "assert inversion_elements((10, 7, 16, 11, 10, 13)) == (-11, -8, -17, -12, -11, -14)": {
      "result": true,
      "time": 0.03948092460632324,
      "error": null
    },
    "assert inversion_elements((13, 5, 15, 12, 11, 8)) == (-14, -6, -16, -13, -12, -9)": {
      "result": true,
      "time": 0.04047226905822754,
      "error": null
    },
    "assert inversion_elements((12, 7, 6, 19, 8, 9)) == (-13, -8, -7, -20, -9, -10)": {
      "result": true,
      "time": 0.03230547904968262,
      "error": null
    },
    "assert inversion_elements((13, 6, 13, 16, 7, 14)) == (-14, -7, -14, -17, -8, -15)": {
      "result": true,
      "time": 0.0502772331237793,
      "error": null
    },
    "assert inversion_elements((6, 9, 14, 16, 13, 8)) == (-7, -10, -15, -17, -14, -9)": {
      "result": true,
      "time": 0.045264244079589844,
      "error": null
    },
    "assert inversion_elements((8, 8, 11, 9, 8, 12)) == (-9, -9, -12, -10, -9, -13)": {
      "result": true,
      "time": 0.04694318771362305,
      "error": null
    },
    "assert inversion_elements((9, 14, 15, 11, 11, 13)) == (-10, -15, -16, -12, -12, -14)": {
      "result": true,
      "time": 0.05593132972717285,
      "error": null
    },
    "assert inversion_elements((3, 7, 16, 13, 13, 18)) == (-4, -8, -17, -14, -14, -19)": {
      "result": true,
      "time": 0.05405473709106445,
      "error": null
    },
    "assert inversion_elements((4, 9, 11, 16, 17, 9)) == (-5, -10, -12, -17, -18, -10)": {
      "result": true,
      "time": 0.060672760009765625,
      "error": null
    },
    "assert inversion_elements((3, 7, 9, 12, 15, 13)) == (-4, -8, -10, -13, -16, -14)": {
      "result": true,
      "time": 0.044721126556396484,
      "error": null
    },
    "assert inversion_elements((13, 7, 13, 17, 13, 9)) == (-14, -8, -14, -18, -14, -10)": {
      "result": true,
      "time": 0.06722283363342285,
      "error": null
    },
    "assert inversion_elements((9, 7, 12, 13, 12, 12)) == (-10, -8, -13, -14, -13, -13)": {
      "result": true,
      "time": 0.04224848747253418,
      "error": null
    },
    "assert inversion_elements((9, 13, 6, 17, 16, 13)) == (-10, -14, -7, -18, -17, -14)": {
      "result": true,
      "time": 0.046520233154296875,
      "error": null
    },
    "assert inversion_elements((8, 9, 10, 17, 11, 13)) == (-9, -10, -11, -18, -12, -14)": {
      "result": true,
      "time": 0.055971622467041016,
      "error": null
    },
    "assert inversion_elements((11, 8, 14, 17, 13, 13)) == (-12, -9, -15, -18, -14, -14)": {
      "result": true,
      "time": 0.056209564208984375,
      "error": null
    },
    "assert inversion_elements((13, 14, 9, 17, 12, 13)) == (-14, -15, -10, -18, -13, -14)": {
      "result": true,
      "time": 0.045142173767089844,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}