{
  "code": "def get_perrin(n):\n    if n == 0:\n        return 3\n    if n == 1:\n        return 0\n    if n == 2:\n        return 2\n    term1 = get_perrin(n - 2)\n    term2 = get_perrin(n - 3)\n    result = term1 + term2\n    return result",
  "results": {
    "assert get_perrin(9) == 12": {
      "result": true,
      "time": 0.05056881904602051,
      "error": null
    },
    "assert get_perrin(4) == 2": {
      "result": true,
      "time": 0.045047760009765625,
      "error": null
    },
    "assert get_perrin(6) == 5": {
      "result": true,
      "time": 0.04717111587524414,
      "error": null
    },
    "assert get_perrin(7) == 7": {
      "result": true,
      "time": 0.04759097099304199,
      "error": null
    },
    "assert get_perrin(8) == 10": {
      "result": true,
      "time": 0.03970193862915039,
      "error": null
    },
    "assert get_perrin(11) == 22": {
      "result": true,
      "time": 0.05083727836608887,
      "error": null
    },
    "assert get_perrin(14) == 51": {
      "result": true,
      "time": 0.04467606544494629,
      "error": null
    },
    "assert get_perrin(10) == 17": {
      "result": true,
      "time": 0.04126739501953125,
      "error": null
    },
    "assert get_perrin(13) == 39": {
      "result": true,
      "time": 0.044728755950927734,
      "error": null
    },
    "assert get_perrin(5) == 5": {
      "result": true,
      "time": 0.03553009033203125,
      "error": null
    },
    "assert get_perrin(2) == 2": {
      "result": true,
      "time": 0.04541349411010742,
      "error": null
    },
    "assert get_perrin(3) == 3": {
      "result": true,
      "time": 0.040123701095581055,
      "error": null
    },
    "assert get_perrin(1) == 0": {
      "result": true,
      "time": 0.0526728630065918,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}