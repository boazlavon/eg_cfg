{
  "code": "def min_length_list(list_of_lists):\n    if not list_of_lists:\n        return (0, [])\n    \n    min_len = len(list_of_lists[0])\n    min_list = list_of_lists[0]\n    \n    for lst in list_of_lists:\n        current_len = len(lst)\n        if current_len < min_len:\n            min_len = current_len\n            min_list = lst\n    \n    return (min_len, min_list)",
  "results": {
    "assert min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(1, [0])": {
      "result": true,
      "time": 0.034368276596069336,
      "error": null
    },
    "assert min_length_list([[1,2,3,4,5],[1,2,3,4],[1,2,3],[1,2],[1]])==(1,[1])": {
      "result": true,
      "time": 0.03730130195617676,
      "error": null
    },
    "assert min_length_list([[3,4,5],[6,7,8,9],[10,11,12],[1,2]])==(2,[1,2])": {
      "result": true,
      "time": 0.03254389762878418,
      "error": null
    },
    "assert min_length_list([[4], [5, 6], [8, 11], [9, 6], [16, 19, 16]]) == (1, [4])": {
      "result": true,
      "time": 0.03559279441833496,
      "error": null
    },
    "assert min_length_list([[2], [2, 7], [9, 5], [7, 15], [16, 16, 21]]) == (1, [2])": {
      "result": true,
      "time": 0.03298377990722656,
      "error": null
    },
    "assert min_length_list([[3], [4, 8], [3, 6], [9, 7], [12, 11, 22]]) == (1, [3])": {
      "result": true,
      "time": 0.036638736724853516,
      "error": null
    },
    "assert min_length_list([[4], [4, 3], [7, 6], [7, 7], [11, 11, 17]]) == (1, [4])": {
      "result": true,
      "time": 0.03126811981201172,
      "error": null
    },
    "assert min_length_list([[4], [5, 5], [2, 8], [4, 14], [14, 17, 18]]) == (1, [4])": {
      "result": true,
      "time": 0.031812191009521484,
      "error": null
    },
    "assert min_length_list([[3], [1, 3], [2, 2], [13, 13], [16, 15, 13]]) == (1, [3])": {
      "result": true,
      "time": 0.0444483757019043,
      "error": null
    },
    "assert min_length_list([[5], [6, 1], [6, 2], [5, 9], [17, 17, 16]]) == (1, [5])": {
      "result": true,
      "time": 0.028115510940551758,
      "error": null
    },
    "assert min_length_list([[4], [5, 7], [7, 2], [8, 11], [10, 13, 20]]) == (1, [4])": {
      "result": true,
      "time": 0.03879737854003906,
      "error": null
    },
    "assert min_length_list([[4], [4, 3], [10, 5], [14, 12], [15, 18, 18]]) == (1, [4])": {
      "result": true,
      "time": 0.035865068435668945,
      "error": null
    },
    "assert min_length_list([[2], [4, 3], [4, 6], [6, 10], [15, 11, 14]]) == (1, [2])": {
      "result": true,
      "time": 0.03663134574890137,
      "error": null
    },
    "assert min_length_list([[4], [2, 5], [6, 3], [10, 6], [9, 16, 16]]) == (1, [4])": {
      "result": true,
      "time": 0.03273582458496094,
      "error": null
    },
    "assert min_length_list([[1], [1, 8], [4, 2], [6, 8], [16, 17, 18]]) == (1, [1])": {
      "result": true,
      "time": 0.036891937255859375,
      "error": null
    },
    "assert min_length_list([[4], [3, 1], [6, 4], [10, 13], [15, 16, 19]]) == (1, [4])": {
      "result": true,
      "time": 0.03750014305114746,
      "error": null
    },
    "assert min_length_list([[3], [1, 4], [10, 3], [8, 9], [11, 12, 19]]) == (1, [3])": {
      "result": true,
      "time": 0.03864169120788574,
      "error": null
    },
    "assert min_length_list([[4], [3, 7], [6, 10], [6, 8], [13, 17, 21]]) == (1, [4])": {
      "result": true,
      "time": 0.03977155685424805,
      "error": null
    },
    "assert min_length_list([[2], [5, 7], [3, 5], [11, 9], [12, 20, 20]]) == (1, [2])": {
      "result": true,
      "time": 0.03476142883300781,
      "error": null
    },
    "assert min_length_list([[3], [2, 1], [3, 6], [12, 11], [13, 19, 15]]) == (1, [3])": {
      "result": true,
      "time": 0.0383758544921875,
      "error": null
    },
    "assert min_length_list([[1], [2, 8], [6, 8], [13, 13], [15, 15, 19]]) == (1, [1])": {
      "result": true,
      "time": 0.03485441207885742,
      "error": null
    },
    "assert min_length_list([[3], [5, 7], [7, 9], [6, 14], [9, 16, 17]]) == (1, [3])": {
      "result": true,
      "time": 0.0383608341217041,
      "error": null
    },
    "assert min_length_list([[1], [3, 5], [4, 4], [14, 14], [15, 10, 14]]) == (1, [1])": {
      "result": true,
      "time": 0.03272414207458496,
      "error": null
    },
    "assert min_length_list([[5], [5, 6], [4, 4], [6, 10], [16, 19, 14]]) == (1, [5])": {
      "result": true,
      "time": 0.031540632247924805,
      "error": null
    },
    "assert min_length_list([[4], [1, 2], [10, 6], [5, 9], [8, 15, 20]]) == (1, [4])": {
      "result": true,
      "time": 0.03493666648864746,
      "error": null
    },
    "assert min_length_list([[4], [5, 5], [8, 7], [11, 10], [16, 13, 21]]) == (1, [4])": {
      "result": true,
      "time": 0.03127551078796387,
      "error": null
    },
    "assert min_length_list([[3], [1, 2], [5, 11], [4, 8], [8, 15, 15]]) == (1, [3])": {
      "result": true,
      "time": 0.03277945518493652,
      "error": null
    },
    "assert min_length_list([[3], [2, 6], [1, 12], [5, 15], [17, 18, 12]]) == (1, [3])": {
      "result": true,
      "time": 0.03357982635498047,
      "error": null
    },
    "assert min_length_list([[4], [2, 2], [8, 7], [13, 8], [16, 11, 13]]) == (1, [4])": {
      "result": true,
      "time": 0.03204989433288574,
      "error": null
    },
    "assert min_length_list([[5], [1, 2], [4, 2], [14, 6], [13, 14, 20]]) == (1, [5])": {
      "result": true,
      "time": 0.03583478927612305,
      "error": null
    },
    "assert min_length_list([[5], [1, 4], [5, 3], [8, 8], [9, 18, 16]]) == (1, [5])": {
      "result": true,
      "time": 0.03535199165344238,
      "error": null
    },
    "assert min_length_list([[1], [2, 4], [2, 11], [6, 15], [13, 18, 15]]) == (1, [1])": {
      "result": true,
      "time": 0.03289031982421875,
      "error": null
    },
    "assert min_length_list([[2], [1, 5], [10, 2], [8, 9], [13, 14, 13]]) == (1, [2])": {
      "result": true,
      "time": 0.03666281700134277,
      "error": null
    },
    "assert min_length_list([[2], [3, 3], [3, 4], [13, 12], [15, 18, 15]]) == (1, [2])": {
      "result": true,
      "time": 0.03497123718261719,
      "error": null
    },
    "assert min_length_list([[2], [2, 4], [2, 10], [8, 8], [12, 20, 12]]) == (1, [2])": {
      "result": true,
      "time": 0.032308340072631836,
      "error": null
    },
    "assert min_length_list([[4], [3, 6], [4, 2], [13, 11], [10, 16, 19]]) == (1, [4])": {
      "result": true,
      "time": 0.03132891654968262,
      "error": null
    },
    "assert min_length_list([[2, 6, 3, 9, 9], [4, 2, 4, 1], [6, 1, 8], [6, 7], [1]]) == (1, [1])": {
      "result": true,
      "time": 0.040019989013671875,
      "error": null
    },
    "assert min_length_list([[4, 6, 3, 9, 9], [4, 2, 8, 4], [4, 2, 2], [1, 1], [6]]) == (1, [6])": {
      "result": true,
      "time": 0.03125953674316406,
      "error": null
    },
    "assert min_length_list([[1, 1, 8, 6, 3], [2, 1, 2, 8], [5, 7, 5], [4, 1], [1]]) == (1, [1])": {
      "result": true,
      "time": 0.03669333457946777,
      "error": null
    },
    "assert min_length_list([[4, 3, 7, 6, 9], [5, 4, 5, 2], [6, 7, 8], [1, 1], [3]]) == (1, [3])": {
      "result": true,
      "time": 0.034557342529296875,
      "error": null
    },
    "assert min_length_list([[1, 6, 3, 9, 5], [5, 6, 4, 4], [5, 4, 5], [2, 5], [5]]) == (1, [5])": {
      "result": true,
      "time": 0.03956198692321777,
      "error": null
    },
    "assert min_length_list([[2, 1, 2, 3, 8], [2, 6, 7, 1], [6, 6, 1], [3, 5], [2]]) == (1, [2])": {
      "result": true,
      "time": 0.0410463809967041,
      "error": null
    },
    "assert min_length_list([[6, 5, 6, 8, 10], [3, 5, 1, 2], [4, 3, 2], [4, 3], [4]]) == (1, [4])": {
      "result": true,
      "time": 0.04256319999694824,
      "error": null
    },
    "assert min_length_list([[5, 1, 5, 8, 1], [6, 5, 1, 8], [5, 2, 6], [5, 3], [5]]) == (1, [5])": {
      "result": true,
      "time": 0.04910850524902344,
      "error": null
    },
    "assert min_length_list([[4, 6, 7, 1, 7], [4, 2, 6, 6], [6, 7, 7], [3, 6], [5]]) == (1, [5])": {
      "result": true,
      "time": 0.03630352020263672,
      "error": null
    },
    "assert min_length_list([[3, 1, 4, 1, 4], [2, 5, 1, 7], [3, 5, 8], [5, 1], [3]]) == (1, [3])": {
      "result": true,
      "time": 0.04027438163757324,
      "error": null
    },
    "assert min_length_list([[2, 6, 3, 2, 8], [4, 1, 1, 1], [1, 3, 2], [5, 4], [3]]) == (1, [3])": {
      "result": true,
      "time": 0.03853154182434082,
      "error": null
    },
    "assert min_length_list([[5, 7, 4, 4, 5], [4, 6, 3, 6], [4, 1, 3], [3, 1], [2]]) == (1, [2])": {
      "result": true,
      "time": 0.036104679107666016,
      "error": null
    },
    "assert min_length_list([[3, 1, 7, 5, 10], [2, 3, 5, 2], [1, 5, 8], [5, 5], [5]]) == (1, [5])": {
      "result": true,
      "time": 0.03953361511230469,
      "error": null
    },
    "assert min_length_list([[4, 2, 1, 5, 10], [2, 7, 2, 5], [5, 4, 1], [2, 2], [2]]) == (1, [2])": {
      "result": true,
      "time": 0.03999614715576172,
      "error": null
    },
    "assert min_length_list([[5, 3, 5, 9, 8], [2, 5, 8, 2], [2, 3, 6], [6, 3], [1]]) == (1, [1])": {
      "result": true,
      "time": 0.03946828842163086,
      "error": null
    },
    "assert min_length_list([[3, 5, 1, 4, 2], [6, 6, 1, 9], [3, 1, 5], [2, 4], [5]]) == (1, [5])": {
      "result": true,
      "time": 0.03939104080200195,
      "error": null
    },
    "assert min_length_list([[3, 6, 7, 3, 7], [4, 6, 3, 2], [2, 1, 1], [2, 1], [1]]) == (1, [1])": {
      "result": true,
      "time": 0.03254270553588867,
      "error": null
    },
    "assert min_length_list([[1, 6, 4, 8, 9], [3, 3, 7, 5], [2, 6, 5], [3, 5], [2]]) == (1, [2])": {
      "result": true,
      "time": 0.04159069061279297,
      "error": null
    },
    "assert min_length_list([[3, 4, 1, 7, 8], [6, 6, 4, 3], [1, 5, 2], [6, 6], [4]]) == (1, [4])": {
      "result": true,
      "time": 0.04531407356262207,
      "error": null
    },
    "assert min_length_list([[1, 7, 4, 2, 1], [5, 7, 7, 5], [4, 5, 4], [2, 1], [5]]) == (1, [5])": {
      "result": true,
      "time": 0.04138517379760742,
      "error": null
    },
    "assert min_length_list([[3, 2, 6, 3, 1], [1, 5, 6, 9], [6, 1, 3], [3, 6], [4]]) == (1, [4])": {
      "result": true,
      "time": 0.03858065605163574,
      "error": null
    },
    "assert min_length_list([[4, 1, 4, 9, 1], [3, 7, 8, 3], [2, 2, 6], [1, 5], [6]]) == (1, [6])": {
      "result": true,
      "time": 0.036228179931640625,
      "error": null
    },
    "assert min_length_list([[4, 1, 2, 9, 9], [1, 3, 1, 7], [3, 4, 3], [4, 1], [5]]) == (1, [5])": {
      "result": true,
      "time": 0.037587881088256836,
      "error": null
    },
    "assert min_length_list([[6, 5, 5, 8, 2], [1, 6, 6, 3], [6, 4, 6], [5, 1], [2]]) == (1, [2])": {
      "result": true,
      "time": 0.04440450668334961,
      "error": null
    },
    "assert min_length_list([[1, 6, 1, 4, 10], [1, 6, 8, 9], [4, 5, 2], [2, 3], [5]]) == (1, [5])": {
      "result": true,
      "time": 0.036006927490234375,
      "error": null
    },
    "assert min_length_list([[2, 1, 7, 6, 9], [3, 5, 5, 5], [5, 6, 1], [6, 1], [2]]) == (1, [2])": {
      "result": true,
      "time": 0.04189634323120117,
      "error": null
    },
    "assert min_length_list([[6, 7, 6, 4, 9], [2, 2, 7, 6], [2, 2, 7], [6, 6], [4]]) == (1, [4])": {
      "result": true,
      "time": 0.03694653511047363,
      "error": null
    },
    "assert min_length_list([[2, 3, 7, 2, 1], [6, 3, 3, 4], [6, 3, 2], [1, 4], [6]]) == (1, [6])": {
      "result": true,
      "time": 0.04357028007507324,
      "error": null
    },
    "assert min_length_list([[6, 2, 6, 2, 1], [5, 6, 7, 9], [1, 7, 7], [4, 1], [1]]) == (1, [1])": {
      "result": true,
      "time": 0.0429530143737793,
      "error": null
    },
    "assert min_length_list([[6, 3, 6, 5, 3], [2, 5, 4, 2], [5, 6, 6], [1, 1], [1]]) == (1, [1])": {
      "result": true,
      "time": 0.03591656684875488,
      "error": null
    },
    "assert min_length_list([[2, 7, 6, 8, 6], [1, 5, 4, 5], [3, 5, 7], [5, 6], [1]]) == (1, [1])": {
      "result": true,
      "time": 0.03967022895812988,
      "error": null
    },
    "assert min_length_list([[1, 2, 7, 4, 4], [3, 6, 5, 3], [6, 1, 2], [2, 1], [2]]) == (1, [2])": {
      "result": true,
      "time": 0.040734291076660156,
      "error": null
    },
    "assert min_length_list([[5, 7, 2, 1, 1], [1, 6, 4, 9], [3, 6, 3], [1, 5], [3]]) == (1, [3])": {
      "result": true,
      "time": 0.038164615631103516,
      "error": null
    },
    "assert min_length_list([[8, 3, 4], [7, 8, 6, 4], [14, 14, 13], [2, 7]]) == (2, [2, 7])": {
      "result": true,
      "time": 0.040415287017822266,
      "error": null
    },
    "assert min_length_list([[4, 1, 2], [6, 7, 10, 14], [9, 16, 10], [2, 5]]) == (2, [2, 5])": {
      "result": true,
      "time": 0.03764486312866211,
      "error": null
    },
    "assert min_length_list([[4, 6, 10], [10, 6, 7, 11], [10, 6, 13], [3, 2]]) == (2, [3, 2])": {
      "result": true,
      "time": 0.03485393524169922,
      "error": null
    },
    "assert min_length_list([[1, 1, 8], [3, 6, 9, 10], [14, 16, 14], [1, 7]]) == (2, [1, 7])": {
      "result": true,
      "time": 0.040651559829711914,
      "error": null
    },
    "assert min_length_list([[8, 4, 6], [11, 3, 8, 4], [13, 14, 16], [4, 4]]) == (2, [4, 4])": {
      "result": true,
      "time": 0.03582477569580078,
      "error": null
    },
    "assert min_length_list([[4, 4, 9], [2, 7, 4, 10], [7, 12, 10], [3, 4]]) == (2, [3, 4])": {
      "result": true,
      "time": 0.032994747161865234,
      "error": null
    },
    "assert min_length_list([[7, 2, 4], [6, 6, 13, 6], [14, 12, 15], [4, 7]]) == (2, [4, 7])": {
      "result": true,
      "time": 0.03962111473083496,
      "error": null
    },
    "assert min_length_list([[5, 7, 4], [10, 4, 8, 4], [6, 8, 16], [2, 1]]) == (2, [2, 1])": {
      "result": true,
      "time": 0.04282522201538086,
      "error": null
    },
    "assert min_length_list([[4, 1, 3], [6, 11, 8, 10], [13, 7, 13], [2, 4]]) == (2, [2, 4])": {
      "result": true,
      "time": 0.04165530204772949,
      "error": null
    },
    "assert min_length_list([[4, 3, 5], [6, 8, 12, 14], [12, 15, 7], [2, 4]]) == (2, [2, 4])": {
      "result": true,
      "time": 0.046688079833984375,
      "error": null
    },
    "assert min_length_list([[4, 6, 1], [9, 4, 9, 6], [13, 9, 9], [1, 4]]) == (2, [1, 4])": {
      "result": true,
      "time": 0.03685283660888672,
      "error": null
    },
    "assert min_length_list([[2, 2, 10], [1, 4, 9, 4], [10, 9, 13], [5, 4]]) == (2, [5, 4])": {
      "result": true,
      "time": 0.03598141670227051,
      "error": null
    },
    "assert min_length_list([[8, 8, 2], [1, 7, 3, 13], [5, 13, 13], [4, 4]]) == (2, [4, 4])": {
      "result": true,
      "time": 0.030385494232177734,
      "error": null
    },
    "assert min_length_list([[1, 4, 1], [5, 4, 11, 14], [15, 7, 8], [3, 5]]) == (2, [3, 5])": {
      "result": true,
      "time": 0.036998748779296875,
      "error": null
    },
    "assert min_length_list([[6, 6, 2], [3, 5, 5, 11], [10, 12, 16], [3, 1]]) == (2, [3, 1])": {
      "result": true,
      "time": 0.03759360313415527,
      "error": null
    },
    "assert min_length_list([[8, 5, 1], [5, 10, 5, 9], [15, 11, 14], [1, 2]]) == (2, [1, 2])": {
      "result": true,
      "time": 0.04250812530517578,
      "error": null
    },
    "assert min_length_list([[8, 5, 7], [7, 11, 4, 7], [6, 9, 13], [6, 3]]) == (2, [6, 3])": {
      "result": true,
      "time": 0.04139208793640137,
      "error": null
    },
    "assert min_length_list([[1, 3, 5], [2, 11, 3, 14], [7, 8, 12], [3, 5]]) == (2, [3, 5])": {
      "result": true,
      "time": 0.035692691802978516,
      "error": null
    },
    "assert min_length_list([[4, 7, 8], [6, 7, 6, 10], [11, 10, 9], [2, 1]]) == (2, [2, 1])": {
      "result": true,
      "time": 0.034737586975097656,
      "error": null
    },
    "assert min_length_list([[8, 5, 4], [3, 6, 7, 12], [14, 15, 11], [5, 1]]) == (2, [5, 1])": {
      "result": true,
      "time": 0.03559112548828125,
      "error": null
    },
    "assert min_length_list([[2, 7, 4], [1, 7, 5, 6], [8, 15, 12], [1, 6]]) == (2, [1, 6])": {
      "result": true,
      "time": 0.047043561935424805,
      "error": null
    },
    "assert min_length_list([[7, 9, 1], [10, 2, 13, 9], [13, 12, 12], [2, 5]]) == (2, [2, 5])": {
      "result": true,
      "time": 0.03970527648925781,
      "error": null
    },
    "assert min_length_list([[6, 7, 1], [11, 4, 9, 10], [12, 12, 16], [3, 2]]) == (2, [3, 2])": {
      "result": true,
      "time": 0.040467023849487305,
      "error": null
    },
    "assert min_length_list([[5, 3, 9], [8, 10, 12, 7], [13, 9, 9], [2, 2]]) == (2, [2, 2])": {
      "result": true,
      "time": 0.033514976501464844,
      "error": null
    },
    "assert min_length_list([[6, 6, 2], [2, 6, 9, 14], [13, 12, 12], [4, 3]]) == (2, [4, 3])": {
      "result": true,
      "time": 0.034091949462890625,
      "error": null
    },
    "assert min_length_list([[1, 4, 2], [3, 12, 5, 14], [9, 9, 8], [4, 2]]) == (2, [4, 2])": {
      "result": true,
      "time": 0.04021048545837402,
      "error": null
    },
    "assert min_length_list([[1, 6, 1], [4, 4, 11, 6], [12, 16, 10], [5, 2]]) == (2, [5, 2])": {
      "result": true,
      "time": 0.037476301193237305,
      "error": null
    },
    "assert min_length_list([[3, 6, 9], [9, 6, 12, 14], [9, 11, 10], [2, 3]]) == (2, [2, 3])": {
      "result": true,
      "time": 0.04039120674133301,
      "error": null
    },
    "assert min_length_list([[3, 8, 3], [10, 8, 11, 7], [6, 6, 14], [6, 1]]) == (2, [6, 1])": {
      "result": true,
      "time": 0.0366063117980957,
      "error": null
    },
    "assert min_length_list([[3, 8, 7], [3, 12, 3, 5], [15, 14, 11], [6, 4]]) == (2, [6, 4])": {
      "result": true,
      "time": 0.03964376449584961,
      "error": null
    },
    "assert min_length_list([[6, 2, 4], [10, 8, 6, 11], [11, 8, 8], [5, 2]]) == (2, [5, 2])": {
      "result": true,
      "time": 0.04105257987976074,
      "error": null
    },
    "assert min_length_list([[7, 2, 5], [9, 2, 6, 9], [7, 8, 15], [3, 3]]) == (2, [3, 3])": {
      "result": true,
      "time": 0.03908872604370117,
      "error": null
    },
    "assert min_length_list([[2, 4, 2], [6, 4, 8, 4], [11, 6, 13], [6, 4]]) == (2, [6, 4])": {
      "result": true,
      "time": 0.037885189056396484,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}