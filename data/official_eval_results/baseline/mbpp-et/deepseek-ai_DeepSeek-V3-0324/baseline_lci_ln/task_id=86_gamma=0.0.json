{
  "code": "def centered_hexagonal_number(n):\n    if n == 1:\n        return 1\n    term = 3 * n\n    term = term * (n - 1)\n    result = term + 1\n    return result",
  "results": {
    "assert centered_hexagonal_number(10) == 271": {
      "result": true,
      "time": 0.03395247459411621,
      "error": null
    },
    "assert centered_hexagonal_number(2) == 7": {
      "result": true,
      "time": 0.047659873962402344,
      "error": null
    },
    "assert centered_hexagonal_number(9) == 217": {
      "result": true,
      "time": 0.044526100158691406,
      "error": null
    },
    "assert centered_hexagonal_number(8) == 169": {
      "result": true,
      "time": 0.0422365665435791,
      "error": null
    },
    "assert centered_hexagonal_number(7) == 127": {
      "result": true,
      "time": 0.04641890525817871,
      "error": null
    },
    "assert centered_hexagonal_number(11) == 331": {
      "result": true,
      "time": 0.04124617576599121,
      "error": null
    },
    "assert centered_hexagonal_number(6) == 91": {
      "result": true,
      "time": 0.04434061050415039,
      "error": null
    },
    "assert centered_hexagonal_number(15) == 631": {
      "result": true,
      "time": 0.04033660888671875,
      "error": null
    },
    "assert centered_hexagonal_number(14) == 547": {
      "result": true,
      "time": 0.039249420166015625,
      "error": null
    },
    "assert centered_hexagonal_number(13) == 469": {
      "result": true,
      "time": 0.044397830963134766,
      "error": null
    },
    "assert centered_hexagonal_number(12) == 397": {
      "result": true,
      "time": 0.03952145576477051,
      "error": null
    },
    "assert centered_hexagonal_number(5) == 61": {
      "result": true,
      "time": 0.04479837417602539,
      "error": null
    },
    "assert centered_hexagonal_number(4) == 37": {
      "result": true,
      "time": 0.03974294662475586,
      "error": null
    },
    "assert centered_hexagonal_number(1) == 1": {
      "result": true,
      "time": 0.03683352470397949,
      "error": null
    },
    "assert centered_hexagonal_number(3) == 19": {
      "result": true,
      "time": 0.04999494552612305,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}