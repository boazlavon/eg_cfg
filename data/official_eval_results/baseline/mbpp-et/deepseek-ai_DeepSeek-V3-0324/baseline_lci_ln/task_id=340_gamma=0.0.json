{
  "code": "def sum_three_smallest_nums(numbers):\n    # Step 1: Filter out non-positive numbers\n    positive_numbers = []\n    for num in numbers:\n        if num > 0:\n            positive_numbers.append(num)\n    \n    # Step 2: Sort the positive numbers in ascending order\n    sorted_numbers = sorted(positive_numbers)\n    \n    # Step 3: Take the first three numbers (smallest)\n    three_smallest = sorted_numbers[:3]\n    \n    # Step 4: Calculate the sum of the three smallest numbers\n    total = 0\n    for num in three_smallest:\n        total += num\n    \n    return total",
  "results": {
    "assert sum_three_smallest_nums([10,20,30,40,50,60,7]) == 37": {
      "result": true,
      "time": 0.04285097122192383,
      "error": null
    },
    "assert sum_three_smallest_nums([1,2,3,4,5]) == 6": {
      "result": true,
      "time": 0.03974342346191406,
      "error": null
    },
    "assert sum_three_smallest_nums([0,1,2,3,4,5]) == 6": {
      "result": true,
      "time": 0.04202556610107422,
      "error": null
    },
    "assert sum_three_smallest_nums([13, 24, 35, 45, 51, 56, 2]) == 39": {
      "result": true,
      "time": 0.04615974426269531,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 22, 33, 35, 49, 60, 12]) == 49": {
      "result": true,
      "time": 0.04122281074523926,
      "error": null
    },
    "assert sum_three_smallest_nums([8, 23, 33, 45, 48, 57, 2]) == 33": {
      "result": true,
      "time": 0.044809579849243164,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 15, 31, 42, 46, 62, 8]) == 38": {
      "result": true,
      "time": 0.04657149314880371,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 19, 29, 38, 55, 65, 12]) == 36": {
      "result": true,
      "time": 0.04654693603515625,
      "error": null
    },
    "assert sum_three_smallest_nums([7, 19, 25, 37, 49, 62, 12]) == 38": {
      "result": true,
      "time": 0.0434725284576416,
      "error": null
    },
    "assert sum_three_smallest_nums([14, 25, 25, 42, 51, 63, 9]) == 48": {
      "result": true,
      "time": 0.05646347999572754,
      "error": null
    },
    "assert sum_three_smallest_nums([12, 21, 26, 43, 45, 62, 11]) == 44": {
      "result": true,
      "time": 0.03988075256347656,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 25, 35, 39, 46, 62, 7]) == 38": {
      "result": true,
      "time": 0.04629111289978027,
      "error": null
    },
    "assert sum_three_smallest_nums([9, 25, 28, 38, 52, 56, 11]) == 45": {
      "result": true,
      "time": 0.059597015380859375,
      "error": null
    },
    "assert sum_three_smallest_nums([12, 16, 35, 41, 50, 61, 3]) == 31": {
      "result": true,
      "time": 0.06467628479003906,
      "error": null
    },
    "assert sum_three_smallest_nums([8, 24, 33, 36, 45, 64, 4]) == 36": {
      "result": true,
      "time": 0.05746054649353027,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 25, 25, 43, 48, 59, 6]) == 46": {
      "result": true,
      "time": 0.06206631660461426,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 17, 31, 36, 51, 65, 4]) == 36": {
      "result": true,
      "time": 0.05613088607788086,
      "error": null
    },
    "assert sum_three_smallest_nums([11, 20, 27, 45, 48, 59, 7]) == 38": {
      "result": true,
      "time": 0.07096385955810547,
      "error": null
    },
    "assert sum_three_smallest_nums([7, 15, 35, 37, 46, 60, 9]) == 31": {
      "result": true,
      "time": 0.058089256286621094,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 18, 31, 37, 52, 64, 11]) == 44": {
      "result": true,
      "time": 0.06846332550048828,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 24, 33, 44, 45, 65, 8]) == 38": {
      "result": true,
      "time": 0.05827045440673828,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 17, 26, 40, 48, 56, 5]) == 28": {
      "result": true,
      "time": 0.0657813549041748,
      "error": null
    },
    "assert sum_three_smallest_nums([11, 17, 33, 36, 50, 56, 11]) == 39": {
      "result": true,
      "time": 0.07034945487976074,
      "error": null
    },
    "assert sum_three_smallest_nums([15, 19, 26, 41, 53, 65, 5]) == 39": {
      "result": true,
      "time": 0.06481218338012695,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 24, 29, 38, 48, 59, 6]) == 36": {
      "result": true,
      "time": 0.07184100151062012,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 23, 28, 39, 46, 57, 12]) == 40": {
      "result": true,
      "time": 0.06606030464172363,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 17, 35, 40, 53, 61, 8]) == 30": {
      "result": true,
      "time": 0.07423925399780273,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 21, 35, 38, 50, 57, 8]) == 35": {
      "result": true,
      "time": 0.06444668769836426,
      "error": null
    },
    "assert sum_three_smallest_nums([12, 21, 35, 37, 45, 56, 7]) == 40": {
      "result": true,
      "time": 0.0612180233001709,
      "error": null
    },
    "assert sum_three_smallest_nums([14, 24, 31, 35, 48, 63, 7]) == 45": {
      "result": true,
      "time": 0.06487727165222168,
      "error": null
    },
    "assert sum_three_smallest_nums([10, 24, 33, 42, 55, 63, 12]) == 46": {
      "result": true,
      "time": 0.056528568267822266,
      "error": null
    },
    "assert sum_three_smallest_nums([13, 16, 34, 44, 50, 56, 12]) == 41": {
      "result": true,
      "time": 0.06378459930419922,
      "error": null
    },
    "assert sum_three_smallest_nums([11, 25, 28, 35, 53, 61, 9]) == 45": {
      "result": true,
      "time": 0.06581521034240723,
      "error": null
    },
    "assert sum_three_smallest_nums([12, 22, 27, 45, 47, 63, 2]) == 36": {
      "result": true,
      "time": 0.058292388916015625,
      "error": null
    },
    "assert sum_three_smallest_nums([8, 19, 30, 45, 54, 58, 11]) == 38": {
      "result": true,
      "time": 0.06603503227233887,
      "error": null
    },
    "assert sum_three_smallest_nums([13, 25, 34, 45, 54, 58, 3]) == 41": {
      "result": true,
      "time": 0.07065868377685547,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 6, 2, 4, 4]) == 8": {
      "result": true,
      "time": 0.05913996696472168,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 4, 5, 8, 4]) == 9": {
      "result": true,
      "time": 0.0757591724395752,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 3, 5, 5, 8]) == 12": {
      "result": true,
      "time": 0.07293891906738281,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 5, 1, 9, 8]) == 10": {
      "result": true,
      "time": 0.055237770080566406,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 1, 2, 3, 9]) == 5": {
      "result": true,
      "time": 0.0796048641204834,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 7, 1, 1, 2]) == 4": {
      "result": true,
      "time": 0.05529427528381348,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 1, 7, 2, 1]) == 4": {
      "result": true,
      "time": 0.06799912452697754,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 1, 1, 6, 2]) == 4": {
      "result": true,
      "time": 0.06802892684936523,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 7, 5, 9, 8]) == 13": {
      "result": true,
      "time": 0.0730581283569336,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 7, 8, 3, 7]) == 15": {
      "result": true,
      "time": 0.0641632080078125,
      "error": null
    },
    "assert sum_three_smallest_nums([6, 4, 6, 1, 1]) == 6": {
      "result": true,
      "time": 0.0702676773071289,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 6, 7, 7, 2]) == 11": {
      "result": true,
      "time": 0.06665492057800293,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 3, 3, 3, 8]) == 9": {
      "result": true,
      "time": 0.06445598602294922,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 3, 1, 8, 3]) == 7": {
      "result": true,
      "time": 0.06559300422668457,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 6, 3, 8, 5]) == 9": {
      "result": true,
      "time": 0.056006669998168945,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 2, 7, 1, 7]) == 8": {
      "result": true,
      "time": 0.07732653617858887,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 1, 6, 3, 1]) == 4": {
      "result": true,
      "time": 0.052953481674194336,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 7, 7, 8, 10]) == 15": {
      "result": true,
      "time": 0.06461834907531738,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 1, 7, 2, 4]) == 6": {
      "result": true,
      "time": 0.05048871040344238,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 1, 6, 3, 1]) == 5": {
      "result": true,
      "time": 0.04125547409057617,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 6, 7, 3, 8]) == 13": {
      "result": true,
      "time": 0.04814481735229492,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 3, 2, 4, 3]) == 8": {
      "result": true,
      "time": 0.04003405570983887,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 1, 4, 8, 2]) == 7": {
      "result": true,
      "time": 0.03590130805969238,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 3, 3, 7, 10]) == 11": {
      "result": true,
      "time": 0.0467371940612793,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 2, 1, 4, 6]) == 7": {
      "result": true,
      "time": 0.04375886917114258,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 7, 8, 6, 10]) == 14": {
      "result": true,
      "time": 0.049669504165649414,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 1, 6, 9, 8]) == 10": {
      "result": true,
      "time": 0.043529510498046875,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 2, 7, 8, 9]) == 12": {
      "result": true,
      "time": 0.034261226654052734,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 4, 2, 1, 4]) == 5": {
      "result": true,
      "time": 0.039466142654418945,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 5, 4, 9, 1]) == 7": {
      "result": true,
      "time": 0.0442652702331543,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 4, 8, 4, 6]) == 12": {
      "result": true,
      "time": 0.043112993240356445,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 1, 4, 1, 7]) == 6": {
      "result": true,
      "time": 0.03863716125488281,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 5, 3, 1, 9]) == 7": {
      "result": true,
      "time": 0.048552513122558594,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 2, 1, 4, 6, 10]) == 4": {
      "result": true,
      "time": 0.04071235656738281,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 2, 5, 7, 6, 7]) == 12": {
      "result": true,
      "time": 0.04021787643432617,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 5, 2, 8, 7, 9]) == 11": {
      "result": true,
      "time": 0.04425930976867676,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 1, 5, 8, 9, 3]) == 5": {
      "result": true,
      "time": 0.0374598503112793,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 4, 7, 7, 9, 7]) == 14": {
      "result": true,
      "time": 0.04207134246826172,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 6, 1, 8, 4, 7]) == 7": {
      "result": true,
      "time": 0.03821516036987305,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 4, 1, 5, 6, 8]) == 7": {
      "result": true,
      "time": 0.0448307991027832,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 1, 6, 8, 7, 7]) == 12": {
      "result": true,
      "time": 0.041818857192993164,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 5, 7, 5, 1, 10]) == 11": {
      "result": true,
      "time": 0.046454429626464844,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 2, 5, 2, 9, 3]) == 7": {
      "result": true,
      "time": 0.03899264335632324,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 4, 7, 2, 8, 10]) == 11": {
      "result": true,
      "time": 0.048963069915771484,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 4, 3, 7, 2, 8]) == 9": {
      "result": true,
      "time": 0.039281368255615234,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 2, 5, 2, 2, 5]) == 6": {
      "result": true,
      "time": 0.03871488571166992,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 1, 1, 1, 6, 8]) == 3": {
      "result": true,
      "time": 0.04639172554016113,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 6, 5, 4, 7, 10]) == 14": {
      "result": true,
      "time": 0.04915904998779297,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 3, 6, 3, 6, 5]) == 11": {
      "result": true,
      "time": 0.039734601974487305,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 2, 4, 8, 2, 2]) == 6": {
      "result": true,
      "time": 0.04535198211669922,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 6, 1, 6, 4, 1]) == 3": {
      "result": true,
      "time": 0.04955792427062988,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 1, 6, 3, 4, 10]) == 8": {
      "result": true,
      "time": 0.053423404693603516,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 2, 1, 5, 9, 4]) == 4": {
      "result": true,
      "time": 0.04631471633911133,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 4, 4, 8, 2, 5]) == 10": {
      "result": true,
      "time": 0.04317903518676758,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 6, 4, 1, 5, 10]) == 6": {
      "result": true,
      "time": 0.03705096244812012,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 6, 2, 3, 6, 8]) == 10": {
      "result": true,
      "time": 0.04226183891296387,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 5, 6, 6, 2, 9]) == 11": {
      "result": true,
      "time": 0.05143618583679199,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 2, 2, 2, 5, 1]) == 4": {
      "result": true,
      "time": 0.046563148498535156,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 3, 6, 5, 8, 3]) == 7": {
      "result": true,
      "time": 0.04553556442260742,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 1, 1, 4, 8, 9]) == 4": {
      "result": true,
      "time": 0.05406332015991211,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 5, 6, 7, 6, 2]) == 10": {
      "result": true,
      "time": 0.04364967346191406,
      "error": null
    },
    "assert sum_three_smallest_nums([3, 5, 7, 4, 4, 8]) == 11": {
      "result": true,
      "time": 0.044966697692871094,
      "error": null
    },
    "assert sum_three_smallest_nums([4, 2, 1, 3, 2, 3]) == 5": {
      "result": true,
      "time": 0.043076515197753906,
      "error": null
    },
    "assert sum_three_smallest_nums([1, 5, 4, 5, 7, 4]) == 9": {
      "result": true,
      "time": 0.03628110885620117,
      "error": null
    },
    "assert sum_three_smallest_nums([2, 2, 2, 3, 5, 8]) == 6": {
      "result": true,
      "time": 0.043390512466430664,
      "error": null
    },
    "assert sum_three_smallest_nums([5, 1, 4, 3, 6, 5]) == 8": {
      "result": true,
      "time": 0.040246009826660156,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}