{
  "code": "def find_first_duplicate(arr):\n    seen_elements = set()\n    for num in arr:\n        if num in seen_elements:\n            return num\n        seen_elements.add(num)\n    return -1",
  "results": {
    "assert find_first_duplicate(([1, 2, 3, 4, 4, 5]))==4": {
      "result": true,
      "time": 0.04060792922973633,
      "error": null
    },
    "assert find_first_duplicate([1, 2, 3, 4])==-1": {
      "result": true,
      "time": 0.03959822654724121,
      "error": null
    },
    "assert find_first_duplicate([1, 1, 2, 3, 3, 2, 2])==1": {
      "result": true,
      "time": 0.04475235939025879,
      "error": null
    },
    "assert find_first_duplicate([3, 6, 8, 1, 3, 5]) == 3": {
      "result": true,
      "time": 0.03922557830810547,
      "error": null
    },
    "assert find_first_duplicate([5, 7, 4, 2, 5, 3]) == 5": {
      "result": true,
      "time": 0.03626728057861328,
      "error": null
    },
    "assert find_first_duplicate([4, 5, 5, 6, 1, 5]) == 5": {
      "result": true,
      "time": 0.039215087890625,
      "error": null
    },
    "assert find_first_duplicate([4, 5, 6, 8, 7, 9]) == -1": {
      "result": true,
      "time": 0.03885793685913086,
      "error": null
    },
    "assert find_first_duplicate([1, 6, 5, 9, 6, 2]) == 6": {
      "result": true,
      "time": 0.034670352935791016,
      "error": null
    },
    "assert find_first_duplicate([3, 3, 8, 3, 6, 6]) == 3": {
      "result": true,
      "time": 0.041357994079589844,
      "error": null
    },
    "assert find_first_duplicate([2, 1, 3, 2, 2, 4]) == 2": {
      "result": true,
      "time": 0.037407875061035156,
      "error": null
    },
    "assert find_first_duplicate([4, 6, 8, 1, 8, 5]) == 8": {
      "result": true,
      "time": 0.03444528579711914,
      "error": null
    },
    "assert find_first_duplicate([2, 2, 1, 1, 1, 4]) == 2": {
      "result": true,
      "time": 0.03528189659118652,
      "error": null
    },
    "assert find_first_duplicate([4, 7, 8, 9, 1, 6]) == -1": {
      "result": true,
      "time": 0.040903329849243164,
      "error": null
    },
    "assert find_first_duplicate([6, 3, 3, 6, 1, 5]) == 3": {
      "result": true,
      "time": 0.03860831260681152,
      "error": null
    },
    "assert find_first_duplicate([1, 2, 5, 9, 6, 2]) == 2": {
      "result": true,
      "time": 0.041285037994384766,
      "error": null
    },
    "assert find_first_duplicate([3, 2, 1, 4, 2, 7]) == 2": {
      "result": true,
      "time": 0.04052734375,
      "error": null
    },
    "assert find_first_duplicate([1, 5, 8, 8, 5, 4]) == 8": {
      "result": true,
      "time": 0.04294896125793457,
      "error": null
    },
    "assert find_first_duplicate([4, 5, 6, 1, 5, 8]) == 5": {
      "result": true,
      "time": 0.03834247589111328,
      "error": null
    },
    "assert find_first_duplicate([6, 4, 1, 8, 3, 4]) == 4": {
      "result": true,
      "time": 0.033133745193481445,
      "error": null
    },
    "assert find_first_duplicate([4, 6, 3, 8, 6, 5]) == 6": {
      "result": true,
      "time": 0.0485377311706543,
      "error": null
    },
    "assert find_first_duplicate([6, 4, 8, 7, 9, 10]) == -1": {
      "result": true,
      "time": 0.03553366661071777,
      "error": null
    },
    "assert find_first_duplicate([5, 6, 6, 6, 9, 2]) == 6": {
      "result": true,
      "time": 0.04386639595031738,
      "error": null
    },
    "assert find_first_duplicate([4, 5, 2, 7, 6, 6]) == 6": {
      "result": true,
      "time": 0.037111520767211914,
      "error": null
    },
    "assert find_first_duplicate([5, 7, 1, 5, 9, 9]) == 5": {
      "result": true,
      "time": 0.040808677673339844,
      "error": null
    },
    "assert find_first_duplicate([1, 5, 5, 8, 1, 5]) == 5": {
      "result": true,
      "time": 0.03779721260070801,
      "error": null
    },
    "assert find_first_duplicate([4, 3, 5, 5, 5, 4]) == 5": {
      "result": true,
      "time": 0.035826683044433594,
      "error": null
    },
    "assert find_first_duplicate([1, 3, 1, 5, 8, 7]) == 1": {
      "result": true,
      "time": 0.03709816932678223,
      "error": null
    },
    "assert find_first_duplicate([4, 4, 7, 3, 8, 10]) == 4": {
      "result": true,
      "time": 0.05452156066894531,
      "error": null
    },
    "assert find_first_duplicate([6, 3, 2, 4, 8, 1]) == -1": {
      "result": true,
      "time": 0.044898033142089844,
      "error": null
    },
    "assert find_first_duplicate([2, 7, 3, 8, 5, 7]) == 7": {
      "result": true,
      "time": 0.05015969276428223,
      "error": null
    },
    "assert find_first_duplicate([6, 7, 8, 3, 8, 5]) == 8": {
      "result": true,
      "time": 0.050760507583618164,
      "error": null
    },
    "assert find_first_duplicate([4, 6, 2, 7, 5, 2]) == 2": {
      "result": true,
      "time": 0.04982256889343262,
      "error": null
    },
    "assert find_first_duplicate([4, 4, 8, 8, 5, 3]) == 4": {
      "result": true,
      "time": 0.043631553649902344,
      "error": null
    },
    "assert find_first_duplicate([3, 6, 1, 8, 9, 4]) == -1": {
      "result": true,
      "time": 0.05399131774902344,
      "error": null
    },
    "assert find_first_duplicate([5, 5, 7, 9, 1, 4]) == 5": {
      "result": true,
      "time": 0.04554176330566406,
      "error": null
    },
    "assert find_first_duplicate([6, 5, 2, 9, 9, 4]) == 9": {
      "result": true,
      "time": 0.04145693778991699,
      "error": null
    },
    "assert find_first_duplicate([5, 5, 5, 8]) == 5": {
      "result": true,
      "time": 0.04891562461853027,
      "error": null
    },
    "assert find_first_duplicate([2, 5, 4, 2]) == 2": {
      "result": true,
      "time": 0.05502915382385254,
      "error": null
    },
    "assert find_first_duplicate([2, 7, 7, 2]) == 7": {
      "result": true,
      "time": 0.046919822692871094,
      "error": null
    },
    "assert find_first_duplicate([5, 3, 6, 4]) == -1": {
      "result": true,
      "time": 0.040472984313964844,
      "error": null
    },
    "assert find_first_duplicate([4, 5, 8, 6]) == -1": {
      "result": true,
      "time": 0.05538177490234375,
      "error": null
    },
    "assert find_first_duplicate([6, 3, 3, 7]) == 3": {
      "result": true,
      "time": 0.04560351371765137,
      "error": null
    },
    "assert find_first_duplicate([2, 6, 1, 6]) == 6": {
      "result": true,
      "time": 0.049951791763305664,
      "error": null
    },
    "assert find_first_duplicate([6, 1, 7, 6]) == 6": {
      "result": true,
      "time": 0.04451465606689453,
      "error": null
    },
    "assert find_first_duplicate([1, 7, 1, 3]) == 1": {
      "result": true,
      "time": 0.05219101905822754,
      "error": null
    },
    "assert find_first_duplicate([2, 7, 3, 5]) == -1": {
      "result": true,
      "time": 0.048842430114746094,
      "error": null
    },
    "assert find_first_duplicate([4, 5, 1, 9]) == -1": {
      "result": true,
      "time": 0.05384206771850586,
      "error": null
    },
    "assert find_first_duplicate([4, 4, 4, 3]) == 4": {
      "result": true,
      "time": 0.03992414474487305,
      "error": null
    },
    "assert find_first_duplicate([6, 5, 1, 7]) == -1": {
      "result": true,
      "time": 0.04620480537414551,
      "error": null
    },
    "assert find_first_duplicate([4, 2, 3, 4]) == 4": {
      "result": true,
      "time": 0.05115032196044922,
      "error": null
    },
    "assert find_first_duplicate([3, 3, 6, 8]) == 3": {
      "result": true,
      "time": 0.0419154167175293,
      "error": null
    },
    "assert find_first_duplicate([4, 7, 6, 7]) == 7": {
      "result": true,
      "time": 0.04788994789123535,
      "error": null
    },
    "assert find_first_duplicate([2, 3, 5, 6]) == -1": {
      "result": true,
      "time": 0.04874253273010254,
      "error": null
    },
    "assert find_first_duplicate([2, 2, 5, 1]) == 2": {
      "result": true,
      "time": 0.04875612258911133,
      "error": null
    },
    "assert find_first_duplicate([4, 5, 8, 8]) == 8": {
      "result": true,
      "time": 0.04674124717712402,
      "error": null
    },
    "assert find_first_duplicate([5, 7, 7, 8]) == 7": {
      "result": true,
      "time": 0.03731226921081543,
      "error": null
    },
    "assert find_first_duplicate([2, 5, 3, 4]) == -1": {
      "result": true,
      "time": 0.04739189147949219,
      "error": null
    },
    "assert find_first_duplicate([3, 2, 7, 5]) == -1": {
      "result": true,
      "time": 0.03960776329040527,
      "error": null
    },
    "assert find_first_duplicate([4, 2, 4, 9]) == 4": {
      "result": true,
      "time": 0.04109454154968262,
      "error": null
    },
    "assert find_first_duplicate([4, 6, 4, 5]) == 4": {
      "result": true,
      "time": 0.0357208251953125,
      "error": null
    },
    "assert find_first_duplicate([4, 4, 5, 3]) == 4": {
      "result": true,
      "time": 0.04125261306762695,
      "error": null
    },
    "assert find_first_duplicate([5, 1, 5, 5]) == 5": {
      "result": true,
      "time": 0.03768754005432129,
      "error": null
    },
    "assert find_first_duplicate([1, 5, 3, 9]) == -1": {
      "result": true,
      "time": 0.03623008728027344,
      "error": null
    },
    "assert find_first_duplicate([1, 7, 7, 2]) == 7": {
      "result": true,
      "time": 0.04070448875427246,
      "error": null
    },
    "assert find_first_duplicate([5, 1, 8, 3]) == -1": {
      "result": true,
      "time": 0.049250125885009766,
      "error": null
    },
    "assert find_first_duplicate([2, 5, 7, 9]) == -1": {
      "result": true,
      "time": 0.04436850547790527,
      "error": null
    },
    "assert find_first_duplicate([1, 1, 7, 1]) == 1": {
      "result": true,
      "time": 0.04051542282104492,
      "error": null
    },
    "assert find_first_duplicate([5, 4, 4, 1]) == 4": {
      "result": true,
      "time": 0.045446157455444336,
      "error": null
    },
    "assert find_first_duplicate([4, 4, 5, 9]) == 4": {
      "result": true,
      "time": 0.0440976619720459,
      "error": null
    },
    "assert find_first_duplicate([5, 6, 3, 6, 5, 7, 1]) == 6": {
      "result": true,
      "time": 0.04515409469604492,
      "error": null
    },
    "assert find_first_duplicate([4, 1, 4, 8, 4, 3, 4]) == 4": {
      "result": true,
      "time": 0.04415321350097656,
      "error": null
    },
    "assert find_first_duplicate([1, 1, 6, 8, 6, 6, 4]) == 1": {
      "result": true,
      "time": 0.041594505310058594,
      "error": null
    },
    "assert find_first_duplicate([2, 3, 7, 1, 3, 5, 5]) == 3": {
      "result": true,
      "time": 0.044901132583618164,
      "error": null
    },
    "assert find_first_duplicate([1, 2, 3, 2, 8, 1, 5]) == 2": {
      "result": true,
      "time": 0.03834223747253418,
      "error": null
    },
    "assert find_first_duplicate([3, 5, 4, 5, 8, 6, 7]) == 5": {
      "result": true,
      "time": 0.04095721244812012,
      "error": null
    },
    "assert find_first_duplicate([3, 4, 1, 6, 1, 2, 3]) == 1": {
      "result": true,
      "time": 0.0427553653717041,
      "error": null
    },
    "assert find_first_duplicate([3, 4, 3, 2, 6, 7, 5]) == 3": {
      "result": true,
      "time": 0.04161477088928223,
      "error": null
    },
    "assert find_first_duplicate([5, 5, 7, 8, 6, 2, 3]) == 5": {
      "result": true,
      "time": 0.03897595405578613,
      "error": null
    },
    "assert find_first_duplicate([2, 2, 2, 3, 1, 4, 7]) == 2": {
      "result": true,
      "time": 0.03802013397216797,
      "error": null
    },
    "assert find_first_duplicate([5, 5, 6, 3, 5, 5, 5]) == 5": {
      "result": true,
      "time": 0.04866838455200195,
      "error": null
    },
    "assert find_first_duplicate([5, 6, 1, 4, 3, 5, 5]) == 5": {
      "result": true,
      "time": 0.04034924507141113,
      "error": null
    },
    "assert find_first_duplicate([6, 5, 2, 8, 2, 5, 3]) == 2": {
      "result": true,
      "time": 0.04045438766479492,
      "error": null
    },
    "assert find_first_duplicate([4, 6, 1, 5, 3, 5, 6]) == 5": {
      "result": true,
      "time": 0.047188758850097656,
      "error": null
    },
    "assert find_first_duplicate([5, 3, 4, 1, 3, 3, 1]) == 3": {
      "result": true,
      "time": 0.03847765922546387,
      "error": null
    },
    "assert find_first_duplicate([6, 1, 3, 2, 3, 5, 5]) == 3": {
      "result": true,
      "time": 0.03659653663635254,
      "error": null
    },
    "assert find_first_duplicate([1, 5, 3, 6, 4, 3, 7]) == 3": {
      "result": true,
      "time": 0.04573178291320801,
      "error": null
    },
    "assert find_first_duplicate([2, 6, 1, 7, 8, 3, 3]) == 3": {
      "result": true,
      "time": 0.045909881591796875,
      "error": null
    },
    "assert find_first_duplicate([2, 2, 2, 7, 2, 4, 7]) == 2": {
      "result": true,
      "time": 0.05412769317626953,
      "error": null
    },
    "assert find_first_duplicate([5, 2, 6, 5, 7, 2, 7]) == 5": {
      "result": true,
      "time": 0.03444695472717285,
      "error": null
    },
    "assert find_first_duplicate([3, 4, 7, 7, 6, 2, 3]) == 7": {
      "result": true,
      "time": 0.049307823181152344,
      "error": null
    },
    "assert find_first_duplicate([3, 1, 4, 6, 1, 2, 6]) == 1": {
      "result": true,
      "time": 0.050046682357788086,
      "error": null
    },
    "assert find_first_duplicate([6, 4, 6, 4, 5, 6, 7]) == 6": {
      "result": true,
      "time": 0.038837432861328125,
      "error": null
    },
    "assert find_first_duplicate([4, 2, 1, 1, 8, 2, 7]) == 1": {
      "result": true,
      "time": 0.04564189910888672,
      "error": null
    },
    "assert find_first_duplicate([5, 4, 6, 6, 3, 1, 7]) == 6": {
      "result": true,
      "time": 0.04564666748046875,
      "error": null
    },
    "assert find_first_duplicate([6, 1, 1, 4, 4, 7, 2]) == 1": {
      "result": true,
      "time": 0.03700971603393555,
      "error": null
    },
    "assert find_first_duplicate([2, 3, 4, 6, 4, 5, 1]) == 4": {
      "result": true,
      "time": 0.0476071834564209,
      "error": null
    },
    "assert find_first_duplicate([4, 6, 6, 1, 6, 1, 5]) == 6": {
      "result": true,
      "time": 0.04481077194213867,
      "error": null
    },
    "assert find_first_duplicate([3, 5, 1, 6, 2, 7, 2]) == 2": {
      "result": true,
      "time": 0.04943394660949707,
      "error": null
    },
    "assert find_first_duplicate([5, 5, 7, 6, 6, 2, 2]) == 5": {
      "result": true,
      "time": 0.05195808410644531,
      "error": null
    },
    "assert find_first_duplicate([4, 6, 1, 5, 7, 3, 6]) == 6": {
      "result": true,
      "time": 0.04622936248779297,
      "error": null
    },
    "assert find_first_duplicate([6, 4, 2, 1, 1, 7, 1]) == 1": {
      "result": true,
      "time": 0.04315781593322754,
      "error": null
    },
    "assert find_first_duplicate([2, 2, 6, 1, 2, 4, 2]) == 2": {
      "result": true,
      "time": 0.04076552391052246,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}