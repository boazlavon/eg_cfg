{
  "code": "def count_Odd_Squares(start, end):\n    count = 0\n    for num in range(start, end + 1):\n        factors = 0\n        for i in range(1, num + 1):\n            if num % i == 0:\n                factors += 1\n        if factors % 2 != 0:\n            count += 1\n    return count",
  "results": {
    "assert count_Odd_Squares(5,100) == 8": {
      "result": true,
      "time": 0.04686331748962402,
      "error": null
    },
    "assert count_Odd_Squares(8,65) == 6": {
      "result": true,
      "time": 0.053310394287109375,
      "error": null
    },
    "assert count_Odd_Squares(2,5) == 1": {
      "result": true,
      "time": 0.05029797554016113,
      "error": null
    },
    "assert count_Odd_Squares(5, 97) == 7": {
      "result": true,
      "time": 0.049271345138549805,
      "error": null
    },
    "assert count_Odd_Squares(6, 104) == 8": {
      "result": true,
      "time": 0.047090768814086914,
      "error": null
    },
    "assert count_Odd_Squares(8, 96) == 7": {
      "result": true,
      "time": 0.05243992805480957,
      "error": null
    },
    "assert count_Odd_Squares(5, 105) == 8": {
      "result": true,
      "time": 0.048787832260131836,
      "error": null
    },
    "assert count_Odd_Squares(1, 102) == 10": {
      "result": true,
      "time": 0.05406618118286133,
      "error": null
    },
    "assert count_Odd_Squares(8, 98) == 7": {
      "result": true,
      "time": 0.0669403076171875,
      "error": null
    },
    "assert count_Odd_Squares(9, 99) == 7": {
      "result": true,
      "time": 0.050047874450683594,
      "error": null
    },
    "assert count_Odd_Squares(8, 95) == 7": {
      "result": true,
      "time": 0.059462785720825195,
      "error": null
    },
    "assert count_Odd_Squares(6, 95) == 7": {
      "result": true,
      "time": 0.0600435733795166,
      "error": null
    },
    "assert count_Odd_Squares(10, 99) == 6": {
      "result": true,
      "time": 0.06663060188293457,
      "error": null
    },
    "assert count_Odd_Squares(7, 99) == 7": {
      "result": true,
      "time": 0.05718111991882324,
      "error": null
    },
    "assert count_Odd_Squares(6, 100) == 8": {
      "result": true,
      "time": 0.0572504997253418,
      "error": null
    },
    "assert count_Odd_Squares(5, 98) == 7": {
      "result": true,
      "time": 0.061411380767822266,
      "error": null
    },
    "assert count_Odd_Squares(8, 99) == 7": {
      "result": true,
      "time": 0.05003929138183594,
      "error": null
    },
    "assert count_Odd_Squares(5, 104) == 8": {
      "result": true,
      "time": 0.051305294036865234,
      "error": null
    },
    "assert count_Odd_Squares(10, 97) == 6": {
      "result": true,
      "time": 0.049306631088256836,
      "error": null
    },
    "assert count_Odd_Squares(9, 98) == 7": {
      "result": true,
      "time": 0.06251025199890137,
      "error": null
    },
    "assert count_Odd_Squares(2, 99) == 8": {
      "result": true,
      "time": 0.04141354560852051,
      "error": null
    },
    "assert count_Odd_Squares(6, 105) == 8": {
      "result": true,
      "time": 0.06686949729919434,
      "error": null
    },
    "assert count_Odd_Squares(3, 102) == 9": {
      "result": true,
      "time": 0.05571866035461426,
      "error": null
    },
    "assert count_Odd_Squares(4, 102) == 9": {
      "result": true,
      "time": 0.062048912048339844,
      "error": null
    },
    "assert count_Odd_Squares(8, 104) == 8": {
      "result": true,
      "time": 0.05460500717163086,
      "error": null
    },
    "assert count_Odd_Squares(7, 95) == 7": {
      "result": true,
      "time": 0.05872392654418945,
      "error": null
    },
    "assert count_Odd_Squares(2, 95) == 8": {
      "result": true,
      "time": 0.04763436317443848,
      "error": null
    },
    "assert count_Odd_Squares(9, 95) == 7": {
      "result": true,
      "time": 0.06696653366088867,
      "error": null
    },
    "assert count_Odd_Squares(9, 102) == 8": {
      "result": true,
      "time": 0.058835506439208984,
      "error": null
    },
    "assert count_Odd_Squares(5, 99) == 7": {
      "result": true,
      "time": 0.05637645721435547,
      "error": null
    },
    "assert count_Odd_Squares(7, 103) == 8": {
      "result": true,
      "time": 0.04964637756347656,
      "error": null
    },
    "assert count_Odd_Squares(4, 103) == 9": {
      "result": true,
      "time": 0.05971169471740723,
      "error": null
    },
    "assert count_Odd_Squares(7, 96) == 7": {
      "result": true,
      "time": 0.04502248764038086,
      "error": null
    },
    "assert count_Odd_Squares(12, 62) == 4": {
      "result": true,
      "time": 0.05413174629211426,
      "error": null
    },
    "assert count_Odd_Squares(10, 61) == 4": {
      "result": true,
      "time": 0.06050467491149902,
      "error": null
    },
    "assert count_Odd_Squares(5, 64) == 6": {
      "result": true,
      "time": 0.04935884475708008,
      "error": null
    },
    "assert count_Odd_Squares(12, 61) == 4": {
      "result": true,
      "time": 0.0643320083618164,
      "error": null
    },
    "assert count_Odd_Squares(5, 69) == 6": {
      "result": true,
      "time": 0.05655026435852051,
      "error": null
    },
    "assert count_Odd_Squares(3, 64) == 7": {
      "result": true,
      "time": 0.06025338172912598,
      "error": null
    },
    "assert count_Odd_Squares(6, 61) == 5": {
      "result": true,
      "time": 0.0628819465637207,
      "error": null
    },
    "assert count_Odd_Squares(10, 65) == 5": {
      "result": true,
      "time": 0.04905557632446289,
      "error": null
    },
    "assert count_Odd_Squares(6, 67) == 6": {
      "result": true,
      "time": 0.055066823959350586,
      "error": null
    },
    "assert count_Odd_Squares(13, 68) == 5": {
      "result": true,
      "time": 0.05387163162231445,
      "error": null
    },
    "assert count_Odd_Squares(11, 61) == 4": {
      "result": true,
      "time": 0.05106306076049805,
      "error": null
    },
    "assert count_Odd_Squares(11, 65) == 5": {
      "result": true,
      "time": 0.051042795181274414,
      "error": null
    },
    "assert count_Odd_Squares(5, 65) == 6": {
      "result": true,
      "time": 0.05133175849914551,
      "error": null
    },
    "assert count_Odd_Squares(11, 69) == 5": {
      "result": true,
      "time": 0.0447084903717041,
      "error": null
    },
    "assert count_Odd_Squares(4, 70) == 7": {
      "result": true,
      "time": 0.0426030158996582,
      "error": null
    },
    "assert count_Odd_Squares(6, 63) == 5": {
      "result": true,
      "time": 0.0379178524017334,
      "error": null
    },
    "assert count_Odd_Squares(4, 69) == 7": {
      "result": true,
      "time": 0.03557181358337402,
      "error": null
    },
    "assert count_Odd_Squares(3, 63) == 6": {
      "result": true,
      "time": 0.041303157806396484,
      "error": null
    },
    "assert count_Odd_Squares(4, 68) == 7": {
      "result": true,
      "time": 0.04059338569641113,
      "error": null
    },
    "assert count_Odd_Squares(8, 67) == 6": {
      "result": true,
      "time": 0.04389643669128418,
      "error": null
    },
    "assert count_Odd_Squares(8, 62) == 5": {
      "result": true,
      "time": 0.04550457000732422,
      "error": null
    },
    "assert count_Odd_Squares(13, 65) == 5": {
      "result": true,
      "time": 0.047144174575805664,
      "error": null
    },
    "assert count_Odd_Squares(6, 62) == 5": {
      "result": true,
      "time": 0.0368807315826416,
      "error": null
    },
    "assert count_Odd_Squares(12, 69) == 5": {
      "result": true,
      "time": 0.03849363327026367,
      "error": null
    },
    "assert count_Odd_Squares(10, 63) == 4": {
      "result": true,
      "time": 0.04794716835021973,
      "error": null
    },
    "assert count_Odd_Squares(5, 67) == 6": {
      "result": true,
      "time": 0.04043865203857422,
      "error": null
    },
    "assert count_Odd_Squares(7, 65) == 6": {
      "result": true,
      "time": 0.04003477096557617,
      "error": null
    },
    "assert count_Odd_Squares(5, 61) == 5": {
      "result": true,
      "time": 0.037833213806152344,
      "error": null
    },
    "assert count_Odd_Squares(8, 68) == 6": {
      "result": true,
      "time": 0.04287886619567871,
      "error": null
    },
    "assert count_Odd_Squares(3, 2) == 0": {
      "result": true,
      "time": 0.047156333923339844,
      "error": null
    },
    "assert count_Odd_Squares(3, 1) == 0": {
      "result": true,
      "time": 0.039788007736206055,
      "error": null
    },
    "assert count_Odd_Squares(4, 10) == 2": {
      "result": true,
      "time": 0.04442787170410156,
      "error": null
    },
    "assert count_Odd_Squares(5, 6) == 0": {
      "result": true,
      "time": 0.045481204986572266,
      "error": null
    },
    "assert count_Odd_Squares(6, 8) == 0": {
      "result": true,
      "time": 0.052205562591552734,
      "error": null
    },
    "assert count_Odd_Squares(4, 1) == 0": {
      "result": true,
      "time": 0.044092655181884766,
      "error": null
    },
    "assert count_Odd_Squares(1, 1) == 1": {
      "result": true,
      "time": 0.03728318214416504,
      "error": null
    },
    "assert count_Odd_Squares(6, 2) == -1": {
      "result": false,
      "time": 0.04405379295349121,
      "error": null
    },
    "assert count_Odd_Squares(2, 8) == 1": {
      "result": true,
      "time": 0.044510841369628906,
      "error": null
    },
    "assert count_Odd_Squares(1, 10) == 3": {
      "result": true,
      "time": 0.04245805740356445,
      "error": null
    },
    "assert count_Odd_Squares(2, 7) == 1": {
      "result": true,
      "time": 0.042200565338134766,
      "error": null
    },
    "assert count_Odd_Squares(2, 6) == 1": {
      "result": true,
      "time": 0.03843426704406738,
      "error": null
    },
    "assert count_Odd_Squares(2, 9) == 2": {
      "result": true,
      "time": 0.0406498908996582,
      "error": null
    },
    "assert count_Odd_Squares(1, 3) == 1": {
      "result": true,
      "time": 0.03973126411437988,
      "error": null
    },
    "assert count_Odd_Squares(3, 8) == 1": {
      "result": true,
      "time": 0.05200552940368652,
      "error": null
    },
    "assert count_Odd_Squares(4, 2) == 0": {
      "result": true,
      "time": 0.05087542533874512,
      "error": null
    },
    "assert count_Odd_Squares(5, 5) == 0": {
      "result": true,
      "time": 0.05195164680480957,
      "error": null
    },
    "assert count_Odd_Squares(7, 8) == 0": {
      "result": true,
      "time": 0.057098388671875,
      "error": null
    },
    "assert count_Odd_Squares(4, 3) == 0": {
      "result": true,
      "time": 0.05430722236633301,
      "error": null
    },
    "assert count_Odd_Squares(6, 7) == 0": {
      "result": true,
      "time": 0.05907130241394043,
      "error": null
    },
    "assert count_Odd_Squares(4, 6) == 1": {
      "result": true,
      "time": 0.05705070495605469,
      "error": null
    },
    "assert count_Odd_Squares(3, 10) == 2": {
      "result": true,
      "time": 0.04774904251098633,
      "error": null
    },
    "assert count_Odd_Squares(7, 3) == -1": {
      "result": false,
      "time": 0.05063056945800781,
      "error": null
    },
    "assert count_Odd_Squares(5, 10) == 1": {
      "result": true,
      "time": 0.053563594818115234,
      "error": null
    },
    "assert count_Odd_Squares(1, 9) == 3": {
      "result": true,
      "time": 0.053696632385253906,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.9770114942528736,
  "general_error": "",
  "has_testcase_error": false
}