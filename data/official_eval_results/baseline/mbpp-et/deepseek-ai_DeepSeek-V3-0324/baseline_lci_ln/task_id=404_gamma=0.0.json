{
  "code": "def minimum(a, b):\n    if a < b:\n        result = a\n    else:\n        result = b\n    return result",
  "results": {
    "assert minimum(1,2) == 1": {
      "result": true,
      "time": 0.04114532470703125,
      "error": null
    },
    "assert minimum(-5,-4) == -5": {
      "result": true,
      "time": 0.03039097785949707,
      "error": null
    },
    "assert minimum(0,0) == 0": {
      "result": true,
      "time": 0.04124593734741211,
      "error": null
    },
    "assert minimum(5, 3) == 3": {
      "result": true,
      "time": 0.03876185417175293,
      "error": null
    },
    "assert minimum(6, 5) == 5": {
      "result": true,
      "time": 0.029095172882080078,
      "error": null
    },
    "assert minimum(4, 6) == 4": {
      "result": true,
      "time": 0.03695845603942871,
      "error": null
    },
    "assert minimum(1, 6) == 1": {
      "result": true,
      "time": 0.04347038269042969,
      "error": null
    },
    "assert minimum(6, 6) == 6": {
      "result": true,
      "time": 0.034288644790649414,
      "error": null
    },
    "assert minimum(2, 6) == 2": {
      "result": true,
      "time": 0.03434944152832031,
      "error": null
    },
    "assert minimum(3, 5) == 3": {
      "result": true,
      "time": 0.04089999198913574,
      "error": null
    },
    "assert minimum(3, 1) == 1": {
      "result": true,
      "time": 0.0421297550201416,
      "error": null
    },
    "assert minimum(3, 7) == 3": {
      "result": true,
      "time": 0.045937299728393555,
      "error": null
    },
    "assert minimum(2, 4) == 2": {
      "result": true,
      "time": 0.03427743911743164,
      "error": null
    },
    "assert minimum(4, 3) == 3": {
      "result": true,
      "time": 0.03916335105895996,
      "error": null
    },
    "assert minimum(4, 2) == 2": {
      "result": true,
      "time": 0.03852081298828125,
      "error": null
    },
    "assert minimum(5, 6) == 5": {
      "result": true,
      "time": 0.03062272071838379,
      "error": null
    },
    "assert minimum(5, 2) == 2": {
      "result": true,
      "time": 0.03721976280212402,
      "error": null
    },
    "assert minimum(3, 4) == 3": {
      "result": true,
      "time": 0.03926396369934082,
      "error": null
    },
    "assert minimum(6, 7) == 6": {
      "result": true,
      "time": 0.05330204963684082,
      "error": null
    },
    "assert minimum(1, 4) == 1": {
      "result": true,
      "time": 0.05881357192993164,
      "error": null
    },
    "assert minimum(1, 1) == 1": {
      "result": true,
      "time": 0.051405906677246094,
      "error": null
    },
    "assert minimum(2, 7) == 2": {
      "result": true,
      "time": 0.05792593955993652,
      "error": null
    },
    "assert minimum(3, 2) == 2": {
      "result": true,
      "time": 0.05240797996520996,
      "error": null
    },
    "assert minimum(1, 2) == 1": {
      "result": true,
      "time": 0.05839729309082031,
      "error": null
    },
    "assert minimum(4, 1) == 1": {
      "result": true,
      "time": 0.04779481887817383,
      "error": null
    },
    "assert minimum(-3, -6) == -6": {
      "result": true,
      "time": 0.05614209175109863,
      "error": null
    },
    "assert minimum(-3, 0) == -3": {
      "result": true,
      "time": 0.05156850814819336,
      "error": null
    },
    "assert minimum(-10, -2) == -10": {
      "result": true,
      "time": 0.05076456069946289,
      "error": null
    },
    "assert minimum(0, -9) == -9": {
      "result": true,
      "time": 0.05555295944213867,
      "error": null
    },
    "assert minimum(-10, -6) == -10": {
      "result": true,
      "time": 0.06365060806274414,
      "error": null
    },
    "assert minimum(0, -4) == -4": {
      "result": true,
      "time": 0.060263872146606445,
      "error": null
    },
    "assert minimum(-9, -5) == -9": {
      "result": true,
      "time": 0.05451035499572754,
      "error": null
    },
    "assert minimum(-1, -4) == -4": {
      "result": true,
      "time": 0.048542022705078125,
      "error": null
    },
    "assert minimum(-2, -6) == -6": {
      "result": true,
      "time": 0.05229830741882324,
      "error": null
    },
    "assert minimum(-9, -8) == -9": {
      "result": true,
      "time": 0.06327676773071289,
      "error": null
    },
    "assert minimum(-7, 1) == -7": {
      "result": true,
      "time": 0.05301952362060547,
      "error": null
    },
    "assert minimum(-2, 1) == -2": {
      "result": true,
      "time": 0.05402421951293945,
      "error": null
    },
    "assert minimum(-1, -2) == -2": {
      "result": true,
      "time": 0.05960655212402344,
      "error": null
    },
    "assert minimum(0, -3) == -3": {
      "result": true,
      "time": 0.06536197662353516,
      "error": null
    },
    "assert minimum(-8, 1) == -8": {
      "result": true,
      "time": 0.057808637619018555,
      "error": null
    },
    "assert minimum(-4, 1) == -4": {
      "result": true,
      "time": 0.06703019142150879,
      "error": null
    },
    "assert minimum(-1, -5) == -5": {
      "result": true,
      "time": 0.05301237106323242,
      "error": null
    },
    "assert minimum(-9, 1) == -9": {
      "result": true,
      "time": 0.05029916763305664,
      "error": null
    },
    "assert minimum(-7, -6) == -7": {
      "result": true,
      "time": 0.051149606704711914,
      "error": null
    },
    "assert minimum(-2, -7) == -7": {
      "result": true,
      "time": 0.05393409729003906,
      "error": null
    },
    "assert minimum(-10, 0) == -10": {
      "result": true,
      "time": 0.05845522880554199,
      "error": null
    },
    "assert minimum(-7, -1) == -7": {
      "result": true,
      "time": 0.04381847381591797,
      "error": null
    },
    "assert minimum(-4, -6) == -6": {
      "result": true,
      "time": 0.04092717170715332,
      "error": null
    },
    "assert minimum(0, -6) == -6": {
      "result": true,
      "time": 0.060666799545288086,
      "error": null
    },
    "assert minimum(-6, -9) == -9": {
      "result": true,
      "time": 0.041179656982421875,
      "error": null
    },
    "assert minimum(-9, -1) == -9": {
      "result": true,
      "time": 0.049401283264160156,
      "error": null
    },
    "assert minimum(-8, -4) == -8": {
      "result": true,
      "time": 0.04634594917297363,
      "error": null
    },
    "assert minimum(-2, 0) == -2": {
      "result": true,
      "time": 0.06618690490722656,
      "error": null
    },
    "assert minimum(-3, -5) == -5": {
      "result": true,
      "time": 0.03992152214050293,
      "error": null
    },
    "assert minimum(2, 3) == 2": {
      "result": true,
      "time": 0.04932427406311035,
      "error": null
    },
    "assert minimum(4, 4) == 4": {
      "result": true,
      "time": 0.05388212203979492,
      "error": null
    },
    "assert minimum(4, 5) == 4": {
      "result": true,
      "time": 0.0487210750579834,
      "error": null
    },
    "assert minimum(1, 3) == 1": {
      "result": true,
      "time": 0.05750155448913574,
      "error": null
    },
    "assert minimum(2, 5) == 2": {
      "result": true,
      "time": 0.04189705848693848,
      "error": null
    },
    "assert minimum(2, 1) == 1": {
      "result": true,
      "time": 0.05493807792663574,
      "error": null
    },
    "assert minimum(2, 2) == 2": {
      "result": true,
      "time": 0.050945281982421875,
      "error": null
    },
    "assert minimum(1, 5) == 1": {
      "result": true,
      "time": 0.05036759376525879,
      "error": null
    },
    "assert minimum(5, 5) == 5": {
      "result": true,
      "time": 0.05855989456176758,
      "error": null
    },
    "assert minimum(3, 3) == 3": {
      "result": true,
      "time": 0.04523491859436035,
      "error": null
    },
    "assert minimum(5, 4) == 4": {
      "result": true,
      "time": 0.0359954833984375,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}