{
  "code": "def positive_count(numbers):\n    total_numbers = len(numbers)\n    positive_numbers = 0\n    for num in numbers:\n        if num > 0:\n            positive_numbers += 1\n    if total_numbers == 0:\n        return 0.0\n    ratio = positive_numbers / total_numbers\n    rounded_ratio = round(ratio, 2)\n    return rounded_ratio",
  "results": {
    "assert positive_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8])==0.54": {
      "result": true,
      "time": 0.03840470314025879,
      "error": null
    },
    "assert positive_count([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8])==0.69": {
      "result": true,
      "time": 0.037972450256347656,
      "error": null
    },
    "assert positive_count([2, 4, -6, -9, 11, -12, 14, -5, 17])==0.56": {
      "result": true,
      "time": 0.03858304023742676,
      "error": null
    },
    "assert positive_count([3, 4, 3, -3, -7, 6, 2, 2, 2, 8, 1, 3, 4]) == 0.85": {
      "result": true,
      "time": 0.03823423385620117,
      "error": null
    },
    "assert positive_count([4, 4, 3, -3, 0, 9, 3, 0, -6, 7, 3, 11, 12]) == 0.69": {
      "result": true,
      "time": 0.029804229736328125,
      "error": null
    },
    "assert positive_count([5, 6, 6, -1, -3, 1, 5, -5, -6, 4, 9, 4, 10]) == 0.69": {
      "result": true,
      "time": 0.038025617599487305,
      "error": null
    },
    "assert positive_count([2, 1, 5, -1, 0, 4, 2, -2, -3, 6, 5, 10, 13]) == 0.69": {
      "result": true,
      "time": 0.034117937088012695,
      "error": null
    },
    "assert positive_count([5, 5, 5, 3, -8, 11, 2, -7, -3, 3, 6, 6, 11]) == 0.77": {
      "result": true,
      "time": 0.04033637046813965,
      "error": null
    },
    "assert positive_count([4, 6, 6, 0, -7, 11, 4, -2, -4, 1, 2, 6, 11]) == 0.69": {
      "result": true,
      "time": 0.037976980209350586,
      "error": null
    },
    "assert positive_count([2, 6, 5, -3, -3, 1, 3, 2, -3, 3, 1, 8, 7]) == 0.77": {
      "result": true,
      "time": 0.03743171691894531,
      "error": null
    },
    "assert positive_count([1, 3, 2, -2, 0, 10, 1, 0, 1, 1, 8, 5, 13]) == 0.77": {
      "result": true,
      "time": 0.03271961212158203,
      "error": null
    },
    "assert positive_count([4, 4, 4, -5, -7, 5, 1, -5, 3, 6, 3, 10, 12]) == 0.77": {
      "result": true,
      "time": 0.03246426582336426,
      "error": null
    },
    "assert positive_count([4, 1, 7, -4, -3, 8, 1, -7, 3, 6, 5, 3, 3]) == 0.77": {
      "result": true,
      "time": 0.03151130676269531,
      "error": null
    },
    "assert positive_count([3, 1, 3, 3, 0, 1, 4, -4, -7, 2, 4, 2, 9]) == 0.77": {
      "result": true,
      "time": 0.037878990173339844,
      "error": null
    },
    "assert positive_count([2, 3, 2, -6, -5, 11, 4, -1, -6, 1, 1, 11, 13]) == 0.69": {
      "result": true,
      "time": 0.031970977783203125,
      "error": null
    },
    "assert positive_count([1, 4, 3, 2, -4, 9, 2, 1, -7, 5, 8, 8, 13]) == 0.85": {
      "result": true,
      "time": 0.03831839561462402,
      "error": null
    },
    "assert positive_count([2, 5, 2, -2, -8, 2, 4, -6, 2, 3, 8, 8, 13]) == 0.77": {
      "result": true,
      "time": 0.04077625274658203,
      "error": null
    },
    "assert positive_count([3, 1, 7, -5, -6, 10, 5, 1, -2, 6, 4, 6, 7]) == 0.77": {
      "result": true,
      "time": 0.03638029098510742,
      "error": null
    },
    "assert positive_count([5, 2, 2, 3, -3, 3, 4, -6, -3, 7, 5, 2, 13]) == 0.77": {
      "result": true,
      "time": 0.03644919395446777,
      "error": null
    },
    "assert positive_count([2, 3, 2, -4, -5, 5, 1, -7, -4, 7, 5, 3, 6]) == 0.69": {
      "result": true,
      "time": 0.04235720634460449,
      "error": null
    },
    "assert positive_count([3, 3, 2, -4, -1, 11, 5, -7, -5, 4, 1, 2, 6]) == 0.69": {
      "result": true,
      "time": 0.032716989517211914,
      "error": null
    },
    "assert positive_count([5, 4, 7, -6, -10, 9, 5, -8, -5, 3, 4, 10, 6]) == 0.69": {
      "result": true,
      "time": 0.03392219543457031,
      "error": null
    },
    "assert positive_count([2, 5, 3, 1, -7, 9, 2, 1, -3, 5, 6, 6, 11]) == 0.85": {
      "result": true,
      "time": 0.04363560676574707,
      "error": null
    },
    "assert positive_count([2, 1, 5, -2, -3, 4, 3, -2, 1, 2, 1, 3, 3]) == 0.77": {
      "result": true,
      "time": 0.039342403411865234,
      "error": null
    },
    "assert positive_count([5, 5, 4, -4, 0, 7, 1, 2, 0, 4, 3, 9, 9]) == 0.77": {
      "result": true,
      "time": 0.039157867431640625,
      "error": null
    },
    "assert positive_count([3, 2, 6, -5, -2, 4, 2, -6, 0, 7, 1, 1, 11]) == 0.69": {
      "result": true,
      "time": 0.03674745559692383,
      "error": null
    },
    "assert positive_count([2, 2, 2, -5, -6, 7, 3, 1, 2, 3, 3, 5, 11]) == 0.85": {
      "result": true,
      "time": 0.0383760929107666,
      "error": null
    },
    "assert positive_count([4, 2, 7, 1, -9, 5, 4, -5, -5, 3, 8, 10, 10]) == 0.77": {
      "result": true,
      "time": 0.039320945739746094,
      "error": null
    },
    "assert positive_count([1, 5, 2, 4, -3, 2, 4, 0, 1, 1, 6, 9, 7]) == 0.85": {
      "result": true,
      "time": 0.0384364128112793,
      "error": null
    },
    "assert positive_count([5, 2, 7, 2, -2, 5, 3, -6, -3, 2, 4, 9, 9]) == 0.77": {
      "result": true,
      "time": 0.03914380073547363,
      "error": null
    },
    "assert positive_count([3, 5, 5, -1, 0, 8, 4, 1, -1, 2, 3, 9, 9]) == 0.77": {
      "result": true,
      "time": 0.04299449920654297,
      "error": null
    },
    "assert positive_count([3, 2, 7, -3, -8, 8, 2, -5, -1, 5, 3, 4, 12]) == 0.69": {
      "result": true,
      "time": 0.028851032257080078,
      "error": null
    },
    "assert positive_count([1, 4, 6, -6, -9, 2, 5, -7, 1, 7, 7, 6, 5]) == 0.77": {
      "result": true,
      "time": 0.03475236892700195,
      "error": null
    },
    "assert positive_count([4, 3, 5, -6, -2, 3, 5, 2, 2, 6, 8, 1, 9]) == 0.85": {
      "result": true,
      "time": 0.04541659355163574,
      "error": null
    },
    "assert positive_count([5, 3, 7, -3, -5, 1, 5, 0, 1, 3, 4, 2, 10]) == 0.77": {
      "result": true,
      "time": 0.03388643264770508,
      "error": null
    },
    "assert positive_count([2, 5, 1, 3, -10, 4, 2, -1, -5, 2, 5, 10, 9]) == 0.77": {
      "result": true,
      "time": 0.03790473937988281,
      "error": null
    },
    "assert positive_count([3, 1, 2, -2, -9, 5, 1, -4, -7, 8, 1, 7, 9]) == 0.69": {
      "result": true,
      "time": 0.04075193405151367,
      "error": null
    },
    "assert positive_count([2, 6, 5, -1, -5, 5, 2, -1, 0, 5, 6, 5, 9]) == 0.69": {
      "result": true,
      "time": 0.04039955139160156,
      "error": null
    },
    "assert positive_count([6, 2, 3, -1, -4, 1, 7, -7, 0, 2, 2, 2, 13]) == 0.69": {
      "result": true,
      "time": 0.035668373107910156,
      "error": null
    },
    "assert positive_count([2, 4, 2, -5, -10, 10, 4, -2, 3, 4, 3, 11, 7]) == 0.77": {
      "result": true,
      "time": 0.033296823501586914,
      "error": null
    },
    "assert positive_count([7, 1, 5, -2, -9, 2, 9, 2, 0, 8, 6, 10, 10]) == 0.77": {
      "result": true,
      "time": 0.03805375099182129,
      "error": null
    },
    "assert positive_count([4, 6, 3, 3, -3, 6, 7, -7, -4, 2, 6, 9, 10]) == 0.77": {
      "result": true,
      "time": 0.03821110725402832,
      "error": null
    },
    "assert positive_count([6, 1, 2, 1, -8, 6, 2, -8, 0, 6, 1, 4, 11]) == 0.77": {
      "result": true,
      "time": 0.03801774978637695,
      "error": null
    },
    "assert positive_count([7, 3, 4, 1, -3, 1, 4, -3, 3, 7, 2, 2, 7]) == 0.85": {
      "result": true,
      "time": 0.03839993476867676,
      "error": null
    },
    "assert positive_count([5, 1, 4, 2, -2, 6, 5, 2, 0, 7, 7, 5, 10]) == 0.85": {
      "result": true,
      "time": 0.04447436332702637,
      "error": null
    },
    "assert positive_count([6, 1, 4, 4, -3, 3, 9, -2, 1, 6, 2, 5, 12]) == 0.85": {
      "result": true,
      "time": 0.037847042083740234,
      "error": null
    },
    "assert positive_count([7, 4, 2, 1, -9, 11, 9, -7, -1, 3, 9, 5, 13]) == 0.77": {
      "result": true,
      "time": 0.03333139419555664,
      "error": null
    },
    "assert positive_count([3, 4, 3, -3, -4, 1, 7, -7, -2, 8, 4, 2, 11]) == 0.69": {
      "result": true,
      "time": 0.039298295974731445,
      "error": null
    },
    "assert positive_count([1, 2, 5, 4, -5, 8, 8, -8, -3, 2, 8, 5, 12]) == 0.77": {
      "result": true,
      "time": 0.03562617301940918,
      "error": null
    },
    "assert positive_count([7, 3, 3, 0, -8, 8, 8, -7, 1, 5, 1, 2, 11]) == 0.77": {
      "result": true,
      "time": 0.03644680976867676,
      "error": null
    },
    "assert positive_count([5, 3, 2, -1, -8, 4, 5, -8, -5, 5, 4, 11, 4]) == 0.69": {
      "result": true,
      "time": 0.0390012264251709,
      "error": null
    },
    "assert positive_count([5, 4, 5, -3, -8, 4, 6, -3, 2, 1, 7, 1, 6]) == 0.77": {
      "result": true,
      "time": 0.03671884536743164,
      "error": null
    },
    "assert positive_count([7, 2, 6, -2, -3, 3, 3, -1, 3, 1, 2, 5, 6]) == 0.77": {
      "result": true,
      "time": 0.037134647369384766,
      "error": null
    },
    "assert positive_count([7, 2, 6, 3, -3, 11, 9, -4, -6, 6, 3, 10, 5]) == 0.77": {
      "result": true,
      "time": 0.035622596740722656,
      "error": null
    },
    "assert positive_count([7, 6, 7, 0, -2, 6, 2, -5, -4, 6, 7, 6, 4]) == 0.69": {
      "result": true,
      "time": 0.03318285942077637,
      "error": null
    },
    "assert positive_count([6, 5, 6, 0, -1, 4, 4, -3, -6, 6, 2, 10, 13]) == 0.69": {
      "result": true,
      "time": 0.03282427787780762,
      "error": null
    },
    "assert positive_count([5, 2, 7, -2, -7, 8, 6, -2, -2, 5, 6, 3, 5]) == 0.69": {
      "result": true,
      "time": 0.03394675254821777,
      "error": null
    },
    "assert positive_count([6, 2, 6, 2, 0, 11, 4, -2, -2, 1, 6, 6, 12]) == 0.77": {
      "result": true,
      "time": 0.03450202941894531,
      "error": null
    },
    "assert positive_count([7, 2, 6, -5, -2, 6, 2, -7, -2, 5, 2, 5, 11]) == 0.69": {
      "result": true,
      "time": 0.03490138053894043,
      "error": null
    },
    "assert positive_count([6, 5, 1, 1, 0, 1, 1, 2, 0, 4, 4, 11, 6]) == 0.85": {
      "result": true,
      "time": 0.035410404205322266,
      "error": null
    },
    "assert positive_count([4, 5, 2, -5, 0, 3, 2, -2, -7, 7, 4, 11, 3]) == 0.69": {
      "result": true,
      "time": 0.03500175476074219,
      "error": null
    },
    "assert positive_count([4, 6, 5, -3, -6, 10, 9, -5, -7, 6, 3, 2, 11]) == 0.69": {
      "result": true,
      "time": 0.033808231353759766,
      "error": null
    },
    "assert positive_count([7, 2, 6, -4, -10, 7, 5, -1, -4, 2, 7, 10, 7]) == 0.69": {
      "result": true,
      "time": 0.03998899459838867,
      "error": null
    },
    "assert positive_count([4, 3, 6, 1, -6, 7, 8, -4, -7, 1, 3, 6, 12]) == 0.77": {
      "result": true,
      "time": 0.033635616302490234,
      "error": null
    },
    "assert positive_count([7, 4, 5, -1, -1, 5, 2, -5, -4, 3, 6, 10, 4]) == 0.69": {
      "result": true,
      "time": 0.041353702545166016,
      "error": null
    },
    "assert positive_count([1, 6, 6, -4, 0, 1, 8, -5, -4, 8, 8, 4, 10]) == 0.69": {
      "result": true,
      "time": 0.03811335563659668,
      "error": null
    },
    "assert positive_count([4, 2, 3, -4, -4, 5, 8, -5, -4, 1, 3, 3, 5]) == 0.69": {
      "result": true,
      "time": 0.03736519813537598,
      "error": null
    },
    "assert positive_count([4, 1, 7, -6, -2, 9, 9, -7, -5, 4, 5, 2, 10]) == 0.69": {
      "result": true,
      "time": 0.03728461265563965,
      "error": null
    },
    "assert positive_count([4, 3, 7, 4, -6, 7, 1, 2, -4, 3, 7, 2, 10]) == 0.85": {
      "result": true,
      "time": 0.03946566581726074,
      "error": null
    },
    "assert positive_count([7, 2, -3, -5, 9, -10, 10, -8, 22]) == 0.56": {
      "result": true,
      "time": 0.03741645812988281,
      "error": null
    },
    "assert positive_count([2, 5, -4, -11, 8, -13, 18, -10, 14]) == 0.56": {
      "result": true,
      "time": 0.03448343276977539,
      "error": null
    },
    "assert positive_count([7, 8, -10, -14, 15, -9, 18, 0, 17]) == 0.56": {
      "result": true,
      "time": 0.0341031551361084,
      "error": null
    },
    "assert positive_count([4, 4, -4, -9, 11, -15, 18, -7, 14]) == 0.56": {
      "result": true,
      "time": 0.02747344970703125,
      "error": null
    },
    "assert positive_count([6, 6, -2, -5, 14, -17, 18, -1, 21]) == 0.56": {
      "result": true,
      "time": 0.03916311264038086,
      "error": null
    },
    "assert positive_count([3, 9, -10, -7, 8, -7, 14, -9, 15]) == 0.56": {
      "result": true,
      "time": 0.031934261322021484,
      "error": null
    },
    "assert positive_count([2, 9, -2, -10, 7, -9, 13, -3, 12]) == 0.56": {
      "result": true,
      "time": 0.033075571060180664,
      "error": null
    },
    "assert positive_count([1, 3, -8, -12, 7, -7, 19, -9, 22]) == 0.56": {
      "result": true,
      "time": 0.03935742378234863,
      "error": null
    },
    "assert positive_count([2, 9, -2, -11, 11, -14, 9, -2, 13]) == 0.56": {
      "result": true,
      "time": 0.035562753677368164,
      "error": null
    },
    "assert positive_count([3, 1, -5, -13, 11, -16, 18, -6, 15]) == 0.56": {
      "result": true,
      "time": 0.03570246696472168,
      "error": null
    },
    "assert positive_count([7, 7, -4, -14, 12, -14, 18, -4, 17]) == 0.56": {
      "result": true,
      "time": 0.03799319267272949,
      "error": null
    },
    "assert positive_count([1, 1, -7, -4, 14, -13, 10, -6, 17]) == 0.56": {
      "result": true,
      "time": 0.03772783279418945,
      "error": null
    },
    "assert positive_count([7, 3, -2, -4, 10, -14, 13, -3, 12]) == 0.56": {
      "result": true,
      "time": 0.03412580490112305,
      "error": null
    },
    "assert positive_count([2, 6, -8, -14, 8, -13, 14, -4, 16]) == 0.56": {
      "result": true,
      "time": 0.035561561584472656,
      "error": null
    },
    "assert positive_count([6, 6, -6, -9, 10, -11, 12, -3, 19]) == 0.56": {
      "result": true,
      "time": 0.03541254997253418,
      "error": null
    },
    "assert positive_count([2, 2, -7, -13, 8, -14, 10, -8, 15]) == 0.56": {
      "result": true,
      "time": 0.03639817237854004,
      "error": null
    },
    "assert positive_count([6, 7, -1, -8, 6, -10, 16, -2, 18]) == 0.56": {
      "result": true,
      "time": 0.03461289405822754,
      "error": null
    },
    "assert positive_count([1, 7, -4, -8, 12, -9, 13, -10, 16]) == 0.56": {
      "result": true,
      "time": 0.0345911979675293,
      "error": null
    },
    "assert positive_count([1, 4, -7, -12, 10, -17, 10, -7, 15]) == 0.56": {
      "result": true,
      "time": 0.03313016891479492,
      "error": null
    },
    "assert positive_count([4, 2, -4, -8, 14, -13, 11, -9, 15]) == 0.56": {
      "result": true,
      "time": 0.037294864654541016,
      "error": null
    },
    "assert positive_count([7, 6, -4, -13, 6, -13, 9, -9, 18]) == 0.56": {
      "result": true,
      "time": 0.03356289863586426,
      "error": null
    },
    "assert positive_count([5, 3, -6, -10, 9, -17, 9, -8, 20]) == 0.56": {
      "result": true,
      "time": 0.03526759147644043,
      "error": null
    },
    "assert positive_count([2, 6, -11, -13, 11, -13, 17, -1, 17]) == 0.56": {
      "result": true,
      "time": 0.03524661064147949,
      "error": null
    },
    "assert positive_count([3, 9, -10, -9, 10, -10, 13, -8, 14]) == 0.56": {
      "result": true,
      "time": 0.03717231750488281,
      "error": null
    },
    "assert positive_count([6, 7, -8, -14, 8, -11, 13, -9, 18]) == 0.56": {
      "result": true,
      "time": 0.038988351821899414,
      "error": null
    },
    "assert positive_count([7, 7, -5, -8, 12, -14, 18, -1, 22]) == 0.56": {
      "result": true,
      "time": 0.034685373306274414,
      "error": null
    },
    "assert positive_count([7, 7, -2, -14, 16, -7, 13, -7, 13]) == 0.56": {
      "result": true,
      "time": 0.037111759185791016,
      "error": null
    },
    "assert positive_count([2, 1, -1, -9, 8, -17, 17, -4, 20]) == 0.56": {
      "result": true,
      "time": 0.03753995895385742,
      "error": null
    },
    "assert positive_count([6, 9, -11, -9, 9, -16, 19, -1, 17]) == 0.56": {
      "result": true,
      "time": 0.035306692123413086,
      "error": null
    },
    "assert positive_count([3, 3, -1, -7, 13, -14, 17, -6, 18]) == 0.56": {
      "result": true,
      "time": 0.032083749771118164,
      "error": null
    },
    "assert positive_count([6, 4, -9, -12, 13, -8, 15, -5, 16]) == 0.56": {
      "result": true,
      "time": 0.03087925910949707,
      "error": null
    },
    "assert positive_count([6, 4, -7, -7, 15, -8, 15, -2, 18]) == 0.56": {
      "result": true,
      "time": 0.03932929039001465,
      "error": null
    },
    "assert positive_count([5, 9, -4, -5, 13, -10, 16, -4, 15]) == 0.56": {
      "result": true,
      "time": 0.033792734146118164,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}