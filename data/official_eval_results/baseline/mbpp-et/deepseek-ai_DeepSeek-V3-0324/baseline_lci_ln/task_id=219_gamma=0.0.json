{
  "code": "def extract_min_max(tup, k):\n    # Convert the tuple to a list for easier manipulation\n    lst = list(tup)\n    \n    # Sort the list in ascending order\n    lst_sorted = sorted(lst)\n    \n    # Extract the first k elements (smallest k elements)\n    min_elements = lst_sorted[:k]\n    \n    # Extract the last k elements (largest k elements)\n    max_elements = lst_sorted[-k:]\n    \n    # Combine the min and max elements\n    combined = min_elements + max_elements\n    \n    # Sort the combined list to maintain order\n    combined_sorted = sorted(combined)\n    \n    # Convert the sorted list back to a tuple\n    result = tuple(combined_sorted)\n    \n    return result",
  "results": {
    "assert extract_min_max((5, 20, 3, 7, 6, 8), 2) == (3, 5, 8, 20)": {
      "result": true,
      "time": 0.04094266891479492,
      "error": null
    },
    "assert extract_min_max((4, 5, 6, 1, 2, 7), 3) == (1, 2, 4, 5, 6, 7)": {
      "result": true,
      "time": 0.04147148132324219,
      "error": null
    },
    "assert extract_min_max((2, 3, 4, 8, 9, 11, 7), 4) == (2, 3, 4, 7, 8, 9, 11)": {
      "result": false,
      "time": 0.03995156288146973,
      "error": null
    },
    "assert extract_min_max((3, 23, 6, 8, 11, 3), 6) == (3, 3, 6, 8, 11, 23)": {
      "result": false,
      "time": 0.04076552391052246,
      "error": null
    },
    "assert extract_min_max((7, 24, 4, 7, 11, 3), 6) == (3, 4, 7, 7, 11, 24)": {
      "result": false,
      "time": 0.0485076904296875,
      "error": null
    },
    "assert extract_min_max((2, 25, 2, 2, 5, 8), 4) == (2, 2, 2, 5, 8, 25)": {
      "result": false,
      "time": 0.04179668426513672,
      "error": null
    },
    "assert extract_min_max((9, 25, 6, 3, 9, 8), 3) == (3, 6, 8, 9, 9, 25)": {
      "result": true,
      "time": 0.04300522804260254,
      "error": null
    },
    "assert extract_min_max((8, 22, 7, 12, 2, 13), 4) == (2, 7, 8, 12, 13, 22)": {
      "result": false,
      "time": 0.04768204689025879,
      "error": null
    },
    "assert extract_min_max((5, 24, 5, 9, 7, 7), 7) == (5, 5, 7, 7, 9, 24)": {
      "result": false,
      "time": 0.04744148254394531,
      "error": null
    },
    "assert extract_min_max((6, 18, 4, 5, 11, 11), 3) == (4, 5, 6, 11, 11, 18)": {
      "result": true,
      "time": 0.04098391532897949,
      "error": null
    },
    "assert extract_min_max((3, 18, 3, 3, 2, 7), 5) == (2, 3, 3, 3, 7, 18)": {
      "result": false,
      "time": 0.03851151466369629,
      "error": null
    },
    "assert extract_min_max((3, 22, 1, 12, 5, 12), 1) == (1, 22)": {
      "result": true,
      "time": 0.043228864669799805,
      "error": null
    },
    "assert extract_min_max((6, 19, 2, 10, 11, 11), 7) == (2, 6, 10, 11, 11, 19)": {
      "result": false,
      "time": 0.04481148719787598,
      "error": null
    },
    "assert extract_min_max((1, 24, 6, 11, 2, 13), 3) == (1, 2, 6, 11, 13, 24)": {
      "result": true,
      "time": 0.05358576774597168,
      "error": null
    },
    "assert extract_min_max((7, 18, 3, 4, 8, 4), 3) == (3, 4, 4, 7, 8, 18)": {
      "result": true,
      "time": 0.03997039794921875,
      "error": null
    },
    "assert extract_min_max((5, 15, 8, 7, 3, 9), 1) == (3, 15)": {
      "result": true,
      "time": 0.048055410385131836,
      "error": null
    },
    "assert extract_min_max((5, 24, 5, 4, 5, 7), 4) == (4, 5, 5, 5, 7, 24)": {
      "result": false,
      "time": 0.050475120544433594,
      "error": null
    },
    "assert extract_min_max((10, 20, 4, 8, 10, 4), 7) == (4, 4, 8, 10, 10, 20)": {
      "result": false,
      "time": 0.04369235038757324,
      "error": null
    },
    "assert extract_min_max((9, 16, 8, 6, 6, 8), 1) == (6, 16)": {
      "result": true,
      "time": 0.04233741760253906,
      "error": null
    },
    "assert extract_min_max((5, 25, 6, 6, 7, 11), 3) == (5, 6, 6, 7, 11, 25)": {
      "result": true,
      "time": 0.05054640769958496,
      "error": null
    },
    "assert extract_min_max((6, 23, 7, 2, 8, 3), 1) == (2, 23)": {
      "result": true,
      "time": 0.04747629165649414,
      "error": null
    },
    "assert extract_min_max((4, 19, 3, 8, 6, 12), 7) == (3, 4, 6, 8, 12, 19)": {
      "result": false,
      "time": 0.037212371826171875,
      "error": null
    },
    "assert extract_min_max((5, 23, 2, 2, 11, 8), 1) == (2, 23)": {
      "result": true,
      "time": 0.055845022201538086,
      "error": null
    },
    "assert extract_min_max((7, 25, 5, 4, 10, 12), 6) == (4, 5, 7, 10, 12, 25)": {
      "result": false,
      "time": 0.0436248779296875,
      "error": null
    },
    "assert extract_min_max((8, 16, 8, 2, 3, 12), 4) == (2, 3, 8, 8, 12, 16)": {
      "result": false,
      "time": 0.04953598976135254,
      "error": null
    },
    "assert extract_min_max((4, 15, 8, 11, 2, 4), 2) == (2, 4, 11, 15)": {
      "result": true,
      "time": 0.037787437438964844,
      "error": null
    },
    "assert extract_min_max((5, 19, 8, 10, 1, 9), 6) == (1, 5, 8, 9, 10, 19)": {
      "result": false,
      "time": 0.03675127029418945,
      "error": null
    },
    "assert extract_min_max((9, 24, 7, 3, 5, 10), 1) == (3, 24)": {
      "result": true,
      "time": 0.04960227012634277,
      "error": null
    },
    "assert extract_min_max((1, 20, 6, 10, 11, 11), 6) == (1, 6, 10, 11, 11, 20)": {
      "result": false,
      "time": 0.039887189865112305,
      "error": null
    },
    "assert extract_min_max((2, 25, 3, 8, 4, 9), 7) == (2, 3, 4, 8, 9, 25)": {
      "result": false,
      "time": 0.045289039611816406,
      "error": null
    },
    "assert extract_min_max((3, 17, 3, 11, 4, 3), 2) == (3, 3, 11, 17)": {
      "result": true,
      "time": 0.03864622116088867,
      "error": null
    },
    "assert extract_min_max((9, 24, 3, 6, 2, 10), 6) == (2, 3, 6, 9, 10, 24)": {
      "result": false,
      "time": 0.04289960861206055,
      "error": null
    },
    "assert extract_min_max((4, 15, 6, 6, 5, 7), 6) == (4, 5, 6, 6, 7, 15)": {
      "result": false,
      "time": 0.04572701454162598,
      "error": null
    },
    "assert extract_min_max((10, 20, 5, 5, 3, 6), 6) == (3, 5, 5, 6, 10, 20)": {
      "result": false,
      "time": 0.03521108627319336,
      "error": null
    },
    "assert extract_min_max((6, 20, 7, 10, 6, 13), 6) == (6, 6, 7, 10, 13, 20)": {
      "result": false,
      "time": 0.054464101791381836,
      "error": null
    },
    "assert extract_min_max((6, 25, 2, 8, 2, 9), 5) == (2, 2, 6, 8, 9, 25)": {
      "result": false,
      "time": 0.03767514228820801,
      "error": null
    },
    "assert extract_min_max((9, 3, 3, 5, 7, 10), 3) == (3, 3, 5, 7, 9, 10)": {
      "result": true,
      "time": 0.03476142883300781,
      "error": null
    },
    "assert extract_min_max((2, 4, 2, 6, 3, 3), 1) == (2, 6)": {
      "result": true,
      "time": 0.047891855239868164,
      "error": null
    },
    "assert extract_min_max((4, 1, 4, 6, 3, 11), 6) == (1, 3, 4, 4, 6, 11)": {
      "result": false,
      "time": 0.04079246520996094,
      "error": null
    },
    "assert extract_min_max((6, 9, 11, 6, 6, 10), 2) == (6, 6, 10, 11)": {
      "result": true,
      "time": 0.04297494888305664,
      "error": null
    },
    "assert extract_min_max((4, 1, 2, 2, 3, 4), 6) == (1, 2, 2, 3, 4, 4)": {
      "result": false,
      "time": 0.031250953674316406,
      "error": null
    },
    "assert extract_min_max((7, 2, 10, 4, 2, 2), 1) == (2, 10)": {
      "result": true,
      "time": 0.036316633224487305,
      "error": null
    },
    "assert extract_min_max((6, 2, 4, 1, 5, 3), 6) == (1, 2, 3, 4, 5, 6)": {
      "result": false,
      "time": 0.05066037178039551,
      "error": null
    },
    "assert extract_min_max((2, 8, 5, 1, 1, 3), 4) == (1, 1, 2, 3, 5, 8)": {
      "result": false,
      "time": 0.05559229850769043,
      "error": null
    },
    "assert extract_min_max((2, 6, 6, 6, 4, 7), 8) == (2, 4, 6, 6, 6, 7)": {
      "result": false,
      "time": 0.046424150466918945,
      "error": null
    },
    "assert extract_min_max((5, 8, 1, 5, 3, 6), 6) == (1, 3, 5, 5, 6, 8)": {
      "result": false,
      "time": 0.04252481460571289,
      "error": null
    },
    "assert extract_min_max((9, 6, 11, 3, 1, 9), 1) == (1, 11)": {
      "result": true,
      "time": 0.044790029525756836,
      "error": null
    },
    "assert extract_min_max((2, 10, 4, 6, 3, 5), 3) == (2, 3, 4, 5, 6, 10)": {
      "result": true,
      "time": 0.0370943546295166,
      "error": null
    },
    "assert extract_min_max((4, 9, 5, 1, 1, 8), 4) == (1, 1, 4, 5, 8, 9)": {
      "result": false,
      "time": 0.0418088436126709,
      "error": null
    },
    "assert extract_min_max((9, 2, 9, 2, 4, 9), 1) == (2, 9)": {
      "result": true,
      "time": 0.04007315635681152,
      "error": null
    },
    "assert extract_min_max((9, 4, 6, 3, 4, 11), 5) == (3, 4, 4, 6, 9, 11)": {
      "result": false,
      "time": 0.03776073455810547,
      "error": null
    },
    "assert extract_min_max((3, 7, 10, 3, 3, 3), 2) == (3, 3, 7, 10)": {
      "result": true,
      "time": 0.04408550262451172,
      "error": null
    },
    "assert extract_min_max((2, 6, 8, 4, 7, 11), 3) == (2, 4, 6, 7, 8, 11)": {
      "result": true,
      "time": 0.04761171340942383,
      "error": null
    },
    "assert extract_min_max((2, 7, 6, 3, 5, 6), 4) == (2, 3, 5, 6, 6, 7)": {
      "result": false,
      "time": 0.0440826416015625,
      "error": null
    },
    "assert extract_min_max((2, 7, 7, 5, 6, 3), 1) == (2, 7)": {
      "result": true,
      "time": 0.041429758071899414,
      "error": null
    },
    "assert extract_min_max((7, 3, 11, 4, 2, 10), 1) == (2, 11)": {
      "result": true,
      "time": 0.049649715423583984,
      "error": null
    },
    "assert extract_min_max((7, 4, 8, 1, 3, 4), 2) == (1, 3, 7, 8)": {
      "result": true,
      "time": 0.04699230194091797,
      "error": null
    },
    "assert extract_min_max((2, 4, 9, 1, 5, 6), 8) == (1, 2, 4, 5, 6, 9)": {
      "result": false,
      "time": 0.04219484329223633,
      "error": null
    },
    "assert extract_min_max((3, 5, 6, 3, 4, 2), 5) == (2, 3, 3, 4, 5, 6)": {
      "result": false,
      "time": 0.06030106544494629,
      "error": null
    },
    "assert extract_min_max((3, 4, 7, 2, 6, 9), 7) == (2, 3, 4, 6, 7, 9)": {
      "result": false,
      "time": 0.06084275245666504,
      "error": null
    },
    "assert extract_min_max((1, 5, 8, 6, 1, 11), 5) == (1, 1, 5, 6, 8, 11)": {
      "result": false,
      "time": 0.061311960220336914,
      "error": null
    },
    "assert extract_min_max((2, 2, 9, 6, 5, 9), 5) == (2, 2, 5, 6, 9, 9)": {
      "result": false,
      "time": 0.05675530433654785,
      "error": null
    },
    "assert extract_min_max((7, 4, 2, 5, 4, 6), 8) == (2, 4, 4, 5, 6, 7)": {
      "result": false,
      "time": 0.06955885887145996,
      "error": null
    },
    "assert extract_min_max((8, 2, 4, 3, 7, 6), 4) == (2, 3, 4, 6, 7, 8)": {
      "result": false,
      "time": 0.048891544342041016,
      "error": null
    },
    "assert extract_min_max((1, 2, 2, 3, 2, 3), 1) == (1, 3)": {
      "result": true,
      "time": 0.05622434616088867,
      "error": null
    },
    "assert extract_min_max((9, 3, 1, 5, 6, 7), 5) == (1, 3, 5, 6, 7, 9)": {
      "result": false,
      "time": 0.056183815002441406,
      "error": null
    },
    "assert extract_min_max((4, 1, 10, 2, 4, 8), 7) == (1, 2, 4, 4, 8, 10)": {
      "result": false,
      "time": 0.0507807731628418,
      "error": null
    },
    "assert extract_min_max((6, 9, 10, 6, 6, 9), 2) == (6, 6, 9, 10)": {
      "result": true,
      "time": 0.055391550064086914,
      "error": null
    },
    "assert extract_min_max((3, 3, 7, 1, 1, 4), 7) == (1, 1, 3, 3, 4, 7)": {
      "result": false,
      "time": 0.05736947059631348,
      "error": null
    },
    "assert extract_min_max((3, 3, 6, 6, 7, 15, 3), 3) == (3, 3, 3, 6, 7, 15)": {
      "result": true,
      "time": 0.04770922660827637,
      "error": null
    },
    "assert extract_min_max((4, 7, 3, 9, 9, 13, 6), 1) == (3, 13)": {
      "result": true,
      "time": 0.05152535438537598,
      "error": null
    },
    "assert extract_min_max((2, 3, 3, 5, 11, 9, 5), 4) == (2, 3, 3, 5, 5, 9, 11)": {
      "result": false,
      "time": 0.053232669830322266,
      "error": null
    },
    "assert extract_min_max((5, 6, 3, 10, 7, 16, 5), 4) == (3, 5, 5, 6, 7, 10, 16)": {
      "result": false,
      "time": 0.04868602752685547,
      "error": null
    },
    "assert extract_min_max((1, 7, 1, 6, 11, 15, 10), 5) == (1, 1, 6, 7, 10, 11, 15)": {
      "result": false,
      "time": 0.05128288269042969,
      "error": null
    },
    "assert extract_min_max((3, 3, 1, 5, 11, 12, 8), 2) == (1, 3, 11, 12)": {
      "result": true,
      "time": 0.04293513298034668,
      "error": null
    },
    "assert extract_min_max((6, 2, 4, 7, 5, 8, 5), 1) == (2, 8)": {
      "result": true,
      "time": 0.05485033988952637,
      "error": null
    },
    "assert extract_min_max((3, 7, 9, 5, 12, 14, 11), 7) == (3, 5, 7, 9, 11, 12, 14)": {
      "result": false,
      "time": 0.05927681922912598,
      "error": null
    },
    "assert extract_min_max((7, 5, 9, 7, 12, 6, 2), 9) == (2, 5, 6, 7, 7, 9, 12)": {
      "result": false,
      "time": 0.04775094985961914,
      "error": null
    },
    "assert extract_min_max((6, 4, 6, 3, 6, 16, 12), 5) == (3, 4, 6, 6, 6, 12, 16)": {
      "result": false,
      "time": 0.05405116081237793,
      "error": null
    },
    "assert extract_min_max((2, 3, 8, 4, 4, 16, 5), 7) == (2, 3, 4, 4, 5, 8, 16)": {
      "result": false,
      "time": 0.04436779022216797,
      "error": null
    },
    "assert extract_min_max((2, 3, 5, 13, 5, 13, 7), 8) == (2, 3, 5, 5, 7, 13, 13)": {
      "result": false,
      "time": 0.05263710021972656,
      "error": null
    },
    "assert extract_min_max((4, 7, 5, 4, 7, 9, 5), 5) == (4, 4, 5, 5, 7, 7, 9)": {
      "result": false,
      "time": 0.05452442169189453,
      "error": null
    },
    "assert extract_min_max((5, 2, 9, 6, 13, 13, 3), 6) == (2, 3, 5, 6, 9, 13, 13)": {
      "result": false,
      "time": 0.0680844783782959,
      "error": null
    },
    "assert extract_min_max((7, 8, 2, 10, 5, 9, 12), 3) == (2, 5, 7, 9, 10, 12)": {
      "result": true,
      "time": 0.0470888614654541,
      "error": null
    },
    "assert extract_min_max((7, 1, 4, 13, 7, 12, 4), 5) == (1, 4, 4, 7, 7, 12, 13)": {
      "result": false,
      "time": 0.05414104461669922,
      "error": null
    },
    "assert extract_min_max((3, 2, 7, 6, 13, 9, 5), 7) == (2, 3, 5, 6, 7, 9, 13)": {
      "result": false,
      "time": 0.07186698913574219,
      "error": null
    },
    "assert extract_min_max((2, 4, 7, 12, 14, 9, 8), 5) == (2, 4, 7, 8, 9, 12, 14)": {
      "result": false,
      "time": 0.06124401092529297,
      "error": null
    },
    "assert extract_min_max((6, 6, 6, 8, 12, 6, 7), 3) == (6, 6, 6, 7, 8, 12)": {
      "result": true,
      "time": 0.06310153007507324,
      "error": null
    },
    "assert extract_min_max((6, 5, 4, 10, 4, 10, 9), 3) == (4, 4, 5, 9, 10, 10)": {
      "result": true,
      "time": 0.04509782791137695,
      "error": null
    },
    "assert extract_min_max((4, 8, 3, 13, 13, 16, 3), 7) == (3, 3, 4, 8, 13, 13, 16)": {
      "result": false,
      "time": 0.05176711082458496,
      "error": null
    },
    "assert extract_min_max((4, 2, 7, 8, 7, 11, 6), 6) == (2, 4, 6, 7, 7, 8, 11)": {
      "result": false,
      "time": 0.047861337661743164,
      "error": null
    },
    "assert extract_min_max((7, 2, 5, 12, 9, 16, 5), 6) == (2, 5, 5, 7, 9, 12, 16)": {
      "result": false,
      "time": 0.05998110771179199,
      "error": null
    },
    "assert extract_min_max((7, 1, 1, 8, 10, 6, 12), 2) == (1, 1, 10, 12)": {
      "result": true,
      "time": 0.05155491828918457,
      "error": null
    },
    "assert extract_min_max((4, 4, 2, 7, 5, 8, 4), 7) == (2, 4, 4, 4, 5, 7, 8)": {
      "result": false,
      "time": 0.06595540046691895,
      "error": null
    },
    "assert extract_min_max((7, 1, 6, 3, 5, 8, 2), 2) == (1, 2, 7, 8)": {
      "result": true,
      "time": 0.0416562557220459,
      "error": null
    },
    "assert extract_min_max((5, 8, 4, 10, 9, 16, 5), 5) == (4, 5, 5, 8, 9, 10, 16)": {
      "result": false,
      "time": 0.051834821701049805,
      "error": null
    },
    "assert extract_min_max((5, 6, 4, 8, 8, 6, 10), 3) == (4, 5, 6, 8, 8, 10)": {
      "result": true,
      "time": 0.045389652252197266,
      "error": null
    },
    "assert extract_min_max((2, 3, 7, 8, 9, 16, 2), 5) == (2, 2, 3, 7, 8, 9, 16)": {
      "result": false,
      "time": 0.049449920654296875,
      "error": null
    },
    "assert extract_min_max((3, 2, 6, 13, 11, 7, 2), 6) == (2, 2, 3, 6, 7, 11, 13)": {
      "result": false,
      "time": 0.042649269104003906,
      "error": null
    },
    "assert extract_min_max((5, 8, 4, 10, 4, 16, 9), 9) == (4, 4, 5, 8, 9, 10, 16)": {
      "result": false,
      "time": 0.038632869720458984,
      "error": null
    },
    "assert extract_min_max((7, 4, 1, 9, 13, 12, 3), 8) == (1, 3, 4, 7, 9, 12, 13)": {
      "result": false,
      "time": 0.04272961616516113,
      "error": null
    },
    "assert extract_min_max((1, 3, 3, 6, 12, 6, 4), 3) == (1, 3, 3, 6, 6, 12)": {
      "result": true,
      "time": 0.054390668869018555,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.39215686274509803,
  "general_error": "",
  "has_testcase_error": false
}