{
  "code": "def zero_count(numbers):\n    total_numbers = len(numbers)\n    zero_counter = 0\n    for num in numbers:\n        if num == 0:\n            zero_counter = zero_counter + 1\n    if total_numbers == 0:\n        ratio = 0.0\n    else:\n        ratio = zero_counter / total_numbers\n    rounded_ratio = round(ratio, 2)\n    return rounded_ratio",
  "results": {
    "assert zero_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8])==0.15": {
      "result": true,
      "time": 0.03680086135864258,
      "error": null
    },
    "assert zero_count([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8])==0.00": {
      "result": true,
      "time": 0.034245967864990234,
      "error": null
    },
    "assert zero_count([2, 4, -6, -9, 11, -12, 14, -5, 17])==0.00": {
      "result": true,
      "time": 0.036066293716430664,
      "error": null
    },
    "assert zero_count([1, 4, 2, -3, -5, 7, 5, -6, 1, 8, 3, 8, 9]) == 0.0": {
      "result": true,
      "time": 0.03705763816833496,
      "error": null
    },
    "assert zero_count([5, 5, 5, -1, -6, 11, 1, -1, -2, 5, 8, 4, 7]) == 0.0": {
      "result": true,
      "time": 0.0393831729888916,
      "error": null
    },
    "assert zero_count([4, 6, 7, -1, -9, 1, 1, -8, 3, 6, 8, 5, 4]) == 0.0": {
      "result": true,
      "time": 0.037679195404052734,
      "error": null
    },
    "assert zero_count([1, 1, 4, 2, -1, 10, 1, -2, 2, 6, 3, 1, 3]) == 0.0": {
      "result": true,
      "time": 0.043892621994018555,
      "error": null
    },
    "assert zero_count([4, 3, 5, 3, -4, 8, 3, 2, -2, 5, 5, 3, 9]) == 0.0": {
      "result": true,
      "time": 0.03869199752807617,
      "error": null
    },
    "assert zero_count([3, 2, 6, -3, -5, 1, 3, -1, -3, 5, 3, 8, 6]) == 0.0": {
      "result": true,
      "time": 0.033516645431518555,
      "error": null
    },
    "assert zero_count([4, 5, 1, -6, -2, 5, 5, -8, 1, 7, 4, 6, 4]) == 0.0": {
      "result": true,
      "time": 0.03527355194091797,
      "error": null
    },
    "assert zero_count([2, 1, 7, -6, -10, 9, 2, -5, -4, 4, 4, 11, 4]) == 0.0": {
      "result": true,
      "time": 0.03859257698059082,
      "error": null
    },
    "assert zero_count([4, 5, 2, 2, -1, 7, 2, -7, 3, 3, 8, 6, 4]) == 0.0": {
      "result": true,
      "time": 0.04075980186462402,
      "error": null
    },
    "assert zero_count([2, 6, 1, 1, 0, 5, 5, -3, 3, 4, 4, 4, 12]) == 0.08": {
      "result": true,
      "time": 0.04055023193359375,
      "error": null
    },
    "assert zero_count([4, 5, 5, -3, 0, 4, 3, -8, -5, 2, 5, 9, 9]) == 0.08": {
      "result": true,
      "time": 0.05496859550476074,
      "error": null
    },
    "assert zero_count([1, 2, 6, 0, -5, 7, 3, -3, -6, 3, 8, 4, 5]) == 0.08": {
      "result": true,
      "time": 0.06159162521362305,
      "error": null
    },
    "assert zero_count([4, 5, 5, -6, -1, 10, 1, -4, -2, 7, 1, 3, 5]) == 0.0": {
      "result": true,
      "time": 0.05275607109069824,
      "error": null
    },
    "assert zero_count([5, 2, 4, -5, -10, 2, 5, -1, -7, 1, 5, 10, 6]) == 0.0": {
      "result": true,
      "time": 0.05061030387878418,
      "error": null
    },
    "assert zero_count([5, 3, 4, -3, -5, 2, 4, -1, -6, 5, 3, 7, 4]) == 0.0": {
      "result": true,
      "time": 0.04528069496154785,
      "error": null
    },
    "assert zero_count([3, 4, 6, -6, 0, 8, 1, -8, 3, 8, 8, 9, 11]) == 0.08": {
      "result": true,
      "time": 0.04926133155822754,
      "error": null
    },
    "assert zero_count([2, 4, 4, -2, -6, 3, 1, -6, -1, 2, 4, 6, 13]) == 0.0": {
      "result": true,
      "time": 0.0605165958404541,
      "error": null
    },
    "assert zero_count([4, 2, 2, 4, -8, 1, 5, 2, -5, 6, 9, 1, 11]) == 0.0": {
      "result": true,
      "time": 0.05971097946166992,
      "error": null
    },
    "assert zero_count([1, 5, 3, 0, -10, 6, 3, -8, -3, 5, 5, 7, 10]) == 0.08": {
      "result": true,
      "time": 0.04812455177307129,
      "error": null
    },
    "assert zero_count([2, 3, 6, 3, -8, 4, 4, -3, -3, 7, 4, 9, 9]) == 0.0": {
      "result": true,
      "time": 0.05037951469421387,
      "error": null
    },
    "assert zero_count([4, 1, 3, -2, -9, 3, 3, 2, -1, 4, 3, 8, 11]) == 0.0": {
      "result": true,
      "time": 0.05186104774475098,
      "error": null
    },
    "assert zero_count([3, 3, 2, -3, -10, 8, 3, -8, 0, 7, 1, 2, 8]) == 0.08": {
      "result": true,
      "time": 0.04686379432678223,
      "error": null
    },
    "assert zero_count([2, 2, 3, 1, -3, 2, 1, -8, 3, 6, 6, 6, 10]) == 0.0": {
      "result": true,
      "time": 0.05222821235656738,
      "error": null
    },
    "assert zero_count([3, 4, 7, 2, -6, 6, 1, -8, 0, 1, 3, 5, 6]) == 0.08": {
      "result": true,
      "time": 0.05581974983215332,
      "error": null
    },
    "assert zero_count([1, 5, 1, -5, -8, 11, 1, -5, -5, 5, 1, 5, 11]) == 0.0": {
      "result": true,
      "time": 0.04551053047180176,
      "error": null
    },
    "assert zero_count([4, 1, 4, -6, -9, 4, 4, -3, -7, 3, 5, 7, 3]) == 0.0": {
      "result": true,
      "time": 0.04799604415893555,
      "error": null
    },
    "assert zero_count([5, 4, 4, 4, -10, 3, 1, -5, -3, 2, 1, 4, 11]) == 0.0": {
      "result": true,
      "time": 0.04982113838195801,
      "error": null
    },
    "assert zero_count([5, 1, 5, -4, -1, 8, 2, -7, -7, 7, 2, 5, 6]) == 0.0": {
      "result": true,
      "time": 0.04695844650268555,
      "error": null
    },
    "assert zero_count([1, 6, 7, -4, -4, 10, 3, -2, 1, 7, 8, 3, 10]) == 0.0": {
      "result": true,
      "time": 0.05312228202819824,
      "error": null
    },
    "assert zero_count([3, 5, 1, -2, -6, 10, 4, -5, -2, 8, 5, 10, 7]) == 0.0": {
      "result": true,
      "time": 0.04402351379394531,
      "error": null
    },
    "assert zero_count([3, 6, 6, 4, -4, 11, 1, 1, -5, 1, 9, 11, 4]) == 0.0": {
      "result": true,
      "time": 0.046022891998291016,
      "error": null
    },
    "assert zero_count([3, 5, 6, 4, -6, 4, 5, -7, 1, 3, 1, 4, 3]) == 0.0": {
      "result": true,
      "time": 0.050102949142456055,
      "error": null
    },
    "assert zero_count([4, 5, 7, 4, -3, 9, 2, 1, 3, 7, 2, 1, 9]) == 0.0": {
      "result": true,
      "time": 0.053076744079589844,
      "error": null
    },
    "assert zero_count([2, 4, 6, -5, -1, 11, 2, -8, -1, 1, 8, 8, 10]) == 0.0": {
      "result": true,
      "time": 0.055902957916259766,
      "error": null
    },
    "assert zero_count([7, 2, 4, -5, -1, 1, 3, -3, 1, 1, 9, 2, 11]) == 0.0": {
      "result": true,
      "time": 0.04862499237060547,
      "error": null
    },
    "assert zero_count([5, 1, 5, 2, -6, 10, 6, -1, 1, 8, 2, 1, 3]) == 0.0": {
      "result": true,
      "time": 0.05538654327392578,
      "error": null
    },
    "assert zero_count([6, 6, 7, 4, -6, 2, 2, 2, -5, 1, 6, 3, 13]) == 0.0": {
      "result": true,
      "time": 0.0381617546081543,
      "error": null
    },
    "assert zero_count([1, 5, 5, 4, -1, 9, 9, 1, 2, 6, 1, 9, 10]) == 0.0": {
      "result": true,
      "time": 0.06851482391357422,
      "error": null
    },
    "assert zero_count([4, 5, 7, -5, -10, 10, 1, 0, -3, 1, 2, 4, 12]) == 0.08": {
      "result": true,
      "time": 0.04267287254333496,
      "error": null
    },
    "assert zero_count([6, 2, 6, 1, -3, 7, 3, -8, 2, 2, 2, 4, 11]) == 0.0": {
      "result": true,
      "time": 0.06101489067077637,
      "error": null
    },
    "assert zero_count([5, 6, 3, 0, -6, 1, 9, -4, -4, 4, 5, 3, 3]) == 0.08": {
      "result": true,
      "time": 0.0479426383972168,
      "error": null
    },
    "assert zero_count([4, 2, 7, -3, -1, 7, 8, 1, -7, 5, 4, 8, 4]) == 0.0": {
      "result": true,
      "time": 0.05598711967468262,
      "error": null
    },
    "assert zero_count([6, 1, 5, 3, -3, 11, 4, -5, 2, 1, 1, 3, 12]) == 0.0": {
      "result": true,
      "time": 0.05557608604431152,
      "error": null
    },
    "assert zero_count([1, 3, 5, -2, -2, 8, 8, -7, -4, 3, 3, 3, 3]) == 0.0": {
      "result": true,
      "time": 0.05496025085449219,
      "error": null
    },
    "assert zero_count([2, 4, 6, -3, -6, 4, 1, 1, -6, 1, 1, 3, 11]) == 0.0": {
      "result": true,
      "time": 0.055502891540527344,
      "error": null
    },
    "assert zero_count([1, 5, 6, 1, -7, 5, 7, -5, -2, 2, 7, 4, 5]) == 0.0": {
      "result": true,
      "time": 0.056038856506347656,
      "error": null
    },
    "assert zero_count([6, 6, 3, 0, -1, 11, 2, 1, 0, 4, 3, 1, 12]) == 0.15": {
      "result": true,
      "time": 0.04983878135681152,
      "error": null
    },
    "assert zero_count([7, 4, 6, -1, -10, 3, 7, -1, -1, 3, 5, 2, 13]) == 0.0": {
      "result": true,
      "time": 0.05031156539916992,
      "error": null
    },
    "assert zero_count([6, 4, 5, 0, -8, 1, 8, 0, -1, 2, 7, 2, 4]) == 0.15": {
      "result": true,
      "time": 0.04705309867858887,
      "error": null
    },
    "assert zero_count([7, 2, 4, -4, -4, 4, 1, -6, -3, 3, 5, 6, 3]) == 0.0": {
      "result": true,
      "time": 0.04249930381774902,
      "error": null
    },
    "assert zero_count([3, 5, 7, -2, -8, 3, 4, -1, 1, 1, 9, 9, 13]) == 0.0": {
      "result": true,
      "time": 0.04002118110656738,
      "error": null
    },
    "assert zero_count([4, 4, 4, -5, -9, 11, 6, 0, 2, 1, 4, 6, 6]) == 0.08": {
      "result": true,
      "time": 0.062285423278808594,
      "error": null
    },
    "assert zero_count([5, 3, 6, 0, -6, 10, 8, -4, 0, 6, 4, 6, 12]) == 0.15": {
      "result": true,
      "time": 0.05838632583618164,
      "error": null
    },
    "assert zero_count([7, 1, 3, -4, -2, 6, 8, -4, -1, 1, 8, 6, 13]) == 0.0": {
      "result": true,
      "time": 0.04517984390258789,
      "error": null
    },
    "assert zero_count([3, 3, 4, 1, -3, 6, 6, -6, 1, 8, 6, 8, 7]) == 0.0": {
      "result": true,
      "time": 0.047070980072021484,
      "error": null
    },
    "assert zero_count([2, 4, 7, -4, -7, 6, 1, -1, 1, 5, 4, 2, 4]) == 0.0": {
      "result": true,
      "time": 0.0510706901550293,
      "error": null
    },
    "assert zero_count([6, 2, 5, -3, -6, 10, 4, -2, -1, 8, 5, 1, 7]) == 0.0": {
      "result": true,
      "time": 0.04512643814086914,
      "error": null
    },
    "assert zero_count([7, 5, 2, -2, -2, 1, 6, 2, 2, 3, 9, 2, 4]) == 0.0": {
      "result": true,
      "time": 0.03793001174926758,
      "error": null
    },
    "assert zero_count([3, 5, 4, -4, -7, 5, 8, 0, -3, 8, 5, 6, 9]) == 0.08": {
      "result": true,
      "time": 0.044756412506103516,
      "error": null
    },
    "assert zero_count([2, 1, 4, 3, -6, 2, 1, 0, -6, 8, 2, 7, 6]) == 0.08": {
      "result": true,
      "time": 0.04480695724487305,
      "error": null
    },
    "assert zero_count([5, 3, 6, 3, -2, 11, 3, -4, -5, 5, 9, 8, 3]) == 0.0": {
      "result": true,
      "time": 0.04582858085632324,
      "error": null
    },
    "assert zero_count([7, 6, 4, -5, -2, 4, 8, -1, -2, 2, 9, 4, 10]) == 0.0": {
      "result": true,
      "time": 0.04172706604003906,
      "error": null
    },
    "assert zero_count([1, 6, 4, -3, -9, 11, 2, -7, 1, 6, 7, 9, 9]) == 0.0": {
      "result": true,
      "time": 0.04223752021789551,
      "error": null
    },
    "assert zero_count([6, 6, 3, -3, -10, 1, 2, -6, 2, 3, 2, 1, 4]) == 0.0": {
      "result": true,
      "time": 0.040712833404541016,
      "error": null
    },
    "assert zero_count([7, 1, 3, 3, -5, 8, 1, -7, 0, 7, 3, 10, 8]) == 0.08": {
      "result": true,
      "time": 0.041684627532958984,
      "error": null
    },
    "assert zero_count([5, 5, 1, 4, -5, 3, 9, -4, -7, 2, 1, 7, 10]) == 0.0": {
      "result": true,
      "time": 0.04491758346557617,
      "error": null
    },
    "assert zero_count([2, 9, -6, -14, 10, -9, 9, -6, 12]) == 0.0": {
      "result": true,
      "time": 0.03510689735412598,
      "error": null
    },
    "assert zero_count([1, 1, -10, -10, 6, -12, 10, -4, 21]) == 0.0": {
      "result": true,
      "time": 0.043996334075927734,
      "error": null
    },
    "assert zero_count([7, 3, -11, -7, 14, -12, 10, -8, 22]) == 0.0": {
      "result": true,
      "time": 0.040822505950927734,
      "error": null
    },
    "assert zero_count([4, 8, -7, -13, 11, -8, 19, -5, 15]) == 0.0": {
      "result": true,
      "time": 0.03716874122619629,
      "error": null
    },
    "assert zero_count([7, 5, -11, -4, 8, -11, 18, -3, 18]) == 0.0": {
      "result": true,
      "time": 0.04304933547973633,
      "error": null
    },
    "assert zero_count([6, 1, -1, -4, 6, -13, 13, -8, 14]) == 0.0": {
      "result": true,
      "time": 0.043924808502197266,
      "error": null
    },
    "assert zero_count([2, 6, -4, -8, 8, -10, 17, -2, 18]) == 0.0": {
      "result": true,
      "time": 0.03994631767272949,
      "error": null
    },
    "assert zero_count([2, 7, -8, -14, 13, -11, 16, -9, 18]) == 0.0": {
      "result": true,
      "time": 0.04064130783081055,
      "error": null
    },
    "assert zero_count([2, 9, -7, -7, 8, -17, 18, -6, 15]) == 0.0": {
      "result": true,
      "time": 0.03539681434631348,
      "error": null
    },
    "assert zero_count([5, 5, -8, -14, 10, -10, 10, -5, 12]) == 0.0": {
      "result": true,
      "time": 0.0511469841003418,
      "error": null
    },
    "assert zero_count([4, 1, -7, -8, 13, -12, 9, -5, 13]) == 0.0": {
      "result": true,
      "time": 0.03983783721923828,
      "error": null
    },
    "assert zero_count([1, 4, -10, -5, 7, -8, 11, -7, 13]) == 0.0": {
      "result": true,
      "time": 0.04368948936462402,
      "error": null
    },
    "assert zero_count([1, 4, -11, -7, 9, -9, 14, -4, 21]) == 0.0": {
      "result": true,
      "time": 0.04286384582519531,
      "error": null
    },
    "assert zero_count([6, 5, -9, -12, 16, -17, 12, -3, 12]) == 0.0": {
      "result": true,
      "time": 0.03453826904296875,
      "error": null
    },
    "assert zero_count([6, 5, -8, -4, 8, -9, 19, -8, 13]) == 0.0": {
      "result": true,
      "time": 0.04642462730407715,
      "error": null
    },
    "assert zero_count([2, 8, -5, -13, 9, -17, 10, -3, 20]) == 0.0": {
      "result": true,
      "time": 0.03635811805725098,
      "error": null
    },
    "assert zero_count([1, 9, -6, -9, 9, -8, 17, -8, 21]) == 0.0": {
      "result": true,
      "time": 0.03790450096130371,
      "error": null
    },
    "assert zero_count([4, 1, -8, -11, 10, -12, 17, -6, 17]) == 0.0": {
      "result": true,
      "time": 0.03587007522583008,
      "error": null
    },
    "assert zero_count([2, 6, -7, -14, 10, -11, 9, -4, 16]) == 0.0": {
      "result": true,
      "time": 0.03726959228515625,
      "error": null
    },
    "assert zero_count([4, 7, -6, -13, 14, -8, 17, -8, 17]) == 0.0": {
      "result": true,
      "time": 0.03337860107421875,
      "error": null
    },
    "assert zero_count([3, 4, -5, -7, 15, -17, 16, -3, 22]) == 0.0": {
      "result": true,
      "time": 0.036713361740112305,
      "error": null
    },
    "assert zero_count([2, 3, -8, -10, 7, -13, 19, -5, 18]) == 0.0": {
      "result": true,
      "time": 0.03615975379943848,
      "error": null
    },
    "assert zero_count([6, 3, -5, -14, 16, -10, 13, -7, 13]) == 0.0": {
      "result": true,
      "time": 0.035909414291381836,
      "error": null
    },
    "assert zero_count([6, 8, -10, -11, 9, -17, 14, -8, 12]) == 0.0": {
      "result": true,
      "time": 0.03830409049987793,
      "error": null
    },
    "assert zero_count([7, 5, -6, -4, 8, -9, 15, -2, 13]) == 0.0": {
      "result": true,
      "time": 0.03542900085449219,
      "error": null
    },
    "assert zero_count([1, 4, -6, -14, 10, -13, 14, -10, 20]) == 0.0": {
      "result": true,
      "time": 0.03393077850341797,
      "error": null
    },
    "assert zero_count([6, 1, -1, -13, 12, -10, 16, -4, 19]) == 0.0": {
      "result": true,
      "time": 0.037978410720825195,
      "error": null
    },
    "assert zero_count([6, 2, -1, -4, 10, -12, 13, -9, 22]) == 0.0": {
      "result": true,
      "time": 0.03072977066040039,
      "error": null
    },
    "assert zero_count([6, 9, -5, -11, 14, -7, 17, -9, 12]) == 0.0": {
      "result": true,
      "time": 0.03756523132324219,
      "error": null
    },
    "assert zero_count([1, 7, -6, -11, 10, -15, 18, -6, 22]) == 0.0": {
      "result": true,
      "time": 0.03548264503479004,
      "error": null
    },
    "assert zero_count([3, 9, -6, -8, 15, -9, 11, -7, 12]) == 0.0": {
      "result": true,
      "time": 0.041565656661987305,
      "error": null
    },
    "assert zero_count([2, 9, -4, -7, 11, -14, 16, -6, 22]) == 0.0": {
      "result": true,
      "time": 0.03653454780578613,
      "error": null
    },
    "assert zero_count([3, 9, -8, -10, 13, -16, 10, 0, 22]) == 0.11": {
      "result": true,
      "time": 0.0345304012298584,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}