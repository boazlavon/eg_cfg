{
  "code": "def median_numbers(a, b, c):\n    # Compare a and b\n    if a > b:\n        temp = a\n        a = b\n        b = temp\n    # Now a <= b\n    # Compare b and c\n    if b > c:\n        temp = b\n        b = c\n        c = temp\n    # Now b <= c\n    # Compare a and b again to ensure a <= b\n    if a > b:\n        temp = a\n        a = b\n        b = temp\n    # Now a <= b <= c, so b is the median\n    median = b\n    return float(median)",
  "results": {
    "assert median_numbers(25,55,65)==55.0": {
      "result": true,
      "time": 0.0367279052734375,
      "error": null
    },
    "assert median_numbers(20,10,30)==20.0": {
      "result": true,
      "time": 0.03679394721984863,
      "error": null
    },
    "assert median_numbers(15,45,75)==45.0": {
      "result": true,
      "time": 0.03813886642456055,
      "error": null
    },
    "assert median_numbers(22, 54, 68) == 54": {
      "result": true,
      "time": 0.03465747833251953,
      "error": null
    },
    "assert median_numbers(22, 57, 66) == 57": {
      "result": true,
      "time": 0.038622140884399414,
      "error": null
    },
    "assert median_numbers(22, 54, 61) == 54": {
      "result": true,
      "time": 0.03727865219116211,
      "error": null
    },
    "assert median_numbers(30, 53, 63) == 53": {
      "result": true,
      "time": 0.040128231048583984,
      "error": null
    },
    "assert median_numbers(22, 55, 61) == 55": {
      "result": true,
      "time": 0.04091453552246094,
      "error": null
    },
    "assert median_numbers(25, 60, 61) == 60": {
      "result": true,
      "time": 0.04096555709838867,
      "error": null
    },
    "assert median_numbers(22, 56, 68) == 56": {
      "result": true,
      "time": 0.03655815124511719,
      "error": null
    },
    "assert median_numbers(29, 53, 70) == 53": {
      "result": true,
      "time": 0.04321026802062988,
      "error": null
    },
    "assert median_numbers(23, 53, 66) == 53": {
      "result": true,
      "time": 0.03560471534729004,
      "error": null
    },
    "assert median_numbers(29, 58, 67) == 58": {
      "result": true,
      "time": 0.04246783256530762,
      "error": null
    },
    "assert median_numbers(27, 52, 64) == 52": {
      "result": true,
      "time": 0.03037571907043457,
      "error": null
    },
    "assert median_numbers(29, 60, 61) == 60": {
      "result": true,
      "time": 0.035260677337646484,
      "error": null
    },
    "assert median_numbers(25, 57, 61) == 57": {
      "result": true,
      "time": 0.040842294692993164,
      "error": null
    },
    "assert median_numbers(20, 50, 66) == 50": {
      "result": true,
      "time": 0.03976082801818848,
      "error": null
    },
    "assert median_numbers(21, 51, 65) == 51": {
      "result": true,
      "time": 0.03206324577331543,
      "error": null
    },
    "assert median_numbers(29, 51, 67) == 51": {
      "result": true,
      "time": 0.03862190246582031,
      "error": null
    },
    "assert median_numbers(26, 55, 69) == 55": {
      "result": true,
      "time": 0.03791308403015137,
      "error": null
    },
    "assert median_numbers(24, 53, 64) == 53": {
      "result": true,
      "time": 0.037627220153808594,
      "error": null
    },
    "assert median_numbers(28, 55, 65) == 55": {
      "result": true,
      "time": 0.0310060977935791,
      "error": null
    },
    "assert median_numbers(27, 57, 66) == 57": {
      "result": true,
      "time": 0.04028773307800293,
      "error": null
    },
    "assert median_numbers(20, 58, 70) == 58": {
      "result": true,
      "time": 0.04931282997131348,
      "error": null
    },
    "assert median_numbers(23, 56, 67) == 56": {
      "result": true,
      "time": 0.03835010528564453,
      "error": null
    },
    "assert median_numbers(28, 55, 69) == 55": {
      "result": true,
      "time": 0.04251217842102051,
      "error": null
    },
    "assert median_numbers(23, 58, 70) == 58": {
      "result": true,
      "time": 0.035910844802856445,
      "error": null
    },
    "assert median_numbers(26, 54, 62) == 54": {
      "result": true,
      "time": 0.029079914093017578,
      "error": null
    },
    "assert median_numbers(27, 51, 64) == 51": {
      "result": true,
      "time": 0.03361368179321289,
      "error": null
    },
    "assert median_numbers(28, 50, 65) == 50": {
      "result": true,
      "time": 0.04131889343261719,
      "error": null
    },
    "assert median_numbers(29, 55, 69) == 55": {
      "result": true,
      "time": 0.034682512283325195,
      "error": null
    },
    "assert median_numbers(22, 57, 70) == 57": {
      "result": true,
      "time": 0.03084421157836914,
      "error": null
    },
    "assert median_numbers(27, 52, 69) == 52": {
      "result": true,
      "time": 0.04029369354248047,
      "error": null
    },
    "assert median_numbers(30, 58, 61) == 58": {
      "result": true,
      "time": 0.03733229637145996,
      "error": null
    },
    "assert median_numbers(20, 58, 63) == 58": {
      "result": true,
      "time": 0.041615962982177734,
      "error": null
    },
    "assert median_numbers(27, 51, 69) == 51": {
      "result": true,
      "time": 0.04039502143859863,
      "error": null
    },
    "assert median_numbers(21, 12, 26) == 21": {
      "result": true,
      "time": 0.0334019660949707,
      "error": null
    },
    "assert median_numbers(18, 6, 28) == 18": {
      "result": true,
      "time": 0.04034829139709473,
      "error": null
    },
    "assert median_numbers(19, 7, 27) == 19": {
      "result": true,
      "time": 0.038332223892211914,
      "error": null
    },
    "assert median_numbers(21, 14, 25) == 21": {
      "result": true,
      "time": 0.03457951545715332,
      "error": null
    },
    "assert median_numbers(20, 7, 29) == 20": {
      "result": true,
      "time": 0.04064631462097168,
      "error": null
    },
    "assert median_numbers(15, 7, 31) == 15": {
      "result": true,
      "time": 0.03846096992492676,
      "error": null
    },
    "assert median_numbers(15, 8, 32) == 15": {
      "result": true,
      "time": 0.03445625305175781,
      "error": null
    },
    "assert median_numbers(20, 6, 34) == 20": {
      "result": true,
      "time": 0.0348820686340332,
      "error": null
    },
    "assert median_numbers(20, 7, 28) == 20": {
      "result": true,
      "time": 0.03635287284851074,
      "error": null
    },
    "assert median_numbers(21, 8, 31) == 21": {
      "result": true,
      "time": 0.04206085205078125,
      "error": null
    },
    "assert median_numbers(23, 6, 31) == 23": {
      "result": true,
      "time": 0.03158760070800781,
      "error": null
    },
    "assert median_numbers(20, 10, 34) == 20": {
      "result": true,
      "time": 0.03448152542114258,
      "error": null
    },
    "assert median_numbers(16, 14, 29) == 16": {
      "result": true,
      "time": 0.03766512870788574,
      "error": null
    },
    "assert median_numbers(16, 7, 30) == 16": {
      "result": true,
      "time": 0.03918743133544922,
      "error": null
    },
    "assert median_numbers(23, 9, 32) == 23": {
      "result": true,
      "time": 0.03639507293701172,
      "error": null
    },
    "assert median_numbers(15, 7, 28) == 15": {
      "result": true,
      "time": 0.03339791297912598,
      "error": null
    },
    "assert median_numbers(18, 5, 26) == 18": {
      "result": true,
      "time": 0.036513566970825195,
      "error": null
    },
    "assert median_numbers(22, 8, 26) == 22": {
      "result": true,
      "time": 0.03347659111022949,
      "error": null
    },
    "assert median_numbers(19, 6, 26) == 19": {
      "result": true,
      "time": 0.03998160362243652,
      "error": null
    },
    "assert median_numbers(15, 11, 30) == 15": {
      "result": true,
      "time": 0.0349888801574707,
      "error": null
    },
    "assert median_numbers(18, 5, 31) == 18": {
      "result": true,
      "time": 0.030415773391723633,
      "error": null
    },
    "assert median_numbers(19, 6, 32) == 19": {
      "result": true,
      "time": 0.049565792083740234,
      "error": null
    },
    "assert median_numbers(20, 5, 31) == 20": {
      "result": true,
      "time": 0.03711557388305664,
      "error": null
    },
    "assert median_numbers(21, 13, 26) == 21": {
      "result": true,
      "time": 0.038312435150146484,
      "error": null
    },
    "assert median_numbers(19, 5, 33) == 19": {
      "result": true,
      "time": 0.0328364372253418,
      "error": null
    },
    "assert median_numbers(24, 8, 25) == 24": {
      "result": true,
      "time": 0.032920122146606445,
      "error": null
    },
    "assert median_numbers(21, 15, 34) == 21": {
      "result": true,
      "time": 0.03801536560058594,
      "error": null
    },
    "assert median_numbers(17, 14, 31) == 17": {
      "result": true,
      "time": 0.038282155990600586,
      "error": null
    },
    "assert median_numbers(17, 8, 30) == 17": {
      "result": true,
      "time": 0.036035776138305664,
      "error": null
    },
    "assert median_numbers(21, 13, 34) == 21": {
      "result": true,
      "time": 0.035022735595703125,
      "error": null
    },
    "assert median_numbers(19, 5, 34) == 19": {
      "result": true,
      "time": 0.03392457962036133,
      "error": null
    },
    "assert median_numbers(15, 8, 30) == 15": {
      "result": true,
      "time": 0.03656363487243652,
      "error": null
    },
    "assert median_numbers(21, 12, 31) == 21": {
      "result": true,
      "time": 0.04293060302734375,
      "error": null
    },
    "assert median_numbers(19, 40, 78) == 40": {
      "result": true,
      "time": 0.03435063362121582,
      "error": null
    },
    "assert median_numbers(19, 50, 78) == 50": {
      "result": true,
      "time": 0.04359889030456543,
      "error": null
    },
    "assert median_numbers(11, 44, 73) == 44": {
      "result": true,
      "time": 0.032508134841918945,
      "error": null
    },
    "assert median_numbers(18, 42, 70) == 42": {
      "result": true,
      "time": 0.03345060348510742,
      "error": null
    },
    "assert median_numbers(11, 48, 72) == 48": {
      "result": true,
      "time": 0.03750181198120117,
      "error": null
    },
    "assert median_numbers(10, 48, 79) == 48": {
      "result": true,
      "time": 0.03906702995300293,
      "error": null
    },
    "assert median_numbers(17, 48, 79) == 48": {
      "result": true,
      "time": 0.03602099418640137,
      "error": null
    },
    "assert median_numbers(17, 46, 74) == 46": {
      "result": true,
      "time": 0.04294133186340332,
      "error": null
    },
    "assert median_numbers(20, 49, 78) == 49": {
      "result": true,
      "time": 0.0343632698059082,
      "error": null
    },
    "assert median_numbers(12, 40, 71) == 40": {
      "result": true,
      "time": 0.0321049690246582,
      "error": null
    },
    "assert median_numbers(16, 40, 79) == 40": {
      "result": true,
      "time": 0.03855395317077637,
      "error": null
    },
    "assert median_numbers(17, 40, 80) == 40": {
      "result": true,
      "time": 0.038401126861572266,
      "error": null
    },
    "assert median_numbers(15, 50, 78) == 50": {
      "result": true,
      "time": 0.03587174415588379,
      "error": null
    },
    "assert median_numbers(11, 41, 76) == 41": {
      "result": true,
      "time": 0.03631997108459473,
      "error": null
    },
    "assert median_numbers(20, 47, 73) == 47": {
      "result": true,
      "time": 0.03727841377258301,
      "error": null
    },
    "assert median_numbers(19, 50, 71) == 50": {
      "result": true,
      "time": 0.03890848159790039,
      "error": null
    },
    "assert median_numbers(10, 42, 77) == 42": {
      "result": true,
      "time": 0.037286996841430664,
      "error": null
    },
    "assert median_numbers(20, 44, 70) == 44": {
      "result": true,
      "time": 0.03571152687072754,
      "error": null
    },
    "assert median_numbers(16, 41, 78) == 41": {
      "result": true,
      "time": 0.03609275817871094,
      "error": null
    },
    "assert median_numbers(20, 49, 70) == 49": {
      "result": true,
      "time": 0.03535628318786621,
      "error": null
    },
    "assert median_numbers(11, 50, 75) == 50": {
      "result": true,
      "time": 0.03704667091369629,
      "error": null
    },
    "assert median_numbers(20, 42, 72) == 42": {
      "result": true,
      "time": 0.03778553009033203,
      "error": null
    },
    "assert median_numbers(15, 48, 74) == 48": {
      "result": true,
      "time": 0.03199362754821777,
      "error": null
    },
    "assert median_numbers(15, 49, 72) == 49": {
      "result": true,
      "time": 0.03986191749572754,
      "error": null
    },
    "assert median_numbers(10, 42, 80) == 42": {
      "result": true,
      "time": 0.041310787200927734,
      "error": null
    },
    "assert median_numbers(17, 43, 78) == 43": {
      "result": true,
      "time": 0.0352170467376709,
      "error": null
    },
    "assert median_numbers(18, 44, 73) == 44": {
      "result": true,
      "time": 0.03673601150512695,
      "error": null
    },
    "assert median_numbers(13, 50, 80) == 50": {
      "result": true,
      "time": 0.03876352310180664,
      "error": null
    },
    "assert median_numbers(14, 40, 75) == 40": {
      "result": true,
      "time": 0.035485267639160156,
      "error": null
    },
    "assert median_numbers(10, 42, 75) == 42": {
      "result": true,
      "time": 0.033599853515625,
      "error": null
    },
    "assert median_numbers(10, 42, 74) == 42": {
      "result": true,
      "time": 0.03710484504699707,
      "error": null
    },
    "assert median_numbers(15, 41, 74) == 41": {
      "result": true,
      "time": 0.03375530242919922,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}