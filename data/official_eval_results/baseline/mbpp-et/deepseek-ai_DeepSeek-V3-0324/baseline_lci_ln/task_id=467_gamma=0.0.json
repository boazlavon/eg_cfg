{
  "code": "def decimal_to_Octal(decimal_num):\n    if decimal_num == 0:\n        return 0\n    \n    octal_num = 0\n    place_value = 1\n    \n    while decimal_num > 0:\n        remainder = decimal_num % 8\n        octal_num = octal_num + remainder * place_value\n        decimal_num = decimal_num // 8\n        place_value = place_value * 10\n    \n    return octal_num",
  "results": {
    "assert decimal_to_Octal(10) == 12": {
      "result": true,
      "time": 0.046243906021118164,
      "error": null
    },
    "assert decimal_to_Octal(2) == 2": {
      "result": true,
      "time": 0.03961753845214844,
      "error": null
    },
    "assert decimal_to_Octal(33) == 41": {
      "result": true,
      "time": 0.03751850128173828,
      "error": null
    },
    "assert decimal_to_Octal(15) == 17": {
      "result": true,
      "time": 0.04440617561340332,
      "error": null
    },
    "assert decimal_to_Octal(11) == 13": {
      "result": true,
      "time": 0.0413970947265625,
      "error": null
    },
    "assert decimal_to_Octal(6) == 6": {
      "result": true,
      "time": 0.0438995361328125,
      "error": null
    },
    "assert decimal_to_Octal(9) == 11": {
      "result": true,
      "time": 0.040528297424316406,
      "error": null
    },
    "assert decimal_to_Octal(14) == 16": {
      "result": true,
      "time": 0.030807018280029297,
      "error": null
    },
    "assert decimal_to_Octal(12) == 14": {
      "result": true,
      "time": 0.03839397430419922,
      "error": null
    },
    "assert decimal_to_Octal(8) == 10": {
      "result": true,
      "time": 0.035146236419677734,
      "error": null
    },
    "assert decimal_to_Octal(13) == 15": {
      "result": true,
      "time": 0.03497958183288574,
      "error": null
    },
    "assert decimal_to_Octal(1) == 1": {
      "result": true,
      "time": 0.04468870162963867,
      "error": null
    },
    "assert decimal_to_Octal(4) == 4": {
      "result": true,
      "time": 0.04324698448181152,
      "error": null
    },
    "assert decimal_to_Octal(5) == 5": {
      "result": true,
      "time": 0.04465603828430176,
      "error": null
    },
    "assert decimal_to_Octal(7) == 7": {
      "result": true,
      "time": 0.037717580795288086,
      "error": null
    },
    "assert decimal_to_Octal(3) == 3": {
      "result": true,
      "time": 0.042096614837646484,
      "error": null
    },
    "assert decimal_to_Octal(28) == 34": {
      "result": true,
      "time": 0.04771089553833008,
      "error": null
    },
    "assert decimal_to_Octal(38) == 46": {
      "result": true,
      "time": 0.03902316093444824,
      "error": null
    },
    "assert decimal_to_Octal(37) == 45": {
      "result": true,
      "time": 0.045053958892822266,
      "error": null
    },
    "assert decimal_to_Octal(32) == 40": {
      "result": true,
      "time": 0.03851318359375,
      "error": null
    },
    "assert decimal_to_Octal(29) == 35": {
      "result": true,
      "time": 0.043834686279296875,
      "error": null
    },
    "assert decimal_to_Octal(30) == 36": {
      "result": true,
      "time": 0.03927350044250488,
      "error": null
    },
    "assert decimal_to_Octal(35) == 43": {
      "result": true,
      "time": 0.04777336120605469,
      "error": null
    },
    "assert decimal_to_Octal(31) == 37": {
      "result": true,
      "time": 0.03695058822631836,
      "error": null
    },
    "assert decimal_to_Octal(36) == 44": {
      "result": true,
      "time": 0.03925490379333496,
      "error": null
    },
    "assert decimal_to_Octal(34) == 42": {
      "result": true,
      "time": 0.03478050231933594,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}