{
  "code": "def find_minimum_range(arrays):\n    # Initialize pointers for each array\n    pointers = [0] * len(arrays)\n    \n    # Initialize the current range variables\n    current_min = float('inf')\n    current_max = -float('inf')\n    \n    # Initialize the result variables\n    result_min = 0\n    result_max = float('inf')\n    \n    # Create a list to keep track of the current elements from each array\n    current_elements = []\n    for i in range(len(arrays)):\n        current_elements.append(arrays[i][pointers[i]])\n    \n    # Update current_min and current_max\n    for num in current_elements:\n        if num < current_min:\n            current_min = num\n        if num > current_max:\n            current_max = num\n    \n    # Initialize the minimum range\n    min_range = current_max - current_min\n    \n    # Main loop to find the smallest range\n    while True:\n        # Find the array with the smallest current element\n        min_index = 0\n        min_value = current_elements[0]\n        for i in range(1, len(current_elements)):\n            if current_elements[i] < min_value:\n                min_value = current_elements[i]\n                min_index = i\n        \n        # Move the pointer of the array with the smallest element\n        pointers[min_index] += 1\n        \n        # Check if we have reached the end of any array\n        if pointers[min_index] >= len(arrays[min_index]):\n            break\n        \n        # Update the current element for the array whose pointer was moved\n        current_elements[min_index] = arrays[min_index][pointers[min_index]]\n        \n        # Update current_min and current_max\n        new_min = min(current_elements)\n        new_max = max(current_elements)\n        \n        # Update the current range\n        new_range = new_max - new_min\n        \n        # Check if the new range is smaller than the current minimum range\n        if new_range < min_range:\n            min_range = new_range\n            result_min = new_min\n            result_max = new_max\n    \n    return (result_min, result_max)",
  "results": {
    "assert find_minimum_range([[3, 6, 8, 10, 15], [1, 5, 12], [4, 8, 15, 16], [2, 6]]) == (4, 6)": {
      "result": true,
      "time": 0.0641331672668457,
      "error": null
    },
    "assert find_minimum_range([[ 2, 3, 4, 8, 10, 15 ], [1, 5, 12], [7, 8, 15, 16], [3, 6]]) == (4, 7)": {
      "result": true,
      "time": 0.06695699691772461,
      "error": null
    },
    "assert find_minimum_range([[4, 7, 9, 11, 16], [2, 6, 13], [5, 9, 16, 17], [3, 7]]) == (5, 7)": {
      "result": true,
      "time": 0.06556344032287598,
      "error": null
    },
    "assert find_minimum_range([[4, 6, 13, 12, 12], [3, 2, 17], [9, 13, 19, 18], [5, 1]]) == (3, 9)": {
      "result": false,
      "time": 0.06510329246520996,
      "error": null
    },
    "assert find_minimum_range([[3, 1, 4, 6, 19], [3, 5, 16], [7, 9, 10, 13], [2, 4]]) == (4, 7)": {
      "result": true,
      "time": 0.06465840339660645,
      "error": null
    },
    "assert find_minimum_range([[6, 2, 5, 9, 16], [2, 8, 16], [9, 11, 16, 11], [1, 8]]) == (8, 9)": {
      "result": true,
      "time": 0.06300663948059082,
      "error": null
    },
    "assert find_minimum_range([[4, 2, 11, 9, 12], [5, 6, 12], [5, 8, 18, 11], [7, 11]]) == (4, 7)": {
      "result": false,
      "time": 0.07373189926147461,
      "error": null
    },
    "assert find_minimum_range([[7, 10, 4, 13, 20], [5, 1, 9], [2, 3, 16, 17], [1, 10]]) == (1, 7)": {
      "result": false,
      "time": 0.06940340995788574,
      "error": null
    },
    "assert find_minimum_range([[4, 7, 4, 5, 14], [6, 6, 12], [1, 3, 14, 12], [4, 2]]) == (3, 6)": {
      "result": true,
      "time": 0.06157565116882324,
      "error": null
    },
    "assert find_minimum_range([[8, 2, 7, 13, 16], [4, 7, 9], [4, 3, 11, 17], [5, 1]]) == (4, 8)": {
      "result": false,
      "time": 0.06832194328308105,
      "error": null
    },
    "assert find_minimum_range([[7, 11, 5, 7, 13], [3, 1, 16], [5, 11, 17, 11], [3, 1]]) == (3, 7)": {
      "result": false,
      "time": 0.06096839904785156,
      "error": null
    },
    "assert find_minimum_range([[1, 4, 12, 11, 18], [6, 9, 8], [2, 8, 14, 17], [7, 1]]) == (4, 8)": {
      "result": true,
      "time": 0.07125735282897949,
      "error": null
    },
    "assert find_minimum_range([[2, 2, 5, 15, 19], [6, 5, 7], [6, 3, 10, 15], [7, 5]]) == (5, 7)": {
      "result": true,
      "time": 0.05385732650756836,
      "error": null
    },
    "assert find_minimum_range([[5, 7, 13, 6, 16], [4, 1, 10], [1, 5, 20, 18], [1, 9]]) == (1, 5)": {
      "result": false,
      "time": 0.06042909622192383,
      "error": null
    },
    "assert find_minimum_range([[6, 5, 3, 12, 17], [4, 8, 12], [2, 12, 16, 21], [2, 1]]) == (2, 6)": {
      "result": false,
      "time": 0.05722546577453613,
      "error": null
    },
    "assert find_minimum_range([[6, 6, 13, 13, 18], [2, 3, 11], [3, 4, 20, 21], [7, 9]]) == (3, 7)": {
      "result": true,
      "time": 0.07033395767211914,
      "error": null
    },
    "assert find_minimum_range([[6, 8, 12, 6, 19], [3, 10, 16], [8, 9, 16, 14], [6, 10]]) == (8, 10)": {
      "result": true,
      "time": 0.060994863510131836,
      "error": null
    },
    "assert find_minimum_range([[3, 11, 9, 7, 16], [5, 1, 13], [5, 3, 16, 15], [2, 9]]) == (2, 5)": {
      "result": false,
      "time": 0.05235624313354492,
      "error": null
    },
    "assert find_minimum_range([[3, 7, 12, 13, 15], [5, 4, 7], [3, 6, 13, 21], [4, 4]]) == (3, 5)": {
      "result": false,
      "time": 0.06227588653564453,
      "error": null
    },
    "assert find_minimum_range([[7, 1, 10, 11, 16], [1, 4, 17], [1, 8, 12, 12], [6, 5]]) == (4, 8)": {
      "result": true,
      "time": 0.06846046447753906,
      "error": null
    },
    "assert find_minimum_range([[5, 3, 4, 6, 20], [2, 8, 8], [8, 13, 10, 19], [4, 2]]) == (4, 8)": {
      "result": true,
      "time": 0.06131482124328613,
      "error": null
    },
    "assert find_minimum_range([[4, 11, 5, 6, 15], [1, 7, 8], [7, 13, 10, 19], [6, 3]]) == (4, 7)": {
      "result": true,
      "time": 0.06699371337890625,
      "error": null
    },
    "assert find_minimum_range([[2, 9, 11, 6, 19], [6, 1, 8], [9, 7, 14, 15], [3, 4]]) == (4, 9)": {
      "result": true,
      "time": 0.0653834342956543,
      "error": null
    },
    "assert find_minimum_range([[8, 7, 13, 10, 10], [6, 9, 13], [3, 12, 17, 20], [2, 1]]) == (2, 8)": {
      "result": false,
      "time": 0.05985617637634277,
      "error": null
    },
    "assert find_minimum_range([[2, 10, 10, 10, 16], [4, 9, 10], [2, 8, 17, 13], [6, 6]]) == (2, 6)": {
      "result": false,
      "time": 0.06884264945983887,
      "error": null
    },
    "assert find_minimum_range([[5, 4, 12, 15, 19], [4, 8, 15], [6, 13, 14, 13], [7, 7]]) == (4, 7)": {
      "result": false,
      "time": 0.05654287338256836,
      "error": null
    },
    "assert find_minimum_range([[1, 8, 5, 10, 18], [3, 3, 17], [4, 4, 13, 21], [4, 2]]) == (1, 4)": {
      "result": false,
      "time": 0.06582474708557129,
      "error": null
    },
    "assert find_minimum_range([[7, 2, 11, 10, 20], [2, 6, 16], [4, 8, 15, 19], [5, 9]]) == (4, 7)": {
      "result": true,
      "time": 0.0712745189666748,
      "error": null
    },
    "assert find_minimum_range([[7, 6, 6, 7, 10], [6, 6, 7], [1, 13, 15, 15], [4, 11]]) == (1, 7)": {
      "result": false,
      "time": 0.07373976707458496,
      "error": null
    },
    "assert find_minimum_range([[2, 10, 11, 13, 11], [2, 9, 12], [5, 13, 12, 12], [3, 7]]) == (2, 5)": {
      "result": false,
      "time": 0.06714820861816406,
      "error": null
    },
    "assert find_minimum_range([[2, 6, 8, 8, 15], [6, 10, 7], [5, 9, 13, 15], [2, 8]]) == (8, 10)": {
      "result": true,
      "time": 0.07121896743774414,
      "error": null
    },
    "assert find_minimum_range([[3, 3, 6, 12, 13], [3, 7, 10], [2, 8, 18, 15], [7, 4]]) == (6, 8)": {
      "result": true,
      "time": 0.06289505958557129,
      "error": null
    },
    "assert find_minimum_range([[5, 2, 10, 12, 13], [5, 5, 16], [4, 3, 19, 20], [2, 2]]) == (2, 5)": {
      "result": false,
      "time": 0.06969285011291504,
      "error": null
    },
    "assert find_minimum_range([[8, 10, 13, 15, 10], [3, 1, 11], [7, 3, 12, 14], [4, 7]]) == (7, 11)": {
      "result": true,
      "time": 0.0642392635345459,
      "error": null
    },
    "assert find_minimum_range([[7, 6, 13, 15, 11], [5, 4, 10], [2, 8, 20, 16], [6, 6]]) == (5, 8)": {
      "result": true,
      "time": 0.06305384635925293,
      "error": null
    },
    "assert find_minimum_range([[4, 4, 9, 9, 20], [5, 8, 11], [6, 7, 17, 17], [6, 2]]) == (4, 6)": {
      "result": false,
      "time": 0.08378362655639648,
      "error": null
    },
    "assert find_minimum_range([[6, 2, 2, 11, 6, 17], [3, 5, 15], [12, 8, 17, 15], [8, 11]]) == (11, 15)": {
      "result": true,
      "time": 0.06267905235290527,
      "error": null
    },
    "assert find_minimum_range([[3, 2, 5, 11, 11, 17], [4, 6, 15], [10, 11, 17, 15], [8, 9]]) == (5, 10)": {
      "result": true,
      "time": 0.06763243675231934,
      "error": null
    },
    "assert find_minimum_range([[2, 5, 5, 11, 5, 14], [6, 10, 17], [12, 12, 19, 21], [6, 8]]) == (8, 12)": {
      "result": true,
      "time": 0.05006599426269531,
      "error": null
    },
    "assert find_minimum_range([[5, 3, 4, 5, 8, 20], [4, 10, 10], [4, 3, 14, 12], [3, 1]]) == (3, 5)": {
      "result": false,
      "time": 0.04832124710083008,
      "error": null
    },
    "assert find_minimum_range([[3, 1, 1, 7, 9, 17], [2, 7, 16], [4, 6, 13, 16], [7, 1]]) == (6, 7)": {
      "result": true,
      "time": 0.04917740821838379,
      "error": null
    },
    "assert find_minimum_range([[3, 7, 8, 7, 7, 15], [5, 2, 16], [3, 5, 11, 16], [7, 2]]) == (5, 7)": {
      "result": true,
      "time": 0.042395830154418945,
      "error": null
    },
    "assert find_minimum_range([[7, 6, 5, 13, 12, 17], [4, 2, 17], [7, 10, 14, 12], [3, 8]]) == (3, 7)": {
      "result": false,
      "time": 0.04772067070007324,
      "error": null
    },
    "assert find_minimum_range([[3, 2, 9, 6, 9, 18], [6, 9, 10], [10, 3, 14, 15], [4, 1]]) == (4, 10)": {
      "result": true,
      "time": 0.04667091369628906,
      "error": null
    },
    "assert find_minimum_range([[5, 4, 5, 11, 11, 10], [4, 4, 10], [6, 3, 11, 11], [5, 3]]) == (4, 6)": {
      "result": false,
      "time": 0.03859305381774902,
      "error": null
    },
    "assert find_minimum_range([[3, 7, 9, 13, 5, 13], [3, 5, 10], [3, 9, 11, 13], [4, 8]]) == (3, 4)": {
      "result": false,
      "time": 0.045884132385253906,
      "error": null
    },
    "assert find_minimum_range([[6, 8, 8, 13, 6, 20], [1, 7, 16], [5, 12, 12, 13], [1, 4]]) == (4, 7)": {
      "result": true,
      "time": 0.048415422439575195,
      "error": null
    },
    "assert find_minimum_range([[5, 1, 1, 9, 14, 13], [1, 6, 7], [10, 11, 20, 11], [7, 5]]) == (7, 10)": {
      "result": true,
      "time": 0.041086435317993164,
      "error": null
    },
    "assert find_minimum_range([[2, 6, 6, 11, 8, 10], [4, 4, 13], [5, 3, 14, 20], [4, 1]]) == (4, 6)": {
      "result": true,
      "time": 0.050668954849243164,
      "error": null
    },
    "assert find_minimum_range([[1, 2, 9, 7, 8, 11], [1, 7, 17], [7, 6, 18, 12], [7, 2]]) == (7, 9)": {
      "result": true,
      "time": 0.042577266693115234,
      "error": null
    },
    "assert find_minimum_range([[4, 6, 8, 3, 7, 16], [6, 7, 10], [5, 4, 15, 13], [8, 10]]) == (5, 8)": {
      "result": true,
      "time": 0.04312634468078613,
      "error": null
    },
    "assert find_minimum_range([[5, 8, 1, 8, 5, 12], [6, 8, 8], [12, 3, 12, 14], [7, 2]]) == (7, 12)": {
      "result": true,
      "time": 0.0483698844909668,
      "error": null
    },
    "assert find_minimum_range([[7, 4, 2, 4, 7, 13], [6, 6, 10], [3, 9, 20, 13], [2, 2]]) == (2, 7)": {
      "result": false,
      "time": 0.04705023765563965,
      "error": null
    },
    "assert find_minimum_range([[6, 6, 1, 8, 9, 18], [6, 2, 14], [4, 9, 14, 18], [3, 6]]) == (4, 6)": {
      "result": true,
      "time": 0.04475116729736328,
      "error": null
    },
    "assert find_minimum_range([[4, 7, 4, 8, 5, 15], [6, 7, 13], [9, 9, 16, 21], [7, 3]]) == (7, 9)": {
      "result": true,
      "time": 0.04291343688964844,
      "error": null
    },
    "assert find_minimum_range([[3, 3, 5, 9, 8, 18], [4, 2, 7], [6, 12, 19, 12], [7, 5]]) == (5, 7)": {
      "result": true,
      "time": 0.03433632850646973,
      "error": null
    },
    "assert find_minimum_range([[7, 2, 3, 3, 8, 19], [6, 6, 15], [11, 6, 15, 20], [7, 5]]) == (6, 11)": {
      "result": false,
      "time": 0.045844316482543945,
      "error": null
    },
    "assert find_minimum_range([[2, 6, 8, 6, 12, 17], [3, 9, 17], [8, 9, 16, 12], [5, 7]]) == (7, 9)": {
      "result": true,
      "time": 0.04909062385559082,
      "error": null
    },
    "assert find_minimum_range([[1, 5, 5, 6, 7, 10], [3, 9, 10], [6, 3, 13, 20], [8, 11]]) == (6, 9)": {
      "result": true,
      "time": 0.04147195816040039,
      "error": null
    },
    "assert find_minimum_range([[4, 6, 8, 6, 12, 17], [5, 5, 9], [4, 8, 14, 21], [6, 5]]) == (4, 6)": {
      "result": false,
      "time": 0.04124164581298828,
      "error": null
    },
    "assert find_minimum_range([[2, 5, 7, 5, 8, 18], [1, 9, 14], [7, 6, 18, 20], [5, 8]]) == (7, 9)": {
      "result": true,
      "time": 0.037775516510009766,
      "error": null
    },
    "assert find_minimum_range([[1, 5, 6, 5, 14, 15], [4, 7, 10], [7, 9, 19, 15], [5, 10]]) == (5, 7)": {
      "result": true,
      "time": 0.04255223274230957,
      "error": null
    },
    "assert find_minimum_range([[6, 1, 1, 10, 9, 13], [1, 9, 9], [8, 9, 19, 13], [2, 5]]) == (5, 9)": {
      "result": true,
      "time": 0.04425621032714844,
      "error": null
    },
    "assert find_minimum_range([[6, 5, 9, 12, 10, 10], [2, 5, 13], [7, 7, 15, 11], [7, 5]]) == (5, 7)": {
      "result": true,
      "time": 0.03985428810119629,
      "error": null
    },
    "assert find_minimum_range([[3, 5, 2, 11, 5, 16], [6, 2, 13], [5, 4, 17, 17], [2, 4]]) == (4, 6)": {
      "result": true,
      "time": 0.0462651252746582,
      "error": null
    },
    "assert find_minimum_range([[6, 5, 4, 8, 12, 18], [6, 4, 17], [5, 13, 20, 21], [6, 9]]) == (5, 6)": {
      "result": false,
      "time": 0.04137063026428223,
      "error": null
    },
    "assert find_minimum_range([[3, 7, 8, 9, 5, 19], [1, 5, 10], [3, 7, 11, 12], [2, 11]]) == (1, 3)": {
      "result": false,
      "time": 0.05005621910095215,
      "error": null
    },
    "assert find_minimum_range([[2, 1, 8, 12, 12, 14], [1, 6, 10], [12, 9, 16, 20], [1, 8]]) == (8, 12)": {
      "result": true,
      "time": 0.040114402770996094,
      "error": null
    },
    "assert find_minimum_range([[2, 5, 2, 13, 10, 11], [5, 6, 15], [2, 3, 17, 17], [4, 1]]) == (3, 5)": {
      "result": true,
      "time": 0.0440366268157959,
      "error": null
    },
    "assert find_minimum_range([[2, 7, 7, 7, 17], [1, 5, 13], [9, 13, 18, 17], [7, 4]]) == (5, 9)": {
      "result": true,
      "time": 0.049733638763427734,
      "error": null
    },
    "assert find_minimum_range([[7, 2, 13, 8, 20], [4, 11, 14], [10, 10, 16, 21], [1, 11]]) == (10, 13)": {
      "result": true,
      "time": 0.039304494857788086,
      "error": null
    },
    "assert find_minimum_range([[3, 2, 8, 8, 11], [6, 4, 17], [10, 13, 18, 19], [4, 9]]) == (6, 10)": {
      "result": true,
      "time": 0.040036916732788086,
      "error": null
    },
    "assert find_minimum_range([[5, 2, 7, 10, 15], [6, 9, 12], [2, 13, 11, 18], [3, 8]]) == (2, 6)": {
      "result": false,
      "time": 0.04636359214782715,
      "error": null
    },
    "assert find_minimum_range([[2, 9, 6, 7, 19], [2, 10, 13], [10, 8, 16, 14], [8, 11]]) == (8, 10)": {
      "result": true,
      "time": 0.0394282341003418,
      "error": null
    },
    "assert find_minimum_range([[8, 4, 4, 11, 18], [4, 6, 10], [10, 10, 19, 20], [7, 11]]) == (10, 11)": {
      "result": true,
      "time": 0.05083417892456055,
      "error": null
    },
    "assert find_minimum_range([[7, 4, 7, 15, 18], [7, 8, 17], [3, 6, 21, 19], [8, 9]]) == (6, 8)": {
      "result": true,
      "time": 0.050974369049072266,
      "error": null
    },
    "assert find_minimum_range([[6, 9, 11, 9, 21], [7, 10, 16], [9, 7, 21, 21], [3, 3]]) == (3, 9)": {
      "result": false,
      "time": 0.05274534225463867,
      "error": null
    },
    "assert find_minimum_range([[9, 6, 7, 15, 18], [6, 1, 10], [3, 12, 19, 22], [5, 10]]) == (9, 12)": {
      "result": true,
      "time": 0.03928017616271973,
      "error": null
    },
    "assert find_minimum_range([[9, 3, 5, 14, 13], [3, 6, 8], [1, 4, 18, 15], [1, 12]]) == (1, 9)": {
      "result": false,
      "time": 0.0430750846862793,
      "error": null
    },
    "assert find_minimum_range([[2, 6, 6, 9, 19], [5, 2, 11], [7, 14, 17, 17], [4, 10]]) == (4, 7)": {
      "result": true,
      "time": 0.033289432525634766,
      "error": null
    },
    "assert find_minimum_range([[6, 5, 12, 8, 19], [4, 3, 11], [2, 12, 11, 12], [7, 4]]) == (2, 7)": {
      "result": false,
      "time": 0.04285240173339844,
      "error": null
    },
    "assert find_minimum_range([[9, 4, 10, 9, 11], [4, 3, 12], [10, 4, 17, 12], [5, 2]]) == (4, 10)": {
      "result": false,
      "time": 0.05240011215209961,
      "error": null
    },
    "assert find_minimum_range([[3, 3, 8, 7, 12], [3, 8, 17], [10, 13, 20, 19], [7, 2]]) == (7, 10)": {
      "result": true,
      "time": 0.04374861717224121,
      "error": null
    },
    "assert find_minimum_range([[5, 3, 7, 8, 17], [1, 2, 11], [10, 8, 15, 19], [3, 11]]) == (8, 11)": {
      "result": true,
      "time": 0.0474095344543457,
      "error": null
    },
    "assert find_minimum_range([[3, 11, 13, 16, 17], [2, 2, 15], [2, 6, 15, 15], [8, 2]]) == (2, 8)": {
      "result": false,
      "time": 0.037698984146118164,
      "error": null
    },
    "assert find_minimum_range([[9, 7, 9, 15, 14], [4, 2, 18], [6, 9, 17, 21], [4, 7]]) == (4, 9)": {
      "result": false,
      "time": 0.04763221740722656,
      "error": null
    },
    "assert find_minimum_range([[5, 7, 7, 14, 15], [4, 8, 15], [1, 14, 18, 22], [2, 11]]) == (1, 5)": {
      "result": false,
      "time": 0.06649446487426758,
      "error": null
    },
    "assert find_minimum_range([[3, 6, 13, 8, 19], [5, 11, 17], [1, 13, 15, 13], [5, 9]]) == (1, 5)": {
      "result": false,
      "time": 0.052425384521484375,
      "error": null
    },
    "assert find_minimum_range([[1, 9, 14, 7, 13], [1, 10, 11], [9, 11, 18, 16], [4, 3]]) == (4, 10)": {
      "result": true,
      "time": 0.060427188873291016,
      "error": null
    },
    "assert find_minimum_range([[5, 10, 14, 16, 14], [1, 2, 8], [7, 8, 17, 16], [6, 9]]) == (8, 10)": {
      "result": true,
      "time": 0.045711517333984375,
      "error": null
    },
    "assert find_minimum_range([[5, 11, 7, 12, 17], [6, 5, 8], [7, 10, 17, 15], [6, 7]]) == (5, 7)": {
      "result": false,
      "time": 0.05447864532470703,
      "error": null
    },
    "assert find_minimum_range([[4, 3, 14, 16, 18], [5, 9, 14], [4, 12, 18, 16], [6, 11]]) == (4, 6)": {
      "result": false,
      "time": 0.048546791076660156,
      "error": null
    },
    "assert find_minimum_range([[1, 12, 7, 16, 12], [6, 1, 9], [9, 12, 12, 13], [7, 3]]) == (7, 12)": {
      "result": true,
      "time": 0.059660911560058594,
      "error": null
    },
    "assert find_minimum_range([[1, 9, 7, 14, 15], [3, 1, 15], [5, 11, 15, 19], [4, 3]]) == (1, 5)": {
      "result": false,
      "time": 0.05879831314086914,
      "error": null
    },
    "assert find_minimum_range([[7, 12, 10, 8, 15], [7, 2, 15], [3, 8, 15, 21], [6, 12]]) == (6, 8)": {
      "result": true,
      "time": 0.05573463439941406,
      "error": null
    },
    "assert find_minimum_range([[1, 3, 8, 13, 21], [1, 8, 9], [3, 13, 16, 15], [7, 11]]) == (9, 13)": {
      "result": true,
      "time": 0.0625295639038086,
      "error": null
    },
    "assert find_minimum_range([[2, 11, 5, 7, 14], [1, 11, 13], [4, 14, 15, 19], [8, 7]]) == (8, 14)": {
      "result": true,
      "time": 0.05248403549194336,
      "error": null
    },
    "assert find_minimum_range([[1, 10, 14, 9, 21], [6, 8, 8], [9, 4, 17, 18], [8, 6]]) == (8, 10)": {
      "result": true,
      "time": 0.053899288177490234,
      "error": null
    },
    "assert find_minimum_range([[6, 8, 12, 13, 19], [7, 11, 17], [3, 12, 17, 22], [8, 4]]) == (8, 12)": {
      "result": true,
      "time": 0.045588016510009766,
      "error": null
    },
    "assert find_minimum_range([[3, 8, 5, 7, 13], [5, 3, 9], [8, 14, 19, 14], [2, 2]]) == (2, 8)": {
      "result": false,
      "time": 0.06338763236999512,
      "error": null
    },
    "assert find_minimum_range([[5, 3, 4, 10, 19], [6, 7, 9], [1, 13, 13, 20], [6, 7]]) == (1, 6)": {
      "result": false,
      "time": 0.06165766716003418,
      "error": null
    },
    "assert find_minimum_range([[6, 6, 8, 7, 20], [1, 3, 8], [1, 6, 21, 13], [7, 2]]) == (6, 8)": {
      "result": true,
      "time": 0.056344032287597656,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.6078431372549019,
  "general_error": "",
  "has_testcase_error": false
}