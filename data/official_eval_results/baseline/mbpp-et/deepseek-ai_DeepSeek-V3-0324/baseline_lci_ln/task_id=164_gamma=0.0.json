{
  "code": "def areEquivalent(num1, num2):\n    def sum_of_divisors(n):\n        if n == 1:\n            return 1\n        sum_div = 1\n        for i in range(2, n + 1):\n            if n % i == 0:\n                sum_div = sum_div + i\n        return sum_div\n    \n    sum1 = sum_of_divisors(num1)\n    sum2 = sum_of_divisors(num2)\n    \n    if sum1 == sum2:\n        return True\n    else:\n        return False",
  "results": {
    "assert areEquivalent(36,57) == False": {
      "result": true,
      "time": 0.04380083084106445,
      "error": null
    },
    "assert areEquivalent(2,4) == False": {
      "result": true,
      "time": 0.0429990291595459,
      "error": null
    },
    "assert areEquivalent(23,47) == True": {
      "result": false,
      "time": 0.044710397720336914,
      "error": null
    },
    "assert areEquivalent(37, 56) == False": {
      "result": true,
      "time": 0.03610038757324219,
      "error": null
    },
    "assert areEquivalent(39, 59) == False": {
      "result": true,
      "time": 0.03657412528991699,
      "error": null
    },
    "assert areEquivalent(33, 52) == False": {
      "result": true,
      "time": 0.04088091850280762,
      "error": null
    },
    "assert areEquivalent(36, 54) == False": {
      "result": true,
      "time": 0.043889522552490234,
      "error": null
    },
    "assert areEquivalent(32, 61) == False": {
      "result": true,
      "time": 0.03949570655822754,
      "error": null
    },
    "assert areEquivalent(35, 62) == False": {
      "result": true,
      "time": 0.036087989807128906,
      "error": null
    },
    "assert areEquivalent(38, 55) == False": {
      "result": true,
      "time": 0.04794955253601074,
      "error": null
    },
    "assert areEquivalent(36, 60) == False": {
      "result": true,
      "time": 0.034071922302246094,
      "error": null
    },
    "assert areEquivalent(32, 59) == False": {
      "result": true,
      "time": 0.04090476036071777,
      "error": null
    },
    "assert areEquivalent(34, 54) == False": {
      "result": true,
      "time": 0.04027843475341797,
      "error": null
    },
    "assert areEquivalent(32, 52) == False": {
      "result": true,
      "time": 0.03705930709838867,
      "error": null
    },
    "assert areEquivalent(33, 59) == False": {
      "result": true,
      "time": 0.0383298397064209,
      "error": null
    },
    "assert areEquivalent(31, 61) == True": {
      "result": false,
      "time": 0.04205727577209473,
      "error": null
    },
    "assert areEquivalent(37, 62) == False": {
      "result": true,
      "time": 0.04227900505065918,
      "error": null
    },
    "assert areEquivalent(41, 57) == False": {
      "result": true,
      "time": 0.05240893363952637,
      "error": null
    },
    "assert areEquivalent(34, 60) == False": {
      "result": true,
      "time": 0.044940948486328125,
      "error": null
    },
    "assert areEquivalent(32, 55) == False": {
      "result": true,
      "time": 0.041295528411865234,
      "error": null
    },
    "assert areEquivalent(36, 59) == False": {
      "result": true,
      "time": 0.03956174850463867,
      "error": null
    },
    "assert areEquivalent(35, 54) == False": {
      "result": true,
      "time": 0.045471906661987305,
      "error": null
    },
    "assert areEquivalent(35, 55) == False": {
      "result": true,
      "time": 0.04402446746826172,
      "error": null
    },
    "assert areEquivalent(33, 62) == False": {
      "result": true,
      "time": 0.03479170799255371,
      "error": null
    },
    "assert areEquivalent(40, 53) == False": {
      "result": true,
      "time": 0.03876376152038574,
      "error": null
    },
    "assert areEquivalent(41, 52) == False": {
      "result": true,
      "time": 0.045336008071899414,
      "error": null
    },
    "assert areEquivalent(33, 61) == False": {
      "result": true,
      "time": 0.043953895568847656,
      "error": null
    },
    "assert areEquivalent(38, 53) == False": {
      "result": true,
      "time": 0.035463809967041016,
      "error": null
    },
    "assert areEquivalent(41, 62) == False": {
      "result": true,
      "time": 0.03440546989440918,
      "error": null
    },
    "assert areEquivalent(32, 56) == False": {
      "result": true,
      "time": 0.04227495193481445,
      "error": null
    },
    "assert areEquivalent(32, 62) == False": {
      "result": true,
      "time": 0.04675412178039551,
      "error": null
    },
    "assert areEquivalent(2, 6) == False": {
      "result": true,
      "time": 0.03813028335571289,
      "error": null
    },
    "assert areEquivalent(4, 7) == False": {
      "result": true,
      "time": 0.05481147766113281,
      "error": null
    },
    "assert areEquivalent(6, 1) == False": {
      "result": true,
      "time": 0.048757076263427734,
      "error": null
    },
    "assert areEquivalent(1, 9) == False": {
      "result": true,
      "time": 0.05231595039367676,
      "error": null
    },
    "assert areEquivalent(7, 2) == True": {
      "result": false,
      "time": 0.04931211471557617,
      "error": null
    },
    "assert areEquivalent(4, 2) == False": {
      "result": true,
      "time": 0.0488126277923584,
      "error": null
    },
    "assert areEquivalent(7, 8) == False": {
      "result": true,
      "time": 0.04685497283935547,
      "error": null
    },
    "assert areEquivalent(1, 1) == True": {
      "result": true,
      "time": 0.05067181587219238,
      "error": null
    },
    "assert areEquivalent(4, 9) == False": {
      "result": true,
      "time": 0.04918527603149414,
      "error": null
    },
    "assert areEquivalent(3, 6) == False": {
      "result": true,
      "time": 0.0543980598449707,
      "error": null
    },
    "assert areEquivalent(3, 4) == False": {
      "result": true,
      "time": 0.039241790771484375,
      "error": null
    },
    "assert areEquivalent(3, 1) == True": {
      "result": false,
      "time": 0.05112338066101074,
      "error": null
    },
    "assert areEquivalent(1, 3) == True": {
      "result": false,
      "time": 0.04648900032043457,
      "error": null
    },
    "assert areEquivalent(1, 8) == False": {
      "result": true,
      "time": 0.056664228439331055,
      "error": null
    },
    "assert areEquivalent(2, 1) == True": {
      "result": false,
      "time": 0.042905569076538086,
      "error": null
    },
    "assert areEquivalent(3, 3) == True": {
      "result": true,
      "time": 0.04751420021057129,
      "error": null
    },
    "assert areEquivalent(5, 5) == True": {
      "result": true,
      "time": 0.05563974380493164,
      "error": null
    },
    "assert areEquivalent(1, 2) == True": {
      "result": false,
      "time": 0.04733729362487793,
      "error": null
    },
    "assert areEquivalent(7, 4) == False": {
      "result": true,
      "time": 0.05987906455993652,
      "error": null
    },
    "assert areEquivalent(5, 4) == False": {
      "result": true,
      "time": 0.04607224464416504,
      "error": null
    },
    "assert areEquivalent(2, 4) == False": {
      "result": true,
      "time": 0.055112600326538086,
      "error": null
    },
    "assert areEquivalent(5, 3) == True": {
      "result": false,
      "time": 0.05864262580871582,
      "error": null
    },
    "assert areEquivalent(6, 9) == False": {
      "result": true,
      "time": 0.05064892768859863,
      "error": null
    },
    "assert areEquivalent(7, 5) == True": {
      "result": false,
      "time": 0.054566144943237305,
      "error": null
    },
    "assert areEquivalent(7, 7) == True": {
      "result": true,
      "time": 0.047966718673706055,
      "error": null
    },
    "assert areEquivalent(7, 3) == True": {
      "result": false,
      "time": 0.06025981903076172,
      "error": null
    },
    "assert areEquivalent(5, 9) == False": {
      "result": true,
      "time": 0.04899930953979492,
      "error": null
    },
    "assert areEquivalent(3, 2) == True": {
      "result": false,
      "time": 0.05451226234436035,
      "error": null
    },
    "assert areEquivalent(21, 45) == False": {
      "result": true,
      "time": 0.05113506317138672,
      "error": null
    },
    "assert areEquivalent(22, 49) == False": {
      "result": true,
      "time": 0.05927729606628418,
      "error": null
    },
    "assert areEquivalent(19, 46) == False": {
      "result": true,
      "time": 0.05139589309692383,
      "error": null
    },
    "assert areEquivalent(20, 45) == False": {
      "result": true,
      "time": 0.04886221885681152,
      "error": null
    },
    "assert areEquivalent(24, 46) == False": {
      "result": true,
      "time": 0.04688763618469238,
      "error": null
    },
    "assert areEquivalent(18, 51) == True": {
      "result": false,
      "time": 0.047646522521972656,
      "error": null
    },
    "assert areEquivalent(23, 51) == False": {
      "result": true,
      "time": 0.05093789100646973,
      "error": null
    },
    "assert areEquivalent(19, 42) == False": {
      "result": true,
      "time": 0.04347538948059082,
      "error": null
    },
    "assert areEquivalent(19, 45) == False": {
      "result": true,
      "time": 0.048243045806884766,
      "error": null
    },
    "assert areEquivalent(28, 45) == False": {
      "result": true,
      "time": 0.058362722396850586,
      "error": null
    },
    "assert areEquivalent(27, 46) == False": {
      "result": true,
      "time": 0.057344913482666016,
      "error": null
    },
    "assert areEquivalent(26, 45) == False": {
      "result": true,
      "time": 0.046386003494262695,
      "error": null
    },
    "assert areEquivalent(25, 43) == False": {
      "result": true,
      "time": 0.05756330490112305,
      "error": null
    },
    "assert areEquivalent(27, 49) == False": {
      "result": true,
      "time": 0.03781485557556152,
      "error": null
    },
    "assert areEquivalent(25, 42) == False": {
      "result": true,
      "time": 0.04175758361816406,
      "error": null
    },
    "assert areEquivalent(23, 42) == False": {
      "result": true,
      "time": 0.04476761817932129,
      "error": null
    },
    "assert areEquivalent(27, 51) == False": {
      "result": true,
      "time": 0.042754173278808594,
      "error": null
    },
    "assert areEquivalent(24, 48) == False": {
      "result": true,
      "time": 0.04168081283569336,
      "error": null
    },
    "assert areEquivalent(26, 46) == False": {
      "result": true,
      "time": 0.03834033012390137,
      "error": null
    },
    "assert areEquivalent(21, 48) == False": {
      "result": true,
      "time": 0.04178047180175781,
      "error": null
    },
    "assert areEquivalent(24, 51) == False": {
      "result": true,
      "time": 0.046878814697265625,
      "error": null
    },
    "assert areEquivalent(19, 51) == False": {
      "result": true,
      "time": 0.039459228515625,
      "error": null
    },
    "assert areEquivalent(23, 43) == True": {
      "result": false,
      "time": 0.04547834396362305,
      "error": null
    },
    "assert areEquivalent(26, 43) == False": {
      "result": true,
      "time": 0.04691576957702637,
      "error": null
    },
    "assert areEquivalent(28, 47) == False": {
      "result": true,
      "time": 0.040946245193481445,
      "error": null
    },
    "assert areEquivalent(19, 50) == False": {
      "result": true,
      "time": 0.036246299743652344,
      "error": null
    },
    "assert areEquivalent(27, 52) == False": {
      "result": true,
      "time": 0.04107046127319336,
      "error": null
    },
    "assert areEquivalent(27, 48) == False": {
      "result": true,
      "time": 0.035036563873291016,
      "error": null
    },
    "assert areEquivalent(25, 46) == False": {
      "result": true,
      "time": 0.047583580017089844,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.8522727272727273,
  "general_error": "",
  "has_testcase_error": false
}