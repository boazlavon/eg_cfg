{
  "code": "def counting_sort(arr):\n    if not arr:\n        return []\n    \n    max_val = arr[0]\n    for num in arr:\n        if num > max_val:\n            max_val = num\n    \n    count = [0] * (max_val + 1)\n    \n    for num in arr:\n        count[num] += 1\n    \n    sorted_arr = []\n    for i in range(len(count)):\n        while count[i] > 0:\n            sorted_arr.append(i)\n            count[i] -= 1\n    \n    return sorted_arr",
  "results": {
    "assert counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]": {
      "result": true,
      "time": 0.03935718536376953,
      "error": null
    },
    "assert counting_sort([12, 9, 28, 33, 69, 45]) == [9, 12, 28, 33, 45, 69]": {
      "result": true,
      "time": 0.03576374053955078,
      "error": null
    },
    "assert counting_sort([8, 4, 14, 3, 2, 1]) == [1, 2, 3, 4, 8, 14]": {
      "result": true,
      "time": 0.03892803192138672,
      "error": null
    },
    "assert counting_sort([5, 18, 8, 3, 7, 11, 11]) == [3, 5, 7, 8, 11, 11, 18]": {
      "result": true,
      "time": 0.04111170768737793,
      "error": null
    },
    "assert counting_sort([2, 23, 5, 7, 7, 9, 10]) == [2, 5, 7, 7, 9, 10, 23]": {
      "result": true,
      "time": 0.039664506912231445,
      "error": null
    },
    "assert counting_sort([2, 23, 7, 4, 11, 12, 8]) == [2, 4, 7, 8, 11, 12, 23]": {
      "result": true,
      "time": 0.038575172424316406,
      "error": null
    },
    "assert counting_sort([3, 26, 6, 9, 5, 12, 10]) == [3, 5, 6, 9, 10, 12, 26]": {
      "result": true,
      "time": 0.0390467643737793,
      "error": null
    },
    "assert counting_sort([3, 27, 3, 7, 6, 9, 9]) == [3, 3, 6, 7, 9, 9, 27]": {
      "result": true,
      "time": 0.03765273094177246,
      "error": null
    },
    "assert counting_sort([2, 18, 9, 10, 9, 12, 6]) == [2, 6, 9, 9, 10, 12, 18]": {
      "result": true,
      "time": 0.031359195709228516,
      "error": null
    },
    "assert counting_sort([5, 24, 2, 8, 2, 8, 3]) == [2, 2, 3, 5, 8, 8, 24]": {
      "result": true,
      "time": 0.04147815704345703,
      "error": null
    },
    "assert counting_sort([1, 21, 9, 7, 4, 5, 11]) == [1, 4, 5, 7, 9, 11, 21]": {
      "result": true,
      "time": 0.03499269485473633,
      "error": null
    },
    "assert counting_sort([3, 19, 6, 5, 2, 5, 11]) == [2, 3, 5, 5, 6, 11, 19]": {
      "result": true,
      "time": 0.04073309898376465,
      "error": null
    },
    "assert counting_sort([1, 22, 4, 9, 7, 4, 4]) == [1, 4, 4, 4, 7, 9, 22]": {
      "result": true,
      "time": 0.043211936950683594,
      "error": null
    },
    "assert counting_sort([2, 21, 9, 4, 6, 3, 9]) == [2, 3, 4, 6, 9, 9, 21]": {
      "result": true,
      "time": 0.04078221321105957,
      "error": null
    },
    "assert counting_sort([6, 25, 8, 2, 6, 10, 7]) == [2, 6, 6, 7, 8, 10, 25]": {
      "result": true,
      "time": 0.03659176826477051,
      "error": null
    },
    "assert counting_sort([3, 26, 6, 8, 5, 2, 7]) == [2, 3, 5, 6, 7, 8, 26]": {
      "result": true,
      "time": 0.05081343650817871,
      "error": null
    },
    "assert counting_sort([5, 18, 8, 2, 8, 3, 5]) == [2, 3, 5, 5, 8, 8, 18]": {
      "result": true,
      "time": 0.03690195083618164,
      "error": null
    },
    "assert counting_sort([5, 22, 8, 3, 4, 12, 5]) == [3, 4, 5, 5, 8, 12, 22]": {
      "result": true,
      "time": 0.039389610290527344,
      "error": null
    },
    "assert counting_sort([3, 20, 3, 8, 6, 10, 13]) == [3, 3, 6, 8, 10, 13, 20]": {
      "result": true,
      "time": 0.0370030403137207,
      "error": null
    },
    "assert counting_sort([6, 23, 7, 1, 1, 10, 11]) == [1, 1, 6, 7, 10, 11, 23]": {
      "result": true,
      "time": 0.03761744499206543,
      "error": null
    },
    "assert counting_sort([4, 28, 7, 3, 11, 12, 11]) == [3, 4, 7, 11, 11, 12, 28]": {
      "result": true,
      "time": 0.04595208168029785,
      "error": null
    },
    "assert counting_sort([4, 28, 9, 3, 4, 4, 5]) == [3, 4, 4, 4, 5, 9, 28]": {
      "result": true,
      "time": 0.03227663040161133,
      "error": null
    },
    "assert counting_sort([6, 24, 7, 1, 10, 11, 9]) == [1, 6, 7, 9, 10, 11, 24]": {
      "result": true,
      "time": 0.0372767448425293,
      "error": null
    },
    "assert counting_sort([3, 23, 6, 1, 11, 11, 6]) == [1, 3, 6, 6, 11, 11, 23]": {
      "result": true,
      "time": 0.04493856430053711,
      "error": null
    },
    "assert counting_sort([3, 18, 9, 8, 2, 2, 7]) == [2, 2, 3, 7, 8, 9, 18]": {
      "result": true,
      "time": 0.046944618225097656,
      "error": null
    },
    "assert counting_sort([6, 21, 5, 4, 4, 9, 11]) == [4, 4, 5, 6, 9, 11, 21]": {
      "result": true,
      "time": 0.036899566650390625,
      "error": null
    },
    "assert counting_sort([4, 21, 1, 7, 6, 5, 5]) == [1, 4, 5, 5, 6, 7, 21]": {
      "result": true,
      "time": 0.03639531135559082,
      "error": null
    },
    "assert counting_sort([3, 21, 1, 6, 8, 4, 13]) == [1, 3, 4, 6, 8, 13, 21]": {
      "result": true,
      "time": 0.035790205001831055,
      "error": null
    },
    "assert counting_sort([2, 23, 8, 9, 1, 6, 12]) == [1, 2, 6, 8, 9, 12, 23]": {
      "result": true,
      "time": 0.03690624237060547,
      "error": null
    },
    "assert counting_sort([4, 19, 8, 9, 8, 11, 10]) == [4, 8, 8, 9, 10, 11, 19]": {
      "result": true,
      "time": 0.03462028503417969,
      "error": null
    },
    "assert counting_sort([3, 27, 8, 5, 2, 6, 13]) == [2, 3, 5, 6, 8, 13, 27]": {
      "result": true,
      "time": 0.03864932060241699,
      "error": null
    },
    "assert counting_sort([4, 20, 3, 7, 8, 10, 7]) == [3, 4, 7, 7, 8, 10, 20]": {
      "result": true,
      "time": 0.04437875747680664,
      "error": null
    },
    "assert counting_sort([4, 28, 4, 9, 1, 12, 12]) == [1, 4, 4, 9, 12, 12, 28]": {
      "result": true,
      "time": 0.039151906967163086,
      "error": null
    },
    "assert counting_sort([4, 22, 3, 4, 3, 10, 5]) == [3, 3, 4, 4, 5, 10, 22]": {
      "result": true,
      "time": 0.03819775581359863,
      "error": null
    },
    "assert counting_sort([6, 20, 1, 5, 3, 9, 10]) == [1, 3, 5, 6, 9, 10, 20]": {
      "result": true,
      "time": 0.04518246650695801,
      "error": null
    },
    "assert counting_sort([5, 24, 5, 10, 8, 12, 7]) == [5, 5, 7, 8, 10, 12, 24]": {
      "result": true,
      "time": 0.04047727584838867,
      "error": null
    },
    "assert counting_sort([15, 7, 25, 28, 68, 46]) == [7, 15, 25, 28, 46, 68]": {
      "result": true,
      "time": 0.040853261947631836,
      "error": null
    },
    "assert counting_sort([14, 10, 26, 30, 71, 41]) == [10, 14, 26, 30, 41, 71]": {
      "result": true,
      "time": 0.03852725028991699,
      "error": null
    },
    "assert counting_sort([7, 6, 30, 38, 69, 45]) == [6, 7, 30, 38, 45, 69]": {
      "result": true,
      "time": 0.04455208778381348,
      "error": null
    },
    "assert counting_sort([17, 13, 27, 28, 67, 40]) == [13, 17, 27, 28, 40, 67]": {
      "result": true,
      "time": 0.04430818557739258,
      "error": null
    },
    "assert counting_sort([8, 4, 23, 29, 71, 42]) == [4, 8, 23, 29, 42, 71]": {
      "result": true,
      "time": 0.038840532302856445,
      "error": null
    },
    "assert counting_sort([17, 6, 23, 38, 66, 50]) == [6, 17, 23, 38, 50, 66]": {
      "result": true,
      "time": 0.039201974868774414,
      "error": null
    },
    "assert counting_sort([13, 12, 28, 32, 69, 44]) == [12, 13, 28, 32, 44, 69]": {
      "result": true,
      "time": 0.04067254066467285,
      "error": null
    },
    "assert counting_sort([13, 13, 26, 37, 66, 41]) == [13, 13, 26, 37, 41, 66]": {
      "result": true,
      "time": 0.03724932670593262,
      "error": null
    },
    "assert counting_sort([14, 12, 31, 34, 73, 50]) == [12, 14, 31, 34, 50, 73]": {
      "result": true,
      "time": 0.03781604766845703,
      "error": null
    },
    "assert counting_sort([13, 6, 27, 29, 64, 42]) == [6, 13, 27, 29, 42, 64]": {
      "result": true,
      "time": 0.0340571403503418,
      "error": null
    },
    "assert counting_sort([12, 13, 27, 32, 71, 40]) == [12, 13, 27, 32, 40, 71]": {
      "result": true,
      "time": 0.038559913635253906,
      "error": null
    },
    "assert counting_sort([14, 5, 32, 36, 73, 47]) == [5, 14, 32, 36, 47, 73]": {
      "result": true,
      "time": 0.04348421096801758,
      "error": null
    },
    "assert counting_sort([15, 7, 27, 34, 71, 42]) == [7, 15, 27, 34, 42, 71]": {
      "result": true,
      "time": 0.03378415107727051,
      "error": null
    },
    "assert counting_sort([13, 8, 27, 35, 74, 44]) == [8, 13, 27, 35, 44, 74]": {
      "result": true,
      "time": 0.03534197807312012,
      "error": null
    },
    "assert counting_sort([8, 9, 29, 30, 64, 44]) == [8, 9, 29, 30, 44, 64]": {
      "result": true,
      "time": 0.05023980140686035,
      "error": null
    },
    "assert counting_sort([8, 10, 30, 32, 65, 41]) == [8, 10, 30, 32, 41, 65]": {
      "result": true,
      "time": 0.05002474784851074,
      "error": null
    },
    "assert counting_sort([13, 8, 24, 30, 74, 47]) == [8, 13, 24, 30, 47, 74]": {
      "result": true,
      "time": 0.04005599021911621,
      "error": null
    },
    "assert counting_sort([10, 6, 31, 38, 64, 48]) == [6, 10, 31, 38, 48, 64]": {
      "result": true,
      "time": 0.03800082206726074,
      "error": null
    },
    "assert counting_sort([8, 13, 24, 28, 67, 45]) == [8, 13, 24, 28, 45, 67]": {
      "result": true,
      "time": 0.04263806343078613,
      "error": null
    },
    "assert counting_sort([8, 8, 23, 30, 67, 42]) == [8, 8, 23, 30, 42, 67]": {
      "result": true,
      "time": 0.04095125198364258,
      "error": null
    },
    "assert counting_sort([13, 11, 28, 38, 64, 42]) == [11, 13, 28, 38, 42, 64]": {
      "result": true,
      "time": 0.04111003875732422,
      "error": null
    },
    "assert counting_sort([15, 13, 31, 29, 71, 48]) == [13, 15, 29, 31, 48, 71]": {
      "result": true,
      "time": 0.03678584098815918,
      "error": null
    },
    "assert counting_sort([13, 14, 32, 29, 72, 44]) == [13, 14, 29, 32, 44, 72]": {
      "result": true,
      "time": 0.04096269607543945,
      "error": null
    },
    "assert counting_sort([12, 10, 29, 32, 70, 47]) == [10, 12, 29, 32, 47, 70]": {
      "result": true,
      "time": 0.041098833084106445,
      "error": null
    },
    "assert counting_sort([9, 8, 32, 35, 74, 49]) == [8, 9, 32, 35, 49, 74]": {
      "result": true,
      "time": 0.04701519012451172,
      "error": null
    },
    "assert counting_sort([9, 11, 23, 30, 74, 43]) == [9, 11, 23, 30, 43, 74]": {
      "result": true,
      "time": 0.05090475082397461,
      "error": null
    },
    "assert counting_sort([8, 12, 32, 33, 66, 42]) == [8, 12, 32, 33, 42, 66]": {
      "result": true,
      "time": 0.034707069396972656,
      "error": null
    },
    "assert counting_sort([17, 14, 29, 32, 72, 45]) == [14, 17, 29, 32, 45, 72]": {
      "result": true,
      "time": 0.04214072227478027,
      "error": null
    },
    "assert counting_sort([10, 14, 28, 31, 64, 50]) == [10, 14, 28, 31, 50, 64]": {
      "result": true,
      "time": 0.04115486145019531,
      "error": null
    },
    "assert counting_sort([17, 7, 29, 38, 69, 48]) == [7, 17, 29, 38, 48, 69]": {
      "result": true,
      "time": 0.04332613945007324,
      "error": null
    },
    "assert counting_sort([8, 9, 30, 38, 71, 50]) == [8, 9, 30, 38, 50, 71]": {
      "result": true,
      "time": 0.03782773017883301,
      "error": null
    },
    "assert counting_sort([17, 13, 23, 37, 72, 46]) == [13, 17, 23, 37, 46, 72]": {
      "result": true,
      "time": 0.0381014347076416,
      "error": null
    },
    "assert counting_sort([17, 10, 31, 33, 74, 50]) == [10, 17, 31, 33, 50, 74]": {
      "result": true,
      "time": 0.03216886520385742,
      "error": null
    },
    "assert counting_sort([11, 1, 14, 4, 6, 2]) == [1, 2, 4, 6, 11, 14]": {
      "result": true,
      "time": 0.03539395332336426,
      "error": null
    },
    "assert counting_sort([11, 6, 14, 5, 7, 2]) == [2, 5, 6, 7, 11, 14]": {
      "result": true,
      "time": 0.036715030670166016,
      "error": null
    },
    "assert counting_sort([11, 1, 16, 1, 1, 6]) == [1, 1, 1, 6, 11, 16]": {
      "result": true,
      "time": 0.036808013916015625,
      "error": null
    },
    "assert counting_sort([12, 2, 15, 8, 6, 4]) == [2, 4, 6, 8, 12, 15]": {
      "result": true,
      "time": 0.038880109786987305,
      "error": null
    },
    "assert counting_sort([8, 8, 11, 3, 7, 4]) == [3, 4, 7, 8, 8, 11]": {
      "result": true,
      "time": 0.04419589042663574,
      "error": null
    },
    "assert counting_sort([12, 5, 12, 1, 3, 3]) == [1, 3, 3, 5, 12, 12]": {
      "result": true,
      "time": 0.03171110153198242,
      "error": null
    },
    "assert counting_sort([6, 8, 10, 4, 2, 3]) == [2, 3, 4, 6, 8, 10]": {
      "result": true,
      "time": 0.04018115997314453,
      "error": null
    },
    "assert counting_sort([6, 9, 12, 3, 7, 1]) == [1, 3, 6, 7, 9, 12]": {
      "result": true,
      "time": 0.0391232967376709,
      "error": null
    },
    "assert counting_sort([3, 4, 17, 8, 3, 3]) == [3, 3, 3, 4, 8, 17]": {
      "result": true,
      "time": 0.04086804389953613,
      "error": null
    },
    "assert counting_sort([11, 9, 13, 5, 3, 6]) == [3, 5, 6, 9, 11, 13]": {
      "result": true,
      "time": 0.03793644905090332,
      "error": null
    },
    "assert counting_sort([3, 9, 11, 4, 7, 4]) == [3, 4, 4, 7, 9, 11]": {
      "result": true,
      "time": 0.04277539253234863,
      "error": null
    },
    "assert counting_sort([5, 7, 11, 8, 3, 4]) == [3, 4, 5, 7, 8, 11]": {
      "result": true,
      "time": 0.03793168067932129,
      "error": null
    },
    "assert counting_sort([3, 9, 18, 4, 2, 5]) == [2, 3, 4, 5, 9, 18]": {
      "result": true,
      "time": 0.04000043869018555,
      "error": null
    },
    "assert counting_sort([8, 8, 9, 8, 4, 5]) == [4, 5, 8, 8, 8, 9]": {
      "result": true,
      "time": 0.03858041763305664,
      "error": null
    },
    "assert counting_sort([6, 6, 18, 3, 6, 1]) == [1, 3, 6, 6, 6, 18]": {
      "result": true,
      "time": 0.03343558311462402,
      "error": null
    },
    "assert counting_sort([4, 5, 19, 4, 5, 6]) == [4, 4, 5, 5, 6, 19]": {
      "result": true,
      "time": 0.04037213325500488,
      "error": null
    },
    "assert counting_sort([9, 6, 12, 8, 7, 3]) == [3, 6, 7, 8, 9, 12]": {
      "result": true,
      "time": 0.03679299354553223,
      "error": null
    },
    "assert counting_sort([4, 1, 9, 5, 5, 1]) == [1, 1, 4, 5, 5, 9]": {
      "result": true,
      "time": 0.038422346115112305,
      "error": null
    },
    "assert counting_sort([9, 5, 18, 1, 4, 2]) == [1, 2, 4, 5, 9, 18]": {
      "result": true,
      "time": 0.03491687774658203,
      "error": null
    },
    "assert counting_sort([5, 7, 10, 3, 7, 3]) == [3, 3, 5, 7, 7, 10]": {
      "result": true,
      "time": 0.04834747314453125,
      "error": null
    },
    "assert counting_sort([9, 5, 18, 5, 6, 2]) == [2, 5, 5, 6, 9, 18]": {
      "result": true,
      "time": 0.03719186782836914,
      "error": null
    },
    "assert counting_sort([13, 3, 12, 4, 2, 5]) == [2, 3, 4, 5, 12, 13]": {
      "result": true,
      "time": 0.03513932228088379,
      "error": null
    },
    "assert counting_sort([13, 3, 10, 1, 5, 3]) == [1, 3, 3, 5, 10, 13]": {
      "result": true,
      "time": 0.04286384582519531,
      "error": null
    },
    "assert counting_sort([6, 7, 12, 6, 7, 1]) == [1, 6, 6, 7, 7, 12]": {
      "result": true,
      "time": 0.036072731018066406,
      "error": null
    },
    "assert counting_sort([5, 8, 18, 7, 6, 5]) == [5, 5, 6, 7, 8, 18]": {
      "result": true,
      "time": 0.035047054290771484,
      "error": null
    },
    "assert counting_sort([8, 3, 14, 4, 1, 3]) == [1, 3, 3, 4, 8, 14]": {
      "result": true,
      "time": 0.036951303482055664,
      "error": null
    },
    "assert counting_sort([11, 7, 15, 4, 6, 3]) == [3, 4, 6, 7, 11, 15]": {
      "result": true,
      "time": 0.03444194793701172,
      "error": null
    },
    "assert counting_sort([3, 5, 10, 2, 6, 2]) == [2, 2, 3, 5, 6, 10]": {
      "result": true,
      "time": 0.033199310302734375,
      "error": null
    },
    "assert counting_sort([5, 5, 10, 7, 3, 5]) == [3, 5, 5, 5, 7, 10]": {
      "result": true,
      "time": 0.036507368087768555,
      "error": null
    },
    "assert counting_sort([4, 5, 18, 6, 2, 6]) == [2, 4, 5, 6, 6, 18]": {
      "result": true,
      "time": 0.04045391082763672,
      "error": null
    },
    "assert counting_sort([3, 8, 9, 2, 2, 1]) == [1, 2, 2, 3, 8, 9]": {
      "result": true,
      "time": 0.051679134368896484,
      "error": null
    },
    "assert counting_sort([6, 2, 10, 5, 4, 3]) == [2, 3, 4, 5, 6, 10]": {
      "result": true,
      "time": 0.046097755432128906,
      "error": null
    },
    "assert counting_sort([3, 7, 14, 2, 5, 4]) == [2, 3, 4, 5, 7, 14]": {
      "result": true,
      "time": 0.05656123161315918,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}