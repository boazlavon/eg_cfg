{
  "code": "def count_bidirectional(tuples_list):\n    count = 0\n    seen_pairs = []\n    \n    for pair in tuples_list:\n        a = pair[0]\n        b = pair[1]\n        reversed_pair = (b, a)\n        \n        if reversed_pair in seen_pairs:\n            count += 1\n            seen_pairs.remove(reversed_pair)\n        else:\n            seen_pairs.append(pair)\n    \n    total_pairs = count * 2\n    return str(total_pairs)",
  "results": {
    "assert count_bidirectional([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)] ) == '3'": {
      "result": false,
      "time": 0.0392758846282959,
      "error": null
    },
    "assert count_bidirectional([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)] ) == '2'": {
      "result": true,
      "time": 0.03872346878051758,
      "error": null
    },
    "assert count_bidirectional([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)] ) == '4'": {
      "result": true,
      "time": 0.033235788345336914,
      "error": null
    },
    "assert count_bidirectional([(4, 10), (4, 5), (2, 9), (8, 2), (9, 7), (4, 3)]) == 1": {
      "result": false,
      "time": 0.04226040840148926,
      "error": null
    },
    "assert count_bidirectional([(8, 6), (2, 4), (3, 4), (8, 2), (4, 3), (4, 6)]) == 4": {
      "result": false,
      "time": 0.04295682907104492,
      "error": null
    },
    "assert count_bidirectional([(4, 8), (2, 4), (2, 2), (9, 1), (11, 7), (1, 5)]) == 1": {
      "result": false,
      "time": 0.03316807746887207,
      "error": null
    },
    "assert count_bidirectional([(6, 7), (6, 3), (5, 9), (7, 6), (11, 7), (5, 2)]) == 1": {
      "result": false,
      "time": 0.03643918037414551,
      "error": null
    },
    "assert count_bidirectional([(3, 2), (6, 1), (11, 2), (4, 5), (5, 2), (3, 3)]) == 1": {
      "result": false,
      "time": 0.04160642623901367,
      "error": null
    },
    "assert count_bidirectional([(7, 2), (1, 6), (11, 9), (9, 5), (11, 4), (1, 1)]) == 1": {
      "result": false,
      "time": 0.042824745178222656,
      "error": null
    },
    "assert count_bidirectional([(5, 8), (5, 6), (7, 9), (12, 1), (10, 10), (7, 5)]) == 0": {
      "result": false,
      "time": 0.04480767250061035,
      "error": null
    },
    "assert count_bidirectional([(7, 7), (3, 2), (4, 7), (7, 6), (5, 6), (2, 5)]) == 3": {
      "result": false,
      "time": 0.036011457443237305,
      "error": null
    },
    "assert count_bidirectional([(3, 10), (1, 2), (6, 1), (7, 3), (8, 9), (6, 1)]) == 0": {
      "result": false,
      "time": 0.045925140380859375,
      "error": null
    },
    "assert count_bidirectional([(5, 11), (5, 4), (10, 5), (8, 5), (9, 7), (2, 4)]) == 0": {
      "result": false,
      "time": 0.03958702087402344,
      "error": null
    },
    "assert count_bidirectional([(7, 3), (5, 3), (8, 8), (12, 2), (3, 3), (3, 4)]) == 5": {
      "result": false,
      "time": 0.04096865653991699,
      "error": null
    },
    "assert count_bidirectional([(10, 8), (3, 1), (9, 10), (5, 4), (5, 10), (7, 6)]) == 0": {
      "result": false,
      "time": 0.05106830596923828,
      "error": null
    },
    "assert count_bidirectional([(9, 6), (1, 5), (3, 1), (6, 1), (9, 9), (2, 3)]) == 1": {
      "result": false,
      "time": 0.033529043197631836,
      "error": null
    },
    "assert count_bidirectional([(9, 5), (6, 6), (11, 9), (7, 5), (6, 6), (1, 2)]) == 1": {
      "result": false,
      "time": 0.04153752326965332,
      "error": null
    },
    "assert count_bidirectional([(8, 1), (4, 6), (4, 10), (14, 4), (9, 4), (6, 3)]) == 1": {
      "result": false,
      "time": 0.04011082649230957,
      "error": null
    },
    "assert count_bidirectional([(7, 1), (5, 6), (2, 2), (4, 4), (7, 7), (7, 3)]) == 1": {
      "result": false,
      "time": 0.03586268424987793,
      "error": null
    },
    "assert count_bidirectional([(10, 11), (5, 4), (9, 2), (7, 1), (7, 1), (7, 6)]) == 0": {
      "result": false,
      "time": 0.047591447830200195,
      "error": null
    },
    "assert count_bidirectional([(3, 5), (3, 4), (11, 2), (7, 5), (9, 3), (1, 6)]) == 0": {
      "result": false,
      "time": 0.038379669189453125,
      "error": null
    },
    "assert count_bidirectional([(9, 10), (5, 4), (6, 6), (11, 6), (2, 7), (2, 5)]) == 0": {
      "result": false,
      "time": 0.04001021385192871,
      "error": null
    },
    "assert count_bidirectional([(7, 2), (4, 5), (6, 8), (4, 4), (5, 4), (2, 5)]) == 2": {
      "result": false,
      "time": 0.03874945640563965,
      "error": null
    },
    "assert count_bidirectional([(2, 4), (4, 1), (6, 4), (9, 4), (11, 8), (1, 3)]) == 2": {
      "result": false,
      "time": 0.03942394256591797,
      "error": null
    },
    "assert count_bidirectional([(2, 7), (3, 3), (5, 3), (11, 3), (3, 9), (5, 4)]) == 3": {
      "result": false,
      "time": 0.03710317611694336,
      "error": null
    },
    "assert count_bidirectional([(2, 1), (6, 1), (9, 3), (14, 3), (10, 8), (1, 3)]) == 2": {
      "result": false,
      "time": 0.04089999198913574,
      "error": null
    },
    "assert count_bidirectional([(5, 6), (4, 1), (6, 2), (14, 6), (2, 8), (5, 6)]) == 2": {
      "result": false,
      "time": 0.039034366607666016,
      "error": null
    },
    "assert count_bidirectional([(6, 3), (5, 4), (3, 8), (9, 4), (10, 6), (1, 2)]) == 1": {
      "result": false,
      "time": 0.04004979133605957,
      "error": null
    },
    "assert count_bidirectional([(9, 4), (2, 7), (4, 7), (12, 4), (10, 8), (6, 6)]) == 1": {
      "result": false,
      "time": 0.038414716720581055,
      "error": null
    },
    "assert count_bidirectional([(9, 5), (2, 4), (1, 4), (6, 1), (3, 1), (3, 1)]) == 0": {
      "result": false,
      "time": 0.03294992446899414,
      "error": null
    },
    "assert count_bidirectional([(2, 10), (2, 3), (7, 6), (13, 2), (6, 7), (2, 3)]) == 2": {
      "result": false,
      "time": 0.03692007064819336,
      "error": null
    },
    "assert count_bidirectional([(3, 2), (4, 2), (8, 10), (11, 4), (6, 3), (7, 1)]) == 0": {
      "result": false,
      "time": 0.03845787048339844,
      "error": null
    },
    "assert count_bidirectional([(3, 9), (5, 6), (10, 7), (12, 2), (1, 10), (1, 4)]) == 0": {
      "result": false,
      "time": 0.03954720497131348,
      "error": null
    },
    "assert count_bidirectional([(7, 10), (4, 5), (6, 4), (7, 1), (7, 2), (4, 2)]) == 1": {
      "result": false,
      "time": 0.05449485778808594,
      "error": null
    },
    "assert count_bidirectional([(2, 11), (2, 3), (11, 4), (5, 3), (5, 1), (5, 5)]) == 1": {
      "result": false,
      "time": 0.04091191291809082,
      "error": null
    },
    "assert count_bidirectional([(3, 4), (4, 4), (2, 6), (4, 3), (6, 3), (1, 2)]) == 4": {
      "result": false,
      "time": 0.05150651931762695,
      "error": null
    },
    "assert count_bidirectional([(2, 6), (1, 8), (10, 1), (5, 3), (8, 1), (2, 2)]) == 1": {
      "result": false,
      "time": 0.04467129707336426,
      "error": null
    },
    "assert count_bidirectional([(9, 6), (3, 4), (8, 6), (12, 5), (8, 5), (2, 2)]) == 0": {
      "result": false,
      "time": 0.042250871658325195,
      "error": null
    },
    "assert count_bidirectional([(5, 1), (6, 4), (10, 8), (12, 5), (5, 4), (2, 1)]) == 1": {
      "result": false,
      "time": 0.036774396896362305,
      "error": null
    },
    "assert count_bidirectional([(9, 3), (2, 4), (1, 9), (11, 3), (7, 1), (1, 2)]) == 1": {
      "result": false,
      "time": 0.03835272789001465,
      "error": null
    },
    "assert count_bidirectional([(5, 1), (3, 8), (6, 4), (11, 2), (5, 10), (4, 4)]) == 1": {
      "result": false,
      "time": 0.036331892013549805,
      "error": null
    },
    "assert count_bidirectional([(7, 8), (3, 3), (2, 4), (12, 3), (2, 9), (7, 4)]) == 0": {
      "result": false,
      "time": 0.03629279136657715,
      "error": null
    },
    "assert count_bidirectional([(10, 3), (6, 5), (10, 7), (14, 6), (10, 2), (2, 2)]) == 1": {
      "result": false,
      "time": 0.049777984619140625,
      "error": null
    },
    "assert count_bidirectional([(10, 6), (5, 3), (7, 7), (11, 1), (1, 4), (7, 4)]) == 2": {
      "result": false,
      "time": 0.04135775566101074,
      "error": null
    },
    "assert count_bidirectional([(9, 1), (4, 8), (7, 10), (4, 6), (6, 2), (1, 2)]) == 2": {
      "result": false,
      "time": 0.0435175895690918,
      "error": null
    },
    "assert count_bidirectional([(4, 7), (4, 8), (11, 4), (5, 5), (2, 10), (3, 3)]) == 0": {
      "result": false,
      "time": 0.046274423599243164,
      "error": null
    },
    "assert count_bidirectional([(6, 9), (4, 1), (5, 10), (13, 2), (2, 7), (7, 6)]) == 2": {
      "result": false,
      "time": 0.04022717475891113,
      "error": null
    },
    "assert count_bidirectional([(1, 9), (2, 7), (3, 9), (5, 2), (1, 7), (3, 3)]) == 0": {
      "result": false,
      "time": 0.04383087158203125,
      "error": null
    },
    "assert count_bidirectional([(3, 9), (2, 4), (1, 10), (8, 2), (5, 1), (1, 2)]) == 1": {
      "result": false,
      "time": 0.042031288146972656,
      "error": null
    },
    "assert count_bidirectional([(8, 8), (4, 2), (1, 8), (6, 4), (6, 2), (6, 2)]) == 0": {
      "result": false,
      "time": 0.05138349533081055,
      "error": null
    },
    "assert count_bidirectional([(2, 10), (1, 7), (11, 7), (13, 5), (3, 9), (1, 6)]) == 0": {
      "result": false,
      "time": 0.04065132141113281,
      "error": null
    },
    "assert count_bidirectional([(8, 7), (3, 4), (10, 6), (5, 3), (5, 2), (1, 2)]) == 0": {
      "result": false,
      "time": 0.0360560417175293,
      "error": null
    },
    "assert count_bidirectional([(1, 5), (3, 4), (11, 6), (13, 5), (9, 1), (1, 4)]) == 1": {
      "result": false,
      "time": 0.03932070732116699,
      "error": null
    },
    "assert count_bidirectional([(10, 3), (1, 8), (2, 2), (8, 5), (2, 6), (1, 3)]) == 2": {
      "result": false,
      "time": 0.0382082462310791,
      "error": null
    },
    "assert count_bidirectional([(7, 4), (3, 8), (9, 8), (4, 6), (5, 7), (3, 1)]) == 1": {
      "result": false,
      "time": 0.03459000587463379,
      "error": null
    },
    "assert count_bidirectional([(1, 9), (2, 8), (3, 4), (10, 6), (5, 3), (5, 3)]) == 0": {
      "result": false,
      "time": 0.038780927658081055,
      "error": null
    },
    "assert count_bidirectional([(4, 8), (4, 5), (11, 7), (7, 2), (5, 5), (3, 2)]) == 2": {
      "result": false,
      "time": 0.03502845764160156,
      "error": null
    },
    "assert count_bidirectional([(1, 3), (2, 6), (3, 7), (4, 4), (10, 2), (2, 3)]) == 2": {
      "result": false,
      "time": 0.03672051429748535,
      "error": null
    },
    "assert count_bidirectional([(4, 4), (1, 5), (6, 9), (10, 1), (10, 6), (2, 5)]) == 0": {
      "result": false,
      "time": 0.05051064491271973,
      "error": null
    },
    "assert count_bidirectional([(5, 7), (2, 3), (10, 8), (10, 6), (10, 5), (3, 6)]) == 1": {
      "result": false,
      "time": 0.038973093032836914,
      "error": null
    },
    "assert count_bidirectional([(7, 6), (5, 1), (5, 8), (5, 1), (5, 1), (7, 3)]) == 0": {
      "result": false,
      "time": 0.04615592956542969,
      "error": null
    },
    "assert count_bidirectional([(9, 6), (5, 5), (5, 6), (7, 6), (10, 1), (5, 6)]) == 2": {
      "result": false,
      "time": 0.049933671951293945,
      "error": null
    },
    "assert count_bidirectional([(7, 5), (5, 1), (5, 9), (8, 4), (5, 6), (4, 1)]) == 4": {
      "result": false,
      "time": 0.03912615776062012,
      "error": null
    },
    "assert count_bidirectional([(9, 7), (2, 2), (8, 5), (6, 6), (9, 9), (7, 6)]) == 1": {
      "result": false,
      "time": 0.04625105857849121,
      "error": null
    },
    "assert count_bidirectional([(5, 6), (5, 8), (2, 3), (13, 4), (10, 1), (1, 2)]) == 1": {
      "result": false,
      "time": 0.04865121841430664,
      "error": null
    },
    "assert count_bidirectional([(3, 7), (5, 2), (11, 8), (8, 6), (4, 8), (5, 3)]) == 1": {
      "result": false,
      "time": 0.0436859130859375,
      "error": null
    },
    "assert count_bidirectional([(4, 4), (2, 4), (10, 1), (4, 4), (7, 3), (7, 2)]) == 2": {
      "result": false,
      "time": 0.04555988311767578,
      "error": null
    },
    "assert count_bidirectional([(4, 4), (5, 1), (11, 5), (6, 3), (10, 6), (5, 5)]) == 1": {
      "result": false,
      "time": 0.0477750301361084,
      "error": null
    },
    "assert count_bidirectional([(5, 9), (2, 6), (5, 8), (6, 6), (2, 4), (3, 5)]) == 1": {
      "result": false,
      "time": 0.04009532928466797,
      "error": null
    },
    "assert count_bidirectional([(2, 8), (2, 5), (6, 2), (12, 5), (4, 10), (2, 4)]) == 1": {
      "result": false,
      "time": 0.04618501663208008,
      "error": null
    },
    "assert count_bidirectional([(3, 11), (5, 4), (2, 10), (12, 3), (6, 4), (5, 4)]) == 0": {
      "result": false,
      "time": 0.04346632957458496,
      "error": null
    },
    "assert count_bidirectional([(4, 9), (5, 3), (7, 3), (10, 3), (4, 3), (2, 1)]) == 0": {
      "result": false,
      "time": 0.05171060562133789,
      "error": null
    },
    "assert count_bidirectional([(9, 10), (2, 6), (3, 1), (11, 6), (2, 10), (2, 3)]) == 0": {
      "result": false,
      "time": 0.045679330825805664,
      "error": null
    },
    "assert count_bidirectional([(6, 4), (1, 3), (7, 8), (9, 3), (7, 5), (4, 6)]) == 1": {
      "result": false,
      "time": 0.04757857322692871,
      "error": null
    },
    "assert count_bidirectional([(6, 2), (6, 1), (10, 3), (12, 2), (5, 4), (5, 4)]) == 0": {
      "result": false,
      "time": 0.05069398880004883,
      "error": null
    },
    "assert count_bidirectional([(3, 5), (3, 5), (8, 4), (9, 5), (9, 5), (2, 4)]) == 0": {
      "result": false,
      "time": 0.039157867431640625,
      "error": null
    },
    "assert count_bidirectional([(4, 8), (4, 2), (9, 9), (5, 4), (2, 1), (7, 4)]) == 1": {
      "result": false,
      "time": 0.042273521423339844,
      "error": null
    },
    "assert count_bidirectional([(7, 10), (6, 3), (10, 3), (9, 6), (5, 2), (3, 6)]) == 3": {
      "result": false,
      "time": 0.03627753257751465,
      "error": null
    },
    "assert count_bidirectional([(5, 2), (5, 6), (9, 8), (8, 3), (9, 7), (2, 3)]) == 2": {
      "result": false,
      "time": 0.0647726058959961,
      "error": null
    },
    "assert count_bidirectional([(3, 10), (3, 6), (1, 3), (13, 3), (10, 3), (2, 2)]) == 1": {
      "result": false,
      "time": 0.04069972038269043,
      "error": null
    },
    "assert count_bidirectional([(9, 11), (4, 4), (2, 1), (9, 6), (3, 6), (6, 6)]) == 2": {
      "result": false,
      "time": 0.04211688041687012,
      "error": null
    },
    "assert count_bidirectional([(9, 2), (1, 3), (9, 8), (7, 2), (6, 3), (3, 5)]) == 2": {
      "result": false,
      "time": 0.04291176795959473,
      "error": null
    },
    "assert count_bidirectional([(1, 2), (1, 6), (5, 10), (5, 6), (4, 7), (4, 4)]) == 0": {
      "result": false,
      "time": 0.0487818717956543,
      "error": null
    },
    "assert count_bidirectional([(2, 4), (5, 5), (2, 4), (5, 3), (1, 7), (6, 6)]) == 1": {
      "result": false,
      "time": 0.04376506805419922,
      "error": null
    },
    "assert count_bidirectional([(5, 9), (3, 5), (3, 9), (5, 7), (6, 9), (4, 5)]) == 1": {
      "result": false,
      "time": 0.04135918617248535,
      "error": null
    },
    "assert count_bidirectional([(9, 8), (5, 5), (9, 6), (7, 7), (10, 9), (3, 5)]) == 0": {
      "result": false,
      "time": 0.044499874114990234,
      "error": null
    },
    "assert count_bidirectional([(10, 5), (3, 5), (11, 5), (12, 4), (9, 3), (4, 1)]) == 1": {
      "result": false,
      "time": 0.04940009117126465,
      "error": null
    },
    "assert count_bidirectional([(4, 5), (2, 6), (2, 3), (11, 1), (2, 2), (6, 4)]) == 1": {
      "result": false,
      "time": 0.047447919845581055,
      "error": null
    },
    "assert count_bidirectional([(7, 3), (3, 7), (1, 9), (11, 5), (7, 8), (6, 4)]) == 2": {
      "result": false,
      "time": 0.04017901420593262,
      "error": null
    },
    "assert count_bidirectional([(4, 10), (5, 6), (11, 7), (14, 6), (4, 8), (6, 1)]) == 2": {
      "result": false,
      "time": 0.048607587814331055,
      "error": null
    },
    "assert count_bidirectional([(4, 7), (1, 2), (1, 1), (8, 7), (1, 3), (2, 5)]) == 2": {
      "result": false,
      "time": 0.05106043815612793,
      "error": null
    },
    "assert count_bidirectional([(8, 8), (5, 2), (9, 7), (12, 5), (6, 3), (2, 5)]) == 1": {
      "result": false,
      "time": 0.051470041275024414,
      "error": null
    },
    "assert count_bidirectional([(3, 5), (1, 4), (3, 1), (4, 2), (3, 10), (2, 6)]) == 2": {
      "result": false,
      "time": 0.04271531105041504,
      "error": null
    },
    "assert count_bidirectional([(7, 8), (1, 3), (7, 10), (9, 5), (11, 3), (5, 5)]) == 1": {
      "result": false,
      "time": 0.04039645195007324,
      "error": null
    },
    "assert count_bidirectional([(9, 2), (4, 2), (4, 7), (5, 7), (9, 8), (7, 6)]) == 2": {
      "result": false,
      "time": 0.04444313049316406,
      "error": null
    },
    "assert count_bidirectional([(6, 7), (3, 5), (2, 6), (12, 4), (8, 5), (5, 5)]) == 2": {
      "result": false,
      "time": 0.05384516716003418,
      "error": null
    },
    "assert count_bidirectional([(7, 9), (5, 7), (4, 4), (5, 4), (6, 5), (3, 1)]) == 0": {
      "result": false,
      "time": 0.04097151756286621,
      "error": null
    },
    "assert count_bidirectional([(9, 2), (2, 7), (11, 3), (10, 7), (3, 7), (4, 5)]) == 2": {
      "result": false,
      "time": 0.0440218448638916,
      "error": null
    },
    "assert count_bidirectional([(6, 11), (4, 7), (9, 6), (12, 3), (4, 1), (1, 6)]) == 1": {
      "result": false,
      "time": 0.048770904541015625,
      "error": null
    },
    "assert count_bidirectional([(8, 8), (6, 7), (10, 2), (10, 6), (6, 1), (3, 6)]) == 1": {
      "result": false,
      "time": 0.04676938056945801,
      "error": null
    },
    "assert count_bidirectional([(2, 1), (1, 2), (5, 9), (7, 2), (10, 6), (7, 1)]) == 1": {
      "result": false,
      "time": 0.045284271240234375,
      "error": null
    },
    "assert count_bidirectional([(3, 10), (1, 1), (6, 10), (6, 4), (5, 5), (5, 6)]) == 1": {
      "result": false,
      "time": 0.05125260353088379,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0196078431372549,
  "general_error": "",
  "has_testcase_error": false
}