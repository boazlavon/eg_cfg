{
  "code": "def k_smallest_pairs(nums1, nums2, k):\n    if not nums1 or not nums2:\n        return []\n    \n    pairs = []\n    for num1 in nums1:\n        for num2 in nums2:\n            pair = [num1, num2]\n            pairs.append(pair)\n    \n    def sum_pair(pair):\n        return pair[0] + pair[1]\n    \n    sorted_pairs = sorted(pairs, key=sum_pair)\n    \n    result = []\n    for i in range(min(k, len(sorted_pairs))):\n        result.append(sorted_pairs[i])\n    \n    return result",
  "results": {
    "assert k_smallest_pairs([1,3,7],[2,4,6],2)==[[1, 2], [1, 4]]": {
      "result": true,
      "time": 0.04256772994995117,
      "error": null
    },
    "assert k_smallest_pairs([1,3,7],[2,4,6],1)==[[1, 2]]": {
      "result": true,
      "time": 0.039952993392944336,
      "error": null
    },
    "assert k_smallest_pairs([1,3,7],[2,4,6],7)==[[1, 2], [1, 4], [3, 2], [1, 6], [3, 4], [3, 6], [7, 2]]": {
      "result": true,
      "time": 0.04245471954345703,
      "error": null
    },
    "assert k_smallest_pairs([5, 2, 11], [1, 7, 11], 5) == [[5, 1], [2, 1], [2, 7], [5, 7], [11, 1]]": {
      "result": false,
      "time": 0.04975557327270508,
      "error": null
    },
    "assert k_smallest_pairs([3, 7, 12], [6, 3, 6], 7) == [[3, 6], [3, 3], [3, 6], [7, 6], [7, 3], [7, 6], [12, 6]]": {
      "result": false,
      "time": 0.043549537658691406,
      "error": null
    },
    "assert k_smallest_pairs([2, 1, 9], [5, 3, 10], 6) == [[2, 5], [2, 3], [1, 5], [1, 3], [1, 10], [2, 10]]": {
      "result": false,
      "time": 0.04224801063537598,
      "error": null
    },
    "assert k_smallest_pairs([6, 5, 6], [5, 9, 5], 7) == [[6, 5], [5, 5], [6, 5], [5, 9], [5, 5], [6, 9], [6, 5]]": {
      "result": false,
      "time": 0.0438382625579834,
      "error": null
    },
    "assert k_smallest_pairs([2, 8, 5], [6, 8, 3], 6) == [[2, 6], [2, 8], [2, 3], [8, 6], [5, 6], [5, 8]]": {
      "result": false,
      "time": 0.041631460189819336,
      "error": null
    },
    "assert k_smallest_pairs([5, 2, 4], [4, 7, 6], 7) == [[5, 4], [2, 4], [4, 4], [2, 7], [2, 6], [4, 7], [4, 6]]": {
      "result": false,
      "time": 0.054781436920166016,
      "error": null
    },
    "assert k_smallest_pairs([4, 1, 10], [3, 2, 6], 7) == [[4, 3], [1, 3], [1, 2], [4, 2], [1, 6], [4, 6], [10, 3]]": {
      "result": false,
      "time": 0.05350661277770996,
      "error": null
    },
    "assert k_smallest_pairs([3, 7, 5], [2, 6, 3], 5) == [[3, 2], [3, 6], [3, 3], [7, 2], [5, 2]]": {
      "result": false,
      "time": 0.039155006408691406,
      "error": null
    },
    "assert k_smallest_pairs([6, 3, 8], [5, 8, 9], 6) == [[6, 5], [3, 5], [3, 8], [3, 9], [8, 5], [6, 8]]": {
      "result": false,
      "time": 0.04455757141113281,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 9], [6, 7, 6], 7) == [[2, 6], [2, 6], [2, 7], [2, 6], [2, 7], [2, 6], [9, 6]]": {
      "result": false,
      "time": 0.041866302490234375,
      "error": null
    },
    "assert k_smallest_pairs([3, 6, 4], [7, 1, 2], 6) == [[3, 7], [3, 1], [3, 2], [6, 7], [6, 1], [6, 2]]": {
      "result": false,
      "time": 0.04022645950317383,
      "error": null
    },
    "assert k_smallest_pairs([5, 3, 11], [2, 8, 7], 1) == [[5, 2]]": {
      "result": false,
      "time": 0.03591656684875488,
      "error": null
    },
    "assert k_smallest_pairs([4, 6, 5], [2, 6, 1], 2) == [[4, 2], [6, 2]]": {
      "result": false,
      "time": 0.04778313636779785,
      "error": null
    },
    "assert k_smallest_pairs([1, 7, 2], [6, 9, 3], 3) == [[1, 6], [1, 9], [1, 3]]": {
      "result": false,
      "time": 0.051104068756103516,
      "error": null
    },
    "assert k_smallest_pairs([3, 2, 12], [1, 8, 3], 5) == [[3, 1], [2, 1], [2, 8], [2, 3], [3, 8]]": {
      "result": false,
      "time": 0.037215232849121094,
      "error": null
    },
    "assert k_smallest_pairs([2, 8, 8], [1, 9, 10], 3) == [[2, 1], [8, 1], [8, 1]]": {
      "result": true,
      "time": 0.050357818603515625,
      "error": null
    },
    "assert k_smallest_pairs([2, 5, 4], [7, 1, 9], 6) == [[2, 7], [2, 1], [2, 9], [5, 7], [5, 1], [4, 7]]": {
      "result": false,
      "time": 0.039757728576660156,
      "error": null
    },
    "assert k_smallest_pairs([5, 4, 9], [4, 3, 9], 4) == [[5, 4], [5, 3], [4, 4], [4, 3]]": {
      "result": false,
      "time": 0.03634381294250488,
      "error": null
    },
    "assert k_smallest_pairs([6, 8, 7], [1, 9, 3], 4) == [[6, 1], [8, 1], [7, 1], [6, 9]]": {
      "result": false,
      "time": 0.040439605712890625,
      "error": null
    },
    "assert k_smallest_pairs([5, 3, 5], [3, 1, 2], 3) == [[5, 3], [5, 1], [3, 3]]": {
      "result": false,
      "time": 0.047627925872802734,
      "error": null
    },
    "assert k_smallest_pairs([1, 1, 10], [1, 7, 6], 3) == [[1, 1], [1, 1], [1, 7]]": {
      "result": false,
      "time": 0.04494214057922363,
      "error": null
    },
    "assert k_smallest_pairs([6, 7, 3], [1, 3, 8], 1) == [[6, 1]]": {
      "result": false,
      "time": 0.039313316345214844,
      "error": null
    },
    "assert k_smallest_pairs([6, 1, 8], [4, 8, 3], 3) == [[6, 4], [1, 4], [1, 8]]": {
      "result": false,
      "time": 0.039361000061035156,
      "error": null
    },
    "assert k_smallest_pairs([3, 1, 2], [1, 4, 10], 6) == [[3, 1], [1, 1], [2, 1], [1, 4], [2, 4], [3, 4]]": {
      "result": false,
      "time": 0.04888176918029785,
      "error": null
    },
    "assert k_smallest_pairs([2, 7, 4], [1, 5, 4], 3) == [[2, 1], [2, 5], [2, 4]]": {
      "result": false,
      "time": 0.05644536018371582,
      "error": null
    },
    "assert k_smallest_pairs([4, 4, 4], [1, 5, 2], 5) == [[4, 1], [4, 1], [4, 1], [4, 5], [4, 2]]": {
      "result": false,
      "time": 0.04229927062988281,
      "error": null
    },
    "assert k_smallest_pairs([2, 6, 5], [7, 7, 2], 7) == [[2, 7], [2, 7], [2, 2], [6, 7], [5, 7], [5, 7], [5, 2]]": {
      "result": false,
      "time": 0.03624534606933594,
      "error": null
    },
    "assert k_smallest_pairs([6, 2, 11], [4, 2, 6], 3) == [[6, 4], [2, 4], [2, 2]]": {
      "result": false,
      "time": 0.042330265045166016,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 8], [6, 3, 9], 5) == [[2, 6], [2, 3], [2, 6], [2, 3], [2, 9]]": {
      "result": false,
      "time": 0.042737722396850586,
      "error": null
    },
    "assert k_smallest_pairs([4, 2, 5], [2, 7, 6], 4) == [[4, 2], [2, 2], [5, 2], [2, 7]]": {
      "result": false,
      "time": 0.04650282859802246,
      "error": null
    },
    "assert k_smallest_pairs([6, 3, 9], [1, 4, 11], 4) == [[6, 1], [3, 1], [3, 4], [6, 4]]": {
      "result": false,
      "time": 0.04570722579956055,
      "error": null
    },
    "assert k_smallest_pairs([2, 7, 8], [7, 8, 8], 1) == [[2, 7]]": {
      "result": true,
      "time": 0.05113792419433594,
      "error": null
    },
    "assert k_smallest_pairs([5, 2, 9], [2, 8, 10], 7) == [[5, 2], [2, 2], [2, 8], [9, 2], [2, 10], [5, 8], [5, 10]]": {
      "result": false,
      "time": 0.04193568229675293,
      "error": null
    },
    "assert k_smallest_pairs([2, 1, 12], [5, 5, 3], 6) == [[2, 5], [1, 5], [1, 5], [1, 3], [2, 5], [2, 3]]": {
      "result": false,
      "time": 0.04425621032714844,
      "error": null
    },
    "assert k_smallest_pairs([2, 8, 9], [3, 3, 10], 6) == [[2, 3], [2, 3], [8, 3], [8, 3], [2, 10], [9, 3]]": {
      "result": true,
      "time": 0.0438232421875,
      "error": null
    },
    "assert k_smallest_pairs([3, 1, 9], [1, 8, 6], 4) == [[3, 1], [1, 1], [1, 8], [1, 6]]": {
      "result": false,
      "time": 0.0450747013092041,
      "error": null
    },
    "assert k_smallest_pairs([3, 6, 10], [3, 7, 11], 3) == [[3, 3], [6, 3], [3, 7]]": {
      "result": true,
      "time": 0.04958844184875488,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 10], [6, 2, 7], 4) == [[2, 6], [2, 2], [2, 6], [2, 2]]": {
      "result": false,
      "time": 0.047342777252197266,
      "error": null
    },
    "assert k_smallest_pairs([6, 3, 11], [3, 8, 3], 4) == [[6, 3], [3, 3], [3, 8], [3, 3]]": {
      "result": false,
      "time": 0.04531216621398926,
      "error": null
    },
    "assert k_smallest_pairs([6, 3, 6], [7, 4, 7], 2) == [[6, 7], [6, 4]]": {
      "result": false,
      "time": 0.052491188049316406,
      "error": null
    },
    "assert k_smallest_pairs([1, 8, 9], [4, 4, 3], 6) == [[1, 4], [1, 4], [1, 3], [8, 4], [8, 4], [8, 3]]": {
      "result": false,
      "time": 0.04027962684631348,
      "error": null
    },
    "assert k_smallest_pairs([4, 3, 11], [2, 6, 1], 6) == [[4, 2], [3, 2], [3, 6], [3, 1], [4, 6], [4, 1]]": {
      "result": false,
      "time": 0.04601907730102539,
      "error": null
    },
    "assert k_smallest_pairs([1, 1, 6], [2, 8, 5], 2) == [[1, 2], [1, 2]]": {
      "result": true,
      "time": 0.03798055648803711,
      "error": null
    },
    "assert k_smallest_pairs([6, 5, 9], [2, 6, 7], 6) == [[6, 2], [5, 2], [5, 6], [9, 2], [6, 6], [5, 7]]": {
      "result": false,
      "time": 0.04352927207946777,
      "error": null
    },
    "assert k_smallest_pairs([2, 7, 2], [5, 9, 6], 6) == [[2, 5], [2, 9], [2, 6], [7, 5], [2, 5], [2, 9]]": {
      "result": false,
      "time": 0.052767038345336914,
      "error": null
    },
    "assert k_smallest_pairs([1, 7, 12], [7, 1, 2], 6) == [[1, 7], [1, 1], [1, 2], [7, 7], [7, 1], [7, 2]]": {
      "result": false,
      "time": 0.04332423210144043,
      "error": null
    },
    "assert k_smallest_pairs([3, 7, 10], [3, 3, 10], 6) == [[3, 3], [3, 3], [7, 3], [7, 3], [3, 10], [10, 3]]": {
      "result": true,
      "time": 0.03848719596862793,
      "error": null
    },
    "assert k_smallest_pairs([5, 2, 3], [1, 7, 11], 2) == [[5, 1], [2, 1]]": {
      "result": false,
      "time": 0.04620862007141113,
      "error": null
    },
    "assert k_smallest_pairs([5, 5, 9], [2, 8, 6], 1) == [[5, 2]]": {
      "result": true,
      "time": 0.0345461368560791,
      "error": null
    },
    "assert k_smallest_pairs([1, 3, 2], [4, 8, 8], 3) == [[1, 4], [3, 4], [2, 4]]": {
      "result": false,
      "time": 0.03628349304199219,
      "error": null
    },
    "assert k_smallest_pairs([2, 5, 4], [7, 6, 2], 5) == [[2, 7], [2, 6], [2, 2], [5, 7], [5, 6]]": {
      "result": false,
      "time": 0.04446768760681152,
      "error": null
    },
    "assert k_smallest_pairs([1, 5, 12], [4, 8, 7], 3) == [[1, 4], [1, 8], [1, 7]]": {
      "result": false,
      "time": 0.04347848892211914,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 8], [2, 2, 5], 4) == [[2, 2], [2, 2], [2, 2], [2, 2]]": {
      "result": true,
      "time": 0.04350733757019043,
      "error": null
    },
    "assert k_smallest_pairs([1, 3, 9], [6, 4, 4], 4) == [[1, 6], [1, 4], [1, 4], [3, 6]]": {
      "result": false,
      "time": 0.0461885929107666,
      "error": null
    },
    "assert k_smallest_pairs([5, 2, 12], [5, 1, 7], 2) == [[5, 5], [5, 1]]": {
      "result": false,
      "time": 0.038857460021972656,
      "error": null
    },
    "assert k_smallest_pairs([6, 5, 7], [7, 6, 6], 2) == [[6, 7], [6, 6]]": {
      "result": false,
      "time": 0.0469815731048584,
      "error": null
    },
    "assert k_smallest_pairs([1, 4, 3], [7, 6, 8], 3) == [[1, 7], [1, 6], [1, 8]]": {
      "result": false,
      "time": 0.045847177505493164,
      "error": null
    },
    "assert k_smallest_pairs([4, 2, 9], [1, 2, 8], 6) == [[4, 1], [2, 1], [2, 2], [4, 2], [2, 8], [9, 1]]": {
      "result": false,
      "time": 0.04339957237243652,
      "error": null
    },
    "assert k_smallest_pairs([6, 5, 4], [3, 1, 2], 3) == [[6, 3], [6, 1], [6, 2]]": {
      "result": false,
      "time": 0.03656959533691406,
      "error": null
    },
    "assert k_smallest_pairs([3, 3, 10], [5, 8, 6], 6) == [[3, 5], [3, 5], [3, 8], [3, 6], [3, 8], [3, 6]]": {
      "result": false,
      "time": 0.03705310821533203,
      "error": null
    },
    "assert k_smallest_pairs([1, 1, 3], [1, 7, 9], 4) == [[1, 1], [1, 1], [3, 1], [1, 7]]": {
      "result": true,
      "time": 0.04050707817077637,
      "error": null
    },
    "assert k_smallest_pairs([3, 3, 4], [4, 1, 2], 6) == [[3, 4], [3, 1], [3, 2], [3, 4], [3, 1], [3, 2]]": {
      "result": false,
      "time": 0.03814816474914551,
      "error": null
    },
    "assert k_smallest_pairs([5, 3, 5], [6, 5, 11], 1) == [[5, 6]]": {
      "result": false,
      "time": 0.03571367263793945,
      "error": null
    },
    "assert k_smallest_pairs([6, 3, 3], [4, 9, 6], 4) == [[6, 4], [3, 4], [3, 4], [3, 9]]": {
      "result": false,
      "time": 0.03962206840515137,
      "error": null
    },
    "assert k_smallest_pairs([6, 2, 7], [4, 1, 4], 5) == [[6, 4], [2, 4], [2, 1], [2, 4], [6, 1]]": {
      "result": false,
      "time": 0.057273149490356445,
      "error": null
    },
    "assert k_smallest_pairs([2, 8, 3], [6, 5, 5], 6) == [[2, 6], [2, 5], [2, 5], [8, 6], [3, 6], [3, 5]]": {
      "result": false,
      "time": 0.03896355628967285,
      "error": null
    },
    "assert k_smallest_pairs([4, 2, 10], [3, 7, 1], 9) == [[4, 3], [2, 3], [2, 7], [2, 1], [4, 7], [4, 1], [10, 3], [10, 7], [10, 1]]": {
      "result": false,
      "time": 0.04245710372924805,
      "error": null
    },
    "assert k_smallest_pairs([1, 4, 4], [2, 8, 5], 3) == [[1, 2], [4, 2], [4, 2]]": {
      "result": false,
      "time": 0.045580387115478516,
      "error": null
    },
    "assert k_smallest_pairs([2, 4, 7], [2, 1, 7], 6) == [[2, 2], [2, 1], [4, 2], [4, 1], [2, 7], [7, 2]]": {
      "result": false,
      "time": 0.05527329444885254,
      "error": null
    },
    "assert k_smallest_pairs([5, 8, 2], [3, 5, 5], 7) == [[5, 3], [5, 5], [5, 5], [8, 3], [2, 3], [2, 5], [2, 5]]": {
      "result": false,
      "time": 0.039968013763427734,
      "error": null
    },
    "assert k_smallest_pairs([3, 3, 7], [1, 9, 9], 3) == [[3, 1], [3, 1], [7, 1]]": {
      "result": true,
      "time": 0.04132962226867676,
      "error": null
    },
    "assert k_smallest_pairs([4, 5, 8], [1, 1, 7], 7) == [[4, 1], [4, 1], [5, 1], [5, 1], [8, 1], [8, 1], [4, 7]]": {
      "result": true,
      "time": 0.043036699295043945,
      "error": null
    },
    "assert k_smallest_pairs([2, 8, 4], [6, 2, 9], 8) == [[2, 6], [2, 2], [2, 9], [8, 6], [8, 2], [4, 6], [4, 2], [4, 9]]": {
      "result": false,
      "time": 0.04570651054382324,
      "error": null
    },
    "assert k_smallest_pairs([3, 5, 4], [4, 7, 11], 9) == [[3, 4], [5, 4], [4, 4], [3, 7], [4, 7], [5, 7], [3, 11], [4, 11], [5, 11]]": {
      "result": false,
      "time": 0.04328131675720215,
      "error": null
    },
    "assert k_smallest_pairs([3, 5, 8], [6, 9, 3], 12) == [[3, 6], [5, 6], [3, 9], [3, 3], [5, 9], [5, 3], [8, 6], [8, 9], [8, 3]]": {
      "result": false,
      "time": 0.03991270065307617,
      "error": null
    },
    "assert k_smallest_pairs([3, 1, 11], [3, 3, 1], 12) == [[3, 3], [1, 3], [1, 3], [1, 1], [3, 3], [3, 1], [11, 3], [11, 3], [11, 1]]": {
      "result": false,
      "time": 0.03881669044494629,
      "error": null
    },
    "assert k_smallest_pairs([2, 5, 2], [1, 6, 4], 9) == [[2, 1], [5, 1], [2, 1], [2, 6], [2, 4], [2, 6], [2, 4], [5, 6], [5, 4]]": {
      "result": false,
      "time": 0.04593348503112793,
      "error": null
    },
    "assert k_smallest_pairs([4, 1, 3], [2, 4, 1], 4) == [[4, 2], [1, 2], [1, 4], [1, 1]]": {
      "result": false,
      "time": 0.03886127471923828,
      "error": null
    },
    "assert k_smallest_pairs([6, 4, 9], [4, 3, 9], 10) == [[6, 4], [4, 4], [4, 3], [6, 3], [4, 9], [9, 4], [9, 3], [6, 9], [9, 9]]": {
      "result": false,
      "time": 0.029500246047973633,
      "error": null
    },
    "assert k_smallest_pairs([2, 6, 2], [4, 8, 4], 6) == [[2, 4], [2, 8], [2, 4], [6, 4], [2, 4], [2, 8]]": {
      "result": false,
      "time": 0.04007077217102051,
      "error": null
    },
    "assert k_smallest_pairs([3, 7, 10], [5, 3, 11], 12) == [[3, 5], [3, 3], [7, 5], [7, 3], [3, 11], [10, 5], [10, 3], [7, 11], [10, 11]]": {
      "result": false,
      "time": 0.04209637641906738,
      "error": null
    },
    "assert k_smallest_pairs([2, 7, 9], [5, 6, 9], 12) == [[2, 5], [2, 6], [2, 9], [7, 5], [7, 6], [9, 5], [9, 6], [7, 9], [9, 9]]": {
      "result": true,
      "time": 0.045838356018066406,
      "error": null
    },
    "assert k_smallest_pairs([5, 1, 8], [5, 7, 6], 8) == [[5, 5], [1, 5], [1, 7], [1, 6], [5, 7], [5, 6], [8, 5], [8, 7]]": {
      "result": false,
      "time": 0.036574602127075195,
      "error": null
    },
    "assert k_smallest_pairs([2, 1, 11], [3, 2, 11], 3) == [[2, 3], [2, 2], [1, 3]]": {
      "result": false,
      "time": 0.03556180000305176,
      "error": null
    },
    "assert k_smallest_pairs([2, 1, 12], [5, 8, 1], 9) == [[2, 5], [1, 5], [1, 8], [1, 1], [2, 8], [2, 1], [12, 5], [12, 8], [12, 1]]": {
      "result": false,
      "time": 0.03448843955993652,
      "error": null
    },
    "assert k_smallest_pairs([2, 4, 8], [4, 9, 9], 12) == [[2, 4], [4, 4], [2, 9], [2, 9], [8, 4], [4, 9], [4, 9], [8, 9], [8, 9]]": {
      "result": true,
      "time": 0.040566205978393555,
      "error": null
    },
    "assert k_smallest_pairs([5, 5, 7], [2, 2, 8], 4) == [[5, 2], [5, 2], [5, 2], [5, 2]]": {
      "result": true,
      "time": 0.03717970848083496,
      "error": null
    },
    "assert k_smallest_pairs([5, 5, 3], [3, 4, 3], 12) == [[5, 3], [5, 3], [3, 3], [3, 4], [3, 3], [5, 4], [5, 3], [5, 4], [5, 3]]": {
      "result": false,
      "time": 0.039444923400878906,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 9], [3, 7, 2], 10) == [[2, 3], [2, 3], [2, 7], [2, 2], [2, 7], [2, 2], [9, 3], [9, 7], [9, 2]]": {
      "result": false,
      "time": 0.03919577598571777,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 12], [2, 5, 10], 8) == [[2, 2], [2, 2], [2, 5], [2, 5], [2, 10], [2, 10], [12, 2], [12, 5]]": {
      "result": true,
      "time": 0.04691267013549805,
      "error": null
    },
    "assert k_smallest_pairs([4, 6, 3], [5, 6, 8], 12) == [[4, 5], [4, 6], [6, 5], [3, 5], [3, 6], [3, 8], [4, 8], [6, 6], [6, 8]]": {
      "result": false,
      "time": 0.04379582405090332,
      "error": null
    },
    "assert k_smallest_pairs([2, 3, 5], [2, 8, 8], 8) == [[2, 2], [3, 2], [5, 2], [2, 8], [2, 8], [3, 8], [3, 8], [5, 8]]": {
      "result": true,
      "time": 0.04247140884399414,
      "error": null
    },
    "assert k_smallest_pairs([6, 7, 4], [4, 8, 6], 9) == [[6, 4], [7, 4], [4, 4], [4, 8], [4, 6], [6, 8], [6, 6], [7, 8], [7, 6]]": {
      "result": false,
      "time": 0.043018341064453125,
      "error": null
    },
    "assert k_smallest_pairs([1, 1, 7], [7, 6, 2], 2) == [[1, 7], [1, 6]]": {
      "result": false,
      "time": 0.03858780860900879,
      "error": null
    },
    "assert k_smallest_pairs([2, 5, 6], [5, 9, 10], 3) == [[2, 5], [5, 5], [2, 9]]": {
      "result": true,
      "time": 0.03729701042175293,
      "error": null
    },
    "assert k_smallest_pairs([3, 7, 3], [7, 3, 8], 5) == [[3, 7], [3, 3], [3, 8], [7, 7], [7, 3]]": {
      "result": false,
      "time": 0.03891921043395996,
      "error": null
    },
    "assert k_smallest_pairs([1, 8, 12], [5, 3, 6], 9) == [[1, 5], [1, 3], [1, 6], [8, 5], [8, 3], [8, 6], [12, 5], [12, 3], [12, 6]]": {
      "result": false,
      "time": 0.03724360466003418,
      "error": null
    },
    "assert k_smallest_pairs([5, 1, 10], [7, 8, 3], 5) == [[5, 7], [1, 7], [1, 8], [1, 3], [5, 8]]": {
      "result": false,
      "time": 0.043805599212646484,
      "error": null
    },
    "assert k_smallest_pairs([6, 4, 9], [7, 7, 7], 8) == [[6, 7], [4, 7], [4, 7], [4, 7], [6, 7], [6, 7], [9, 7], [9, 7]]": {
      "result": false,
      "time": 0.03869056701660156,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.19607843137254902,
  "general_error": "",
  "has_testcase_error": false
}