{
  "code": "def fourth_Power_Sum(n):\n    total = 0\n    for i in range(1, n + 1):\n        fourth_power = i ** 4\n        total = total + fourth_power\n    return total",
  "results": {
    "assert fourth_Power_Sum(2) == 17": {
      "result": true,
      "time": 0.047942399978637695,
      "error": null
    },
    "assert fourth_Power_Sum(4) == 354": {
      "result": true,
      "time": 0.04701542854309082,
      "error": null
    },
    "assert fourth_Power_Sum(6) == 2275": {
      "result": true,
      "time": 0.04267430305480957,
      "error": null
    },
    "assert fourth_Power_Sum(1) == 1": {
      "result": true,
      "time": 0.05042123794555664,
      "error": null
    },
    "assert fourth_Power_Sum(5) == 979": {
      "result": true,
      "time": 0.043759822845458984,
      "error": null
    },
    "assert fourth_Power_Sum(3) == 98": {
      "result": true,
      "time": 0.04132556915283203,
      "error": null
    },
    "assert fourth_Power_Sum(7) == 4676": {
      "result": true,
      "time": 0.052704811096191406,
      "error": null
    },
    "assert fourth_Power_Sum(8) == 8772": {
      "result": true,
      "time": 0.0408322811126709,
      "error": null
    },
    "assert fourth_Power_Sum(9) == 15333": {
      "result": true,
      "time": 0.0396885871887207,
      "error": null
    },
    "assert fourth_Power_Sum(10) == 25333": {
      "result": true,
      "time": 0.04417991638183594,
      "error": null
    },
    "assert fourth_Power_Sum(11) == 39974": {
      "result": true,
      "time": 0.04189133644104004,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}