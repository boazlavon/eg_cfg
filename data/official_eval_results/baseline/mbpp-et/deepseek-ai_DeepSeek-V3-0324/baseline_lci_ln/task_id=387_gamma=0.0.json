{
  "code": "def even_or_odd(hex_number):\n    # Get the last character of the hexadecimal string\n    last_char = hex_number[-1]\n    \n    # Convert the last character to lowercase to handle both cases\n    last_char_lower = last_char.lower()\n    \n    # Define the set of even hexadecimal digits\n    even_digits = {'0', '2', '4', '6', '8', 'a', 'c', 'e'}\n    \n    # Check if the last character is in the even_digits set\n    if last_char_lower in even_digits:\n        result = \"Even\"\n    else:\n        result = \"Odd\"\n    \n    return result",
  "results": {
    "assert even_or_odd(\"AB3454D\") ==\"Odd\"": {
      "result": true,
      "time": 0.0512239933013916,
      "error": null
    },
    "assert even_or_odd(\"ABC\") == \"Even\"": {
      "result": true,
      "time": 0.05892515182495117,
      "error": null
    },
    "assert even_or_odd(\"AAD\") == \"Odd\"": {
      "result": true,
      "time": 0.055414438247680664,
      "error": null
    },
    "assert even_or_odd(\"0ZMI6M5\") == \"Odd\"": {
      "result": true,
      "time": 0.05267763137817383,
      "error": null
    },
    "assert even_or_odd(\"KGI4C\") == \"Even\"": {
      "result": true,
      "time": 0.05859088897705078,
      "error": null
    },
    "assert even_or_odd(\"4HMPH\") == \"Odd\"": {
      "result": true,
      "time": 0.05322885513305664,
      "error": null
    },
    "assert even_or_odd(\"HX7YL1VTRH\") == \"Odd\"": {
      "result": true,
      "time": 0.053554534912109375,
      "error": null
    },
    "assert even_or_odd(\"E7OXXJFLYHP\") == \"Odd\"": {
      "result": true,
      "time": 0.04291820526123047,
      "error": null
    },
    "assert even_or_odd(\"A3MI90K\") == \"Odd\"": {
      "result": true,
      "time": 0.034070730209350586,
      "error": null
    },
    "assert even_or_odd(\"DUD9C\") == \"Even\"": {
      "result": true,
      "time": 0.04310274124145508,
      "error": null
    },
    "assert even_or_odd(\"A0G53WC98IJ\") == \"Odd\"": {
      "result": true,
      "time": 0.04181170463562012,
      "error": null
    },
    "assert even_or_odd(\"GL1\") == \"Odd\"": {
      "result": true,
      "time": 0.04279065132141113,
      "error": null
    },
    "assert even_or_odd(\"EEOT8GT\") == \"Odd\"": {
      "result": true,
      "time": 0.036847591400146484,
      "error": null
    },
    "assert even_or_odd(\"V97Z\") == \"Odd\"": {
      "result": true,
      "time": 0.05283188819885254,
      "error": null
    },
    "assert even_or_odd(\"C8D8KJNW\") == \"Odd\"": {
      "result": true,
      "time": 0.045540571212768555,
      "error": null
    },
    "assert even_or_odd(\"CLT6NZDOB47C\") == \"Even\"": {
      "result": true,
      "time": 0.04173994064331055,
      "error": null
    },
    "assert even_or_odd(\"8ZE7II1LAL\") == \"Odd\"": {
      "result": true,
      "time": 0.04560112953186035,
      "error": null
    },
    "assert even_or_odd(\"Y79\") == \"Odd\"": {
      "result": true,
      "time": 0.03968334197998047,
      "error": null
    },
    "assert even_or_odd(\"8IOW7HPFLE\") == \"Even\"": {
      "result": true,
      "time": 0.0420992374420166,
      "error": null
    },
    "assert even_or_odd(\"YL43SW\") == \"Odd\"": {
      "result": true,
      "time": 0.04067587852478027,
      "error": null
    },
    "assert even_or_odd(\"QJ77MN70A90M\") == \"Odd\"": {
      "result": true,
      "time": 0.042273759841918945,
      "error": null
    },
    "assert even_or_odd(\"O6W\") == \"Odd\"": {
      "result": true,
      "time": 0.04593682289123535,
      "error": null
    },
    "assert even_or_odd(\"ZCIT8\") == \"Even\"": {
      "result": true,
      "time": 0.044518232345581055,
      "error": null
    },
    "assert even_or_odd(\"NJCNOYZLZ\") == \"Odd\"": {
      "result": true,
      "time": 0.03859567642211914,
      "error": null
    },
    "assert even_or_odd(\"TXPXE\") == \"Even\"": {
      "result": true,
      "time": 0.03709769248962402,
      "error": null
    },
    "assert even_or_odd(\"LWMEO\") == \"Odd\"": {
      "result": true,
      "time": 0.034996986389160156,
      "error": null
    },
    "assert even_or_odd(\"3AS9U\") == \"Odd\"": {
      "result": true,
      "time": 0.04423332214355469,
      "error": null
    },
    "assert even_or_odd(\"9CB01U4\") == \"Even\"": {
      "result": true,
      "time": 0.05937814712524414,
      "error": null
    },
    "assert even_or_odd(\"JUP72W\") == \"Odd\"": {
      "result": true,
      "time": 0.04118466377258301,
      "error": null
    },
    "assert even_or_odd(\"P40MBE9O4YI\") == \"Odd\"": {
      "result": true,
      "time": 0.050855398178100586,
      "error": null
    },
    "assert even_or_odd(\"H9CXX6T0X\") == \"Odd\"": {
      "result": true,
      "time": 0.056748390197753906,
      "error": null
    },
    "assert even_or_odd(\"ELZ216EDN\") == \"Odd\"": {
      "result": true,
      "time": 0.049933671951293945,
      "error": null
    },
    "assert even_or_odd(\"68WFCK\") == \"Odd\"": {
      "result": true,
      "time": 0.0496060848236084,
      "error": null
    },
    "assert even_or_odd(\"OC0VP\") == \"Odd\"": {
      "result": true,
      "time": 0.03624415397644043,
      "error": null
    },
    "assert even_or_odd(\"797JB\") == \"Odd\"": {
      "result": true,
      "time": 0.048186540603637695,
      "error": null
    },
    "assert even_or_odd(\"XEAZKJ0Q\") == \"Odd\"": {
      "result": true,
      "time": 0.05509066581726074,
      "error": null
    },
    "assert even_or_odd(\"CFW\") == \"Odd\"": {
      "result": true,
      "time": 0.03647136688232422,
      "error": null
    },
    "assert even_or_odd(\"QRRPT\") == \"Odd\"": {
      "result": true,
      "time": 0.058741092681884766,
      "error": null
    },
    "assert even_or_odd(\"NKRX\") == \"Odd\"": {
      "result": true,
      "time": 0.05415773391723633,
      "error": null
    },
    "assert even_or_odd(\"DESAYEL\") == \"Odd\"": {
      "result": true,
      "time": 0.05031108856201172,
      "error": null
    },
    "assert even_or_odd(\"DRU\") == \"Odd\"": {
      "result": true,
      "time": 0.05896186828613281,
      "error": null
    },
    "assert even_or_odd(\"VIU\") == \"Odd\"": {
      "result": true,
      "time": 0.05730557441711426,
      "error": null
    },
    "assert even_or_odd(\"MKYIO\") == \"Odd\"": {
      "result": true,
      "time": 0.05419659614562988,
      "error": null
    },
    "assert even_or_odd(\"JSAS\") == \"Odd\"": {
      "result": true,
      "time": 0.05702662467956543,
      "error": null
    },
    "assert even_or_odd(\"LMTKLJRO\") == \"Odd\"": {
      "result": true,
      "time": 0.06736063957214355,
      "error": null
    },
    "assert even_or_odd(\"FCQ\") == \"Odd\"": {
      "result": true,
      "time": 0.059230804443359375,
      "error": null
    },
    "assert even_or_odd(\"JSLWWVWV\") == \"Odd\"": {
      "result": true,
      "time": 0.07195186614990234,
      "error": null
    },
    "assert even_or_odd(\"BIOZC\") == \"Even\"": {
      "result": true,
      "time": 0.04756975173950195,
      "error": null
    },
    "assert even_or_odd(\"IWZPEDM\") == \"Odd\"": {
      "result": true,
      "time": 0.04303860664367676,
      "error": null
    },
    "assert even_or_odd(\"MGPH\") == \"Odd\"": {
      "result": true,
      "time": 0.04097890853881836,
      "error": null
    },
    "assert even_or_odd(\"JZFND\") == \"Odd\"": {
      "result": true,
      "time": 0.0485079288482666,
      "error": null
    },
    "assert even_or_odd(\"VQQ\") == \"Odd\"": {
      "result": true,
      "time": 0.0387425422668457,
      "error": null
    },
    "assert even_or_odd(\"TTENX\") == \"Odd\"": {
      "result": true,
      "time": 0.040345191955566406,
      "error": null
    },
    "assert even_or_odd(\"PNHQ\") == \"Odd\"": {
      "result": true,
      "time": 0.04917335510253906,
      "error": null
    },
    "assert even_or_odd(\"RIGTQ\") == \"Odd\"": {
      "result": true,
      "time": 0.0415499210357666,
      "error": null
    },
    "assert even_or_odd(\"JKYW\") == \"Odd\"": {
      "result": true,
      "time": 0.03393387794494629,
      "error": null
    },
    "assert even_or_odd(\"RTCCXYWA\") == \"Even\"": {
      "result": true,
      "time": 0.04866361618041992,
      "error": null
    },
    "assert even_or_odd(\"HTUVKALV\") == \"Odd\"": {
      "result": true,
      "time": 0.04493975639343262,
      "error": null
    },
    "assert even_or_odd(\"FJPE\") == \"Even\"": {
      "result": true,
      "time": 0.052224159240722656,
      "error": null
    },
    "assert even_or_odd(\"HELBAYWZ\") == \"Odd\"": {
      "result": true,
      "time": 0.045165061950683594,
      "error": null
    },
    "assert even_or_odd(\"JJLHDNUR\") == \"Odd\"": {
      "result": true,
      "time": 0.04875588417053223,
      "error": null
    },
    "assert even_or_odd(\"WQEBZKCB\") == \"Odd\"": {
      "result": true,
      "time": 0.04063916206359863,
      "error": null
    },
    "assert even_or_odd(\"JYFFJSTST\") == \"Odd\"": {
      "result": true,
      "time": 0.037796974182128906,
      "error": null
    },
    "assert even_or_odd(\"HOIBOIF\") == \"Odd\"": {
      "result": true,
      "time": 0.03638911247253418,
      "error": null
    },
    "assert even_or_odd(\"DTSC\") == \"Even\"": {
      "result": true,
      "time": 0.042345523834228516,
      "error": null
    },
    "assert even_or_odd(\"ADCFHTEQ\") == \"Odd\"": {
      "result": true,
      "time": 0.03974485397338867,
      "error": null
    },
    "assert even_or_odd(\"QONXI\") == \"Odd\"": {
      "result": true,
      "time": 0.03533673286437988,
      "error": null
    },
    "assert even_or_odd(\"KZBX\") == \"Odd\"": {
      "result": true,
      "time": 0.036235809326171875,
      "error": null
    },
    "assert even_or_odd(\"MUEG\") == \"Odd\"": {
      "result": true,
      "time": 0.04180121421813965,
      "error": null
    },
    "assert even_or_odd(\"MXQVYHDG\") == \"Odd\"": {
      "result": true,
      "time": 0.04001116752624512,
      "error": null
    },
    "assert even_or_odd(\"SNA\") == \"Even\"": {
      "result": true,
      "time": 0.03602313995361328,
      "error": null
    },
    "assert even_or_odd(\"DBHXV\") == \"Odd\"": {
      "result": true,
      "time": 0.03448152542114258,
      "error": null
    },
    "assert even_or_odd(\"JLYVFYIG\") == \"Odd\"": {
      "result": true,
      "time": 0.033045053482055664,
      "error": null
    },
    "assert even_or_odd(\"FNQEYJ\") == \"Odd\"": {
      "result": true,
      "time": 0.03623604774475098,
      "error": null
    },
    "assert even_or_odd(\"RDXA\") == \"Even\"": {
      "result": true,
      "time": 0.038956403732299805,
      "error": null
    },
    "assert even_or_odd(\"FNBVP\") == \"Odd\"": {
      "result": true,
      "time": 0.03270602226257324,
      "error": null
    },
    "assert even_or_odd(\"KDXY\") == \"Odd\"": {
      "result": true,
      "time": 0.03770732879638672,
      "error": null
    },
    "assert even_or_odd(\"BAR\") == \"Odd\"": {
      "result": true,
      "time": 0.034593820571899414,
      "error": null
    },
    "assert even_or_odd(\"RSZI\") == \"Odd\"": {
      "result": true,
      "time": 0.03988361358642578,
      "error": null
    },
    "assert even_or_odd(\"BRHLLGPMI\") == \"Odd\"": {
      "result": true,
      "time": 0.03695559501647949,
      "error": null
    },
    "assert even_or_odd(\"RUBTPMPJ\") == \"Odd\"": {
      "result": true,
      "time": 0.03589630126953125,
      "error": null
    },
    "assert even_or_odd(\"FKMPCM\") == \"Odd\"": {
      "result": true,
      "time": 0.03566932678222656,
      "error": null
    },
    "assert even_or_odd(\"NDCH\") == \"Odd\"": {
      "result": true,
      "time": 0.03678464889526367,
      "error": null
    },
    "assert even_or_odd(\"OPGEXPGMP\") == \"Odd\"": {
      "result": true,
      "time": 0.04076409339904785,
      "error": null
    },
    "assert even_or_odd(\"MVOAUW\") == \"Odd\"": {
      "result": true,
      "time": 0.03545856475830078,
      "error": null
    },
    "assert even_or_odd(\"KNKAO\") == \"Odd\"": {
      "result": true,
      "time": 0.039179086685180664,
      "error": null
    },
    "assert even_or_odd(\"HQFJHW\") == \"Odd\"": {
      "result": true,
      "time": 0.03475499153137207,
      "error": null
    },
    "assert even_or_odd(\"MAQH\") == \"Odd\"": {
      "result": true,
      "time": 0.03235363960266113,
      "error": null
    },
    "assert even_or_odd(\"BBOVOV\") == \"Odd\"": {
      "result": true,
      "time": 0.03423666954040527,
      "error": null
    },
    "assert even_or_odd(\"OZPFJJ\") == \"Odd\"": {
      "result": true,
      "time": 0.0411381721496582,
      "error": null
    },
    "assert even_or_odd(\"ANQBCYLW\") == \"Odd\"": {
      "result": true,
      "time": 0.042018890380859375,
      "error": null
    },
    "assert even_or_odd(\"PPIR\") == \"Odd\"": {
      "result": true,
      "time": 0.03478813171386719,
      "error": null
    },
    "assert even_or_odd(\"EDAGDQCG\") == \"Odd\"": {
      "result": true,
      "time": 0.03553915023803711,
      "error": null
    },
    "assert even_or_odd(\"HOGXAMAUM\") == \"Odd\"": {
      "result": true,
      "time": 0.04261279106140137,
      "error": null
    },
    "assert even_or_odd(\"YBWEYHAS\") == \"Odd\"": {
      "result": true,
      "time": 0.03726696968078613,
      "error": null
    },
    "assert even_or_odd(\"UHTBGHIK\") == \"Odd\"": {
      "result": true,
      "time": 0.0355684757232666,
      "error": null
    },
    "assert even_or_odd(\"UCEUGSG\") == \"Odd\"": {
      "result": true,
      "time": 0.038521766662597656,
      "error": null
    },
    "assert even_or_odd(\"NJNHGYD\") == \"Odd\"": {
      "result": true,
      "time": 0.03373146057128906,
      "error": null
    },
    "assert even_or_odd(\"CKPQDX\") == \"Odd\"": {
      "result": true,
      "time": 0.03431892395019531,
      "error": null
    },
    "assert even_or_odd(\"RRG\") == \"Odd\"": {
      "result": true,
      "time": 0.039655208587646484,
      "error": null
    },
    "assert even_or_odd(\"RZAJ\") == \"Odd\"": {
      "result": true,
      "time": 0.03267383575439453,
      "error": null
    },
    "assert even_or_odd(\"AFWXA\") == \"Even\"": {
      "result": true,
      "time": 0.03492903709411621,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}