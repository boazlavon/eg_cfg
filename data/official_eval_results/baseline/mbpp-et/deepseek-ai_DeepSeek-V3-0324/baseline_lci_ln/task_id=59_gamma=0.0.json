{
  "code": "def is_octagonal(n):\n    term1 = 3 * n\n    term2 = term1 - 2\n    octagonal_number = n * term2\n    return octagonal_number",
  "results": {
    "assert is_octagonal(5) == 65": {
      "result": true,
      "time": 0.038243770599365234,
      "error": null
    },
    "assert is_octagonal(10) == 280": {
      "result": true,
      "time": 0.03311300277709961,
      "error": null
    },
    "assert is_octagonal(15) == 645": {
      "result": true,
      "time": 0.04501056671142578,
      "error": null
    },
    "assert is_octagonal(6) == 96": {
      "result": true,
      "time": 0.034243106842041016,
      "error": null
    },
    "assert is_octagonal(1) == 1": {
      "result": true,
      "time": 0.038533687591552734,
      "error": null
    },
    "assert is_octagonal(9) == 225": {
      "result": true,
      "time": 0.04200243949890137,
      "error": null
    },
    "assert is_octagonal(2) == 8": {
      "result": true,
      "time": 0.03930830955505371,
      "error": null
    },
    "assert is_octagonal(8) == 176": {
      "result": true,
      "time": 0.04274415969848633,
      "error": null
    },
    "assert is_octagonal(7) == 133": {
      "result": true,
      "time": 0.036683082580566406,
      "error": null
    },
    "assert is_octagonal(3) == 21": {
      "result": true,
      "time": 0.04094576835632324,
      "error": null
    },
    "assert is_octagonal(4) == 40": {
      "result": true,
      "time": 0.03865981101989746,
      "error": null
    },
    "assert is_octagonal(14) == 560": {
      "result": true,
      "time": 0.03851819038391113,
      "error": null
    },
    "assert is_octagonal(11) == 341": {
      "result": true,
      "time": 0.034850120544433594,
      "error": null
    },
    "assert is_octagonal(13) == 481": {
      "result": true,
      "time": 0.041185617446899414,
      "error": null
    },
    "assert is_octagonal(12) == 408": {
      "result": true,
      "time": 0.03711986541748047,
      "error": null
    },
    "assert is_octagonal(16) == 736": {
      "result": true,
      "time": 0.029636144638061523,
      "error": null
    },
    "assert is_octagonal(17) == 833": {
      "result": true,
      "time": 0.037648677825927734,
      "error": null
    },
    "assert is_octagonal(20) == 1160": {
      "result": true,
      "time": 0.034731388092041016,
      "error": null
    },
    "assert is_octagonal(18) == 936": {
      "result": true,
      "time": 0.035828590393066406,
      "error": null
    },
    "assert is_octagonal(19) == 1045": {
      "result": true,
      "time": 0.04039812088012695,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}