{
  "code": "def k_smallest_pairs(arr1, arr2, k):\n    pairs = []\n    for num1 in arr1:\n        for num2 in arr2:\n            pairs.append([num1, num2])\n            if len(pairs) == k:\n                break\n        if len(pairs) == k:\n            break\n    return pairs",
  "results": {
    "assert k_smallest_pairs([1,3,7],[2,4,6],2)==[[1, 2], [1, 4]]": {
      "result": true,
      "time": 0.047409772872924805,
      "error": null
    },
    "assert k_smallest_pairs([1,3,7],[2,4,6],1)==[[1, 2]]": {
      "result": true,
      "time": 0.050183773040771484,
      "error": null
    },
    "assert k_smallest_pairs([1,3,7],[2,4,6],7)==[[1, 2], [1, 4], [3, 2], [1, 6], [3, 4], [3, 6], [7, 2]]": {
      "result": false,
      "time": 0.041676998138427734,
      "error": null
    },
    "assert k_smallest_pairs([5, 2, 11], [1, 7, 11], 5) == [[5, 1], [2, 1], [2, 7], [5, 7], [11, 1]]": {
      "result": false,
      "time": 0.041849613189697266,
      "error": null
    },
    "assert k_smallest_pairs([3, 7, 12], [6, 3, 6], 7) == [[3, 6], [3, 3], [3, 6], [7, 6], [7, 3], [7, 6], [12, 6]]": {
      "result": true,
      "time": 0.03763413429260254,
      "error": null
    },
    "assert k_smallest_pairs([2, 1, 9], [5, 3, 10], 6) == [[2, 5], [2, 3], [1, 5], [1, 3], [1, 10], [2, 10]]": {
      "result": false,
      "time": 0.03888273239135742,
      "error": null
    },
    "assert k_smallest_pairs([6, 5, 6], [5, 9, 5], 7) == [[6, 5], [5, 5], [6, 5], [5, 9], [5, 5], [6, 9], [6, 5]]": {
      "result": false,
      "time": 0.044300079345703125,
      "error": null
    },
    "assert k_smallest_pairs([2, 8, 5], [6, 8, 3], 6) == [[2, 6], [2, 8], [2, 3], [8, 6], [5, 6], [5, 8]]": {
      "result": false,
      "time": 0.04903984069824219,
      "error": null
    },
    "assert k_smallest_pairs([5, 2, 4], [4, 7, 6], 7) == [[5, 4], [2, 4], [4, 4], [2, 7], [2, 6], [4, 7], [4, 6]]": {
      "result": false,
      "time": 0.04013323783874512,
      "error": null
    },
    "assert k_smallest_pairs([4, 1, 10], [3, 2, 6], 7) == [[4, 3], [1, 3], [1, 2], [4, 2], [1, 6], [4, 6], [10, 3]]": {
      "result": false,
      "time": 0.042387962341308594,
      "error": null
    },
    "assert k_smallest_pairs([3, 7, 5], [2, 6, 3], 5) == [[3, 2], [3, 6], [3, 3], [7, 2], [5, 2]]": {
      "result": false,
      "time": 0.039078474044799805,
      "error": null
    },
    "assert k_smallest_pairs([6, 3, 8], [5, 8, 9], 6) == [[6, 5], [3, 5], [3, 8], [3, 9], [8, 5], [6, 8]]": {
      "result": false,
      "time": 0.046948909759521484,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 9], [6, 7, 6], 7) == [[2, 6], [2, 6], [2, 7], [2, 6], [2, 7], [2, 6], [9, 6]]": {
      "result": false,
      "time": 0.039969682693481445,
      "error": null
    },
    "assert k_smallest_pairs([3, 6, 4], [7, 1, 2], 6) == [[3, 7], [3, 1], [3, 2], [6, 7], [6, 1], [6, 2]]": {
      "result": true,
      "time": 0.039124488830566406,
      "error": null
    },
    "assert k_smallest_pairs([5, 3, 11], [2, 8, 7], 1) == [[5, 2]]": {
      "result": true,
      "time": 0.04380512237548828,
      "error": null
    },
    "assert k_smallest_pairs([4, 6, 5], [2, 6, 1], 2) == [[4, 2], [6, 2]]": {
      "result": false,
      "time": 0.044814109802246094,
      "error": null
    },
    "assert k_smallest_pairs([1, 7, 2], [6, 9, 3], 3) == [[1, 6], [1, 9], [1, 3]]": {
      "result": true,
      "time": 0.04131507873535156,
      "error": null
    },
    "assert k_smallest_pairs([3, 2, 12], [1, 8, 3], 5) == [[3, 1], [2, 1], [2, 8], [2, 3], [3, 8]]": {
      "result": false,
      "time": 0.04678010940551758,
      "error": null
    },
    "assert k_smallest_pairs([2, 8, 8], [1, 9, 10], 3) == [[2, 1], [8, 1], [8, 1]]": {
      "result": false,
      "time": 0.046987295150756836,
      "error": null
    },
    "assert k_smallest_pairs([2, 5, 4], [7, 1, 9], 6) == [[2, 7], [2, 1], [2, 9], [5, 7], [5, 1], [4, 7]]": {
      "result": false,
      "time": 0.04877901077270508,
      "error": null
    },
    "assert k_smallest_pairs([5, 4, 9], [4, 3, 9], 4) == [[5, 4], [5, 3], [4, 4], [4, 3]]": {
      "result": false,
      "time": 0.04742741584777832,
      "error": null
    },
    "assert k_smallest_pairs([6, 8, 7], [1, 9, 3], 4) == [[6, 1], [8, 1], [7, 1], [6, 9]]": {
      "result": false,
      "time": 0.06599283218383789,
      "error": null
    },
    "assert k_smallest_pairs([5, 3, 5], [3, 1, 2], 3) == [[5, 3], [5, 1], [3, 3]]": {
      "result": false,
      "time": 0.07232332229614258,
      "error": null
    },
    "assert k_smallest_pairs([1, 1, 10], [1, 7, 6], 3) == [[1, 1], [1, 1], [1, 7]]": {
      "result": false,
      "time": 0.07135128974914551,
      "error": null
    },
    "assert k_smallest_pairs([6, 7, 3], [1, 3, 8], 1) == [[6, 1]]": {
      "result": true,
      "time": 0.061394453048706055,
      "error": null
    },
    "assert k_smallest_pairs([6, 1, 8], [4, 8, 3], 3) == [[6, 4], [1, 4], [1, 8]]": {
      "result": false,
      "time": 0.06908941268920898,
      "error": null
    },
    "assert k_smallest_pairs([3, 1, 2], [1, 4, 10], 6) == [[3, 1], [1, 1], [2, 1], [1, 4], [2, 4], [3, 4]]": {
      "result": false,
      "time": 0.061031341552734375,
      "error": null
    },
    "assert k_smallest_pairs([2, 7, 4], [1, 5, 4], 3) == [[2, 1], [2, 5], [2, 4]]": {
      "result": true,
      "time": 0.06824111938476562,
      "error": null
    },
    "assert k_smallest_pairs([4, 4, 4], [1, 5, 2], 5) == [[4, 1], [4, 1], [4, 1], [4, 5], [4, 2]]": {
      "result": false,
      "time": 0.05433034896850586,
      "error": null
    },
    "assert k_smallest_pairs([2, 6, 5], [7, 7, 2], 7) == [[2, 7], [2, 7], [2, 2], [6, 7], [5, 7], [5, 7], [5, 2]]": {
      "result": false,
      "time": 0.07086801528930664,
      "error": null
    },
    "assert k_smallest_pairs([6, 2, 11], [4, 2, 6], 3) == [[6, 4], [2, 4], [2, 2]]": {
      "result": false,
      "time": 0.05928659439086914,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 8], [6, 3, 9], 5) == [[2, 6], [2, 3], [2, 6], [2, 3], [2, 9]]": {
      "result": false,
      "time": 0.06558990478515625,
      "error": null
    },
    "assert k_smallest_pairs([4, 2, 5], [2, 7, 6], 4) == [[4, 2], [2, 2], [5, 2], [2, 7]]": {
      "result": false,
      "time": 0.06772422790527344,
      "error": null
    },
    "assert k_smallest_pairs([6, 3, 9], [1, 4, 11], 4) == [[6, 1], [3, 1], [3, 4], [6, 4]]": {
      "result": false,
      "time": 0.0601806640625,
      "error": null
    },
    "assert k_smallest_pairs([2, 7, 8], [7, 8, 8], 1) == [[2, 7]]": {
      "result": true,
      "time": 0.05817461013793945,
      "error": null
    },
    "assert k_smallest_pairs([5, 2, 9], [2, 8, 10], 7) == [[5, 2], [2, 2], [2, 8], [9, 2], [2, 10], [5, 8], [5, 10]]": {
      "result": false,
      "time": 0.06351757049560547,
      "error": null
    },
    "assert k_smallest_pairs([2, 1, 12], [5, 5, 3], 6) == [[2, 5], [1, 5], [1, 5], [1, 3], [2, 5], [2, 3]]": {
      "result": false,
      "time": 0.06314373016357422,
      "error": null
    },
    "assert k_smallest_pairs([2, 8, 9], [3, 3, 10], 6) == [[2, 3], [2, 3], [8, 3], [8, 3], [2, 10], [9, 3]]": {
      "result": false,
      "time": 0.05896162986755371,
      "error": null
    },
    "assert k_smallest_pairs([3, 1, 9], [1, 8, 6], 4) == [[3, 1], [1, 1], [1, 8], [1, 6]]": {
      "result": false,
      "time": 0.06061387062072754,
      "error": null
    },
    "assert k_smallest_pairs([3, 6, 10], [3, 7, 11], 3) == [[3, 3], [6, 3], [3, 7]]": {
      "result": false,
      "time": 0.05669713020324707,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 10], [6, 2, 7], 4) == [[2, 6], [2, 2], [2, 6], [2, 2]]": {
      "result": false,
      "time": 0.06635117530822754,
      "error": null
    },
    "assert k_smallest_pairs([6, 3, 11], [3, 8, 3], 4) == [[6, 3], [3, 3], [3, 8], [3, 3]]": {
      "result": false,
      "time": 0.03171086311340332,
      "error": null
    },
    "assert k_smallest_pairs([6, 3, 6], [7, 4, 7], 2) == [[6, 7], [6, 4]]": {
      "result": true,
      "time": 0.031662940979003906,
      "error": null
    },
    "assert k_smallest_pairs([1, 8, 9], [4, 4, 3], 6) == [[1, 4], [1, 4], [1, 3], [8, 4], [8, 4], [8, 3]]": {
      "result": true,
      "time": 0.035387277603149414,
      "error": null
    },
    "assert k_smallest_pairs([4, 3, 11], [2, 6, 1], 6) == [[4, 2], [3, 2], [3, 6], [3, 1], [4, 6], [4, 1]]": {
      "result": false,
      "time": 0.03800058364868164,
      "error": null
    },
    "assert k_smallest_pairs([1, 1, 6], [2, 8, 5], 2) == [[1, 2], [1, 2]]": {
      "result": false,
      "time": 0.03365302085876465,
      "error": null
    },
    "assert k_smallest_pairs([6, 5, 9], [2, 6, 7], 6) == [[6, 2], [5, 2], [5, 6], [9, 2], [6, 6], [5, 7]]": {
      "result": false,
      "time": 0.03301835060119629,
      "error": null
    },
    "assert k_smallest_pairs([2, 7, 2], [5, 9, 6], 6) == [[2, 5], [2, 9], [2, 6], [7, 5], [2, 5], [2, 9]]": {
      "result": false,
      "time": 0.0524899959564209,
      "error": null
    },
    "assert k_smallest_pairs([1, 7, 12], [7, 1, 2], 6) == [[1, 7], [1, 1], [1, 2], [7, 7], [7, 1], [7, 2]]": {
      "result": true,
      "time": 0.07047867774963379,
      "error": null
    },
    "assert k_smallest_pairs([3, 7, 10], [3, 3, 10], 6) == [[3, 3], [3, 3], [7, 3], [7, 3], [3, 10], [10, 3]]": {
      "result": false,
      "time": 0.055734872817993164,
      "error": null
    },
    "assert k_smallest_pairs([5, 2, 3], [1, 7, 11], 2) == [[5, 1], [2, 1]]": {
      "result": false,
      "time": 0.061736106872558594,
      "error": null
    },
    "assert k_smallest_pairs([5, 5, 9], [2, 8, 6], 1) == [[5, 2]]": {
      "result": true,
      "time": 0.041464805603027344,
      "error": null
    },
    "assert k_smallest_pairs([1, 3, 2], [4, 8, 8], 3) == [[1, 4], [3, 4], [2, 4]]": {
      "result": false,
      "time": 0.06995272636413574,
      "error": null
    },
    "assert k_smallest_pairs([2, 5, 4], [7, 6, 2], 5) == [[2, 7], [2, 6], [2, 2], [5, 7], [5, 6]]": {
      "result": true,
      "time": 0.06139564514160156,
      "error": null
    },
    "assert k_smallest_pairs([1, 5, 12], [4, 8, 7], 3) == [[1, 4], [1, 8], [1, 7]]": {
      "result": true,
      "time": 0.07422304153442383,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 8], [2, 2, 5], 4) == [[2, 2], [2, 2], [2, 2], [2, 2]]": {
      "result": false,
      "time": 0.061409950256347656,
      "error": null
    },
    "assert k_smallest_pairs([1, 3, 9], [6, 4, 4], 4) == [[1, 6], [1, 4], [1, 4], [3, 6]]": {
      "result": true,
      "time": 0.060376644134521484,
      "error": null
    },
    "assert k_smallest_pairs([5, 2, 12], [5, 1, 7], 2) == [[5, 5], [5, 1]]": {
      "result": true,
      "time": 0.057882070541381836,
      "error": null
    },
    "assert k_smallest_pairs([6, 5, 7], [7, 6, 6], 2) == [[6, 7], [6, 6]]": {
      "result": true,
      "time": 0.06848382949829102,
      "error": null
    },
    "assert k_smallest_pairs([1, 4, 3], [7, 6, 8], 3) == [[1, 7], [1, 6], [1, 8]]": {
      "result": true,
      "time": 0.0676877498626709,
      "error": null
    },
    "assert k_smallest_pairs([4, 2, 9], [1, 2, 8], 6) == [[4, 1], [2, 1], [2, 2], [4, 2], [2, 8], [9, 1]]": {
      "result": false,
      "time": 0.06169581413269043,
      "error": null
    },
    "assert k_smallest_pairs([6, 5, 4], [3, 1, 2], 3) == [[6, 3], [6, 1], [6, 2]]": {
      "result": true,
      "time": 0.06784844398498535,
      "error": null
    },
    "assert k_smallest_pairs([3, 3, 10], [5, 8, 6], 6) == [[3, 5], [3, 5], [3, 8], [3, 6], [3, 8], [3, 6]]": {
      "result": false,
      "time": 0.057909488677978516,
      "error": null
    },
    "assert k_smallest_pairs([1, 1, 3], [1, 7, 9], 4) == [[1, 1], [1, 1], [3, 1], [1, 7]]": {
      "result": false,
      "time": 0.06058382987976074,
      "error": null
    },
    "assert k_smallest_pairs([3, 3, 4], [4, 1, 2], 6) == [[3, 4], [3, 1], [3, 2], [3, 4], [3, 1], [3, 2]]": {
      "result": true,
      "time": 0.05005931854248047,
      "error": null
    },
    "assert k_smallest_pairs([5, 3, 5], [6, 5, 11], 1) == [[5, 6]]": {
      "result": true,
      "time": 0.04829120635986328,
      "error": null
    },
    "assert k_smallest_pairs([6, 3, 3], [4, 9, 6], 4) == [[6, 4], [3, 4], [3, 4], [3, 9]]": {
      "result": false,
      "time": 0.04571819305419922,
      "error": null
    },
    "assert k_smallest_pairs([6, 2, 7], [4, 1, 4], 5) == [[6, 4], [2, 4], [2, 1], [2, 4], [6, 1]]": {
      "result": false,
      "time": 0.05936241149902344,
      "error": null
    },
    "assert k_smallest_pairs([2, 8, 3], [6, 5, 5], 6) == [[2, 6], [2, 5], [2, 5], [8, 6], [3, 6], [3, 5]]": {
      "result": false,
      "time": 0.04567122459411621,
      "error": null
    },
    "assert k_smallest_pairs([4, 2, 10], [3, 7, 1], 9) == [[4, 3], [2, 3], [2, 7], [2, 1], [4, 7], [4, 1], [10, 3], [10, 7], [10, 1]]": {
      "result": false,
      "time": 0.05280137062072754,
      "error": null
    },
    "assert k_smallest_pairs([1, 4, 4], [2, 8, 5], 3) == [[1, 2], [4, 2], [4, 2]]": {
      "result": false,
      "time": 0.06203937530517578,
      "error": null
    },
    "assert k_smallest_pairs([2, 4, 7], [2, 1, 7], 6) == [[2, 2], [2, 1], [4, 2], [4, 1], [2, 7], [7, 2]]": {
      "result": false,
      "time": 0.054068565368652344,
      "error": null
    },
    "assert k_smallest_pairs([5, 8, 2], [3, 5, 5], 7) == [[5, 3], [5, 5], [5, 5], [8, 3], [2, 3], [2, 5], [2, 5]]": {
      "result": false,
      "time": 0.03853559494018555,
      "error": null
    },
    "assert k_smallest_pairs([3, 3, 7], [1, 9, 9], 3) == [[3, 1], [3, 1], [7, 1]]": {
      "result": false,
      "time": 0.04778742790222168,
      "error": null
    },
    "assert k_smallest_pairs([4, 5, 8], [1, 1, 7], 7) == [[4, 1], [4, 1], [5, 1], [5, 1], [8, 1], [8, 1], [4, 7]]": {
      "result": false,
      "time": 0.058957576751708984,
      "error": null
    },
    "assert k_smallest_pairs([2, 8, 4], [6, 2, 9], 8) == [[2, 6], [2, 2], [2, 9], [8, 6], [8, 2], [4, 6], [4, 2], [4, 9]]": {
      "result": false,
      "time": 0.05264592170715332,
      "error": null
    },
    "assert k_smallest_pairs([3, 5, 4], [4, 7, 11], 9) == [[3, 4], [5, 4], [4, 4], [3, 7], [4, 7], [5, 7], [3, 11], [4, 11], [5, 11]]": {
      "result": false,
      "time": 0.05214691162109375,
      "error": null
    },
    "assert k_smallest_pairs([3, 5, 8], [6, 9, 3], 12) == [[3, 6], [5, 6], [3, 9], [3, 3], [5, 9], [5, 3], [8, 6], [8, 9], [8, 3]]": {
      "result": false,
      "time": 0.045145273208618164,
      "error": null
    },
    "assert k_smallest_pairs([3, 1, 11], [3, 3, 1], 12) == [[3, 3], [1, 3], [1, 3], [1, 1], [3, 3], [3, 1], [11, 3], [11, 3], [11, 1]]": {
      "result": false,
      "time": 0.0587308406829834,
      "error": null
    },
    "assert k_smallest_pairs([2, 5, 2], [1, 6, 4], 9) == [[2, 1], [5, 1], [2, 1], [2, 6], [2, 4], [2, 6], [2, 4], [5, 6], [5, 4]]": {
      "result": false,
      "time": 0.050537109375,
      "error": null
    },
    "assert k_smallest_pairs([4, 1, 3], [2, 4, 1], 4) == [[4, 2], [1, 2], [1, 4], [1, 1]]": {
      "result": false,
      "time": 0.05638408660888672,
      "error": null
    },
    "assert k_smallest_pairs([6, 4, 9], [4, 3, 9], 10) == [[6, 4], [4, 4], [4, 3], [6, 3], [4, 9], [9, 4], [9, 3], [6, 9], [9, 9]]": {
      "result": false,
      "time": 0.05031251907348633,
      "error": null
    },
    "assert k_smallest_pairs([2, 6, 2], [4, 8, 4], 6) == [[2, 4], [2, 8], [2, 4], [6, 4], [2, 4], [2, 8]]": {
      "result": false,
      "time": 0.051302194595336914,
      "error": null
    },
    "assert k_smallest_pairs([3, 7, 10], [5, 3, 11], 12) == [[3, 5], [3, 3], [7, 5], [7, 3], [3, 11], [10, 5], [10, 3], [7, 11], [10, 11]]": {
      "result": false,
      "time": 0.044474124908447266,
      "error": null
    },
    "assert k_smallest_pairs([2, 7, 9], [5, 6, 9], 12) == [[2, 5], [2, 6], [2, 9], [7, 5], [7, 6], [9, 5], [9, 6], [7, 9], [9, 9]]": {
      "result": false,
      "time": 0.055881500244140625,
      "error": null
    },
    "assert k_smallest_pairs([5, 1, 8], [5, 7, 6], 8) == [[5, 5], [1, 5], [1, 7], [1, 6], [5, 7], [5, 6], [8, 5], [8, 7]]": {
      "result": false,
      "time": 0.042264461517333984,
      "error": null
    },
    "assert k_smallest_pairs([2, 1, 11], [3, 2, 11], 3) == [[2, 3], [2, 2], [1, 3]]": {
      "result": false,
      "time": 0.04200291633605957,
      "error": null
    },
    "assert k_smallest_pairs([2, 1, 12], [5, 8, 1], 9) == [[2, 5], [1, 5], [1, 8], [1, 1], [2, 8], [2, 1], [12, 5], [12, 8], [12, 1]]": {
      "result": false,
      "time": 0.05387997627258301,
      "error": null
    },
    "assert k_smallest_pairs([2, 4, 8], [4, 9, 9], 12) == [[2, 4], [4, 4], [2, 9], [2, 9], [8, 4], [4, 9], [4, 9], [8, 9], [8, 9]]": {
      "result": false,
      "time": 0.05513358116149902,
      "error": null
    },
    "assert k_smallest_pairs([5, 5, 7], [2, 2, 8], 4) == [[5, 2], [5, 2], [5, 2], [5, 2]]": {
      "result": false,
      "time": 0.05344891548156738,
      "error": null
    },
    "assert k_smallest_pairs([5, 5, 3], [3, 4, 3], 12) == [[5, 3], [5, 3], [3, 3], [3, 4], [3, 3], [5, 4], [5, 3], [5, 4], [5, 3]]": {
      "result": false,
      "time": 0.056622982025146484,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 9], [3, 7, 2], 10) == [[2, 3], [2, 3], [2, 7], [2, 2], [2, 7], [2, 2], [9, 3], [9, 7], [9, 2]]": {
      "result": false,
      "time": 0.04996013641357422,
      "error": null
    },
    "assert k_smallest_pairs([2, 2, 12], [2, 5, 10], 8) == [[2, 2], [2, 2], [2, 5], [2, 5], [2, 10], [2, 10], [12, 2], [12, 5]]": {
      "result": false,
      "time": 0.06056976318359375,
      "error": null
    },
    "assert k_smallest_pairs([4, 6, 3], [5, 6, 8], 12) == [[4, 5], [4, 6], [6, 5], [3, 5], [3, 6], [3, 8], [4, 8], [6, 6], [6, 8]]": {
      "result": false,
      "time": 0.045766353607177734,
      "error": null
    },
    "assert k_smallest_pairs([2, 3, 5], [2, 8, 8], 8) == [[2, 2], [3, 2], [5, 2], [2, 8], [2, 8], [3, 8], [3, 8], [5, 8]]": {
      "result": false,
      "time": 0.05382990837097168,
      "error": null
    },
    "assert k_smallest_pairs([6, 7, 4], [4, 8, 6], 9) == [[6, 4], [7, 4], [4, 4], [4, 8], [4, 6], [6, 8], [6, 6], [7, 8], [7, 6]]": {
      "result": false,
      "time": 0.06670260429382324,
      "error": null
    },
    "assert k_smallest_pairs([1, 1, 7], [7, 6, 2], 2) == [[1, 7], [1, 6]]": {
      "result": true,
      "time": 0.03904843330383301,
      "error": null
    },
    "assert k_smallest_pairs([2, 5, 6], [5, 9, 10], 3) == [[2, 5], [5, 5], [2, 9]]": {
      "result": false,
      "time": 0.06234121322631836,
      "error": null
    },
    "assert k_smallest_pairs([3, 7, 3], [7, 3, 8], 5) == [[3, 7], [3, 3], [3, 8], [7, 7], [7, 3]]": {
      "result": true,
      "time": 0.05878925323486328,
      "error": null
    },
    "assert k_smallest_pairs([1, 8, 12], [5, 3, 6], 9) == [[1, 5], [1, 3], [1, 6], [8, 5], [8, 3], [8, 6], [12, 5], [12, 3], [12, 6]]": {
      "result": true,
      "time": 0.05586600303649902,
      "error": null
    },
    "assert k_smallest_pairs([5, 1, 10], [7, 8, 3], 5) == [[5, 7], [1, 7], [1, 8], [1, 3], [5, 8]]": {
      "result": false,
      "time": 0.03971219062805176,
      "error": null
    },
    "assert k_smallest_pairs([6, 4, 9], [7, 7, 7], 8) == [[6, 7], [4, 7], [4, 7], [4, 7], [6, 7], [6, 7], [9, 7], [9, 7]]": {
      "result": false,
      "time": 0.06050419807434082,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.24509803921568626,
  "general_error": "",
  "has_testcase_error": false
}