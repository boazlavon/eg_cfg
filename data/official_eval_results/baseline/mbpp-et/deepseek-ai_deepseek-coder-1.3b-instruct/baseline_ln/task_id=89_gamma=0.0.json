{
  "code": "def closest_num(n):\n    return n - 1 if n % 10 >= 5 else n - 10 if n // 10 % 10 >= 5 else n",
  "results": {
    "assert closest_num(11) == 10": {
      "result": false,
      "time": 0.04313778877258301,
      "error": null
    },
    "assert closest_num(7) == 6": {
      "result": true,
      "time": 0.04333233833312988,
      "error": null
    },
    "assert closest_num(12) == 11": {
      "result": false,
      "time": 0.03177452087402344,
      "error": null
    },
    "assert closest_num(8) == 7": {
      "result": true,
      "time": 0.04115152359008789,
      "error": null
    },
    "assert closest_num(10) == 9": {
      "result": false,
      "time": 0.049120426177978516,
      "error": null
    },
    "assert closest_num(16) == 15": {
      "result": true,
      "time": 0.056056976318359375,
      "error": null
    },
    "assert closest_num(15) == 14": {
      "result": true,
      "time": 0.04515719413757324,
      "error": null
    },
    "assert closest_num(14) == 13": {
      "result": false,
      "time": 0.0480647087097168,
      "error": null
    },
    "assert closest_num(9) == 8": {
      "result": true,
      "time": 0.03280353546142578,
      "error": null
    },
    "assert closest_num(13) == 12": {
      "result": false,
      "time": 0.03764796257019043,
      "error": null
    },
    "assert closest_num(6) == 5": {
      "result": true,
      "time": 0.03741288185119629,
      "error": null
    },
    "assert closest_num(2) == 1": {
      "result": false,
      "time": 0.038239479064941406,
      "error": null
    },
    "assert closest_num(3) == 2": {
      "result": false,
      "time": 0.03759622573852539,
      "error": null
    },
    "assert closest_num(5) == 4": {
      "result": true,
      "time": 0.03788447380065918,
      "error": null
    },
    "assert closest_num(4) == 3": {
      "result": false,
      "time": 0.04726052284240723,
      "error": null
    },
    "assert closest_num(17) == 16": {
      "result": true,
      "time": 0.03489422798156738,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.5,
  "general_error": "",
  "has_testcase_error": false
}