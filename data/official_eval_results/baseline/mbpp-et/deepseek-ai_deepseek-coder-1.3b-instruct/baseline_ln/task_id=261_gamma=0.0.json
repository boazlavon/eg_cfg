{
  "code": "def division_elements(test_tup1, test_tup2):\n    res = tuple(map(lambda x, y: x / y, test_tup1, test_tup2))\n    return res\n",
  "results": {
    "assert division_elements((10, 4, 6, 9),(5, 2, 3, 3)) == (2, 2, 2, 3)": {
      "result": true,
      "time": 0.041100263595581055,
      "error": null
    },
    "assert division_elements((12, 6, 8, 16),(6, 3, 4, 4)) == (2, 2, 2, 4)": {
      "result": true,
      "time": 0.03733110427856445,
      "error": null
    },
    "assert division_elements((20, 14, 36, 18),(5, 7, 6, 9)) == (4, 2, 6, 2)": {
      "result": true,
      "time": 0.04884910583496094,
      "error": null
    },
    "assert division_elements((13, 9, 11, 13), (7, 2, 7, 8)) == (1, 4, 1, 1)": {
      "result": false,
      "time": 0.04276132583618164,
      "error": null
    },
    "assert division_elements((7, 1, 1, 8), (6, 3, 7, 5)) == (1, 0, 0, 1)": {
      "result": false,
      "time": 0.04713726043701172,
      "error": null
    },
    "assert division_elements((6, 1, 6, 6), (8, 7, 3, 8)) == (0, 0, 2, 0)": {
      "result": false,
      "time": 0.04057502746582031,
      "error": null
    },
    "assert division_elements((10, 1, 4, 4), (2, 4, 8, 7)) == (5, 0, 0, 0)": {
      "result": false,
      "time": 0.03970503807067871,
      "error": null
    },
    "assert division_elements((14, 5, 6, 12), (1, 2, 2, 2)) == (14, 2, 3, 6)": {
      "result": false,
      "time": 0.04204440116882324,
      "error": null
    },
    "assert division_elements((7, 2, 9, 4), (8, 3, 1, 7)) == (0, 0, 9, 0)": {
      "result": false,
      "time": 0.03746509552001953,
      "error": null
    },
    "assert division_elements((7, 1, 10, 11), (5, 7, 5, 6)) == (1, 0, 2, 1)": {
      "result": false,
      "time": 0.04472088813781738,
      "error": null
    },
    "assert division_elements((14, 6, 8, 6), (8, 4, 4, 4)) == (1, 1, 2, 1)": {
      "result": false,
      "time": 0.053879499435424805,
      "error": null
    },
    "assert division_elements((11, 2, 3, 6), (6, 6, 6, 1)) == (1, 0, 0, 6)": {
      "result": false,
      "time": 0.04501008987426758,
      "error": null
    },
    "assert division_elements((15, 7, 7, 13), (8, 3, 7, 4)) == (1, 2, 1, 3)": {
      "result": false,
      "time": 0.04542851448059082,
      "error": null
    },
    "assert division_elements((12, 8, 4, 5), (8, 5, 2, 4)) == (1, 1, 2, 1)": {
      "result": false,
      "time": 0.03757643699645996,
      "error": null
    },
    "assert division_elements((7, 1, 3, 5), (7, 5, 4, 8)) == (1, 0, 0, 0)": {
      "result": false,
      "time": 0.03757333755493164,
      "error": null
    },
    "assert division_elements((6, 3, 4, 7), (6, 4, 2, 2)) == (1, 0, 2, 3)": {
      "result": false,
      "time": 0.04605746269226074,
      "error": null
    },
    "assert division_elements((15, 5, 6, 13), (5, 4, 4, 6)) == (3, 1, 1, 2)": {
      "result": false,
      "time": 0.046967267990112305,
      "error": null
    },
    "assert division_elements((9, 9, 11, 14), (9, 4, 4, 1)) == (1, 2, 2, 14)": {
      "result": false,
      "time": 0.0429539680480957,
      "error": null
    },
    "assert division_elements((13, 2, 9, 12), (5, 6, 7, 1)) == (2, 0, 1, 12)": {
      "result": false,
      "time": 0.04424285888671875,
      "error": null
    },
    "assert division_elements((6, 7, 5, 11), (5, 4, 3, 7)) == (1, 1, 1, 1)": {
      "result": false,
      "time": 0.04623770713806152,
      "error": null
    },
    "assert division_elements((7, 1, 4, 11), (2, 4, 7, 7)) == (3, 0, 0, 1)": {
      "result": false,
      "time": 0.045972347259521484,
      "error": null
    },
    "assert division_elements((13, 6, 4, 9), (3, 7, 7, 6)) == (4, 0, 0, 1)": {
      "result": false,
      "time": 0.04793357849121094,
      "error": null
    },
    "assert division_elements((12, 9, 4, 9), (6, 2, 7, 2)) == (2, 4, 0, 4)": {
      "result": false,
      "time": 0.047072410583496094,
      "error": null
    },
    "assert division_elements((7, 4, 9, 5), (4, 1, 8, 4)) == (1, 4, 1, 1)": {
      "result": false,
      "time": 0.04293632507324219,
      "error": null
    },
    "assert division_elements((14, 5, 6, 9), (8, 7, 4, 5)) == (1, 0, 1, 1)": {
      "result": false,
      "time": 0.05051374435424805,
      "error": null
    },
    "assert division_elements((7, 4, 7, 14), (1, 1, 3, 4)) == (7, 4, 2, 3)": {
      "result": false,
      "time": 0.03479480743408203,
      "error": null
    },
    "assert division_elements((7, 6, 3, 14), (6, 5, 4, 1)) == (1, 1, 0, 14)": {
      "result": false,
      "time": 0.036470651626586914,
      "error": null
    },
    "assert division_elements((13, 7, 3, 8), (6, 4, 8, 2)) == (2, 1, 0, 4)": {
      "result": false,
      "time": 0.04287457466125488,
      "error": null
    },
    "assert division_elements((5, 2, 3, 9), (4, 7, 7, 6)) == (1, 0, 0, 1)": {
      "result": false,
      "time": 0.042868852615356445,
      "error": null
    },
    "assert division_elements((14, 8, 9, 14), (5, 2, 1, 3)) == (2, 4, 9, 4)": {
      "result": false,
      "time": 0.04041337966918945,
      "error": null
    },
    "assert division_elements((15, 2, 11, 10), (5, 1, 7, 7)) == (3, 2, 1, 1)": {
      "result": false,
      "time": 0.043755531311035156,
      "error": null
    },
    "assert division_elements((11, 5, 6, 6), (9, 2, 2, 5)) == (1, 2, 3, 1)": {
      "result": false,
      "time": 0.041078805923461914,
      "error": null
    },
    "assert division_elements((13, 9, 10, 13), (9, 7, 2, 6)) == (1, 1, 5, 2)": {
      "result": false,
      "time": 0.04948139190673828,
      "error": null
    },
    "assert division_elements((12, 7, 1, 11), (5, 4, 5, 3)) == (2, 1, 0, 3)": {
      "result": false,
      "time": 0.05795168876647949,
      "error": null
    },
    "assert division_elements((8, 7, 6, 9), (2, 4, 3, 8)) == (4, 1, 2, 1)": {
      "result": false,
      "time": 0.04767036437988281,
      "error": null
    },
    "assert division_elements((8, 1, 4, 14), (1, 5, 7, 5)) == (8, 0, 0, 2)": {
      "result": false,
      "time": 0.055737972259521484,
      "error": null
    },
    "assert division_elements((16, 11, 4, 17), (8, 5, 9, 2)) == (2, 2, 0, 8)": {
      "result": false,
      "time": 0.04522109031677246,
      "error": null
    },
    "assert division_elements((13, 7, 10, 17), (5, 3, 7, 9)) == (2, 2, 1, 1)": {
      "result": false,
      "time": 0.053499698638916016,
      "error": null
    },
    "assert division_elements((12, 2, 13, 19), (1, 6, 4, 5)) == (12, 0, 3, 3)": {
      "result": false,
      "time": 0.04923272132873535,
      "error": null
    },
    "assert division_elements((7, 1, 6, 11), (11, 2, 7, 7)) == (0, 0, 0, 1)": {
      "result": false,
      "time": 0.045479774475097656,
      "error": null
    },
    "assert division_elements((13, 5, 8, 21), (1, 4, 2, 7)) == (13, 1, 4, 3)": {
      "result": false,
      "time": 0.04619026184082031,
      "error": null
    },
    "assert division_elements((9, 9, 5, 12), (2, 1, 7, 6)) == (4, 9, 0, 2)": {
      "result": false,
      "time": 0.05640912055969238,
      "error": null
    },
    "assert division_elements((14, 4, 11, 20), (10, 8, 1, 9)) == (1, 0, 11, 2)": {
      "result": false,
      "time": 0.0400238037109375,
      "error": null
    },
    "assert division_elements((10, 5, 3, 17), (4, 1, 3, 8)) == (2, 5, 1, 2)": {
      "result": false,
      "time": 0.041641950607299805,
      "error": null
    },
    "assert division_elements((12, 2, 11, 19), (3, 4, 7, 7)) == (4, 0, 1, 2)": {
      "result": false,
      "time": 0.049739837646484375,
      "error": null
    },
    "assert division_elements((8, 10, 8, 17), (10, 4, 1, 3)) == (0, 2, 8, 5)": {
      "result": false,
      "time": 0.04801821708679199,
      "error": null
    },
    "assert division_elements((11, 2, 9, 14), (10, 5, 1, 7)) == (1, 0, 9, 2)": {
      "result": false,
      "time": 0.04070162773132324,
      "error": null
    },
    "assert division_elements((15, 11, 7, 18), (10, 7, 6, 7)) == (1, 1, 1, 2)": {
      "result": false,
      "time": 0.044592857360839844,
      "error": null
    },
    "assert division_elements((8, 6, 6, 16), (7, 4, 2, 4)) == (1, 1, 3, 4)": {
      "result": false,
      "time": 0.04998135566711426,
      "error": null
    },
    "assert division_elements((11, 2, 3, 12), (3, 8, 3, 2)) == (3, 0, 1, 6)": {
      "result": false,
      "time": 0.047492265701293945,
      "error": null
    },
    "assert division_elements((7, 5, 12, 11), (10, 4, 2, 7)) == (0, 1, 6, 1)": {
      "result": false,
      "time": 0.056189775466918945,
      "error": null
    },
    "assert division_elements((7, 7, 9, 14), (11, 7, 7, 9)) == (0, 1, 1, 1)": {
      "result": false,
      "time": 0.0534977912902832,
      "error": null
    },
    "assert division_elements((12, 7, 8, 17), (5, 7, 1, 6)) == (2, 1, 8, 2)": {
      "result": false,
      "time": 0.05373811721801758,
      "error": null
    },
    "assert division_elements((16, 1, 9, 15), (11, 2, 3, 7)) == (1, 0, 3, 2)": {
      "result": false,
      "time": 0.054616689682006836,
      "error": null
    },
    "assert division_elements((16, 7, 9, 16), (11, 5, 8, 2)) == (1, 1, 1, 8)": {
      "result": false,
      "time": 0.0475311279296875,
      "error": null
    },
    "assert division_elements((16, 4, 11, 18), (3, 7, 3, 8)) == (5, 0, 3, 2)": {
      "result": false,
      "time": 0.05420875549316406,
      "error": null
    },
    "assert division_elements((16, 6, 3, 18), (2, 4, 4, 7)) == (8, 1, 0, 2)": {
      "result": false,
      "time": 0.04092979431152344,
      "error": null
    },
    "assert division_elements((12, 9, 7, 11), (10, 1, 2, 6)) == (1, 9, 3, 1)": {
      "result": false,
      "time": 0.05309033393859863,
      "error": null
    },
    "assert division_elements((13, 10, 5, 18), (9, 1, 5, 4)) == (1, 10, 1, 4)": {
      "result": false,
      "time": 0.05689883232116699,
      "error": null
    },
    "assert division_elements((14, 9, 5, 13), (9, 7, 2, 6)) == (1, 1, 2, 2)": {
      "result": false,
      "time": 0.0457608699798584,
      "error": null
    },
    "assert division_elements((11, 8, 8, 16), (4, 4, 6, 1)) == (2, 2, 1, 16)": {
      "result": false,
      "time": 0.04528379440307617,
      "error": null
    },
    "assert division_elements((17, 4, 11, 12), (10, 7, 6, 8)) == (1, 0, 1, 1)": {
      "result": false,
      "time": 0.04874849319458008,
      "error": null
    },
    "assert division_elements((10, 7, 5, 14), (9, 8, 4, 8)) == (1, 0, 1, 1)": {
      "result": false,
      "time": 0.058283329010009766,
      "error": null
    },
    "assert division_elements((15, 1, 5, 18), (4, 4, 3, 2)) == (3, 0, 1, 9)": {
      "result": false,
      "time": 0.04293417930603027,
      "error": null
    },
    "assert division_elements((14, 5, 12, 15), (11, 2, 4, 1)) == (1, 2, 3, 15)": {
      "result": false,
      "time": 0.054807424545288086,
      "error": null
    },
    "assert division_elements((15, 7, 11, 18), (5, 1, 1, 2)) == (3, 7, 11, 9)": {
      "result": true,
      "time": 0.0512089729309082,
      "error": null
    },
    "assert division_elements((13, 10, 4, 16), (11, 8, 7, 5)) == (1, 1, 0, 3)": {
      "result": false,
      "time": 0.06457042694091797,
      "error": null
    },
    "assert division_elements((15, 2, 12, 13), (4, 8, 9, 2)) == (3, 0, 1, 6)": {
      "result": false,
      "time": 0.05569815635681152,
      "error": null
    },
    "assert division_elements((7, 6, 4, 19), (8, 2, 1, 8)) == (0, 3, 4, 2)": {
      "result": false,
      "time": 0.05197548866271973,
      "error": null
    },
    "assert division_elements((18, 13, 40, 21), (8, 9, 6, 5)) == (2, 1, 6, 4)": {
      "result": false,
      "time": 0.05559539794921875,
      "error": null
    },
    "assert division_elements((24, 19, 34, 18), (1, 6, 6, 8)) == (24, 3, 5, 2)": {
      "result": false,
      "time": 0.04983782768249512,
      "error": null
    },
    "assert division_elements((16, 16, 40, 17), (2, 2, 4, 14)) == (8, 8, 10, 1)": {
      "result": false,
      "time": 0.04930472373962402,
      "error": null
    },
    "assert division_elements((25, 9, 41, 21), (3, 6, 6, 14)) == (8, 1, 6, 1)": {
      "result": false,
      "time": 0.05136370658874512,
      "error": null
    },
    "assert division_elements((17, 11, 35, 15), (8, 8, 4, 10)) == (2, 1, 8, 1)": {
      "result": false,
      "time": 0.05108165740966797,
      "error": null
    },
    "assert division_elements((21, 15, 35, 21), (10, 5, 1, 11)) == (2, 3, 35, 1)": {
      "result": false,
      "time": 0.03359270095825195,
      "error": null
    },
    "assert division_elements((20, 16, 33, 14), (8, 11, 8, 4)) == (2, 1, 4, 3)": {
      "result": false,
      "time": 0.035040855407714844,
      "error": null
    },
    "assert division_elements((19, 11, 35, 21), (3, 4, 4, 6)) == (6, 2, 8, 3)": {
      "result": false,
      "time": 0.03727078437805176,
      "error": null
    },
    "assert division_elements((20, 13, 35, 22), (1, 12, 1, 11)) == (20, 1, 35, 2)": {
      "result": false,
      "time": 0.04103803634643555,
      "error": null
    },
    "assert division_elements((24, 10, 39, 22), (5, 11, 4, 7)) == (4, 0, 9, 3)": {
      "result": false,
      "time": 0.0358426570892334,
      "error": null
    },
    "assert division_elements((20, 11, 34, 21), (9, 3, 7, 14)) == (2, 3, 4, 1)": {
      "result": false,
      "time": 0.03810691833496094,
      "error": null
    },
    "assert division_elements((23, 12, 34, 19), (8, 2, 4, 14)) == (2, 6, 8, 1)": {
      "result": false,
      "time": 0.03824162483215332,
      "error": null
    },
    "assert division_elements((23, 15, 37, 16), (7, 8, 4, 9)) == (3, 1, 9, 1)": {
      "result": false,
      "time": 0.03546404838562012,
      "error": null
    },
    "assert division_elements((15, 11, 36, 21), (1, 7, 10, 9)) == (15, 1, 3, 2)": {
      "result": false,
      "time": 0.0343778133392334,
      "error": null
    },
    "assert division_elements((18, 13, 32, 14), (8, 10, 10, 8)) == (2, 1, 3, 1)": {
      "result": false,
      "time": 0.03654646873474121,
      "error": null
    },
    "assert division_elements((15, 10, 32, 17), (2, 10, 4, 8)) == (7, 1, 8, 2)": {
      "result": false,
      "time": 0.03449416160583496,
      "error": null
    },
    "assert division_elements((15, 16, 33, 23), (1, 8, 6, 9)) == (15, 2, 5, 2)": {
      "result": false,
      "time": 0.03441214561462402,
      "error": null
    },
    "assert division_elements((19, 16, 38, 21), (3, 5, 9, 9)) == (6, 3, 4, 2)": {
      "result": false,
      "time": 0.034128665924072266,
      "error": null
    },
    "assert division_elements((17, 13, 38, 16), (5, 3, 1, 7)) == (3, 4, 38, 2)": {
      "result": false,
      "time": 0.034671783447265625,
      "error": null
    },
    "assert division_elements((15, 12, 41, 18), (3, 5, 7, 6)) == (5, 2, 5, 3)": {
      "result": false,
      "time": 0.03696584701538086,
      "error": null
    },
    "assert division_elements((24, 18, 35, 22), (4, 9, 3, 6)) == (6, 2, 11, 3)": {
      "result": false,
      "time": 0.03386425971984863,
      "error": null
    },
    "assert division_elements((22, 11, 40, 13), (8, 3, 7, 7)) == (2, 3, 5, 1)": {
      "result": false,
      "time": 0.03590559959411621,
      "error": null
    },
    "assert division_elements((22, 14, 40, 17), (2, 5, 5, 10)) == (11, 2, 8, 1)": {
      "result": false,
      "time": 0.035514116287231445,
      "error": null
    },
    "assert division_elements((18, 13, 31, 16), (2, 3, 11, 11)) == (9, 4, 2, 1)": {
      "result": false,
      "time": 0.03169107437133789,
      "error": null
    },
    "assert division_elements((24, 9, 34, 15), (1, 10, 4, 13)) == (24, 0, 8, 1)": {
      "result": false,
      "time": 0.04467463493347168,
      "error": null
    },
    "assert division_elements((19, 12, 38, 17), (5, 6, 9, 12)) == (3, 2, 4, 1)": {
      "result": false,
      "time": 0.03629112243652344,
      "error": null
    },
    "assert division_elements((17, 19, 36, 13), (6, 4, 8, 9)) == (2, 4, 4, 1)": {
      "result": false,
      "time": 0.0385892391204834,
      "error": null
    },
    "assert division_elements((22, 13, 38, 17), (2, 7, 7, 5)) == (11, 1, 5, 3)": {
      "result": false,
      "time": 0.039901018142700195,
      "error": null
    },
    "assert division_elements((18, 11, 35, 16), (10, 11, 9, 8)) == (1, 1, 3, 2)": {
      "result": false,
      "time": 0.033734798431396484,
      "error": null
    },
    "assert division_elements((17, 18, 33, 13), (2, 2, 9, 13)) == (8, 9, 3, 1)": {
      "result": false,
      "time": 0.03860068321228027,
      "error": null
    },
    "assert division_elements((15, 12, 36, 22), (7, 3, 1, 7)) == (2, 4, 36, 3)": {
      "result": false,
      "time": 0.031420230865478516,
      "error": null
    },
    "assert division_elements((22, 11, 35, 17), (5, 4, 4, 14)) == (4, 2, 8, 1)": {
      "result": false,
      "time": 0.028652191162109375,
      "error": null
    },
    "assert division_elements((15, 12, 32, 23), (10, 6, 8, 11)) == (1, 2, 4, 2)": {
      "result": false,
      "time": 0.0394744873046875,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0392156862745098,
  "general_error": "",
  "has_testcase_error": false
}