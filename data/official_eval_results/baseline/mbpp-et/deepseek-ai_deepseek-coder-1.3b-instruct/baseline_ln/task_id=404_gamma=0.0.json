{
  "code": "def minimum(num1, num2):\n    if num1 < num2:\n        return num1\n    else:\n        return num2\n",
  "results": {
    "assert minimum(1,2) == 1": {
      "result": true,
      "time": 0.05238533020019531,
      "error": null
    },
    "assert minimum(-5,-4) == -5": {
      "result": true,
      "time": 0.05799436569213867,
      "error": null
    },
    "assert minimum(0,0) == 0": {
      "result": true,
      "time": 0.04430127143859863,
      "error": null
    },
    "assert minimum(5, 3) == 3": {
      "result": true,
      "time": 0.03937959671020508,
      "error": null
    },
    "assert minimum(6, 5) == 5": {
      "result": true,
      "time": 0.0489654541015625,
      "error": null
    },
    "assert minimum(4, 6) == 4": {
      "result": true,
      "time": 0.04482674598693848,
      "error": null
    },
    "assert minimum(1, 6) == 1": {
      "result": true,
      "time": 0.05172276496887207,
      "error": null
    },
    "assert minimum(6, 6) == 6": {
      "result": true,
      "time": 0.0609133243560791,
      "error": null
    },
    "assert minimum(2, 6) == 2": {
      "result": true,
      "time": 0.0532376766204834,
      "error": null
    },
    "assert minimum(3, 5) == 3": {
      "result": true,
      "time": 0.04916095733642578,
      "error": null
    },
    "assert minimum(3, 1) == 1": {
      "result": true,
      "time": 0.0531771183013916,
      "error": null
    },
    "assert minimum(3, 7) == 3": {
      "result": true,
      "time": 0.059111833572387695,
      "error": null
    },
    "assert minimum(2, 4) == 2": {
      "result": true,
      "time": 0.053694725036621094,
      "error": null
    },
    "assert minimum(4, 3) == 3": {
      "result": true,
      "time": 0.07050943374633789,
      "error": null
    },
    "assert minimum(4, 2) == 2": {
      "result": true,
      "time": 0.04477190971374512,
      "error": null
    },
    "assert minimum(5, 6) == 5": {
      "result": true,
      "time": 0.055709123611450195,
      "error": null
    },
    "assert minimum(5, 2) == 2": {
      "result": true,
      "time": 0.048043251037597656,
      "error": null
    },
    "assert minimum(3, 4) == 3": {
      "result": true,
      "time": 0.052004098892211914,
      "error": null
    },
    "assert minimum(6, 7) == 6": {
      "result": true,
      "time": 0.04849982261657715,
      "error": null
    },
    "assert minimum(1, 4) == 1": {
      "result": true,
      "time": 0.05546236038208008,
      "error": null
    },
    "assert minimum(1, 1) == 1": {
      "result": true,
      "time": 0.05636954307556152,
      "error": null
    },
    "assert minimum(2, 7) == 2": {
      "result": true,
      "time": 0.041489601135253906,
      "error": null
    },
    "assert minimum(3, 2) == 2": {
      "result": true,
      "time": 0.05763864517211914,
      "error": null
    },
    "assert minimum(1, 2) == 1": {
      "result": true,
      "time": 0.055025577545166016,
      "error": null
    },
    "assert minimum(4, 1) == 1": {
      "result": true,
      "time": 0.05499005317687988,
      "error": null
    },
    "assert minimum(-3, -6) == -6": {
      "result": true,
      "time": 0.052896738052368164,
      "error": null
    },
    "assert minimum(-3, 0) == -3": {
      "result": true,
      "time": 0.051193952560424805,
      "error": null
    },
    "assert minimum(-10, -2) == -10": {
      "result": true,
      "time": 0.05820631980895996,
      "error": null
    },
    "assert minimum(0, -9) == -9": {
      "result": true,
      "time": 0.06074976921081543,
      "error": null
    },
    "assert minimum(-10, -6) == -10": {
      "result": true,
      "time": 0.05409884452819824,
      "error": null
    },
    "assert minimum(0, -4) == -4": {
      "result": true,
      "time": 0.04907679557800293,
      "error": null
    },
    "assert minimum(-9, -5) == -9": {
      "result": true,
      "time": 0.04846596717834473,
      "error": null
    },
    "assert minimum(-1, -4) == -4": {
      "result": true,
      "time": 0.04756426811218262,
      "error": null
    },
    "assert minimum(-2, -6) == -6": {
      "result": true,
      "time": 0.05045127868652344,
      "error": null
    },
    "assert minimum(-9, -8) == -9": {
      "result": true,
      "time": 0.05881071090698242,
      "error": null
    },
    "assert minimum(-7, 1) == -7": {
      "result": true,
      "time": 0.05242419242858887,
      "error": null
    },
    "assert minimum(-2, 1) == -2": {
      "result": true,
      "time": 0.04979395866394043,
      "error": null
    },
    "assert minimum(-1, -2) == -2": {
      "result": true,
      "time": 0.05093216896057129,
      "error": null
    },
    "assert minimum(0, -3) == -3": {
      "result": true,
      "time": 0.03989863395690918,
      "error": null
    },
    "assert minimum(-8, 1) == -8": {
      "result": true,
      "time": 0.045339107513427734,
      "error": null
    },
    "assert minimum(-4, 1) == -4": {
      "result": true,
      "time": 0.04764103889465332,
      "error": null
    },
    "assert minimum(-1, -5) == -5": {
      "result": true,
      "time": 0.042176246643066406,
      "error": null
    },
    "assert minimum(-9, 1) == -9": {
      "result": true,
      "time": 0.0442500114440918,
      "error": null
    },
    "assert minimum(-7, -6) == -7": {
      "result": true,
      "time": 0.04037308692932129,
      "error": null
    },
    "assert minimum(-2, -7) == -7": {
      "result": true,
      "time": 0.03748154640197754,
      "error": null
    },
    "assert minimum(-10, 0) == -10": {
      "result": true,
      "time": 0.04401993751525879,
      "error": null
    },
    "assert minimum(-7, -1) == -7": {
      "result": true,
      "time": 0.04501962661743164,
      "error": null
    },
    "assert minimum(-4, -6) == -6": {
      "result": true,
      "time": 0.045151472091674805,
      "error": null
    },
    "assert minimum(0, -6) == -6": {
      "result": true,
      "time": 0.039643049240112305,
      "error": null
    },
    "assert minimum(-6, -9) == -9": {
      "result": true,
      "time": 0.03856492042541504,
      "error": null
    },
    "assert minimum(-9, -1) == -9": {
      "result": true,
      "time": 0.04146218299865723,
      "error": null
    },
    "assert minimum(-8, -4) == -8": {
      "result": true,
      "time": 0.0387418270111084,
      "error": null
    },
    "assert minimum(-2, 0) == -2": {
      "result": true,
      "time": 0.04358839988708496,
      "error": null
    },
    "assert minimum(-3, -5) == -5": {
      "result": true,
      "time": 0.044942378997802734,
      "error": null
    },
    "assert minimum(2, 3) == 2": {
      "result": true,
      "time": 0.042864322662353516,
      "error": null
    },
    "assert minimum(4, 4) == 4": {
      "result": true,
      "time": 0.04037642478942871,
      "error": null
    },
    "assert minimum(4, 5) == 4": {
      "result": true,
      "time": 0.04375052452087402,
      "error": null
    },
    "assert minimum(1, 3) == 1": {
      "result": true,
      "time": 0.03997445106506348,
      "error": null
    },
    "assert minimum(2, 5) == 2": {
      "result": true,
      "time": 0.04065823554992676,
      "error": null
    },
    "assert minimum(2, 1) == 1": {
      "result": true,
      "time": 0.03991508483886719,
      "error": null
    },
    "assert minimum(2, 2) == 2": {
      "result": true,
      "time": 0.04326152801513672,
      "error": null
    },
    "assert minimum(1, 5) == 1": {
      "result": true,
      "time": 0.0475764274597168,
      "error": null
    },
    "assert minimum(5, 5) == 5": {
      "result": true,
      "time": 0.046364545822143555,
      "error": null
    },
    "assert minimum(3, 3) == 3": {
      "result": true,
      "time": 0.0366206169128418,
      "error": null
    },
    "assert minimum(5, 4) == 4": {
      "result": true,
      "time": 0.033376455307006836,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}