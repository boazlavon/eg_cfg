{
  "code": "def add_consecutive_nums(nums):\n    result = [nums[0]]\n    for i in range(1, len(nums)):\n        result.append(nums[i] + result[-1])\n    return result",
  "results": {
    "assert add_consecutive_nums([1, 1, 3, 4, 4, 5, 6, 7])==[2, 4, 7, 8, 9, 11, 13]": {
      "result": false,
      "time": 0.03486037254333496,
      "error": null
    },
    "assert add_consecutive_nums([4, 5, 8, 9, 6, 10])==[9, 13, 17, 15, 16]": {
      "result": false,
      "time": 0.03339791297912598,
      "error": null
    },
    "assert add_consecutive_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[3, 5, 7, 9, 11, 13, 15, 17, 19]": {
      "result": false,
      "time": 0.03273582458496094,
      "error": null
    },
    "assert add_consecutive_nums([1, 4, 1, 5, 7, 8, 1, 10]) == [5, 5, 6, 12, 15, 9, 11]": {
      "result": false,
      "time": 0.03136134147644043,
      "error": null
    },
    "assert add_consecutive_nums([6, 1, 8, 3, 1, 10, 9, 12]) == [7, 9, 11, 4, 11, 19, 21]": {
      "result": false,
      "time": 0.03507542610168457,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 2, 3, 9, 2, 4, 6]) == [6, 7, 5, 12, 11, 6, 10]": {
      "result": false,
      "time": 0.03267693519592285,
      "error": null
    },
    "assert add_consecutive_nums([4, 1, 7, 5, 5, 3, 7, 11]) == [5, 8, 12, 10, 8, 10, 18]": {
      "result": false,
      "time": 0.03477001190185547,
      "error": null
    },
    "assert add_consecutive_nums([6, 5, 1, 8, 1, 5, 9, 3]) == [11, 6, 9, 9, 6, 14, 12]": {
      "result": false,
      "time": 0.03235650062561035,
      "error": null
    },
    "assert add_consecutive_nums([2, 2, 7, 1, 9, 4, 11, 6]) == [4, 9, 8, 10, 13, 15, 17]": {
      "result": false,
      "time": 0.03464627265930176,
      "error": null
    },
    "assert add_consecutive_nums([4, 6, 6, 1, 3, 3, 10, 8]) == [10, 12, 7, 4, 6, 13, 18]": {
      "result": false,
      "time": 0.03639698028564453,
      "error": null
    },
    "assert add_consecutive_nums([6, 1, 2, 9, 4, 2, 3, 3]) == [7, 3, 11, 13, 6, 5, 6]": {
      "result": false,
      "time": 0.03408002853393555,
      "error": null
    },
    "assert add_consecutive_nums([1, 1, 8, 4, 9, 9, 4, 8]) == [2, 9, 12, 13, 18, 13, 12]": {
      "result": false,
      "time": 0.02888774871826172,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 6, 5, 7, 7, 3, 7]) == [6, 11, 11, 12, 14, 10, 10]": {
      "result": false,
      "time": 0.02878713607788086,
      "error": null
    },
    "assert add_consecutive_nums([2, 2, 2, 6, 2, 6, 1, 6]) == [4, 4, 8, 8, 8, 7, 7]": {
      "result": false,
      "time": 0.03278088569641113,
      "error": null
    },
    "assert add_consecutive_nums([3, 6, 3, 7, 5, 2, 1, 3]) == [9, 9, 10, 12, 7, 3, 4]": {
      "result": false,
      "time": 0.032692909240722656,
      "error": null
    },
    "assert add_consecutive_nums([2, 3, 1, 6, 9, 1, 1, 9]) == [5, 4, 7, 15, 10, 2, 10]": {
      "result": false,
      "time": 0.031569480895996094,
      "error": null
    },
    "assert add_consecutive_nums([1, 1, 1, 4, 2, 3, 6, 3]) == [2, 2, 5, 6, 5, 9, 9]": {
      "result": false,
      "time": 0.03130340576171875,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 5, 3, 3, 10, 11, 5]) == [6, 10, 8, 6, 13, 21, 16]": {
      "result": false,
      "time": 0.032195091247558594,
      "error": null
    },
    "assert add_consecutive_nums([1, 6, 8, 3, 3, 5, 1, 12]) == [7, 14, 11, 6, 8, 6, 13]": {
      "result": false,
      "time": 0.03297901153564453,
      "error": null
    },
    "assert add_consecutive_nums([1, 2, 4, 2, 1, 8, 11, 8]) == [3, 6, 6, 3, 9, 19, 19]": {
      "result": false,
      "time": 0.03181028366088867,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 1, 6, 2, 8, 3, 6]) == [12, 7, 7, 8, 10, 11, 9]": {
      "result": false,
      "time": 0.03310537338256836,
      "error": null
    },
    "assert add_consecutive_nums([3, 1, 7, 9, 9, 5, 9, 9]) == [4, 8, 16, 18, 14, 14, 18]": {
      "result": false,
      "time": 0.032761335372924805,
      "error": null
    },
    "assert add_consecutive_nums([4, 4, 6, 6, 8, 8, 2, 3]) == [8, 10, 12, 14, 16, 10, 5]": {
      "result": false,
      "time": 0.03384280204772949,
      "error": null
    },
    "assert add_consecutive_nums([4, 5, 2, 6, 8, 10, 11, 3]) == [9, 7, 8, 14, 18, 21, 14]": {
      "result": false,
      "time": 0.029413938522338867,
      "error": null
    },
    "assert add_consecutive_nums([1, 6, 6, 9, 6, 2, 11, 9]) == [7, 12, 15, 15, 8, 13, 20]": {
      "result": false,
      "time": 0.03252148628234863,
      "error": null
    },
    "assert add_consecutive_nums([4, 5, 2, 1, 5, 5, 11, 11]) == [9, 7, 3, 6, 10, 16, 22]": {
      "result": false,
      "time": 0.032248497009277344,
      "error": null
    },
    "assert add_consecutive_nums([5, 4, 8, 6, 8, 1, 2, 6]) == [9, 12, 14, 14, 9, 3, 8]": {
      "result": false,
      "time": 0.03427433967590332,
      "error": null
    },
    "assert add_consecutive_nums([3, 2, 2, 9, 3, 4, 5, 11]) == [5, 4, 11, 12, 7, 9, 16]": {
      "result": false,
      "time": 0.030131101608276367,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 3, 4, 5, 5, 9, 4]) == [12, 9, 7, 9, 10, 14, 13]": {
      "result": false,
      "time": 0.03300142288208008,
      "error": null
    },
    "assert add_consecutive_nums([5, 4, 3, 1, 9, 2, 7, 10]) == [9, 7, 4, 10, 11, 9, 17]": {
      "result": false,
      "time": 0.031191587448120117,
      "error": null
    },
    "assert add_consecutive_nums([5, 6, 1, 3, 3, 8, 9, 8]) == [11, 7, 4, 6, 11, 17, 17]": {
      "result": false,
      "time": 0.03084588050842285,
      "error": null
    },
    "assert add_consecutive_nums([4, 1, 2, 2, 7, 5, 2, 10]) == [5, 3, 4, 9, 12, 7, 12]": {
      "result": false,
      "time": 0.03313469886779785,
      "error": null
    },
    "assert add_consecutive_nums([2, 1, 4, 9, 1, 8, 8, 10]) == [3, 5, 13, 10, 9, 16, 18]": {
      "result": false,
      "time": 0.03441357612609863,
      "error": null
    },
    "assert add_consecutive_nums([5, 1, 5, 8, 6, 10, 1, 4]) == [6, 6, 13, 14, 16, 11, 5]": {
      "result": false,
      "time": 0.03490185737609863,
      "error": null
    },
    "assert add_consecutive_nums([4, 3, 5, 9, 6, 10, 9, 11]) == [7, 8, 14, 15, 16, 19, 20]": {
      "result": false,
      "time": 0.03786325454711914,
      "error": null
    },
    "assert add_consecutive_nums([6, 2, 7, 5, 9, 7, 3, 11]) == [8, 9, 12, 14, 16, 10, 14]": {
      "result": false,
      "time": 0.03341031074523926,
      "error": null
    },
    "assert add_consecutive_nums([7, 4, 6, 11, 5, 9]) == [11, 10, 17, 16, 14]": {
      "result": false,
      "time": 0.034105777740478516,
      "error": null
    },
    "assert add_consecutive_nums([5, 7, 7, 5, 8, 14]) == [12, 14, 12, 13, 22]": {
      "result": false,
      "time": 0.03620791435241699,
      "error": null
    },
    "assert add_consecutive_nums([8, 5, 4, 12, 6, 12]) == [13, 9, 16, 18, 18]": {
      "result": false,
      "time": 0.043114423751831055,
      "error": null
    },
    "assert add_consecutive_nums([6, 4, 4, 14, 10, 13]) == [10, 8, 18, 24, 23]": {
      "result": false,
      "time": 0.03793525695800781,
      "error": null
    },
    "assert add_consecutive_nums([4, 10, 12, 6, 11, 7]) == [14, 22, 18, 17, 18]": {
      "result": false,
      "time": 0.03236103057861328,
      "error": null
    },
    "assert add_consecutive_nums([9, 4, 7, 14, 5, 14]) == [13, 11, 21, 19, 19]": {
      "result": false,
      "time": 0.03532695770263672,
      "error": null
    },
    "assert add_consecutive_nums([6, 1, 4, 9, 7, 9]) == [7, 5, 13, 16, 16]": {
      "result": false,
      "time": 0.030964136123657227,
      "error": null
    },
    "assert add_consecutive_nums([9, 4, 8, 7, 1, 6]) == [13, 12, 15, 8, 7]": {
      "result": false,
      "time": 0.03507256507873535,
      "error": null
    },
    "assert add_consecutive_nums([8, 4, 12, 12, 8, 13]) == [12, 16, 24, 20, 21]": {
      "result": false,
      "time": 0.03340578079223633,
      "error": null
    },
    "assert add_consecutive_nums([6, 9, 6, 10, 1, 12]) == [15, 15, 16, 11, 13]": {
      "result": false,
      "time": 0.030241727828979492,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 7, 9, 2, 15]) == [12, 13, 16, 11, 17]": {
      "result": false,
      "time": 0.036225318908691406,
      "error": null
    },
    "assert add_consecutive_nums([9, 10, 8, 11, 8, 12]) == [19, 18, 19, 19, 20]": {
      "result": false,
      "time": 0.029789209365844727,
      "error": null
    },
    "assert add_consecutive_nums([9, 4, 5, 10, 4, 7]) == [13, 9, 15, 14, 11]": {
      "result": false,
      "time": 0.03556466102600098,
      "error": null
    },
    "assert add_consecutive_nums([2, 9, 6, 8, 2, 6]) == [11, 15, 14, 10, 8]": {
      "result": false,
      "time": 0.035919904708862305,
      "error": null
    },
    "assert add_consecutive_nums([9, 5, 13, 11, 10, 13]) == [14, 18, 24, 21, 23]": {
      "result": false,
      "time": 0.03188204765319824,
      "error": null
    },
    "assert add_consecutive_nums([9, 1, 4, 13, 8, 12]) == [10, 5, 17, 21, 20]": {
      "result": false,
      "time": 0.03443121910095215,
      "error": null
    },
    "assert add_consecutive_nums([9, 9, 13, 6, 7, 8]) == [18, 22, 19, 13, 15]": {
      "result": false,
      "time": 0.031149625778198242,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 10, 9, 8, 7]) == [6, 15, 19, 17, 15]": {
      "result": false,
      "time": 0.03454470634460449,
      "error": null
    },
    "assert add_consecutive_nums([1, 3, 9, 13, 11, 5]) == [4, 12, 22, 24, 16]": {
      "result": false,
      "time": 0.03844904899597168,
      "error": null
    },
    "assert add_consecutive_nums([2, 8, 4, 11, 7, 11]) == [10, 12, 15, 18, 18]": {
      "result": false,
      "time": 0.0346226692199707,
      "error": null
    },
    "assert add_consecutive_nums([7, 8, 13, 11, 2, 6]) == [15, 21, 24, 13, 8]": {
      "result": false,
      "time": 0.03173065185546875,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 4, 13, 6, 8]) == [12, 10, 17, 19, 14]": {
      "result": false,
      "time": 0.03246331214904785,
      "error": null
    },
    "assert add_consecutive_nums([4, 8, 10, 7, 5, 5]) == [12, 18, 17, 12, 10]": {
      "result": false,
      "time": 0.040526628494262695,
      "error": null
    },
    "assert add_consecutive_nums([3, 1, 8, 10, 8, 11]) == [4, 9, 18, 18, 19]": {
      "result": false,
      "time": 0.04479861259460449,
      "error": null
    },
    "assert add_consecutive_nums([8, 5, 10, 5, 3, 9]) == [13, 15, 15, 8, 12]": {
      "result": false,
      "time": 0.0381617546081543,
      "error": null
    },
    "assert add_consecutive_nums([7, 9, 7, 12, 7, 7]) == [16, 16, 19, 19, 14]": {
      "result": false,
      "time": 0.03281211853027344,
      "error": null
    },
    "assert add_consecutive_nums([7, 2, 9, 9, 11, 12]) == [9, 11, 18, 20, 23]": {
      "result": false,
      "time": 0.03074049949645996,
      "error": null
    },
    "assert add_consecutive_nums([6, 5, 7, 7, 8, 14]) == [11, 12, 14, 15, 22]": {
      "result": false,
      "time": 0.02919292449951172,
      "error": null
    },
    "assert add_consecutive_nums([8, 2, 3, 13, 7, 9]) == [10, 5, 16, 20, 16]": {
      "result": false,
      "time": 0.034235477447509766,
      "error": null
    },
    "assert add_consecutive_nums([2, 9, 10, 10, 5, 14]) == [11, 19, 20, 15, 19]": {
      "result": false,
      "time": 0.03451180458068848,
      "error": null
    },
    "assert add_consecutive_nums([2, 8, 8, 4, 2, 10]) == [10, 16, 12, 6, 12]": {
      "result": false,
      "time": 0.03358578681945801,
      "error": null
    },
    "assert add_consecutive_nums([3, 7, 5, 8, 8, 8]) == [10, 12, 13, 16, 16]": {
      "result": false,
      "time": 0.03529953956604004,
      "error": null
    },
    "assert add_consecutive_nums([9, 3, 13, 9, 3, 5]) == [12, 16, 22, 12, 8]": {
      "result": false,
      "time": 0.026732683181762695,
      "error": null
    },
    "assert add_consecutive_nums([4, 6, 8, 6, 2, 9, 6, 6, 6, 9]) == [10, 14, 14, 8, 11, 15, 12, 12, 15]": {
      "result": false,
      "time": 0.03543806076049805,
      "error": null
    },
    "assert add_consecutive_nums([1, 2, 4, 5, 7, 4, 2, 3, 6, 5]) == [3, 6, 9, 12, 11, 6, 5, 9, 11]": {
      "result": false,
      "time": 0.044077157974243164,
      "error": null
    },
    "assert add_consecutive_nums([5, 4, 2, 3, 2, 7, 5, 6, 12, 11]) == [9, 6, 5, 5, 9, 12, 11, 18, 23]": {
      "result": false,
      "time": 0.033046722412109375,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 7, 1, 1, 4, 3, 11, 12, 15]) == [6, 12, 8, 2, 5, 7, 14, 23, 27]": {
      "result": false,
      "time": 0.034207820892333984,
      "error": null
    },
    "assert add_consecutive_nums([6, 3, 8, 4, 8, 9, 11, 9, 6, 12]) == [9, 11, 12, 12, 17, 20, 20, 15, 18]": {
      "result": false,
      "time": 0.03220033645629883,
      "error": null
    },
    "assert add_consecutive_nums([4, 3, 1, 4, 7, 10, 4, 10, 11, 14]) == [7, 4, 5, 11, 17, 14, 14, 21, 25]": {
      "result": false,
      "time": 0.04035687446594238,
      "error": null
    },
    "assert add_consecutive_nums([5, 2, 4, 6, 8, 8, 3, 11, 11, 13]) == [7, 6, 10, 14, 16, 11, 14, 22, 24]": {
      "result": false,
      "time": 0.03206324577331543,
      "error": null
    },
    "assert add_consecutive_nums([2, 5, 6, 5, 7, 5, 11, 8, 12, 7]) == [7, 11, 11, 12, 12, 16, 19, 20, 19]": {
      "result": false,
      "time": 0.03479361534118652,
      "error": null
    },
    "assert add_consecutive_nums([1, 4, 2, 4, 9, 11, 9, 3, 12, 6]) == [5, 6, 6, 13, 20, 20, 12, 15, 18]": {
      "result": false,
      "time": 0.032256364822387695,
      "error": null
    },
    "assert add_consecutive_nums([2, 4, 8, 1, 9, 11, 3, 8, 11, 15]) == [6, 12, 9, 10, 20, 14, 11, 19, 26]": {
      "result": false,
      "time": 0.0321657657623291,
      "error": null
    },
    "assert add_consecutive_nums([5, 4, 2, 4, 6, 1, 11, 9, 4, 8]) == [9, 6, 6, 10, 7, 12, 20, 13, 12]": {
      "result": false,
      "time": 0.038294315338134766,
      "error": null
    },
    "assert add_consecutive_nums([3, 6, 4, 5, 2, 4, 4, 13, 10, 7]) == [9, 10, 9, 7, 6, 8, 17, 23, 17]": {
      "result": false,
      "time": 0.030525922775268555,
      "error": null
    },
    "assert add_consecutive_nums([1, 3, 6, 2, 1, 5, 6, 9, 4, 5]) == [4, 9, 8, 3, 6, 11, 15, 13, 9]": {
      "result": false,
      "time": 0.03231477737426758,
      "error": null
    },
    "assert add_consecutive_nums([5, 7, 8, 5, 5, 3, 7, 5, 9, 5]) == [12, 15, 13, 10, 8, 10, 12, 14, 14]": {
      "result": false,
      "time": 0.02974104881286621,
      "error": null
    },
    "assert add_consecutive_nums([3, 7, 2, 2, 1, 1, 7, 3, 13, 15]) == [10, 9, 4, 3, 2, 8, 10, 16, 28]": {
      "result": false,
      "time": 0.03384852409362793,
      "error": null
    },
    "assert add_consecutive_nums([6, 3, 4, 6, 3, 7, 5, 10, 9, 5]) == [9, 7, 10, 9, 10, 12, 15, 19, 14]": {
      "result": false,
      "time": 0.029546260833740234,
      "error": null
    },
    "assert add_consecutive_nums([6, 2, 1, 9, 1, 8, 5, 3, 12, 15]) == [8, 3, 10, 10, 9, 13, 8, 15, 27]": {
      "result": false,
      "time": 0.03524279594421387,
      "error": null
    },
    "assert add_consecutive_nums([3, 2, 7, 6, 9, 9, 10, 6, 12, 10]) == [5, 9, 13, 15, 18, 19, 16, 18, 22]": {
      "result": false,
      "time": 0.03322243690490723,
      "error": null
    },
    "assert add_consecutive_nums([1, 5, 3, 5, 5, 8, 6, 12, 12, 8]) == [6, 8, 8, 10, 13, 14, 18, 24, 20]": {
      "result": false,
      "time": 0.03242945671081543,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 8, 9, 3, 5, 9, 6, 6, 6]) == [12, 14, 17, 12, 8, 14, 15, 12, 12]": {
      "result": false,
      "time": 0.03559684753417969,
      "error": null
    },
    "assert add_consecutive_nums([1, 4, 7, 1, 2, 2, 5, 10, 13, 14]) == [5, 11, 8, 3, 4, 7, 15, 23, 27]": {
      "result": false,
      "time": 0.0348052978515625,
      "error": null
    },
    "assert add_consecutive_nums([2, 5, 3, 8, 10, 4, 6, 13, 11, 14]) == [7, 8, 11, 18, 14, 10, 19, 24, 25]": {
      "result": false,
      "time": 0.03350377082824707,
      "error": null
    },
    "assert add_consecutive_nums([2, 5, 1, 2, 2, 1, 7, 8, 6, 14]) == [7, 6, 3, 4, 3, 8, 15, 14, 20]": {
      "result": false,
      "time": 0.038568973541259766,
      "error": null
    },
    "assert add_consecutive_nums([3, 2, 3, 8, 9, 7, 6, 5, 8, 12]) == [5, 5, 11, 17, 16, 13, 11, 13, 20]": {
      "result": false,
      "time": 0.03316140174865723,
      "error": null
    },
    "assert add_consecutive_nums([3, 6, 8, 3, 9, 7, 6, 10, 7, 12]) == [9, 14, 11, 12, 16, 13, 16, 17, 19]": {
      "result": false,
      "time": 0.030270099639892578,
      "error": null
    },
    "assert add_consecutive_nums([5, 4, 7, 2, 2, 8, 6, 5, 7, 10]) == [9, 11, 9, 4, 10, 14, 11, 12, 17]": {
      "result": false,
      "time": 0.040755510330200195,
      "error": null
    },
    "assert add_consecutive_nums([5, 1, 7, 5, 3, 11, 7, 12, 10, 15]) == [6, 8, 12, 8, 14, 18, 19, 22, 25]": {
      "result": false,
      "time": 0.03246188163757324,
      "error": null
    },
    "assert add_consecutive_nums([2, 5, 4, 5, 1, 5, 8, 13, 5, 12]) == [7, 9, 9, 6, 6, 13, 21, 18, 17]": {
      "result": false,
      "time": 0.03262686729431152,
      "error": null
    },
    "assert add_consecutive_nums([4, 6, 7, 4, 1, 11, 11, 8, 7, 8]) == [10, 13, 11, 5, 12, 22, 19, 15, 15]": {
      "result": false,
      "time": 0.030139684677124023,
      "error": null
    },
    "assert add_consecutive_nums([4, 1, 5, 7, 4, 3, 6, 5, 12, 11]) == [5, 6, 12, 11, 7, 9, 11, 17, 23]": {
      "result": false,
      "time": 0.03321337699890137,
      "error": null
    },
    "assert add_consecutive_nums([1, 4, 6, 6, 6, 6, 9, 6, 9, 11]) == [5, 10, 12, 12, 12, 15, 15, 15, 20]": {
      "result": false,
      "time": 0.03346514701843262,
      "error": null
    },
    "assert add_consecutive_nums([6, 6, 8, 9, 10, 6, 6, 7, 12, 7]) == [12, 14, 17, 19, 16, 12, 13, 19, 19]": {
      "result": false,
      "time": 0.03412485122680664,
      "error": null
    },
    "assert add_consecutive_nums([4, 1, 4, 8, 1, 10, 2, 12, 8, 5]) == [5, 5, 12, 9, 11, 12, 14, 20, 13]": {
      "result": false,
      "time": 0.03543567657470703,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": "",
  "has_testcase_error": false
}