{
  "code": "def frequency_Of_Largest(n, arr):\n    largest_value = max(arr)\n    frequency = arr.count(largest_value)\n    return frequency\n",
  "results": {
    "assert frequency_Of_Largest(5,[1,2,3,4,4]) == 2": {
      "result": true,
      "time": 0.048941612243652344,
      "error": null
    },
    "assert frequency_Of_Largest(3,[5,6,5]) == 1": {
      "result": true,
      "time": 0.04064464569091797,
      "error": null
    },
    "assert frequency_Of_Largest(4,[2,7,7,7]) == 3": {
      "result": true,
      "time": 0.039824485778808594,
      "error": null
    },
    "assert frequency_Of_Largest(2, [2, 6, 7, 9, 2]) == 1": {
      "result": true,
      "time": 0.052710533142089844,
      "error": null
    },
    "assert frequency_Of_Largest(4, [6, 6, 1, 3, 1]) == 2": {
      "result": true,
      "time": 0.04462790489196777,
      "error": null
    },
    "assert frequency_Of_Largest(1, [1, 2, 4, 2, 2]) == 1": {
      "result": true,
      "time": 0.03720974922180176,
      "error": null
    },
    "assert frequency_Of_Largest(2, [3, 4, 5, 2, 1]) == 1": {
      "result": true,
      "time": 0.03474903106689453,
      "error": null
    },
    "assert frequency_Of_Largest(5, [4, 4, 2, 8, 5]) == 1": {
      "result": true,
      "time": 0.029356718063354492,
      "error": null
    },
    "assert frequency_Of_Largest(1, [4, 3, 6, 9, 1]) == 1": {
      "result": true,
      "time": 0.029325246810913086,
      "error": null
    },
    "assert frequency_Of_Largest(2, [2, 5, 3, 4, 7]) == 1": {
      "result": true,
      "time": 0.029793739318847656,
      "error": null
    },
    "assert frequency_Of_Largest(1, [3, 6, 1, 3, 4]) == 1": {
      "result": true,
      "time": 0.03544163703918457,
      "error": null
    },
    "assert frequency_Of_Largest(4, [3, 7, 3, 8, 7]) == 1": {
      "result": true,
      "time": 0.03365349769592285,
      "error": null
    },
    "assert frequency_Of_Largest(1, [6, 3, 5, 5, 3]) == 1": {
      "result": true,
      "time": 0.03225350379943848,
      "error": null
    },
    "assert frequency_Of_Largest(2, [4, 6, 3, 7, 5]) == 1": {
      "result": true,
      "time": 0.03558516502380371,
      "error": null
    },
    "assert frequency_Of_Largest(4, [3, 6, 8, 3, 6]) == 1": {
      "result": true,
      "time": 0.0318603515625,
      "error": null
    },
    "assert frequency_Of_Largest(4, [3, 1, 4, 7, 1]) == 1": {
      "result": true,
      "time": 0.03980088233947754,
      "error": null
    },
    "assert frequency_Of_Largest(5, [4, 1, 5, 7, 6]) == 1": {
      "result": true,
      "time": 0.03197669982910156,
      "error": null
    },
    "assert frequency_Of_Largest(2, [3, 1, 3, 3, 7]) == 1": {
      "result": true,
      "time": 0.037044525146484375,
      "error": null
    },
    "assert frequency_Of_Largest(5, [6, 3, 8, 2, 5]) == 1": {
      "result": true,
      "time": 0.03795313835144043,
      "error": null
    },
    "assert frequency_Of_Largest(2, [6, 3, 1, 7, 1]) == 1": {
      "result": true,
      "time": 0.02606987953186035,
      "error": null
    },
    "assert frequency_Of_Largest(2, [2, 4, 5, 4, 9]) == 1": {
      "result": true,
      "time": 0.03776693344116211,
      "error": null
    },
    "assert frequency_Of_Largest(4, [1, 2, 6, 1, 4]) == 1": {
      "result": true,
      "time": 0.03534817695617676,
      "error": null
    },
    "assert frequency_Of_Largest(5, [2, 5, 4, 6, 4]) == 1": {
      "result": true,
      "time": 0.033331871032714844,
      "error": null
    },
    "assert frequency_Of_Largest(1, [1, 2, 8, 8, 7]) == 1": {
      "result": false,
      "time": 0.033262014389038086,
      "error": null
    },
    "assert frequency_Of_Largest(1, [5, 7, 8, 4, 3]) == 1": {
      "result": true,
      "time": 0.0346219539642334,
      "error": null
    },
    "assert frequency_Of_Largest(1, [4, 5, 6, 7, 5]) == 1": {
      "result": true,
      "time": 0.038838863372802734,
      "error": null
    },
    "assert frequency_Of_Largest(3, [6, 7, 1, 2, 1]) == 1": {
      "result": true,
      "time": 0.034662485122680664,
      "error": null
    },
    "assert frequency_Of_Largest(4, [5, 4, 6, 5, 2]) == 1": {
      "result": true,
      "time": 0.04027390480041504,
      "error": null
    },
    "assert frequency_Of_Largest(4, [6, 2, 7, 4, 3]) == 1": {
      "result": true,
      "time": 0.03530144691467285,
      "error": null
    },
    "assert frequency_Of_Largest(2, [1, 3, 4, 3, 9]) == 1": {
      "result": true,
      "time": 0.031109094619750977,
      "error": null
    },
    "assert frequency_Of_Largest(4, [1, 3, 8, 4, 9]) == 1": {
      "result": true,
      "time": 0.03756141662597656,
      "error": null
    },
    "assert frequency_Of_Largest(2, [5, 3, 5, 3, 2]) == 1": {
      "result": false,
      "time": 0.03141021728515625,
      "error": null
    },
    "assert frequency_Of_Largest(4, [6, 7, 5, 8, 4]) == 1": {
      "result": true,
      "time": 0.03931140899658203,
      "error": null
    },
    "assert frequency_Of_Largest(1, [2, 1, 2, 5, 8]) == 1": {
      "result": true,
      "time": 0.03946638107299805,
      "error": null
    },
    "assert frequency_Of_Largest(2, [2, 2, 4, 6, 7]) == 2": {
      "result": false,
      "time": 0.040068864822387695,
      "error": null
    },
    "assert frequency_Of_Largest(2, [5, 2, 7, 3, 6]) == 1": {
      "result": true,
      "time": 0.0351710319519043,
      "error": null
    },
    "assert frequency_Of_Largest(2, [1, 7, 2]) == 1": {
      "result": true,
      "time": 0.0329747200012207,
      "error": null
    },
    "assert frequency_Of_Largest(2, [10, 11, 1]) == 1": {
      "result": true,
      "time": 0.031755685806274414,
      "error": null
    },
    "assert frequency_Of_Largest(3, [2, 8, 7]) == 1": {
      "result": true,
      "time": 0.03433728218078613,
      "error": null
    },
    "assert frequency_Of_Largest(3, [1, 6, 6]) == 2": {
      "result": true,
      "time": 0.030547142028808594,
      "error": null
    },
    "assert frequency_Of_Largest(1, [3, 1, 5]) == 1": {
      "result": true,
      "time": 0.03279280662536621,
      "error": null
    },
    "assert frequency_Of_Largest(3, [6, 9, 5]) == 1": {
      "result": true,
      "time": 0.03653144836425781,
      "error": null
    },
    "assert frequency_Of_Largest(2, [8, 8, 6]) == 2": {
      "result": true,
      "time": 0.03799724578857422,
      "error": null
    },
    "assert frequency_Of_Largest(2, [8, 5, 3]) == 1": {
      "result": true,
      "time": 0.03365206718444824,
      "error": null
    },
    "assert frequency_Of_Largest(1, [6, 8, 4]) == 1": {
      "result": true,
      "time": 0.03436636924743652,
      "error": null
    },
    "assert frequency_Of_Largest(1, [7, 2, 5]) == 1": {
      "result": true,
      "time": 0.034258127212524414,
      "error": null
    },
    "assert frequency_Of_Largest(1, [8, 5, 2]) == 1": {
      "result": true,
      "time": 0.030251502990722656,
      "error": null
    },
    "assert frequency_Of_Largest(2, [2, 8, 5]) == 1": {
      "result": true,
      "time": 0.03098130226135254,
      "error": null
    },
    "assert frequency_Of_Largest(3, [5, 5, 10]) == 1": {
      "result": true,
      "time": 0.02855992317199707,
      "error": null
    },
    "assert frequency_Of_Largest(1, [9, 2, 1]) == 1": {
      "result": true,
      "time": 0.03658294677734375,
      "error": null
    },
    "assert frequency_Of_Largest(2, [5, 3, 8]) == 1": {
      "result": true,
      "time": 0.03485250473022461,
      "error": null
    },
    "assert frequency_Of_Largest(1, [2, 2, 9]) == 1": {
      "result": true,
      "time": 0.03479743003845215,
      "error": null
    },
    "assert frequency_Of_Largest(3, [8, 2, 3]) == 1": {
      "result": true,
      "time": 0.03384542465209961,
      "error": null
    },
    "assert frequency_Of_Largest(1, [2, 11, 10]) == 1": {
      "result": true,
      "time": 0.03438282012939453,
      "error": null
    },
    "assert frequency_Of_Largest(3, [5, 5, 4]) == 2": {
      "result": true,
      "time": 0.035398244857788086,
      "error": null
    },
    "assert frequency_Of_Largest(3, [7, 10, 5]) == 1": {
      "result": true,
      "time": 0.03546738624572754,
      "error": null
    },
    "assert frequency_Of_Largest(3, [8, 8, 9]) == 1": {
      "result": true,
      "time": 0.03321027755737305,
      "error": null
    },
    "assert frequency_Of_Largest(1, [3, 3, 3]) == 1": {
      "result": false,
      "time": 0.03542518615722656,
      "error": null
    },
    "assert frequency_Of_Largest(1, [1, 3, 9]) == 1": {
      "result": true,
      "time": 0.03710484504699707,
      "error": null
    },
    "assert frequency_Of_Largest(2, [4, 1, 10]) == 1": {
      "result": true,
      "time": 0.03379535675048828,
      "error": null
    },
    "assert frequency_Of_Largest(1, [4, 6, 5]) == 1": {
      "result": true,
      "time": 0.03361773490905762,
      "error": null
    },
    "assert frequency_Of_Largest(3, [8, 2, 7]) == 1": {
      "result": true,
      "time": 0.03243875503540039,
      "error": null
    },
    "assert frequency_Of_Largest(1, [1, 5, 2]) == 1": {
      "result": true,
      "time": 0.030762910842895508,
      "error": null
    },
    "assert frequency_Of_Largest(3, [7, 4, 7]) == 2": {
      "result": true,
      "time": 0.03028416633605957,
      "error": null
    },
    "assert frequency_Of_Largest(2, [4, 6, 3]) == 1": {
      "result": true,
      "time": 0.033444881439208984,
      "error": null
    },
    "assert frequency_Of_Largest(1, [10, 7, 8]) == 1": {
      "result": true,
      "time": 0.028330564498901367,
      "error": null
    },
    "assert frequency_Of_Largest(2, [7, 1, 9]) == 1": {
      "result": true,
      "time": 0.03518271446228027,
      "error": null
    },
    "assert frequency_Of_Largest(2, [6, 9, 4]) == 1": {
      "result": true,
      "time": 0.03361797332763672,
      "error": null
    },
    "assert frequency_Of_Largest(1, [2, 3, 12, 8]) == 1": {
      "result": true,
      "time": 0.027616024017333984,
      "error": null
    },
    "assert frequency_Of_Largest(3, [3, 9, 11, 11]) == 1": {
      "result": false,
      "time": 0.0356595516204834,
      "error": null
    },
    "assert frequency_Of_Largest(2, [1, 10, 4, 8]) == 1": {
      "result": true,
      "time": 0.03682994842529297,
      "error": null
    },
    "assert frequency_Of_Largest(4, [1, 9, 5, 11]) == 1": {
      "result": true,
      "time": 0.030916452407836914,
      "error": null
    },
    "assert frequency_Of_Largest(1, [5, 2, 8, 10]) == 1": {
      "result": true,
      "time": 0.03402972221374512,
      "error": null
    },
    "assert frequency_Of_Largest(3, [1, 7, 7, 7]) == 2": {
      "result": false,
      "time": 0.03568744659423828,
      "error": null
    },
    "assert frequency_Of_Largest(2, [4, 4, 10, 2]) == 2": {
      "result": false,
      "time": 0.03360891342163086,
      "error": null
    },
    "assert frequency_Of_Largest(2, [3, 7, 8, 2]) == 1": {
      "result": true,
      "time": 0.03194475173950195,
      "error": null
    },
    "assert frequency_Of_Largest(3, [6, 9, 8, 5]) == 1": {
      "result": true,
      "time": 0.031888723373413086,
      "error": null
    },
    "assert frequency_Of_Largest(1, [6, 11, 3, 8]) == 1": {
      "result": true,
      "time": 0.03300762176513672,
      "error": null
    },
    "assert frequency_Of_Largest(4, [6, 3, 8, 5]) == 1": {
      "result": true,
      "time": 0.027588844299316406,
      "error": null
    },
    "assert frequency_Of_Largest(3, [7, 5, 2, 10]) == 1": {
      "result": true,
      "time": 0.03519749641418457,
      "error": null
    },
    "assert frequency_Of_Largest(4, [4, 3, 8, 5]) == 1": {
      "result": true,
      "time": 0.03523445129394531,
      "error": null
    },
    "assert frequency_Of_Largest(3, [5, 5, 4, 6]) == 2": {
      "result": false,
      "time": 0.02876567840576172,
      "error": null
    },
    "assert frequency_Of_Largest(3, [7, 7, 7, 3]) == 3": {
      "result": true,
      "time": 0.033737897872924805,
      "error": null
    },
    "assert frequency_Of_Largest(1, [1, 10, 5, 9]) == 1": {
      "result": true,
      "time": 0.034952640533447266,
      "error": null
    },
    "assert frequency_Of_Largest(1, [4, 7, 6, 12]) == 1": {
      "result": true,
      "time": 0.03251934051513672,
      "error": null
    },
    "assert frequency_Of_Largest(1, [7, 3, 10, 8]) == 1": {
      "result": true,
      "time": 0.03252458572387695,
      "error": null
    },
    "assert frequency_Of_Largest(2, [3, 9, 3, 12]) == 1": {
      "result": true,
      "time": 0.03351283073425293,
      "error": null
    },
    "assert frequency_Of_Largest(4, [5, 9, 10, 4]) == 1": {
      "result": true,
      "time": 0.027841567993164062,
      "error": null
    },
    "assert frequency_Of_Largest(1, [2, 3, 2, 11]) == 1": {
      "result": true,
      "time": 0.032382965087890625,
      "error": null
    },
    "assert frequency_Of_Largest(2, [6, 8, 9, 7]) == 1": {
      "result": true,
      "time": 0.03390002250671387,
      "error": null
    },
    "assert frequency_Of_Largest(1, [1, 6, 8, 12]) == 1": {
      "result": true,
      "time": 0.03484606742858887,
      "error": null
    },
    "assert frequency_Of_Largest(2, [3, 11, 7, 9]) == 1": {
      "result": true,
      "time": 0.033168792724609375,
      "error": null
    },
    "assert frequency_Of_Largest(4, [7, 2, 7, 12]) == 1": {
      "result": true,
      "time": 0.03551936149597168,
      "error": null
    },
    "assert frequency_Of_Largest(4, [5, 2, 7, 10]) == 1": {
      "result": true,
      "time": 0.03501486778259277,
      "error": null
    },
    "assert frequency_Of_Largest(4, [7, 7, 3, 3]) == 2": {
      "result": true,
      "time": 0.036846160888671875,
      "error": null
    },
    "assert frequency_Of_Largest(4, [7, 2, 6, 5]) == 1": {
      "result": true,
      "time": 0.04066753387451172,
      "error": null
    },
    "assert frequency_Of_Largest(1, [1, 9, 12, 11]) == 1": {
      "result": true,
      "time": 0.03433489799499512,
      "error": null
    },
    "assert frequency_Of_Largest(1, [5, 6, 8, 11]) == 1": {
      "result": true,
      "time": 0.0386509895324707,
      "error": null
    },
    "assert frequency_Of_Largest(4, [4, 2, 7, 9]) == 1": {
      "result": true,
      "time": 0.039450883865356445,
      "error": null
    },
    "assert frequency_Of_Largest(3, [7, 3, 2, 2]) == 1": {
      "result": true,
      "time": 0.040287017822265625,
      "error": null
    },
    "assert frequency_Of_Largest(3, [6, 2, 11, 7]) == 1": {
      "result": true,
      "time": 0.03776097297668457,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.9207920792079208,
  "general_error": "",
  "has_testcase_error": false
}