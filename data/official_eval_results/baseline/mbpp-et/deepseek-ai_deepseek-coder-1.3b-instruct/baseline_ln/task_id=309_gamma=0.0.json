{
  "code": "def maximum(num1, num2):\n    if num1 > num2:\n        return num1\n    else:\n        return num2\n",
  "results": {
    "assert maximum(5,10) == 10": {
      "result": true,
      "time": 0.04562783241271973,
      "error": null
    },
    "assert maximum(-1,-2) == -1": {
      "result": true,
      "time": 0.04061460494995117,
      "error": null
    },
    "assert maximum(9,7) == 9": {
      "result": true,
      "time": 0.04171609878540039,
      "error": null
    },
    "assert maximum(1, 9) == 9": {
      "result": true,
      "time": 0.052176713943481445,
      "error": null
    },
    "assert maximum(6, 10) == 10": {
      "result": true,
      "time": 0.04597067832946777,
      "error": null
    },
    "assert maximum(6, 15) == 15": {
      "result": true,
      "time": 0.05221128463745117,
      "error": null
    },
    "assert maximum(1, 12) == 12": {
      "result": true,
      "time": 0.05034828186035156,
      "error": null
    },
    "assert maximum(6, 9) == 9": {
      "result": true,
      "time": 0.035082101821899414,
      "error": null
    },
    "assert maximum(3, 13) == 13": {
      "result": true,
      "time": 0.04639148712158203,
      "error": null
    },
    "assert maximum(9, 12) == 12": {
      "result": true,
      "time": 0.060209035873413086,
      "error": null
    },
    "assert maximum(8, 9) == 9": {
      "result": true,
      "time": 0.04140520095825195,
      "error": null
    },
    "assert maximum(2, 13) == 13": {
      "result": true,
      "time": 0.03528094291687012,
      "error": null
    },
    "assert maximum(4, 7) == 7": {
      "result": true,
      "time": 0.04111027717590332,
      "error": null
    },
    "assert maximum(4, 5) == 5": {
      "result": true,
      "time": 0.03774619102478027,
      "error": null
    },
    "assert maximum(1, 5) == 5": {
      "result": true,
      "time": 0.04325246810913086,
      "error": null
    },
    "assert maximum(9, 13) == 13": {
      "result": true,
      "time": 0.04147744178771973,
      "error": null
    },
    "assert maximum(2, 6) == 6": {
      "result": true,
      "time": 0.042724609375,
      "error": null
    },
    "assert maximum(2, 5) == 5": {
      "result": true,
      "time": 0.040462493896484375,
      "error": null
    },
    "assert maximum(3, 7) == 7": {
      "result": true,
      "time": 0.039223432540893555,
      "error": null
    },
    "assert maximum(9, 15) == 15": {
      "result": true,
      "time": 0.044998884201049805,
      "error": null
    },
    "assert maximum(5, 10) == 10": {
      "result": true,
      "time": 0.040384531021118164,
      "error": null
    },
    "assert maximum(5, 6) == 6": {
      "result": true,
      "time": 0.0447230339050293,
      "error": null
    },
    "assert maximum(3, 6) == 6": {
      "result": true,
      "time": 0.0400233268737793,
      "error": null
    },
    "assert maximum(10, 9) == 10": {
      "result": true,
      "time": 0.03998708724975586,
      "error": null
    },
    "assert maximum(7, 5) == 7": {
      "result": true,
      "time": 0.03820633888244629,
      "error": null
    },
    "assert maximum(10, 8) == 10": {
      "result": true,
      "time": 0.03898429870605469,
      "error": null
    },
    "assert maximum(8, 15) == 15": {
      "result": true,
      "time": 0.03774309158325195,
      "error": null
    },
    "assert maximum(2, 14) == 14": {
      "result": true,
      "time": 0.03863811492919922,
      "error": null
    },
    "assert maximum(6, 13) == 13": {
      "result": true,
      "time": 0.04135918617248535,
      "error": null
    },
    "assert maximum(6, 8) == 8": {
      "result": true,
      "time": 0.0380399227142334,
      "error": null
    },
    "assert maximum(9, 7) == 9": {
      "result": true,
      "time": 0.04828286170959473,
      "error": null
    },
    "assert maximum(10, 14) == 14": {
      "result": true,
      "time": 0.04906797409057617,
      "error": null
    },
    "assert maximum(-1, -3) == -1": {
      "result": true,
      "time": 0.047690629959106445,
      "error": null
    },
    "assert maximum(-6, 0) == 0": {
      "result": true,
      "time": 0.043520450592041016,
      "error": null
    },
    "assert maximum(-5, 2) == 2": {
      "result": true,
      "time": 0.03917670249938965,
      "error": null
    },
    "assert maximum(1, 2) == 2": {
      "result": true,
      "time": 0.0392756462097168,
      "error": null
    },
    "assert maximum(1, 1) == 1": {
      "result": true,
      "time": 0.0503535270690918,
      "error": null
    },
    "assert maximum(2, 1) == 2": {
      "result": true,
      "time": 0.041103363037109375,
      "error": null
    },
    "assert maximum(0, -6) == 0": {
      "result": true,
      "time": 0.03782534599304199,
      "error": null
    },
    "assert maximum(0, -4) == 0": {
      "result": true,
      "time": 0.0411224365234375,
      "error": null
    },
    "assert maximum(4, -4) == 4": {
      "result": true,
      "time": 0.04039311408996582,
      "error": null
    },
    "assert maximum(-2, -2) == -2": {
      "result": true,
      "time": 0.0389094352722168,
      "error": null
    },
    "assert maximum(2, 2) == 2": {
      "result": true,
      "time": 0.03670930862426758,
      "error": null
    },
    "assert maximum(-3, -2) == -2": {
      "result": true,
      "time": 0.0433802604675293,
      "error": null
    },
    "assert maximum(-2, 2) == 2": {
      "result": true,
      "time": 0.03015923500061035,
      "error": null
    },
    "assert maximum(3, 3) == 3": {
      "result": true,
      "time": 0.03461098670959473,
      "error": null
    },
    "assert maximum(0, 1) == 1": {
      "result": true,
      "time": 0.04938173294067383,
      "error": null
    },
    "assert maximum(-5, -7) == -5": {
      "result": true,
      "time": 0.03823232650756836,
      "error": null
    },
    "assert maximum(4, -2) == 4": {
      "result": true,
      "time": 0.04079723358154297,
      "error": null
    },
    "assert maximum(1, -5) == 1": {
      "result": true,
      "time": 0.04607677459716797,
      "error": null
    },
    "assert maximum(3, -7) == 3": {
      "result": true,
      "time": 0.04301595687866211,
      "error": null
    },
    "assert maximum(-4, -4) == -4": {
      "result": true,
      "time": 0.0414431095123291,
      "error": null
    },
    "assert maximum(-2, -7) == -2": {
      "result": true,
      "time": 0.05430889129638672,
      "error": null
    },
    "assert maximum(-2, 0) == 0": {
      "result": true,
      "time": 0.04829120635986328,
      "error": null
    },
    "assert maximum(-3, -3) == -3": {
      "result": true,
      "time": 0.052050113677978516,
      "error": null
    },
    "assert maximum(-4, -7) == -4": {
      "result": true,
      "time": 0.05075645446777344,
      "error": null
    },
    "assert maximum(4, -6) == 4": {
      "result": true,
      "time": 0.04534339904785156,
      "error": null
    },
    "assert maximum(-6, -3) == -3": {
      "result": true,
      "time": 0.05417442321777344,
      "error": null
    },
    "assert maximum(3, -1) == 3": {
      "result": true,
      "time": 0.04040980339050293,
      "error": null
    },
    "assert maximum(-5, -4) == -4": {
      "result": true,
      "time": 0.05020904541015625,
      "error": null
    },
    "assert maximum(-2, 1) == 1": {
      "result": true,
      "time": 0.05263996124267578,
      "error": null
    },
    "assert maximum(13, 8) == 13": {
      "result": true,
      "time": 0.0526120662689209,
      "error": null
    },
    "assert maximum(7, 4) == 7": {
      "result": true,
      "time": 0.05725216865539551,
      "error": null
    },
    "assert maximum(4, 2) == 4": {
      "result": true,
      "time": 0.05620384216308594,
      "error": null
    },
    "assert maximum(12, 7) == 12": {
      "result": true,
      "time": 0.05137300491333008,
      "error": null
    },
    "assert maximum(11, 7) == 11": {
      "result": true,
      "time": 0.05900382995605469,
      "error": null
    },
    "assert maximum(8, 8) == 8": {
      "result": true,
      "time": 0.04196023941040039,
      "error": null
    },
    "assert maximum(4, 3) == 4": {
      "result": true,
      "time": 0.05003046989440918,
      "error": null
    },
    "assert maximum(10, 7) == 10": {
      "result": true,
      "time": 0.0502169132232666,
      "error": null
    },
    "assert maximum(10, 2) == 10": {
      "result": true,
      "time": 0.046117305755615234,
      "error": null
    },
    "assert maximum(8, 11) == 11": {
      "result": true,
      "time": 0.04670548439025879,
      "error": null
    },
    "assert maximum(7, 3) == 7": {
      "result": true,
      "time": 0.05752253532409668,
      "error": null
    },
    "assert maximum(5, 3) == 5": {
      "result": true,
      "time": 0.04571795463562012,
      "error": null
    },
    "assert maximum(9, 5) == 9": {
      "result": true,
      "time": 0.054509878158569336,
      "error": null
    },
    "assert maximum(14, 3) == 14": {
      "result": true,
      "time": 0.050629615783691406,
      "error": null
    },
    "assert maximum(5, 12) == 12": {
      "result": true,
      "time": 0.06800246238708496,
      "error": null
    },
    "assert maximum(13, 3) == 13": {
      "result": true,
      "time": 0.05228018760681152,
      "error": null
    },
    "assert maximum(14, 5) == 14": {
      "result": true,
      "time": 0.05955958366394043,
      "error": null
    },
    "assert maximum(9, 11) == 11": {
      "result": true,
      "time": 0.049668073654174805,
      "error": null
    },
    "assert maximum(13, 4) == 13": {
      "result": true,
      "time": 0.04888296127319336,
      "error": null
    },
    "assert maximum(12, 3) == 12": {
      "result": true,
      "time": 0.054982900619506836,
      "error": null
    },
    "assert maximum(5, 7) == 7": {
      "result": true,
      "time": 0.054685354232788086,
      "error": null
    },
    "assert maximum(11, 5) == 11": {
      "result": true,
      "time": 0.05704236030578613,
      "error": null
    },
    "assert maximum(12, 11) == 12": {
      "result": true,
      "time": 0.044960737228393555,
      "error": null
    },
    "assert maximum(6, 5) == 6": {
      "result": true,
      "time": 0.04687786102294922,
      "error": null
    },
    "assert maximum(4, 9) == 9": {
      "result": true,
      "time": 0.035437583923339844,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}