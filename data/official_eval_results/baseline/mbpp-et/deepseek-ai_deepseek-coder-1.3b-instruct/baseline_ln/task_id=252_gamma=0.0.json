{
  "code": "import cmath\n\ndef convert(num):\n    if isinstance(num, complex):\n        r = cmath.polar(num)[0]\n        theta = cmath.polar(num)[1]\n        return (r, theta)\n    else:\n        return \"Input is not a complex number\"",
  "results": {
    "assert convert(1) == (1.0, 0.0)": {
      "result": false,
      "time": 0.08806610107421875,
      "error": null
    },
    "assert convert(4) == (4.0,0.0)": {
      "result": false,
      "time": 0.08972883224487305,
      "error": null
    },
    "assert convert(5) == (5.0,0.0)": {
      "result": false,
      "time": 0.09755253791809082,
      "error": null
    },
    "assert convert(5) == (5.0, 0.0)": {
      "result": false,
      "time": 0.08857846260070801,
      "error": null
    },
    "assert convert(4) == (4.0, 0.0)": {
      "result": false,
      "time": 0.08997416496276855,
      "error": null
    },
    "assert convert(2) == (2.0, 0.0)": {
      "result": false,
      "time": 0.0756380558013916,
      "error": null
    },
    "assert convert(3) == (3.0, 0.0)": {
      "result": false,
      "time": 0.08540678024291992,
      "error": null
    },
    "assert convert(6) == (6.0, 0.0)": {
      "result": false,
      "time": 0.08652877807617188,
      "error": null
    },
    "assert convert(7) == (7.0, 0.0)": {
      "result": false,
      "time": 0.07454919815063477,
      "error": null
    },
    "assert convert(8) == (8.0, 0.0)": {
      "result": false,
      "time": 0.08813691139221191,
      "error": null
    },
    "assert convert(9) == (9.0, 0.0)": {
      "result": false,
      "time": 0.09620976448059082,
      "error": null
    },
    "assert convert(10) == (10.0, 0.0)": {
      "result": false,
      "time": 0.09693551063537598,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": "",
  "has_testcase_error": false
}