{
  "code": "import math\n\ndef get_Min_Squares(n):\n    count = 0\n    while n > 0:\n        n -= math.floor(math.sqrt(n)) ** 2\n        count += 1\n    return count\n",
  "results": {
    "assert get_Min_Squares(6) == 3": {
      "result": true,
      "time": 0.08808207511901855,
      "error": null
    },
    "assert get_Min_Squares(2) == 2": {
      "result": true,
      "time": 0.08061790466308594,
      "error": null
    },
    "assert get_Min_Squares(4) == 1": {
      "result": true,
      "time": 0.09139537811279297,
      "error": null
    },
    "assert get_Min_Squares(3) == 3": {
      "result": true,
      "time": 0.07594585418701172,
      "error": null
    },
    "assert get_Min_Squares(10) == 2": {
      "result": true,
      "time": 0.07855415344238281,
      "error": null
    },
    "assert get_Min_Squares(5) == 2": {
      "result": true,
      "time": 0.0736536979675293,
      "error": null
    },
    "assert get_Min_Squares(7) == 4": {
      "result": true,
      "time": 0.08814644813537598,
      "error": null
    },
    "assert get_Min_Squares(9) == 1": {
      "result": true,
      "time": 0.08052802085876465,
      "error": null
    },
    "assert get_Min_Squares(8) == 2": {
      "result": true,
      "time": 0.08567142486572266,
      "error": null
    },
    "assert get_Min_Squares(1) == 1": {
      "result": true,
      "time": 0.0773923397064209,
      "error": null
    },
    "assert get_Min_Squares(11) == 3": {
      "result": true,
      "time": 0.10467934608459473,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}