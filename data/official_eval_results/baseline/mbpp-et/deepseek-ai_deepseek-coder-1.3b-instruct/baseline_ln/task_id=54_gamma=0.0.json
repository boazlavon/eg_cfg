{
  "code": "def counting_sort(arr):\n    max_val = max(arr)\n    count = [0] * (max_val + 1)\n    for num in arr:\n        count[num] += 1\n    sorted_arr = []\n    for i, frequency in enumerate(count):\n        sorted_arr.extend([i] * frequency)\n    return sorted_arr\n",
  "results": {
    "assert counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]": {
      "result": true,
      "time": 0.043160438537597656,
      "error": null
    },
    "assert counting_sort([12, 9, 28, 33, 69, 45]) == [9, 12, 28, 33, 45, 69]": {
      "result": true,
      "time": 0.043740272521972656,
      "error": null
    },
    "assert counting_sort([8, 4, 14, 3, 2, 1]) == [1, 2, 3, 4, 8, 14]": {
      "result": true,
      "time": 0.0341792106628418,
      "error": null
    },
    "assert counting_sort([5, 18, 8, 3, 7, 11, 11]) == [3, 5, 7, 8, 11, 11, 18]": {
      "result": true,
      "time": 0.04218411445617676,
      "error": null
    },
    "assert counting_sort([2, 23, 5, 7, 7, 9, 10]) == [2, 5, 7, 7, 9, 10, 23]": {
      "result": true,
      "time": 0.040589094161987305,
      "error": null
    },
    "assert counting_sort([2, 23, 7, 4, 11, 12, 8]) == [2, 4, 7, 8, 11, 12, 23]": {
      "result": true,
      "time": 0.0462343692779541,
      "error": null
    },
    "assert counting_sort([3, 26, 6, 9, 5, 12, 10]) == [3, 5, 6, 9, 10, 12, 26]": {
      "result": true,
      "time": 0.04196476936340332,
      "error": null
    },
    "assert counting_sort([3, 27, 3, 7, 6, 9, 9]) == [3, 3, 6, 7, 9, 9, 27]": {
      "result": true,
      "time": 0.03401994705200195,
      "error": null
    },
    "assert counting_sort([2, 18, 9, 10, 9, 12, 6]) == [2, 6, 9, 9, 10, 12, 18]": {
      "result": true,
      "time": 0.042353153228759766,
      "error": null
    },
    "assert counting_sort([5, 24, 2, 8, 2, 8, 3]) == [2, 2, 3, 5, 8, 8, 24]": {
      "result": true,
      "time": 0.03683018684387207,
      "error": null
    },
    "assert counting_sort([1, 21, 9, 7, 4, 5, 11]) == [1, 4, 5, 7, 9, 11, 21]": {
      "result": true,
      "time": 0.036653995513916016,
      "error": null
    },
    "assert counting_sort([3, 19, 6, 5, 2, 5, 11]) == [2, 3, 5, 5, 6, 11, 19]": {
      "result": true,
      "time": 0.033967018127441406,
      "error": null
    },
    "assert counting_sort([1, 22, 4, 9, 7, 4, 4]) == [1, 4, 4, 4, 7, 9, 22]": {
      "result": true,
      "time": 0.02736806869506836,
      "error": null
    },
    "assert counting_sort([2, 21, 9, 4, 6, 3, 9]) == [2, 3, 4, 6, 9, 9, 21]": {
      "result": true,
      "time": 0.03249478340148926,
      "error": null
    },
    "assert counting_sort([6, 25, 8, 2, 6, 10, 7]) == [2, 6, 6, 7, 8, 10, 25]": {
      "result": true,
      "time": 0.03827333450317383,
      "error": null
    },
    "assert counting_sort([3, 26, 6, 8, 5, 2, 7]) == [2, 3, 5, 6, 7, 8, 26]": {
      "result": true,
      "time": 0.038520097732543945,
      "error": null
    },
    "assert counting_sort([5, 18, 8, 2, 8, 3, 5]) == [2, 3, 5, 5, 8, 8, 18]": {
      "result": true,
      "time": 0.04297637939453125,
      "error": null
    },
    "assert counting_sort([5, 22, 8, 3, 4, 12, 5]) == [3, 4, 5, 5, 8, 12, 22]": {
      "result": true,
      "time": 0.03934311866760254,
      "error": null
    },
    "assert counting_sort([3, 20, 3, 8, 6, 10, 13]) == [3, 3, 6, 8, 10, 13, 20]": {
      "result": true,
      "time": 0.03569388389587402,
      "error": null
    },
    "assert counting_sort([6, 23, 7, 1, 1, 10, 11]) == [1, 1, 6, 7, 10, 11, 23]": {
      "result": true,
      "time": 0.04681992530822754,
      "error": null
    },
    "assert counting_sort([4, 28, 7, 3, 11, 12, 11]) == [3, 4, 7, 11, 11, 12, 28]": {
      "result": true,
      "time": 0.03560495376586914,
      "error": null
    },
    "assert counting_sort([4, 28, 9, 3, 4, 4, 5]) == [3, 4, 4, 4, 5, 9, 28]": {
      "result": true,
      "time": 0.03605294227600098,
      "error": null
    },
    "assert counting_sort([6, 24, 7, 1, 10, 11, 9]) == [1, 6, 7, 9, 10, 11, 24]": {
      "result": true,
      "time": 0.0406496524810791,
      "error": null
    },
    "assert counting_sort([3, 23, 6, 1, 11, 11, 6]) == [1, 3, 6, 6, 11, 11, 23]": {
      "result": true,
      "time": 0.0397791862487793,
      "error": null
    },
    "assert counting_sort([3, 18, 9, 8, 2, 2, 7]) == [2, 2, 3, 7, 8, 9, 18]": {
      "result": true,
      "time": 0.03534746170043945,
      "error": null
    },
    "assert counting_sort([6, 21, 5, 4, 4, 9, 11]) == [4, 4, 5, 6, 9, 11, 21]": {
      "result": true,
      "time": 0.03140854835510254,
      "error": null
    },
    "assert counting_sort([4, 21, 1, 7, 6, 5, 5]) == [1, 4, 5, 5, 6, 7, 21]": {
      "result": true,
      "time": 0.04702115058898926,
      "error": null
    },
    "assert counting_sort([3, 21, 1, 6, 8, 4, 13]) == [1, 3, 4, 6, 8, 13, 21]": {
      "result": true,
      "time": 0.038460493087768555,
      "error": null
    },
    "assert counting_sort([2, 23, 8, 9, 1, 6, 12]) == [1, 2, 6, 8, 9, 12, 23]": {
      "result": true,
      "time": 0.038832664489746094,
      "error": null
    },
    "assert counting_sort([4, 19, 8, 9, 8, 11, 10]) == [4, 8, 8, 9, 10, 11, 19]": {
      "result": true,
      "time": 0.04173111915588379,
      "error": null
    },
    "assert counting_sort([3, 27, 8, 5, 2, 6, 13]) == [2, 3, 5, 6, 8, 13, 27]": {
      "result": true,
      "time": 0.03959989547729492,
      "error": null
    },
    "assert counting_sort([4, 20, 3, 7, 8, 10, 7]) == [3, 4, 7, 7, 8, 10, 20]": {
      "result": true,
      "time": 0.03811240196228027,
      "error": null
    },
    "assert counting_sort([4, 28, 4, 9, 1, 12, 12]) == [1, 4, 4, 9, 12, 12, 28]": {
      "result": true,
      "time": 0.03416585922241211,
      "error": null
    },
    "assert counting_sort([4, 22, 3, 4, 3, 10, 5]) == [3, 3, 4, 4, 5, 10, 22]": {
      "result": true,
      "time": 0.03924679756164551,
      "error": null
    },
    "assert counting_sort([6, 20, 1, 5, 3, 9, 10]) == [1, 3, 5, 6, 9, 10, 20]": {
      "result": true,
      "time": 0.039965152740478516,
      "error": null
    },
    "assert counting_sort([5, 24, 5, 10, 8, 12, 7]) == [5, 5, 7, 8, 10, 12, 24]": {
      "result": true,
      "time": 0.044892072677612305,
      "error": null
    },
    "assert counting_sort([15, 7, 25, 28, 68, 46]) == [7, 15, 25, 28, 46, 68]": {
      "result": true,
      "time": 0.04007720947265625,
      "error": null
    },
    "assert counting_sort([14, 10, 26, 30, 71, 41]) == [10, 14, 26, 30, 41, 71]": {
      "result": true,
      "time": 0.03862118721008301,
      "error": null
    },
    "assert counting_sort([7, 6, 30, 38, 69, 45]) == [6, 7, 30, 38, 45, 69]": {
      "result": true,
      "time": 0.03838777542114258,
      "error": null
    },
    "assert counting_sort([17, 13, 27, 28, 67, 40]) == [13, 17, 27, 28, 40, 67]": {
      "result": true,
      "time": 0.045346736907958984,
      "error": null
    },
    "assert counting_sort([8, 4, 23, 29, 71, 42]) == [4, 8, 23, 29, 42, 71]": {
      "result": true,
      "time": 0.06023669242858887,
      "error": null
    },
    "assert counting_sort([17, 6, 23, 38, 66, 50]) == [6, 17, 23, 38, 50, 66]": {
      "result": true,
      "time": 0.04412698745727539,
      "error": null
    },
    "assert counting_sort([13, 12, 28, 32, 69, 44]) == [12, 13, 28, 32, 44, 69]": {
      "result": true,
      "time": 0.04372406005859375,
      "error": null
    },
    "assert counting_sort([13, 13, 26, 37, 66, 41]) == [13, 13, 26, 37, 41, 66]": {
      "result": true,
      "time": 0.03876900672912598,
      "error": null
    },
    "assert counting_sort([14, 12, 31, 34, 73, 50]) == [12, 14, 31, 34, 50, 73]": {
      "result": true,
      "time": 0.04365086555480957,
      "error": null
    },
    "assert counting_sort([13, 6, 27, 29, 64, 42]) == [6, 13, 27, 29, 42, 64]": {
      "result": true,
      "time": 0.04969477653503418,
      "error": null
    },
    "assert counting_sort([12, 13, 27, 32, 71, 40]) == [12, 13, 27, 32, 40, 71]": {
      "result": true,
      "time": 0.050446510314941406,
      "error": null
    },
    "assert counting_sort([14, 5, 32, 36, 73, 47]) == [5, 14, 32, 36, 47, 73]": {
      "result": true,
      "time": 0.04901242256164551,
      "error": null
    },
    "assert counting_sort([15, 7, 27, 34, 71, 42]) == [7, 15, 27, 34, 42, 71]": {
      "result": true,
      "time": 0.04379129409790039,
      "error": null
    },
    "assert counting_sort([13, 8, 27, 35, 74, 44]) == [8, 13, 27, 35, 44, 74]": {
      "result": true,
      "time": 0.05132865905761719,
      "error": null
    },
    "assert counting_sort([8, 9, 29, 30, 64, 44]) == [8, 9, 29, 30, 44, 64]": {
      "result": true,
      "time": 0.05331015586853027,
      "error": null
    },
    "assert counting_sort([8, 10, 30, 32, 65, 41]) == [8, 10, 30, 32, 41, 65]": {
      "result": true,
      "time": 0.05918598175048828,
      "error": null
    },
    "assert counting_sort([13, 8, 24, 30, 74, 47]) == [8, 13, 24, 30, 47, 74]": {
      "result": true,
      "time": 0.04148387908935547,
      "error": null
    },
    "assert counting_sort([10, 6, 31, 38, 64, 48]) == [6, 10, 31, 38, 48, 64]": {
      "result": true,
      "time": 0.036231279373168945,
      "error": null
    },
    "assert counting_sort([8, 13, 24, 28, 67, 45]) == [8, 13, 24, 28, 45, 67]": {
      "result": true,
      "time": 0.054732322692871094,
      "error": null
    },
    "assert counting_sort([8, 8, 23, 30, 67, 42]) == [8, 8, 23, 30, 42, 67]": {
      "result": true,
      "time": 0.04961752891540527,
      "error": null
    },
    "assert counting_sort([13, 11, 28, 38, 64, 42]) == [11, 13, 28, 38, 42, 64]": {
      "result": true,
      "time": 0.05635833740234375,
      "error": null
    },
    "assert counting_sort([15, 13, 31, 29, 71, 48]) == [13, 15, 29, 31, 48, 71]": {
      "result": true,
      "time": 0.05252385139465332,
      "error": null
    },
    "assert counting_sort([13, 14, 32, 29, 72, 44]) == [13, 14, 29, 32, 44, 72]": {
      "result": true,
      "time": 0.05274081230163574,
      "error": null
    },
    "assert counting_sort([12, 10, 29, 32, 70, 47]) == [10, 12, 29, 32, 47, 70]": {
      "result": true,
      "time": 0.04846835136413574,
      "error": null
    },
    "assert counting_sort([9, 8, 32, 35, 74, 49]) == [8, 9, 32, 35, 49, 74]": {
      "result": true,
      "time": 0.05339622497558594,
      "error": null
    },
    "assert counting_sort([9, 11, 23, 30, 74, 43]) == [9, 11, 23, 30, 43, 74]": {
      "result": true,
      "time": 0.050963640213012695,
      "error": null
    },
    "assert counting_sort([8, 12, 32, 33, 66, 42]) == [8, 12, 32, 33, 42, 66]": {
      "result": true,
      "time": 0.046027183532714844,
      "error": null
    },
    "assert counting_sort([17, 14, 29, 32, 72, 45]) == [14, 17, 29, 32, 45, 72]": {
      "result": true,
      "time": 0.03798317909240723,
      "error": null
    },
    "assert counting_sort([10, 14, 28, 31, 64, 50]) == [10, 14, 28, 31, 50, 64]": {
      "result": true,
      "time": 0.06311631202697754,
      "error": null
    },
    "assert counting_sort([17, 7, 29, 38, 69, 48]) == [7, 17, 29, 38, 48, 69]": {
      "result": true,
      "time": 0.034951210021972656,
      "error": null
    },
    "assert counting_sort([8, 9, 30, 38, 71, 50]) == [8, 9, 30, 38, 50, 71]": {
      "result": true,
      "time": 0.032009124755859375,
      "error": null
    },
    "assert counting_sort([17, 13, 23, 37, 72, 46]) == [13, 17, 23, 37, 46, 72]": {
      "result": true,
      "time": 0.048388004302978516,
      "error": null
    },
    "assert counting_sort([17, 10, 31, 33, 74, 50]) == [10, 17, 31, 33, 50, 74]": {
      "result": true,
      "time": 0.03694963455200195,
      "error": null
    },
    "assert counting_sort([11, 1, 14, 4, 6, 2]) == [1, 2, 4, 6, 11, 14]": {
      "result": true,
      "time": 0.041774749755859375,
      "error": null
    },
    "assert counting_sort([11, 6, 14, 5, 7, 2]) == [2, 5, 6, 7, 11, 14]": {
      "result": true,
      "time": 0.03641390800476074,
      "error": null
    },
    "assert counting_sort([11, 1, 16, 1, 1, 6]) == [1, 1, 1, 6, 11, 16]": {
      "result": true,
      "time": 0.040253400802612305,
      "error": null
    },
    "assert counting_sort([12, 2, 15, 8, 6, 4]) == [2, 4, 6, 8, 12, 15]": {
      "result": true,
      "time": 0.04165220260620117,
      "error": null
    },
    "assert counting_sort([8, 8, 11, 3, 7, 4]) == [3, 4, 7, 8, 8, 11]": {
      "result": true,
      "time": 0.04442548751831055,
      "error": null
    },
    "assert counting_sort([12, 5, 12, 1, 3, 3]) == [1, 3, 3, 5, 12, 12]": {
      "result": true,
      "time": 0.033785343170166016,
      "error": null
    },
    "assert counting_sort([6, 8, 10, 4, 2, 3]) == [2, 3, 4, 6, 8, 10]": {
      "result": true,
      "time": 0.04604363441467285,
      "error": null
    },
    "assert counting_sort([6, 9, 12, 3, 7, 1]) == [1, 3, 6, 7, 9, 12]": {
      "result": true,
      "time": 0.03961181640625,
      "error": null
    },
    "assert counting_sort([3, 4, 17, 8, 3, 3]) == [3, 3, 3, 4, 8, 17]": {
      "result": true,
      "time": 0.03655123710632324,
      "error": null
    },
    "assert counting_sort([11, 9, 13, 5, 3, 6]) == [3, 5, 6, 9, 11, 13]": {
      "result": true,
      "time": 0.031934499740600586,
      "error": null
    },
    "assert counting_sort([3, 9, 11, 4, 7, 4]) == [3, 4, 4, 7, 9, 11]": {
      "result": true,
      "time": 0.03889346122741699,
      "error": null
    },
    "assert counting_sort([5, 7, 11, 8, 3, 4]) == [3, 4, 5, 7, 8, 11]": {
      "result": true,
      "time": 0.03912925720214844,
      "error": null
    },
    "assert counting_sort([3, 9, 18, 4, 2, 5]) == [2, 3, 4, 5, 9, 18]": {
      "result": true,
      "time": 0.04003167152404785,
      "error": null
    },
    "assert counting_sort([8, 8, 9, 8, 4, 5]) == [4, 5, 8, 8, 8, 9]": {
      "result": true,
      "time": 0.03658938407897949,
      "error": null
    },
    "assert counting_sort([6, 6, 18, 3, 6, 1]) == [1, 3, 6, 6, 6, 18]": {
      "result": true,
      "time": 0.035825252532958984,
      "error": null
    },
    "assert counting_sort([4, 5, 19, 4, 5, 6]) == [4, 4, 5, 5, 6, 19]": {
      "result": true,
      "time": 0.03484463691711426,
      "error": null
    },
    "assert counting_sort([9, 6, 12, 8, 7, 3]) == [3, 6, 7, 8, 9, 12]": {
      "result": true,
      "time": 0.03747963905334473,
      "error": null
    },
    "assert counting_sort([4, 1, 9, 5, 5, 1]) == [1, 1, 4, 5, 5, 9]": {
      "result": true,
      "time": 0.04166245460510254,
      "error": null
    },
    "assert counting_sort([9, 5, 18, 1, 4, 2]) == [1, 2, 4, 5, 9, 18]": {
      "result": true,
      "time": 0.03712654113769531,
      "error": null
    },
    "assert counting_sort([5, 7, 10, 3, 7, 3]) == [3, 3, 5, 7, 7, 10]": {
      "result": true,
      "time": 0.040941476821899414,
      "error": null
    },
    "assert counting_sort([9, 5, 18, 5, 6, 2]) == [2, 5, 5, 6, 9, 18]": {
      "result": true,
      "time": 0.03646540641784668,
      "error": null
    },
    "assert counting_sort([13, 3, 12, 4, 2, 5]) == [2, 3, 4, 5, 12, 13]": {
      "result": true,
      "time": 0.03204607963562012,
      "error": null
    },
    "assert counting_sort([13, 3, 10, 1, 5, 3]) == [1, 3, 3, 5, 10, 13]": {
      "result": true,
      "time": 0.043421268463134766,
      "error": null
    },
    "assert counting_sort([6, 7, 12, 6, 7, 1]) == [1, 6, 6, 7, 7, 12]": {
      "result": true,
      "time": 0.04611706733703613,
      "error": null
    },
    "assert counting_sort([5, 8, 18, 7, 6, 5]) == [5, 5, 6, 7, 8, 18]": {
      "result": true,
      "time": 0.04764604568481445,
      "error": null
    },
    "assert counting_sort([8, 3, 14, 4, 1, 3]) == [1, 3, 3, 4, 8, 14]": {
      "result": true,
      "time": 0.05909466743469238,
      "error": null
    },
    "assert counting_sort([11, 7, 15, 4, 6, 3]) == [3, 4, 6, 7, 11, 15]": {
      "result": true,
      "time": 0.05859875679016113,
      "error": null
    },
    "assert counting_sort([3, 5, 10, 2, 6, 2]) == [2, 2, 3, 5, 6, 10]": {
      "result": true,
      "time": 0.03879213333129883,
      "error": null
    },
    "assert counting_sort([5, 5, 10, 7, 3, 5]) == [3, 5, 5, 5, 7, 10]": {
      "result": true,
      "time": 0.03897690773010254,
      "error": null
    },
    "assert counting_sort([4, 5, 18, 6, 2, 6]) == [2, 4, 5, 6, 6, 18]": {
      "result": true,
      "time": 0.03517913818359375,
      "error": null
    },
    "assert counting_sort([3, 8, 9, 2, 2, 1]) == [1, 2, 2, 3, 8, 9]": {
      "result": true,
      "time": 0.034323930740356445,
      "error": null
    },
    "assert counting_sort([6, 2, 10, 5, 4, 3]) == [2, 3, 4, 5, 6, 10]": {
      "result": true,
      "time": 0.0419468879699707,
      "error": null
    },
    "assert counting_sort([3, 7, 14, 2, 5, 4]) == [2, 3, 4, 5, 7, 14]": {
      "result": true,
      "time": 0.034646034240722656,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}