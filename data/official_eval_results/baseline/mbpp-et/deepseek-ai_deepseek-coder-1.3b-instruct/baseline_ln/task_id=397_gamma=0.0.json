{
  "code": "def median_numbers(num1, num2, num3):\n    numbers = [num1, num2, num3]\n    numbers.sort()\n    return numbers[1]\n",
  "results": {
    "assert median_numbers(25,55,65)==55.0": {
      "result": true,
      "time": 0.03568315505981445,
      "error": null
    },
    "assert median_numbers(20,10,30)==20.0": {
      "result": true,
      "time": 0.031563758850097656,
      "error": null
    },
    "assert median_numbers(15,45,75)==45.0": {
      "result": true,
      "time": 0.034215450286865234,
      "error": null
    },
    "assert median_numbers(22, 54, 68) == 54": {
      "result": true,
      "time": 0.03547978401184082,
      "error": null
    },
    "assert median_numbers(22, 57, 66) == 57": {
      "result": true,
      "time": 0.0328373908996582,
      "error": null
    },
    "assert median_numbers(22, 54, 61) == 54": {
      "result": true,
      "time": 0.04236912727355957,
      "error": null
    },
    "assert median_numbers(30, 53, 63) == 53": {
      "result": true,
      "time": 0.037078142166137695,
      "error": null
    },
    "assert median_numbers(22, 55, 61) == 55": {
      "result": true,
      "time": 0.028610706329345703,
      "error": null
    },
    "assert median_numbers(25, 60, 61) == 60": {
      "result": true,
      "time": 0.03286623954772949,
      "error": null
    },
    "assert median_numbers(22, 56, 68) == 56": {
      "result": true,
      "time": 0.03728652000427246,
      "error": null
    },
    "assert median_numbers(29, 53, 70) == 53": {
      "result": true,
      "time": 0.03769826889038086,
      "error": null
    },
    "assert median_numbers(23, 53, 66) == 53": {
      "result": true,
      "time": 0.03627490997314453,
      "error": null
    },
    "assert median_numbers(29, 58, 67) == 58": {
      "result": true,
      "time": 0.035433292388916016,
      "error": null
    },
    "assert median_numbers(27, 52, 64) == 52": {
      "result": true,
      "time": 0.03271627426147461,
      "error": null
    },
    "assert median_numbers(29, 60, 61) == 60": {
      "result": true,
      "time": 0.03685116767883301,
      "error": null
    },
    "assert median_numbers(25, 57, 61) == 57": {
      "result": true,
      "time": 0.02950572967529297,
      "error": null
    },
    "assert median_numbers(20, 50, 66) == 50": {
      "result": true,
      "time": 0.03569436073303223,
      "error": null
    },
    "assert median_numbers(21, 51, 65) == 51": {
      "result": true,
      "time": 0.035120487213134766,
      "error": null
    },
    "assert median_numbers(29, 51, 67) == 51": {
      "result": true,
      "time": 0.037410736083984375,
      "error": null
    },
    "assert median_numbers(26, 55, 69) == 55": {
      "result": true,
      "time": 0.04077601432800293,
      "error": null
    },
    "assert median_numbers(24, 53, 64) == 53": {
      "result": true,
      "time": 0.039296627044677734,
      "error": null
    },
    "assert median_numbers(28, 55, 65) == 55": {
      "result": true,
      "time": 0.04494595527648926,
      "error": null
    },
    "assert median_numbers(27, 57, 66) == 57": {
      "result": true,
      "time": 0.05608510971069336,
      "error": null
    },
    "assert median_numbers(20, 58, 70) == 58": {
      "result": true,
      "time": 0.035675764083862305,
      "error": null
    },
    "assert median_numbers(23, 56, 67) == 56": {
      "result": true,
      "time": 0.04972362518310547,
      "error": null
    },
    "assert median_numbers(28, 55, 69) == 55": {
      "result": true,
      "time": 0.03256368637084961,
      "error": null
    },
    "assert median_numbers(23, 58, 70) == 58": {
      "result": true,
      "time": 0.03705787658691406,
      "error": null
    },
    "assert median_numbers(26, 54, 62) == 54": {
      "result": true,
      "time": 0.04277443885803223,
      "error": null
    },
    "assert median_numbers(27, 51, 64) == 51": {
      "result": true,
      "time": 0.04093146324157715,
      "error": null
    },
    "assert median_numbers(28, 50, 65) == 50": {
      "result": true,
      "time": 0.04828023910522461,
      "error": null
    },
    "assert median_numbers(29, 55, 69) == 55": {
      "result": true,
      "time": 0.06716537475585938,
      "error": null
    },
    "assert median_numbers(22, 57, 70) == 57": {
      "result": true,
      "time": 0.051714420318603516,
      "error": null
    },
    "assert median_numbers(27, 52, 69) == 52": {
      "result": true,
      "time": 0.05777382850646973,
      "error": null
    },
    "assert median_numbers(30, 58, 61) == 58": {
      "result": true,
      "time": 0.0497434139251709,
      "error": null
    },
    "assert median_numbers(20, 58, 63) == 58": {
      "result": true,
      "time": 0.042229413986206055,
      "error": null
    },
    "assert median_numbers(27, 51, 69) == 51": {
      "result": true,
      "time": 0.042613983154296875,
      "error": null
    },
    "assert median_numbers(21, 12, 26) == 21": {
      "result": true,
      "time": 0.04885697364807129,
      "error": null
    },
    "assert median_numbers(18, 6, 28) == 18": {
      "result": true,
      "time": 0.0563507080078125,
      "error": null
    },
    "assert median_numbers(19, 7, 27) == 19": {
      "result": true,
      "time": 0.048410654067993164,
      "error": null
    },
    "assert median_numbers(21, 14, 25) == 21": {
      "result": true,
      "time": 0.041469573974609375,
      "error": null
    },
    "assert median_numbers(20, 7, 29) == 20": {
      "result": true,
      "time": 0.04561924934387207,
      "error": null
    },
    "assert median_numbers(15, 7, 31) == 15": {
      "result": true,
      "time": 0.046552419662475586,
      "error": null
    },
    "assert median_numbers(15, 8, 32) == 15": {
      "result": true,
      "time": 0.052399635314941406,
      "error": null
    },
    "assert median_numbers(20, 6, 34) == 20": {
      "result": true,
      "time": 0.050179481506347656,
      "error": null
    },
    "assert median_numbers(20, 7, 28) == 20": {
      "result": true,
      "time": 0.05642223358154297,
      "error": null
    },
    "assert median_numbers(21, 8, 31) == 21": {
      "result": true,
      "time": 0.04276442527770996,
      "error": null
    },
    "assert median_numbers(23, 6, 31) == 23": {
      "result": true,
      "time": 0.051552772521972656,
      "error": null
    },
    "assert median_numbers(20, 10, 34) == 20": {
      "result": true,
      "time": 0.04857492446899414,
      "error": null
    },
    "assert median_numbers(16, 14, 29) == 16": {
      "result": true,
      "time": 0.05176353454589844,
      "error": null
    },
    "assert median_numbers(16, 7, 30) == 16": {
      "result": true,
      "time": 0.049788713455200195,
      "error": null
    },
    "assert median_numbers(23, 9, 32) == 23": {
      "result": true,
      "time": 0.05486440658569336,
      "error": null
    },
    "assert median_numbers(15, 7, 28) == 15": {
      "result": true,
      "time": 0.040274620056152344,
      "error": null
    },
    "assert median_numbers(18, 5, 26) == 18": {
      "result": true,
      "time": 0.04933667182922363,
      "error": null
    },
    "assert median_numbers(22, 8, 26) == 22": {
      "result": true,
      "time": 0.0636739730834961,
      "error": null
    },
    "assert median_numbers(19, 6, 26) == 19": {
      "result": true,
      "time": 0.05956268310546875,
      "error": null
    },
    "assert median_numbers(15, 11, 30) == 15": {
      "result": true,
      "time": 0.04396939277648926,
      "error": null
    },
    "assert median_numbers(18, 5, 31) == 18": {
      "result": true,
      "time": 0.05113840103149414,
      "error": null
    },
    "assert median_numbers(19, 6, 32) == 19": {
      "result": true,
      "time": 0.04250216484069824,
      "error": null
    },
    "assert median_numbers(20, 5, 31) == 20": {
      "result": true,
      "time": 0.05100250244140625,
      "error": null
    },
    "assert median_numbers(21, 13, 26) == 21": {
      "result": true,
      "time": 0.05111098289489746,
      "error": null
    },
    "assert median_numbers(19, 5, 33) == 19": {
      "result": true,
      "time": 0.0536806583404541,
      "error": null
    },
    "assert median_numbers(24, 8, 25) == 24": {
      "result": true,
      "time": 0.05492711067199707,
      "error": null
    },
    "assert median_numbers(21, 15, 34) == 21": {
      "result": true,
      "time": 0.049053192138671875,
      "error": null
    },
    "assert median_numbers(17, 14, 31) == 17": {
      "result": true,
      "time": 0.0550079345703125,
      "error": null
    },
    "assert median_numbers(17, 8, 30) == 17": {
      "result": true,
      "time": 0.060030221939086914,
      "error": null
    },
    "assert median_numbers(21, 13, 34) == 21": {
      "result": true,
      "time": 0.044411420822143555,
      "error": null
    },
    "assert median_numbers(19, 5, 34) == 19": {
      "result": true,
      "time": 0.05134701728820801,
      "error": null
    },
    "assert median_numbers(15, 8, 30) == 15": {
      "result": true,
      "time": 0.04324030876159668,
      "error": null
    },
    "assert median_numbers(21, 12, 31) == 21": {
      "result": true,
      "time": 0.04597282409667969,
      "error": null
    },
    "assert median_numbers(19, 40, 78) == 40": {
      "result": true,
      "time": 0.056839942932128906,
      "error": null
    },
    "assert median_numbers(19, 50, 78) == 50": {
      "result": true,
      "time": 0.059671878814697266,
      "error": null
    },
    "assert median_numbers(11, 44, 73) == 44": {
      "result": true,
      "time": 0.054605722427368164,
      "error": null
    },
    "assert median_numbers(18, 42, 70) == 42": {
      "result": true,
      "time": 0.05772590637207031,
      "error": null
    },
    "assert median_numbers(11, 48, 72) == 48": {
      "result": true,
      "time": 0.046953439712524414,
      "error": null
    },
    "assert median_numbers(10, 48, 79) == 48": {
      "result": true,
      "time": 0.05159401893615723,
      "error": null
    },
    "assert median_numbers(17, 48, 79) == 48": {
      "result": true,
      "time": 0.04443645477294922,
      "error": null
    },
    "assert median_numbers(17, 46, 74) == 46": {
      "result": true,
      "time": 0.05078411102294922,
      "error": null
    },
    "assert median_numbers(20, 49, 78) == 49": {
      "result": true,
      "time": 0.06448531150817871,
      "error": null
    },
    "assert median_numbers(12, 40, 71) == 40": {
      "result": true,
      "time": 0.04365253448486328,
      "error": null
    },
    "assert median_numbers(16, 40, 79) == 40": {
      "result": true,
      "time": 0.0443880558013916,
      "error": null
    },
    "assert median_numbers(17, 40, 80) == 40": {
      "result": true,
      "time": 0.04661154747009277,
      "error": null
    },
    "assert median_numbers(15, 50, 78) == 50": {
      "result": true,
      "time": 0.04869699478149414,
      "error": null
    },
    "assert median_numbers(11, 41, 76) == 41": {
      "result": true,
      "time": 0.04395174980163574,
      "error": null
    },
    "assert median_numbers(20, 47, 73) == 47": {
      "result": true,
      "time": 0.044222354888916016,
      "error": null
    },
    "assert median_numbers(19, 50, 71) == 50": {
      "result": true,
      "time": 0.043056488037109375,
      "error": null
    },
    "assert median_numbers(10, 42, 77) == 42": {
      "result": true,
      "time": 0.04140591621398926,
      "error": null
    },
    "assert median_numbers(20, 44, 70) == 44": {
      "result": true,
      "time": 0.02956223487854004,
      "error": null
    },
    "assert median_numbers(16, 41, 78) == 41": {
      "result": true,
      "time": 0.041216373443603516,
      "error": null
    },
    "assert median_numbers(20, 49, 70) == 49": {
      "result": true,
      "time": 0.03805732727050781,
      "error": null
    },
    "assert median_numbers(11, 50, 75) == 50": {
      "result": true,
      "time": 0.035977840423583984,
      "error": null
    },
    "assert median_numbers(20, 42, 72) == 42": {
      "result": true,
      "time": 0.030678272247314453,
      "error": null
    },
    "assert median_numbers(15, 48, 74) == 48": {
      "result": true,
      "time": 0.03267645835876465,
      "error": null
    },
    "assert median_numbers(15, 49, 72) == 49": {
      "result": true,
      "time": 0.032317399978637695,
      "error": null
    },
    "assert median_numbers(10, 42, 80) == 42": {
      "result": true,
      "time": 0.03557229042053223,
      "error": null
    },
    "assert median_numbers(17, 43, 78) == 43": {
      "result": true,
      "time": 0.04129147529602051,
      "error": null
    },
    "assert median_numbers(18, 44, 73) == 44": {
      "result": true,
      "time": 0.03958725929260254,
      "error": null
    },
    "assert median_numbers(13, 50, 80) == 50": {
      "result": true,
      "time": 0.0447235107421875,
      "error": null
    },
    "assert median_numbers(14, 40, 75) == 40": {
      "result": true,
      "time": 0.04079723358154297,
      "error": null
    },
    "assert median_numbers(10, 42, 75) == 42": {
      "result": true,
      "time": 0.04024696350097656,
      "error": null
    },
    "assert median_numbers(10, 42, 74) == 42": {
      "result": true,
      "time": 0.03665518760681152,
      "error": null
    },
    "assert median_numbers(15, 41, 74) == 41": {
      "result": true,
      "time": 0.04175209999084473,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}