{
  "code": "def last_Digit(n):\n    return abs(n) % 10\n",
  "results": {
    "assert last_Digit(123) == 3": {
      "result": true,
      "time": 0.038550615310668945,
      "error": null
    },
    "assert last_Digit(25) == 5": {
      "result": true,
      "time": 0.04745769500732422,
      "error": null
    },
    "assert last_Digit(30) == 0": {
      "result": true,
      "time": 0.04790544509887695,
      "error": null
    },
    "assert last_Digit(126) == 6": {
      "result": true,
      "time": 0.04392051696777344,
      "error": null
    },
    "assert last_Digit(119) == 9": {
      "result": true,
      "time": 0.048426151275634766,
      "error": null
    },
    "assert last_Digit(120) == 0": {
      "result": true,
      "time": 0.0433197021484375,
      "error": null
    },
    "assert last_Digit(124) == 4": {
      "result": true,
      "time": 0.04213547706604004,
      "error": null
    },
    "assert last_Digit(118) == 8": {
      "result": true,
      "time": 0.04837536811828613,
      "error": null
    },
    "assert last_Digit(128) == 8": {
      "result": true,
      "time": 0.05037379264831543,
      "error": null
    },
    "assert last_Digit(127) == 7": {
      "result": true,
      "time": 0.04032731056213379,
      "error": null
    },
    "assert last_Digit(121) == 1": {
      "result": true,
      "time": 0.0418093204498291,
      "error": null
    },
    "assert last_Digit(122) == 2": {
      "result": true,
      "time": 0.045066118240356445,
      "error": null
    },
    "assert last_Digit(125) == 5": {
      "result": true,
      "time": 0.043282508850097656,
      "error": null
    },
    "assert last_Digit(21) == 1": {
      "result": true,
      "time": 0.050116539001464844,
      "error": null
    },
    "assert last_Digit(26) == 6": {
      "result": true,
      "time": 0.048551082611083984,
      "error": null
    },
    "assert last_Digit(24) == 4": {
      "result": true,
      "time": 0.038194894790649414,
      "error": null
    },
    "assert last_Digit(23) == 3": {
      "result": true,
      "time": 0.04056906700134277,
      "error": null
    },
    "assert last_Digit(27) == 7": {
      "result": true,
      "time": 0.04370832443237305,
      "error": null
    },
    "assert last_Digit(20) == 0": {
      "result": true,
      "time": 0.04625391960144043,
      "error": null
    },
    "assert last_Digit(22) == 2": {
      "result": true,
      "time": 0.04141402244567871,
      "error": null
    },
    "assert last_Digit(28) == 8": {
      "result": true,
      "time": 0.03409433364868164,
      "error": null
    },
    "assert last_Digit(29) == 9": {
      "result": true,
      "time": 0.041027069091796875,
      "error": null
    },
    "assert last_Digit(33) == 3": {
      "result": true,
      "time": 0.03829073905944824,
      "error": null
    },
    "assert last_Digit(31) == 1": {
      "result": true,
      "time": 0.03600907325744629,
      "error": null
    },
    "assert last_Digit(32) == 2": {
      "result": true,
      "time": 0.03580665588378906,
      "error": null
    },
    "assert last_Digit(34) == 4": {
      "result": true,
      "time": 0.04037761688232422,
      "error": null
    },
    "assert last_Digit(35) == 5": {
      "result": true,
      "time": 0.04320335388183594,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}