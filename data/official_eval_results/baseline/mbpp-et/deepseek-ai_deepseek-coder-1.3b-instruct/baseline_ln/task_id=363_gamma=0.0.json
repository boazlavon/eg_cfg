{
  "code": "def add_K_element(tuples, K):\n    return tuple(tuple(i + K for i in tup) for tup in tuples)",
  "results": {
    "assert add_K_element([(1, 3, 4), (2, 4, 6), (3, 8, 1)], 4) == [(5, 7, 8), (6, 8, 10), (7, 12, 5)]": {
      "result": false,
      "time": 0.040361881256103516,
      "error": null
    },
    "assert add_K_element([(1, 2, 3), (4, 5, 6), (7, 8, 9)], 8) == [(9, 10, 11), (12, 13, 14), (15, 16, 17)]": {
      "result": false,
      "time": 0.03854012489318848,
      "error": null
    },
    "assert add_K_element([(11, 12, 13), (14, 15, 16), (17, 18, 19)], 9) == [(20, 21, 22), (23, 24, 25), (26, 27, 28)]": {
      "result": false,
      "time": 0.03226590156555176,
      "error": null
    },
    "assert add_K_element([(3, 1, 4), (5, 7, 2), (6, 11, 1)], 1) == [(4, 2, 5), (6, 8, 3), (7, 12, 2)]": {
      "result": false,
      "time": 0.04028749465942383,
      "error": null
    },
    "assert add_K_element([(1, 2, 6), (2, 7, 7), (7, 6, 1)], 9) == [(10, 11, 15), (11, 16, 16), (16, 15, 10)]": {
      "result": false,
      "time": 0.03769183158874512,
      "error": null
    },
    "assert add_K_element([(1, 4, 1), (4, 1, 5), (1, 9, 1)], 9) == [(10, 13, 10), (13, 10, 14), (10, 18, 10)]": {
      "result": false,
      "time": 0.03962421417236328,
      "error": null
    },
    "assert add_K_element([(2, 4, 9), (7, 8, 10), (5, 6, 3)], 3) == [(5, 7, 12), (10, 11, 13), (8, 9, 6)]": {
      "result": false,
      "time": 0.041272878646850586,
      "error": null
    },
    "assert add_K_element([(5, 5, 2), (4, 5, 4), (6, 3, 4)], 4) == [(9, 9, 6), (8, 9, 8), (10, 7, 8)]": {
      "result": false,
      "time": 0.03760886192321777,
      "error": null
    },
    "assert add_K_element([(4, 7, 3), (6, 3, 6), (2, 8, 5)], 4) == [(8, 11, 7), (10, 7, 10), (6, 12, 9)]": {
      "result": false,
      "time": 0.037439584732055664,
      "error": null
    },
    "assert add_K_element([(1, 8, 2), (7, 7, 5), (1, 11, 2)], 7) == [(8, 15, 9), (14, 14, 12), (8, 18, 9)]": {
      "result": false,
      "time": 0.0429835319519043,
      "error": null
    },
    "assert add_K_element([(6, 5, 8), (3, 7, 7), (1, 6, 6)], 7) == [(13, 12, 15), (10, 14, 14), (8, 13, 13)]": {
      "result": false,
      "time": 0.035449981689453125,
      "error": null
    },
    "assert add_K_element([(4, 8, 1), (1, 3, 6), (4, 6, 6)], 5) == [(9, 13, 6), (6, 8, 11), (9, 11, 11)]": {
      "result": false,
      "time": 0.038404226303100586,
      "error": null
    },
    "assert add_K_element([(5, 4, 6), (7, 1, 10), (5, 13, 2)], 6) == [(11, 10, 12), (13, 7, 16), (11, 19, 8)]": {
      "result": false,
      "time": 0.03492927551269531,
      "error": null
    },
    "assert add_K_element([(2, 4, 4), (5, 2, 4), (5, 4, 6)], 5) == [(7, 9, 9), (10, 7, 9), (10, 9, 11)]": {
      "result": false,
      "time": 0.03279733657836914,
      "error": null
    },
    "assert add_K_element([(5, 7, 3), (4, 6, 4), (1, 9, 6)], 5) == [(10, 12, 8), (9, 11, 9), (6, 14, 11)]": {
      "result": false,
      "time": 0.03911924362182617,
      "error": null
    },
    "assert add_K_element([(5, 4, 7), (5, 1, 9), (8, 5, 5)], 6) == [(11, 10, 13), (11, 7, 15), (14, 11, 11)]": {
      "result": false,
      "time": 0.03524637222290039,
      "error": null
    },
    "assert add_K_element([(2, 6, 3), (5, 1, 6), (2, 11, 2)], 9) == [(11, 15, 12), (14, 10, 15), (11, 20, 11)]": {
      "result": false,
      "time": 0.03696942329406738,
      "error": null
    },
    "assert add_K_element([(3, 7, 9), (1, 1, 9), (4, 6, 2)], 8) == [(11, 15, 17), (9, 9, 17), (12, 14, 10)]": {
      "result": false,
      "time": 0.03997683525085449,
      "error": null
    },
    "assert add_K_element([(4, 4, 4), (4, 9, 11), (6, 9, 1)], 8) == [(12, 12, 12), (12, 17, 19), (14, 17, 9)]": {
      "result": false,
      "time": 0.037010908126831055,
      "error": null
    },
    "assert add_K_element([(5, 1, 2), (1, 6, 1), (4, 10, 5)], 4) == [(9, 5, 6), (5, 10, 5), (8, 14, 9)]": {
      "result": false,
      "time": 0.03728294372558594,
      "error": null
    },
    "assert add_K_element([(3, 4, 6), (2, 8, 2), (1, 13, 5)], 8) == [(11, 12, 14), (10, 16, 10), (9, 21, 13)]": {
      "result": false,
      "time": 0.03983044624328613,
      "error": null
    },
    "assert add_K_element([(1, 8, 5), (2, 9, 9), (2, 12, 4)], 8) == [(9, 16, 13), (10, 17, 17), (10, 20, 12)]": {
      "result": false,
      "time": 0.031830549240112305,
      "error": null
    },
    "assert add_K_element([(5, 8, 2), (5, 7, 11), (2, 6, 1)], 5) == [(10, 13, 7), (10, 12, 16), (7, 11, 6)]": {
      "result": false,
      "time": 0.04333043098449707,
      "error": null
    },
    "assert add_K_element([(6, 2, 1), (6, 1, 2), (7, 4, 5)], 9) == [(15, 11, 10), (15, 10, 11), (16, 13, 14)]": {
      "result": false,
      "time": 0.04472017288208008,
      "error": null
    },
    "assert add_K_element([(6, 1, 9), (5, 8, 1), (4, 6, 2)], 6) == [(12, 7, 15), (11, 14, 7), (10, 12, 8)]": {
      "result": false,
      "time": 0.04135489463806152,
      "error": null
    },
    "assert add_K_element([(5, 5, 5), (2, 7, 6), (3, 10, 4)], 2) == [(7, 7, 7), (4, 9, 8), (5, 12, 6)]": {
      "result": false,
      "time": 0.03781294822692871,
      "error": null
    },
    "assert add_K_element([(1, 8, 2), (7, 9, 11), (7, 9, 2)], 8) == [(9, 16, 10), (15, 17, 19), (15, 17, 10)]": {
      "result": false,
      "time": 0.03961324691772461,
      "error": null
    },
    "assert add_K_element([(1, 6, 3), (7, 7, 6), (4, 13, 1)], 5) == [(6, 11, 8), (12, 12, 11), (9, 18, 6)]": {
      "result": false,
      "time": 0.03489828109741211,
      "error": null
    },
    "assert add_K_element([(2, 1, 2), (2, 1, 3), (6, 6, 6)], 5) == [(7, 6, 7), (7, 6, 8), (11, 11, 11)]": {
      "result": false,
      "time": 0.036470651626586914,
      "error": null
    },
    "assert add_K_element([(1, 8, 4), (2, 8, 7), (1, 13, 5)], 2) == [(3, 10, 6), (4, 10, 9), (3, 15, 7)]": {
      "result": false,
      "time": 0.03791522979736328,
      "error": null
    },
    "assert add_K_element([(2, 5, 4), (5, 6, 1), (6, 7, 6)], 2) == [(4, 7, 6), (7, 8, 3), (8, 9, 8)]": {
      "result": false,
      "time": 0.04327559471130371,
      "error": null
    },
    "assert add_K_element([(5, 8, 4), (4, 1, 8), (3, 6, 4)], 1) == [(6, 9, 5), (5, 2, 9), (4, 7, 5)]": {
      "result": false,
      "time": 0.041754961013793945,
      "error": null
    },
    "assert add_K_element([(3, 4, 2), (3, 5, 6), (8, 10, 5)], 7) == [(10, 11, 9), (10, 12, 13), (15, 17, 12)]": {
      "result": false,
      "time": 0.04557013511657715,
      "error": null
    },
    "assert add_K_element([(1, 4, 4), (3, 2, 9), (2, 7, 4)], 5) == [(6, 9, 9), (8, 7, 14), (7, 12, 9)]": {
      "result": false,
      "time": 0.036071062088012695,
      "error": null
    },
    "assert add_K_element([(2, 6, 9), (2, 9, 8), (5, 11, 4)], 1) == [(3, 7, 10), (3, 10, 9), (6, 12, 5)]": {
      "result": false,
      "time": 0.03797411918640137,
      "error": null
    },
    "assert add_K_element([(6, 4, 5), (3, 1, 6), (3, 4, 5)], 5) == [(11, 9, 10), (8, 6, 11), (8, 9, 10)]": {
      "result": false,
      "time": 0.035901784896850586,
      "error": null
    },
    "assert add_K_element([(6, 1, 6), (7, 10, 4), (3, 10, 10)], 3) == [(9, 4, 9), (10, 13, 7), (6, 13, 13)]": {
      "result": false,
      "time": 0.03826594352722168,
      "error": null
    },
    "assert add_K_element([(5, 2, 3), (9, 7, 11), (11, 6, 6)], 7) == [(12, 9, 10), (16, 14, 18), (18, 13, 13)]": {
      "result": false,
      "time": 0.039183855056762695,
      "error": null
    },
    "assert add_K_element([(3, 3, 4), (4, 7, 6), (8, 5, 12)], 11) == [(14, 14, 15), (15, 18, 17), (19, 16, 23)]": {
      "result": false,
      "time": 0.032601118087768555,
      "error": null
    },
    "assert add_K_element([(5, 5, 3), (8, 1, 8), (12, 4, 4)], 7) == [(12, 12, 10), (15, 8, 15), (19, 11, 11)]": {
      "result": false,
      "time": 0.0427699089050293,
      "error": null
    },
    "assert add_K_element([(1, 3, 5), (7, 4, 2), (11, 7, 12)], 10) == [(11, 13, 15), (17, 14, 12), (21, 17, 22)]": {
      "result": false,
      "time": 0.03778505325317383,
      "error": null
    },
    "assert add_K_element([(3, 4, 8), (4, 9, 11), (2, 6, 11)], 7) == [(10, 11, 15), (11, 16, 18), (9, 13, 18)]": {
      "result": false,
      "time": 0.0378415584564209,
      "error": null
    },
    "assert add_K_element([(3, 2, 8), (5, 5, 6), (11, 6, 7)], 5) == [(8, 7, 13), (10, 10, 11), (16, 11, 12)]": {
      "result": false,
      "time": 0.0350193977355957,
      "error": null
    },
    "assert add_K_element([(4, 4, 4), (3, 4, 4), (3, 7, 13)], 4) == [(8, 8, 8), (7, 8, 8), (7, 11, 17)]": {
      "result": false,
      "time": 0.0337216854095459,
      "error": null
    },
    "assert add_K_element([(3, 2, 5), (8, 2, 10), (3, 9, 10)], 4) == [(7, 6, 9), (12, 6, 14), (7, 13, 14)]": {
      "result": false,
      "time": 0.038100242614746094,
      "error": null
    },
    "assert add_K_element([(3, 6, 6), (4, 9, 10), (3, 3, 7)], 11) == [(14, 17, 17), (15, 20, 21), (14, 14, 18)]": {
      "result": false,
      "time": 0.03665614128112793,
      "error": null
    },
    "assert add_K_element([(3, 4, 7), (9, 7, 3), (10, 9, 6)], 12) == [(15, 16, 19), (21, 19, 15), (22, 21, 18)]": {
      "result": false,
      "time": 0.034240007400512695,
      "error": null
    },
    "assert add_K_element([(1, 7, 5), (8, 8, 3), (4, 7, 8)], 8) == [(9, 15, 13), (16, 16, 11), (12, 15, 16)]": {
      "result": false,
      "time": 0.033185720443725586,
      "error": null
    },
    "assert add_K_element([(3, 4, 2), (9, 4, 7), (3, 9, 14)], 13) == [(16, 17, 15), (22, 17, 20), (16, 22, 27)]": {
      "result": false,
      "time": 0.04167294502258301,
      "error": null
    },
    "assert add_K_element([(3, 5, 1), (7, 7, 10), (12, 9, 10)], 7) == [(10, 12, 8), (14, 14, 17), (19, 16, 17)]": {
      "result": false,
      "time": 0.0330052375793457,
      "error": null
    },
    "assert add_K_element([(1, 5, 5), (7, 5, 4), (11, 3, 14)], 4) == [(5, 9, 9), (11, 9, 8), (15, 7, 18)]": {
      "result": false,
      "time": 0.04015922546386719,
      "error": null
    },
    "assert add_K_element([(4, 5, 6), (2, 5, 8), (4, 4, 7)], 8) == [(12, 13, 14), (10, 13, 16), (12, 12, 15)]": {
      "result": false,
      "time": 0.033087968826293945,
      "error": null
    },
    "assert add_K_element([(2, 4, 1), (6, 6, 6), (6, 8, 7)], 11) == [(13, 15, 12), (17, 17, 17), (17, 19, 18)]": {
      "result": false,
      "time": 0.04502511024475098,
      "error": null
    },
    "assert add_K_element([(3, 1, 7), (5, 7, 6), (4, 13, 4)], 9) == [(12, 10, 16), (14, 16, 15), (13, 22, 13)]": {
      "result": false,
      "time": 0.03692913055419922,
      "error": null
    },
    "assert add_K_element([(1, 6, 4), (6, 7, 4), (2, 10, 14)], 11) == [(12, 17, 15), (17, 18, 15), (13, 21, 25)]": {
      "result": false,
      "time": 0.033867835998535156,
      "error": null
    },
    "assert add_K_element([(6, 1, 4), (6, 5, 2), (5, 12, 9)], 13) == [(19, 14, 17), (19, 18, 15), (18, 25, 22)]": {
      "result": false,
      "time": 0.03304791450500488,
      "error": null
    },
    "assert add_K_element([(5, 6, 4), (7, 4, 11), (6, 4, 6)], 12) == [(17, 18, 16), (19, 16, 23), (18, 16, 18)]": {
      "result": false,
      "time": 0.03836345672607422,
      "error": null
    },
    "assert add_K_element([(1, 5, 7), (9, 7, 4), (2, 9, 12)], 3) == [(4, 8, 10), (12, 10, 7), (5, 12, 15)]": {
      "result": false,
      "time": 0.0405576229095459,
      "error": null
    },
    "assert add_K_element([(5, 2, 3), (4, 9, 1), (9, 7, 9)], 5) == [(10, 7, 8), (9, 14, 6), (14, 12, 14)]": {
      "result": false,
      "time": 0.03905630111694336,
      "error": null
    },
    "assert add_K_element([(3, 5, 4), (2, 2, 6), (8, 4, 7)], 7) == [(10, 12, 11), (9, 9, 13), (15, 11, 14)]": {
      "result": false,
      "time": 0.038216352462768555,
      "error": null
    },
    "assert add_K_element([(1, 4, 5), (4, 6, 7), (12, 8, 6)], 11) == [(12, 15, 16), (15, 17, 18), (23, 19, 17)]": {
      "result": false,
      "time": 0.04019522666931152,
      "error": null
    },
    "assert add_K_element([(1, 4, 2), (4, 2, 1), (3, 9, 12)], 12) == [(13, 16, 14), (16, 14, 13), (15, 21, 24)]": {
      "result": false,
      "time": 0.03703451156616211,
      "error": null
    },
    "assert add_K_element([(1, 1, 7), (2, 7, 11), (7, 10, 4)], 12) == [(13, 13, 19), (14, 19, 23), (19, 22, 16)]": {
      "result": false,
      "time": 0.0385284423828125,
      "error": null
    },
    "assert add_K_element([(2, 1, 7), (6, 4, 6), (5, 5, 11)], 10) == [(12, 11, 17), (16, 14, 16), (15, 15, 21)]": {
      "result": false,
      "time": 0.033651113510131836,
      "error": null
    },
    "assert add_K_element([(3, 2, 5), (2, 9, 1), (8, 11, 5)], 4) == [(7, 6, 9), (6, 13, 5), (12, 15, 9)]": {
      "result": false,
      "time": 0.03706812858581543,
      "error": null
    },
    "assert add_K_element([(1, 3, 1), (7, 5, 9), (6, 9, 9)], 3) == [(4, 6, 4), (10, 8, 12), (9, 12, 12)]": {
      "result": false,
      "time": 0.0379641056060791,
      "error": null
    },
    "assert add_K_element([(6, 2, 5), (3, 7, 8), (8, 8, 4)], 5) == [(11, 7, 10), (8, 12, 13), (13, 13, 9)]": {
      "result": false,
      "time": 0.03778576850891113,
      "error": null
    },
    "assert add_K_element([(5, 1, 5), (4, 2, 1), (7, 13, 12)], 6) == [(11, 7, 11), (10, 8, 7), (13, 19, 18)]": {
      "result": false,
      "time": 0.03286099433898926,
      "error": null
    },
    "assert add_K_element([(3, 4, 2), (2, 9, 5), (8, 13, 8)], 6) == [(9, 10, 8), (8, 15, 11), (14, 19, 14)]": {
      "result": false,
      "time": 0.043186187744140625,
      "error": null
    },
    "assert add_K_element([(7, 13, 18), (14, 19, 19), (15, 23, 24)], 9) == [(16, 22, 27), (23, 28, 28), (24, 32, 33)]": {
      "result": false,
      "time": 0.04073643684387207,
      "error": null
    },
    "assert add_K_element([(13, 7, 8), (19, 18, 18), (15, 22, 17)], 9) == [(22, 16, 17), (28, 27, 27), (24, 31, 26)]": {
      "result": false,
      "time": 0.041649818420410156,
      "error": null
    },
    "assert add_K_element([(13, 7, 17), (11, 12, 13), (19, 18, 21)], 6) == [(19, 13, 23), (17, 18, 19), (25, 24, 27)]": {
      "result": false,
      "time": 0.0371851921081543,
      "error": null
    },
    "assert add_K_element([(16, 12, 12), (16, 14, 19), (15, 13, 15)], 4) == [(20, 16, 16), (20, 18, 23), (19, 17, 19)]": {
      "result": false,
      "time": 0.042316436767578125,
      "error": null
    },
    "assert add_K_element([(11, 10, 13), (13, 14, 12), (16, 13, 22)], 12) == [(23, 22, 25), (25, 26, 24), (28, 25, 34)]": {
      "result": false,
      "time": 0.039771080017089844,
      "error": null
    },
    "assert add_K_element([(11, 9, 17), (10, 13, 14), (20, 21, 21)], 9) == [(20, 18, 26), (19, 22, 23), (29, 30, 30)]": {
      "result": false,
      "time": 0.03690338134765625,
      "error": null
    },
    "assert add_K_element([(9, 13, 15), (9, 18, 18), (19, 14, 23)], 8) == [(17, 21, 23), (17, 26, 26), (27, 22, 31)]": {
      "result": false,
      "time": 0.040464162826538086,
      "error": null
    },
    "assert add_K_element([(9, 17, 8), (16, 10, 17), (21, 19, 22)], 4) == [(13, 21, 12), (20, 14, 21), (25, 23, 26)]": {
      "result": false,
      "time": 0.04079794883728027,
      "error": null
    },
    "assert add_K_element([(11, 13, 9), (9, 19, 13), (21, 20, 23)], 9) == [(20, 22, 18), (18, 28, 22), (30, 29, 32)]": {
      "result": false,
      "time": 0.03656649589538574,
      "error": null
    },
    "assert add_K_element([(8, 13, 16), (17, 19, 13), (22, 17, 23)], 10) == [(18, 23, 26), (27, 29, 23), (32, 27, 33)]": {
      "result": false,
      "time": 0.03620147705078125,
      "error": null
    },
    "assert add_K_element([(16, 11, 16), (14, 14, 19), (13, 20, 21)], 10) == [(26, 21, 26), (24, 24, 29), (23, 30, 31)]": {
      "result": false,
      "time": 0.04225277900695801,
      "error": null
    },
    "assert add_K_element([(15, 15, 18), (19, 10, 17), (22, 21, 24)], 9) == [(24, 24, 27), (28, 19, 26), (31, 30, 33)]": {
      "result": false,
      "time": 0.043958425521850586,
      "error": null
    },
    "assert add_K_element([(16, 7, 10), (18, 11, 19), (12, 14, 16)], 8) == [(24, 15, 18), (26, 19, 27), (20, 22, 24)]": {
      "result": false,
      "time": 0.0412449836730957,
      "error": null
    },
    "assert add_K_element([(9, 13, 17), (9, 15, 18), (13, 15, 21)], 13) == [(22, 26, 30), (22, 28, 31), (26, 28, 34)]": {
      "result": false,
      "time": 0.04392838478088379,
      "error": null
    },
    "assert add_K_element([(14, 10, 12), (14, 10, 12), (16, 23, 24)], 13) == [(27, 23, 25), (27, 23, 25), (29, 36, 37)]": {
      "result": false,
      "time": 0.05217885971069336,
      "error": null
    },
    "assert add_K_element([(13, 16, 12), (10, 16, 17), (18, 21, 16)], 7) == [(20, 23, 19), (17, 23, 24), (25, 28, 23)]": {
      "result": false,
      "time": 0.04243302345275879,
      "error": null
    },
    "assert add_K_element([(13, 17, 14), (19, 18, 17), (20, 21, 22)], 12) == [(25, 29, 26), (31, 30, 29), (32, 33, 34)]": {
      "result": false,
      "time": 0.03971123695373535,
      "error": null
    },
    "assert add_K_element([(16, 17, 12), (19, 12, 14), (14, 14, 18)], 8) == [(24, 25, 20), (27, 20, 22), (22, 22, 26)]": {
      "result": false,
      "time": 0.04032564163208008,
      "error": null
    },
    "assert add_K_element([(16, 11, 16), (16, 11, 21), (12, 18, 14)], 7) == [(23, 18, 23), (23, 18, 28), (19, 25, 21)]": {
      "result": false,
      "time": 0.041411399841308594,
      "error": null
    },
    "assert add_K_element([(13, 13, 9), (19, 10, 11), (17, 20, 24)], 13) == [(26, 26, 22), (32, 23, 24), (30, 33, 37)]": {
      "result": false,
      "time": 0.040355682373046875,
      "error": null
    },
    "assert add_K_element([(14, 11, 9), (13, 18, 20), (13, 21, 15)], 10) == [(24, 21, 19), (23, 28, 30), (23, 31, 25)]": {
      "result": false,
      "time": 0.04705023765563965,
      "error": null
    },
    "assert add_K_element([(9, 9, 10), (18, 18, 19), (16, 22, 24)], 7) == [(16, 16, 17), (25, 25, 26), (23, 29, 31)]": {
      "result": false,
      "time": 0.03788304328918457,
      "error": null
    },
    "assert add_K_element([(13, 9, 18), (19, 12, 20), (22, 19, 22)], 12) == [(25, 21, 30), (31, 24, 32), (34, 31, 34)]": {
      "result": false,
      "time": 0.04013323783874512,
      "error": null
    },
    "assert add_K_element([(9, 9, 8), (17, 20, 17), (22, 23, 16)], 11) == [(20, 20, 19), (28, 31, 28), (33, 34, 27)]": {
      "result": false,
      "time": 0.04278969764709473,
      "error": null
    },
    "assert add_K_element([(13, 12, 13), (17, 16, 21), (14, 15, 24)], 7) == [(20, 19, 20), (24, 23, 28), (21, 22, 31)]": {
      "result": false,
      "time": 0.04324531555175781,
      "error": null
    },
    "assert add_K_element([(15, 15, 13), (18, 18, 12), (14, 20, 15)], 4) == [(19, 19, 17), (22, 22, 16), (18, 24, 19)]": {
      "result": false,
      "time": 0.043460845947265625,
      "error": null
    },
    "assert add_K_element([(11, 13, 9), (17, 14, 16), (17, 21, 14)], 6) == [(17, 19, 15), (23, 20, 22), (23, 27, 20)]": {
      "result": false,
      "time": 0.04400324821472168,
      "error": null
    },
    "assert add_K_element([(14, 13, 16), (18, 18, 16), (21, 16, 23)], 6) == [(20, 19, 22), (24, 24, 22), (27, 22, 29)]": {
      "result": false,
      "time": 0.02964949607849121,
      "error": null
    },
    "assert add_K_element([(12, 14, 14), (14, 10, 16), (22, 14, 14)], 5) == [(17, 19, 19), (19, 15, 21), (27, 19, 19)]": {
      "result": false,
      "time": 0.03568243980407715,
      "error": null
    },
    "assert add_K_element([(12, 13, 9), (14, 17, 13), (14, 19, 16)], 6) == [(18, 19, 15), (20, 23, 19), (20, 25, 22)]": {
      "result": false,
      "time": 0.05380582809448242,
      "error": null
    },
    "assert add_K_element([(12, 17, 15), (15, 11, 21), (18, 19, 21)], 4) == [(16, 21, 19), (19, 15, 25), (22, 23, 25)]": {
      "result": false,
      "time": 0.04879450798034668,
      "error": null
    },
    "assert add_K_element([(14, 11, 16), (15, 11, 13), (18, 17, 22)], 5) == [(19, 16, 21), (20, 16, 18), (23, 22, 27)]": {
      "result": false,
      "time": 0.045446157455444336,
      "error": null
    },
    "assert add_K_element([(14, 10, 9), (19, 11, 12), (13, 20, 22)], 11) == [(25, 21, 20), (30, 22, 23), (24, 31, 33)]": {
      "result": false,
      "time": 0.05142045021057129,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": "",
  "has_testcase_error": false
}