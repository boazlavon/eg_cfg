{
  "code": "def check_distinct(test_tup):\n    return len(test_tup) == len(set(test_tup))\n",
  "results": {
    "assert check_distinct((1, 4, 5, 6, 1, 4)) == False": {
      "result": true,
      "time": 0.03807473182678223,
      "error": null
    },
    "assert check_distinct((1, 4, 5, 6)) == True": {
      "result": true,
      "time": 0.038300514221191406,
      "error": null
    },
    "assert check_distinct((2, 3, 4, 5, 6)) == True": {
      "result": true,
      "time": 0.031967878341674805,
      "error": null
    },
    "assert check_distinct((2, 4, 3, 6, 5, 9)) == True": {
      "result": true,
      "time": 0.04221487045288086,
      "error": null
    },
    "assert check_distinct((4, 9, 3, 6, 4, 4)) == False": {
      "result": true,
      "time": 0.04932761192321777,
      "error": null
    },
    "assert check_distinct((4, 7, 6, 1, 2, 8)) == True": {
      "result": true,
      "time": 0.038095951080322266,
      "error": null
    },
    "assert check_distinct((6, 6, 3, 3, 3, 7)) == False": {
      "result": true,
      "time": 0.04327201843261719,
      "error": null
    },
    "assert check_distinct((1, 5, 2, 10, 5, 5)) == False": {
      "result": true,
      "time": 0.04803752899169922,
      "error": null
    },
    "assert check_distinct((1, 7, 10, 11, 4, 8)) == True": {
      "result": true,
      "time": 0.036911964416503906,
      "error": null
    },
    "assert check_distinct((5, 9, 1, 8, 4, 1)) == False": {
      "result": true,
      "time": 0.03655719757080078,
      "error": null
    },
    "assert check_distinct((2, 5, 10, 6, 4, 1)) == True": {
      "result": true,
      "time": 0.044724225997924805,
      "error": null
    },
    "assert check_distinct((2, 9, 9, 10, 6, 6)) == False": {
      "result": true,
      "time": 0.03958463668823242,
      "error": null
    },
    "assert check_distinct((6, 4, 1, 1, 3, 9)) == False": {
      "result": true,
      "time": 0.04029583930969238,
      "error": null
    },
    "assert check_distinct((6, 3, 8, 8, 2, 5)) == False": {
      "result": true,
      "time": 0.038372039794921875,
      "error": null
    },
    "assert check_distinct((1, 8, 3, 6, 2, 2)) == False": {
      "result": true,
      "time": 0.043756723403930664,
      "error": null
    },
    "assert check_distinct((2, 7, 10, 1, 1, 7)) == False": {
      "result": true,
      "time": 0.03631472587585449,
      "error": null
    },
    "assert check_distinct((4, 4, 7, 11, 5, 2)) == False": {
      "result": true,
      "time": 0.039238929748535156,
      "error": null
    },
    "assert check_distinct((5, 7, 10, 9, 1, 6)) == True": {
      "result": true,
      "time": 0.04363441467285156,
      "error": null
    },
    "assert check_distinct((5, 6, 4, 7, 4, 3)) == False": {
      "result": true,
      "time": 0.038724422454833984,
      "error": null
    },
    "assert check_distinct((4, 5, 9, 7, 6, 8)) == True": {
      "result": true,
      "time": 0.04406023025512695,
      "error": null
    },
    "assert check_distinct((1, 9, 9, 10, 6, 8)) == False": {
      "result": true,
      "time": 0.034766197204589844,
      "error": null
    },
    "assert check_distinct((3, 9, 1, 7, 5, 6)) == True": {
      "result": true,
      "time": 0.03794264793395996,
      "error": null
    },
    "assert check_distinct((3, 2, 2, 6, 5, 4)) == False": {
      "result": true,
      "time": 0.03243613243103027,
      "error": null
    },
    "assert check_distinct((6, 1, 9, 8, 4, 3)) == True": {
      "result": true,
      "time": 0.04100346565246582,
      "error": null
    },
    "assert check_distinct((3, 1, 2, 10, 5, 8)) == True": {
      "result": true,
      "time": 0.03573012351989746,
      "error": null
    },
    "assert check_distinct((6, 8, 9, 4, 1, 3)) == True": {
      "result": true,
      "time": 0.03591442108154297,
      "error": null
    },
    "assert check_distinct((4, 3, 6, 9, 1, 8)) == True": {
      "result": true,
      "time": 0.03967428207397461,
      "error": null
    },
    "assert check_distinct((4, 2, 8, 7, 3, 1)) == True": {
      "result": true,
      "time": 0.03933119773864746,
      "error": null
    },
    "assert check_distinct((4, 3, 9, 4, 1, 8)) == False": {
      "result": true,
      "time": 0.03956794738769531,
      "error": null
    },
    "assert check_distinct((2, 5, 6, 10, 2, 9)) == False": {
      "result": true,
      "time": 0.0343625545501709,
      "error": null
    },
    "assert check_distinct((6, 7, 3, 2, 1, 1)) == False": {
      "result": true,
      "time": 0.03289055824279785,
      "error": null
    },
    "assert check_distinct((1, 9, 8, 9, 6, 4)) == False": {
      "result": true,
      "time": 0.03403162956237793,
      "error": null
    },
    "assert check_distinct((4, 5, 10, 9, 1, 6)) == True": {
      "result": true,
      "time": 0.033229827880859375,
      "error": null
    },
    "assert check_distinct((2, 5, 5, 8, 4, 9)) == False": {
      "result": true,
      "time": 0.033319950103759766,
      "error": null
    },
    "assert check_distinct((5, 7, 4, 7, 6, 6)) == False": {
      "result": true,
      "time": 0.028502464294433594,
      "error": null
    },
    "assert check_distinct((6, 7, 6, 8, 1, 9)) == False": {
      "result": true,
      "time": 0.03607940673828125,
      "error": null
    },
    "assert check_distinct((2, 8, 6, 11)) == True": {
      "result": true,
      "time": 0.036768198013305664,
      "error": null
    },
    "assert check_distinct((3, 3, 7, 6)) == False": {
      "result": true,
      "time": 0.03939461708068848,
      "error": null
    },
    "assert check_distinct((5, 6, 10, 9)) == True": {
      "result": true,
      "time": 0.03443312644958496,
      "error": null
    },
    "assert check_distinct((6, 4, 7, 10)) == True": {
      "result": true,
      "time": 0.04270744323730469,
      "error": null
    },
    "assert check_distinct((6, 4, 4, 6)) == False": {
      "result": true,
      "time": 0.03333568572998047,
      "error": null
    },
    "assert check_distinct((5, 5, 6, 9)) == False": {
      "result": true,
      "time": 0.037047386169433594,
      "error": null
    },
    "assert check_distinct((2, 6, 4, 2)) == False": {
      "result": true,
      "time": 0.03295421600341797,
      "error": null
    },
    "assert check_distinct((4, 3, 3, 2)) == False": {
      "result": true,
      "time": 0.030490636825561523,
      "error": null
    },
    "assert check_distinct((6, 7, 5, 6)) == False": {
      "result": true,
      "time": 0.0352635383605957,
      "error": null
    },
    "assert check_distinct((2, 9, 5, 10)) == True": {
      "result": true,
      "time": 0.03226470947265625,
      "error": null
    },
    "assert check_distinct((3, 8, 3, 5)) == False": {
      "result": true,
      "time": 0.03267240524291992,
      "error": null
    },
    "assert check_distinct((6, 5, 8, 1)) == True": {
      "result": true,
      "time": 0.02889084815979004,
      "error": null
    },
    "assert check_distinct((1, 1, 9, 8)) == False": {
      "result": true,
      "time": 0.03216743469238281,
      "error": null
    },
    "assert check_distinct((3, 5, 10, 2)) == True": {
      "result": true,
      "time": 0.04578709602355957,
      "error": null
    },
    "assert check_distinct((3, 2, 9, 2)) == False": {
      "result": true,
      "time": 0.03786158561706543,
      "error": null
    },
    "assert check_distinct((3, 8, 4, 4)) == False": {
      "result": true,
      "time": 0.03899383544921875,
      "error": null
    },
    "assert check_distinct((3, 2, 5, 7)) == True": {
      "result": true,
      "time": 0.03371262550354004,
      "error": null
    },
    "assert check_distinct((6, 2, 7, 10)) == True": {
      "result": true,
      "time": 0.03135061264038086,
      "error": null
    },
    "assert check_distinct((6, 7, 6, 3)) == False": {
      "result": true,
      "time": 0.03960108757019043,
      "error": null
    },
    "assert check_distinct((5, 4, 4, 4)) == False": {
      "result": true,
      "time": 0.03197669982910156,
      "error": null
    },
    "assert check_distinct((6, 3, 10, 11)) == True": {
      "result": true,
      "time": 0.03443002700805664,
      "error": null
    },
    "assert check_distinct((4, 9, 3, 11)) == True": {
      "result": true,
      "time": 0.0374147891998291,
      "error": null
    },
    "assert check_distinct((5, 2, 5, 8)) == False": {
      "result": true,
      "time": 0.03300285339355469,
      "error": null
    },
    "assert check_distinct((2, 6, 10, 6)) == False": {
      "result": true,
      "time": 0.03384208679199219,
      "error": null
    },
    "assert check_distinct((2, 3, 8, 10)) == True": {
      "result": true,
      "time": 0.03299260139465332,
      "error": null
    },
    "assert check_distinct((1, 2, 7, 3)) == True": {
      "result": true,
      "time": 0.03838944435119629,
      "error": null
    },
    "assert check_distinct((3, 4, 2, 8)) == True": {
      "result": true,
      "time": 0.03375053405761719,
      "error": null
    },
    "assert check_distinct((5, 6, 7, 10)) == True": {
      "result": true,
      "time": 0.03499865531921387,
      "error": null
    },
    "assert check_distinct((3, 8, 3, 10)) == False": {
      "result": true,
      "time": 0.031307220458984375,
      "error": null
    },
    "assert check_distinct((2, 4, 10, 3)) == True": {
      "result": true,
      "time": 0.029813766479492188,
      "error": null
    },
    "assert check_distinct((3, 1, 9, 11)) == True": {
      "result": true,
      "time": 0.03812098503112793,
      "error": null
    },
    "assert check_distinct((1, 1, 4, 4)) == False": {
      "result": true,
      "time": 0.03448677062988281,
      "error": null
    },
    "assert check_distinct((3, 7, 4, 7)) == False": {
      "result": true,
      "time": 0.036083221435546875,
      "error": null
    },
    "assert check_distinct((4, 8, 7, 10, 9)) == True": {
      "result": true,
      "time": 0.03732657432556152,
      "error": null
    },
    "assert check_distinct((1, 2, 2, 3, 1)) == False": {
      "result": true,
      "time": 0.03973650932312012,
      "error": null
    },
    "assert check_distinct((6, 5, 8, 4, 6)) == False": {
      "result": true,
      "time": 0.03742170333862305,
      "error": null
    },
    "assert check_distinct((5, 4, 1, 7, 6)) == True": {
      "result": true,
      "time": 0.03732419013977051,
      "error": null
    },
    "assert check_distinct((2, 2, 1, 8, 5)) == False": {
      "result": true,
      "time": 0.036255836486816406,
      "error": null
    },
    "assert check_distinct((7, 6, 3, 8, 11)) == True": {
      "result": true,
      "time": 0.046512603759765625,
      "error": null
    },
    "assert check_distinct((1, 5, 4, 9, 7)) == True": {
      "result": true,
      "time": 0.03507423400878906,
      "error": null
    },
    "assert check_distinct((4, 2, 3, 4, 1)) == False": {
      "result": true,
      "time": 0.03777885437011719,
      "error": null
    },
    "assert check_distinct((4, 4, 1, 4, 11)) == False": {
      "result": true,
      "time": 0.04531121253967285,
      "error": null
    },
    "assert check_distinct((7, 8, 8, 1, 3)) == False": {
      "result": true,
      "time": 0.0386357307434082,
      "error": null
    },
    "assert check_distinct((5, 5, 1, 2, 1)) == False": {
      "result": true,
      "time": 0.04460597038269043,
      "error": null
    },
    "assert check_distinct((4, 5, 5, 2, 10)) == False": {
      "result": true,
      "time": 0.036476850509643555,
      "error": null
    },
    "assert check_distinct((6, 5, 2, 5, 9)) == False": {
      "result": true,
      "time": 0.05226302146911621,
      "error": null
    },
    "assert check_distinct((1, 7, 7, 1, 7)) == False": {
      "result": true,
      "time": 0.05382943153381348,
      "error": null
    },
    "assert check_distinct((1, 2, 5, 7, 4)) == True": {
      "result": true,
      "time": 0.04905414581298828,
      "error": null
    },
    "assert check_distinct((1, 1, 2, 2, 5)) == False": {
      "result": true,
      "time": 0.047377586364746094,
      "error": null
    },
    "assert check_distinct((2, 4, 4, 7, 9)) == False": {
      "result": true,
      "time": 0.055759429931640625,
      "error": null
    },
    "assert check_distinct((1, 1, 5, 9, 9)) == False": {
      "result": true,
      "time": 0.04735898971557617,
      "error": null
    },
    "assert check_distinct((6, 8, 3, 4, 7)) == True": {
      "result": true,
      "time": 0.040221452713012695,
      "error": null
    },
    "assert check_distinct((4, 6, 3, 5, 9)) == True": {
      "result": true,
      "time": 0.051848411560058594,
      "error": null
    },
    "assert check_distinct((4, 5, 5, 2, 2)) == False": {
      "result": true,
      "time": 0.0463714599609375,
      "error": null
    },
    "assert check_distinct((2, 8, 7, 3, 5)) == True": {
      "result": true,
      "time": 0.05572199821472168,
      "error": null
    },
    "assert check_distinct((5, 2, 5, 6, 1)) == False": {
      "result": true,
      "time": 0.04443097114562988,
      "error": null
    },
    "assert check_distinct((4, 7, 2, 9, 1)) == True": {
      "result": true,
      "time": 0.05501914024353027,
      "error": null
    },
    "assert check_distinct((7, 8, 2, 9, 3)) == True": {
      "result": true,
      "time": 0.04633331298828125,
      "error": null
    },
    "assert check_distinct((6, 7, 3, 1, 5)) == True": {
      "result": true,
      "time": 0.04761910438537598,
      "error": null
    },
    "assert check_distinct((4, 2, 6, 9, 5)) == True": {
      "result": true,
      "time": 0.044656991958618164,
      "error": null
    },
    "assert check_distinct((4, 8, 5, 8, 5)) == False": {
      "result": true,
      "time": 0.042856454849243164,
      "error": null
    },
    "assert check_distinct((5, 3, 7, 6, 3)) == False": {
      "result": true,
      "time": 0.05465364456176758,
      "error": null
    },
    "assert check_distinct((5, 3, 1, 10, 10)) == False": {
      "result": true,
      "time": 0.03839683532714844,
      "error": null
    },
    "assert check_distinct((2, 6, 8, 8, 5)) == False": {
      "result": true,
      "time": 0.04661107063293457,
      "error": null
    },
    "assert check_distinct((2, 7, 1, 5, 11)) == True": {
      "result": true,
      "time": 0.05363821983337402,
      "error": null
    },
    "assert check_distinct((6, 7, 1, 10, 6)) == False": {
      "result": true,
      "time": 0.05110049247741699,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}