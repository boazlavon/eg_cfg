{
  "code": "def decimal_To_Binary(n):\n    return bin(n).replace(\"0b\", \"\")",
  "results": {
    "assert decimal_To_Binary(10) == 1010": {
      "result": false,
      "time": 0.04100847244262695,
      "error": null
    },
    "assert decimal_To_Binary(1) == 1": {
      "result": false,
      "time": 0.031522274017333984,
      "error": null
    },
    "assert decimal_To_Binary(20) == 10100": {
      "result": false,
      "time": 0.03665590286254883,
      "error": null
    },
    "assert decimal_To_Binary(7) == 111": {
      "result": false,
      "time": 0.03577589988708496,
      "error": null
    },
    "assert decimal_To_Binary(11) == 1011": {
      "result": false,
      "time": 0.03730583190917969,
      "error": null
    },
    "assert decimal_To_Binary(12) == 1100": {
      "result": false,
      "time": 0.038397789001464844,
      "error": null
    },
    "assert decimal_To_Binary(13) == 1101": {
      "result": false,
      "time": 0.03766036033630371,
      "error": null
    },
    "assert decimal_To_Binary(6) == 110": {
      "result": false,
      "time": 0.035874128341674805,
      "error": null
    },
    "assert decimal_To_Binary(14) == 1110": {
      "result": false,
      "time": 0.03953385353088379,
      "error": null
    },
    "assert decimal_To_Binary(5) == 101": {
      "result": false,
      "time": 0.04005694389343262,
      "error": null
    },
    "assert decimal_To_Binary(15) == 1111": {
      "result": false,
      "time": 0.044689178466796875,
      "error": null
    },
    "assert decimal_To_Binary(8) == 1000": {
      "result": false,
      "time": 0.03734087944030762,
      "error": null
    },
    "assert decimal_To_Binary(9) == 1001": {
      "result": false,
      "time": 0.044678449630737305,
      "error": null
    },
    "assert decimal_To_Binary(2) == 10": {
      "result": false,
      "time": 0.046938180923461914,
      "error": null
    },
    "assert decimal_To_Binary(3) == 11": {
      "result": false,
      "time": 0.04183077812194824,
      "error": null
    },
    "assert decimal_To_Binary(4) == 100": {
      "result": false,
      "time": 0.039879798889160156,
      "error": null
    },
    "assert decimal_To_Binary(23) == 10111": {
      "result": false,
      "time": 0.0389409065246582,
      "error": null
    },
    "assert decimal_To_Binary(25) == 11001": {
      "result": false,
      "time": 0.04433870315551758,
      "error": null
    },
    "assert decimal_To_Binary(18) == 10010": {
      "result": false,
      "time": 0.04790830612182617,
      "error": null
    },
    "assert decimal_To_Binary(17) == 10001": {
      "result": false,
      "time": 0.028609275817871094,
      "error": null
    },
    "assert decimal_To_Binary(21) == 10101": {
      "result": false,
      "time": 0.040261268615722656,
      "error": null
    },
    "assert decimal_To_Binary(22) == 10110": {
      "result": false,
      "time": 0.03412151336669922,
      "error": null
    },
    "assert decimal_To_Binary(19) == 10011": {
      "result": false,
      "time": 0.03903365135192871,
      "error": null
    },
    "assert decimal_To_Binary(16) == 10000": {
      "result": false,
      "time": 0.03274822235107422,
      "error": null
    },
    "assert decimal_To_Binary(24) == 11000": {
      "result": false,
      "time": 0.04330873489379883,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": "",
  "has_testcase_error": false
}