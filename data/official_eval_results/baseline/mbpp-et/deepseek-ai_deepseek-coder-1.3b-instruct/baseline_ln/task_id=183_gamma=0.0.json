{
  "code": "def count_pairs(arr, k, n):\n    count = 0\n    arr.sort()\n    for i in range(n):\n        for j in range(i+1, n):\n            if abs(arr[i] - arr[j]) == k:\n                count += 1\n    return count",
  "results": {
    "assert count_pairs([1, 5, 3, 4, 2], 5, 3) == 2": {
      "result": false,
      "time": 0.04133129119873047,
      "error": null
    },
    "assert count_pairs([8, 12, 16, 4, 0, 20], 6, 4) == 5": {
      "result": false,
      "time": 0.03905320167541504,
      "error": null
    },
    "assert count_pairs([2, 4, 1, 3, 4], 5, 2) == 3": {
      "result": false,
      "time": 0.033766746520996094,
      "error": null
    },
    "assert count_pairs([6, 5, 4, 6, 5], 1, 7) == 0": {
      "result": false,
      "time": 0.03507280349731445,
      "error": null
    },
    "assert count_pairs([2, 4, 1, 5, 5], 3, 5) == 0": {
      "result": false,
      "time": 0.04210615158081055,
      "error": null
    },
    "assert count_pairs([6, 2, 4, 8, 4], 1, 8) == 0": {
      "result": false,
      "time": 0.03303980827331543,
      "error": null
    },
    "assert count_pairs([4, 6, 8, 2, 7], 3, 7) == 0": {
      "result": false,
      "time": 0.032941341400146484,
      "error": null
    },
    "assert count_pairs([2, 5, 4, 1, 3], 1, 7) == 0": {
      "result": false,
      "time": 0.04201221466064453,
      "error": null
    },
    "assert count_pairs([5, 5, 7, 5, 7], 5, 4) == 0": {
      "result": true,
      "time": 0.03610348701477051,
      "error": null
    },
    "assert count_pairs([6, 2, 5, 3, 3], 2, 6) == 0": {
      "result": false,
      "time": 0.03737449645996094,
      "error": null
    },
    "assert count_pairs([3, 7, 1, 4, 5], 4, 6) == 1": {
      "result": false,
      "time": 0.034813642501831055,
      "error": null
    },
    "assert count_pairs([3, 2, 6, 7, 2], 2, 1) == 1": {
      "result": false,
      "time": 0.037371158599853516,
      "error": null
    },
    "assert count_pairs([3, 3, 8, 8, 4], 3, 7) == 0": {
      "result": false,
      "time": 0.03731679916381836,
      "error": null
    },
    "assert count_pairs([6, 8, 5, 5, 7], 5, 1) == 4": {
      "result": false,
      "time": 0.0411982536315918,
      "error": null
    },
    "assert count_pairs([1, 2, 7, 2, 2], 2, 6) == 0": {
      "result": false,
      "time": 0.03542041778564453,
      "error": null
    },
    "assert count_pairs([3, 2, 2, 1, 4], 5, 4) == 0": {
      "result": true,
      "time": 0.03682422637939453,
      "error": null
    },
    "assert count_pairs([1, 4, 7, 9, 5], 2, 7) == 0": {
      "result": false,
      "time": 0.03554344177246094,
      "error": null
    },
    "assert count_pairs([2, 3, 2, 1, 1], 5, 8) == 0": {
      "result": false,
      "time": 0.04165530204772949,
      "error": null
    },
    "assert count_pairs([3, 8, 5, 1, 2], 5, 6) == 1": {
      "result": false,
      "time": 0.03304600715637207,
      "error": null
    },
    "assert count_pairs([1, 8, 3, 9, 4], 4, 7) == 1": {
      "result": false,
      "time": 0.0368189811706543,
      "error": null
    },
    "assert count_pairs([6, 8, 5, 5, 3], 4, 1) == 2": {
      "result": false,
      "time": 0.035655975341796875,
      "error": null
    },
    "assert count_pairs([4, 5, 1, 5, 7], 3, 2) == 0": {
      "result": false,
      "time": 0.040798187255859375,
      "error": null
    },
    "assert count_pairs([1, 1, 3, 8, 7], 3, 7) == 0": {
      "result": false,
      "time": 0.03987240791320801,
      "error": null
    },
    "assert count_pairs([6, 6, 5, 8, 7], 2, 2) == 0": {
      "result": true,
      "time": 0.03451991081237793,
      "error": null
    },
    "assert count_pairs([2, 8, 6, 6, 3], 2, 6) == 1": {
      "result": false,
      "time": 0.04137849807739258,
      "error": null
    },
    "assert count_pairs([6, 4, 7, 7, 5], 3, 3) == 1": {
      "result": false,
      "time": 0.03762030601501465,
      "error": null
    },
    "assert count_pairs([1, 10, 1, 5, 5], 2, 7) == 0": {
      "result": false,
      "time": 0.041853904724121094,
      "error": null
    },
    "assert count_pairs([1, 8, 6, 3, 1], 3, 4) == 0": {
      "result": false,
      "time": 0.03763127326965332,
      "error": null
    },
    "assert count_pairs([6, 4, 6, 4, 3], 5, 3) == 2": {
      "result": false,
      "time": 0.03831148147583008,
      "error": null
    },
    "assert count_pairs([2, 10, 6, 8, 2], 3, 6) == 0": {
      "result": false,
      "time": 0.03146791458129883,
      "error": null
    },
    "assert count_pairs([1, 10, 7, 6, 5], 3, 3) == 1": {
      "result": false,
      "time": 0.042269229888916016,
      "error": null
    },
    "assert count_pairs([6, 2, 5, 1, 2], 4, 8) == 0": {
      "result": false,
      "time": 0.03319573402404785,
      "error": null
    },
    "assert count_pairs([4, 6, 4, 1, 4], 4, 1) == 0": {
      "result": true,
      "time": 0.03388381004333496,
      "error": null
    },
    "assert count_pairs([4, 5, 4, 3, 4], 4, 5) == 0": {
      "result": true,
      "time": 0.03262639045715332,
      "error": null
    },
    "assert count_pairs([3, 6, 3, 7, 2], 5, 5) == 1": {
      "result": true,
      "time": 0.04082942008972168,
      "error": null
    },
    "assert count_pairs([3, 9, 3, 6, 5], 1, 3) == 0": {
      "result": true,
      "time": 0.03714776039123535,
      "error": null
    },
    "assert count_pairs([11, 15, 15, 1, 5, 18], 6, 2) == 0": {
      "result": true,
      "time": 0.03334307670593262,
      "error": null
    },
    "assert count_pairs([12, 14, 17, 3, 1, 25], 1, 6) == 0": {
      "result": true,
      "time": 0.04049372673034668,
      "error": null
    },
    "assert count_pairs([6, 7, 17, 2, 4, 24], 5, 1) == 1": {
      "result": false,
      "time": 0.0367884635925293,
      "error": null
    },
    "assert count_pairs([6, 13, 20, 7, 3, 22], 6, 2) == 1": {
      "result": false,
      "time": 0.0351409912109375,
      "error": null
    },
    "assert count_pairs([8, 16, 17, 3, 5, 16], 2, 6) == 0": {
      "result": false,
      "time": 0.03754377365112305,
      "error": null
    },
    "assert count_pairs([12, 17, 15, 7, 5, 17], 1, 2) == 0": {
      "result": true,
      "time": 0.039873361587524414,
      "error": null
    },
    "assert count_pairs([7, 10, 20, 3, 5, 21], 5, 1) == 0": {
      "result": true,
      "time": 0.04527759552001953,
      "error": null
    },
    "assert count_pairs([5, 9, 18, 7, 4, 18], 4, 4) == 1": {
      "result": true,
      "time": 0.04401755332946777,
      "error": null
    },
    "assert count_pairs([7, 9, 14, 1, 3, 25], 6, 2) == 2": {
      "result": false,
      "time": 0.04028749465942383,
      "error": null
    },
    "assert count_pairs([10, 15, 14, 2, 3, 21], 4, 4) == 1": {
      "result": true,
      "time": 0.03380990028381348,
      "error": null
    },
    "assert count_pairs([6, 7, 18, 2, 4, 23], 2, 7) == 0": {
      "result": false,
      "time": 0.04226350784301758,
      "error": null
    },
    "assert count_pairs([8, 7, 17, 1, 4, 23], 1, 8) == 0": {
      "result": false,
      "time": 0.038594961166381836,
      "error": null
    },
    "assert count_pairs([3, 15, 19, 1, 3, 15], 6, 7) == 0": {
      "result": false,
      "time": 0.034032344818115234,
      "error": null
    },
    "assert count_pairs([3, 10, 15, 9, 3, 18], 3, 6) == 0": {
      "result": false,
      "time": 0.034372568130493164,
      "error": null
    },
    "assert count_pairs([11, 9, 14, 3, 4, 21], 4, 9) == 0": {
      "result": false,
      "time": 0.03332948684692383,
      "error": null
    },
    "assert count_pairs([11, 17, 19, 2, 2, 17], 1, 9) == 0": {
      "result": false,
      "time": 0.03794360160827637,
      "error": null
    },
    "assert count_pairs([12, 14, 19, 6, 4, 18], 5, 4) == 0": {
      "result": true,
      "time": 0.03657793998718262,
      "error": null
    },
    "assert count_pairs([11, 8, 19, 6, 4, 22], 1, 6) == 0": {
      "result": true,
      "time": 0.03657388687133789,
      "error": null
    },
    "assert count_pairs([5, 13, 13, 2, 2, 25], 1, 8) == 0": {
      "result": false,
      "time": 0.033562660217285156,
      "error": null
    },
    "assert count_pairs([4, 7, 12, 4, 1, 15], 4, 1) == 0": {
      "result": true,
      "time": 0.034392356872558594,
      "error": null
    },
    "assert count_pairs([13, 8, 15, 2, 3, 16], 2, 9) == 0": {
      "result": false,
      "time": 0.03478097915649414,
      "error": null
    },
    "assert count_pairs([7, 7, 20, 5, 3, 24], 1, 5) == 0": {
      "result": true,
      "time": 0.034303903579711914,
      "error": null
    },
    "assert count_pairs([12, 12, 21, 9, 3, 16], 1, 4) == 0": {
      "result": true,
      "time": 0.034967660903930664,
      "error": null
    },
    "assert count_pairs([9, 10, 17, 9, 4, 24], 6, 6) == 1": {
      "result": true,
      "time": 0.036650657653808594,
      "error": null
    },
    "assert count_pairs([9, 10, 21, 3, 1, 23], 2, 3) == 0": {
      "result": false,
      "time": 0.04374814033508301,
      "error": null
    },
    "assert count_pairs([8, 17, 19, 5, 1, 25], 4, 4) == 0": {
      "result": false,
      "time": 0.04088878631591797,
      "error": null
    },
    "assert count_pairs([3, 13, 20, 1, 2, 21], 4, 2) == 1": {
      "result": false,
      "time": 0.04249405860900879,
      "error": null
    },
    "assert count_pairs([12, 14, 20, 6, 2, 21], 5, 8) == 2": {
      "result": false,
      "time": 0.04343080520629883,
      "error": null
    },
    "assert count_pairs([5, 8, 18, 2, 5, 19], 2, 6) == 0": {
      "result": true,
      "time": 0.04221963882446289,
      "error": null
    },
    "assert count_pairs([10, 13, 20, 1, 4, 17], 6, 2) == 0": {
      "result": true,
      "time": 0.038851022720336914,
      "error": null
    },
    "assert count_pairs([13, 12, 19, 7, 5, 16], 4, 1) == 1": {
      "result": false,
      "time": 0.04276728630065918,
      "error": null
    },
    "assert count_pairs([6, 17, 13, 3, 2, 24], 4, 7) == 1": {
      "result": false,
      "time": 0.04112362861633301,
      "error": null
    },
    "assert count_pairs([8, 12, 12, 1, 2, 24], 5, 3) == 0": {
      "result": true,
      "time": 0.04069185256958008,
      "error": null
    },
    "assert count_pairs([4, 4, 5, 1, 3], 3, 5) == 0": {
      "result": false,
      "time": 0.03939223289489746,
      "error": null
    },
    "assert count_pairs([4, 6, 5, 3, 8], 1, 1) == 0": {
      "result": true,
      "time": 0.04055523872375488,
      "error": null
    },
    "assert count_pairs([6, 3, 5, 1, 7], 4, 4) == 1": {
      "result": true,
      "time": 0.04594087600708008,
      "error": null
    },
    "assert count_pairs([1, 5, 3, 1, 4], 2, 7) == 0": {
      "result": false,
      "time": 0.041236162185668945,
      "error": null
    },
    "assert count_pairs([6, 7, 6, 6, 2], 5, 2) == 0": {
      "result": true,
      "time": 0.039878129959106445,
      "error": null
    },
    "assert count_pairs([1, 9, 3, 3, 9], 5, 6) == 4": {
      "result": false,
      "time": 0.042578697204589844,
      "error": null
    },
    "assert count_pairs([4, 2, 6, 4, 3], 1, 4) == 0": {
      "result": false,
      "time": 0.03618001937866211,
      "error": null
    },
    "assert count_pairs([2, 5, 3, 6, 2], 4, 6) == 0": {
      "result": false,
      "time": 0.03889107704162598,
      "error": null
    },
    "assert count_pairs([3, 2, 3, 3, 1], 5, 3) == 0": {
      "result": true,
      "time": 0.0483243465423584,
      "error": null
    },
    "assert count_pairs([7, 4, 2, 6, 3], 2, 1) == 0": {
      "result": true,
      "time": 0.040107011795043945,
      "error": null
    },
    "assert count_pairs([6, 5, 2, 3, 2], 3, 7) == 0": {
      "result": false,
      "time": 0.039177656173706055,
      "error": null
    },
    "assert count_pairs([3, 2, 6, 6, 2], 1, 6) == 0": {
      "result": false,
      "time": 0.039633989334106445,
      "error": null
    },
    "assert count_pairs([2, 7, 6, 2, 7], 3, 7) == 0": {
      "result": false,
      "time": 0.04208803176879883,
      "error": null
    },
    "assert count_pairs([3, 1, 6, 8, 2], 2, 1) == 0": {
      "result": true,
      "time": 0.041693687438964844,
      "error": null
    },
    "assert count_pairs([3, 9, 4, 5, 4], 3, 4) == 0": {
      "result": true,
      "time": 0.04388308525085449,
      "error": null
    },
    "assert count_pairs([4, 2, 1, 6, 6], 1, 5) == 0": {
      "result": false,
      "time": 0.03350543975830078,
      "error": null
    },
    "assert count_pairs([2, 3, 2, 1, 2], 5, 6) == 0": {
      "result": false,
      "time": 0.046215057373046875,
      "error": null
    },
    "assert count_pairs([7, 4, 6, 1, 2], 5, 6) == 1": {
      "result": false,
      "time": 0.045340538024902344,
      "error": null
    },
    "assert count_pairs([7, 2, 5, 7, 6], 5, 7) == 0": {
      "result": false,
      "time": 0.04867100715637207,
      "error": null
    },
    "assert count_pairs([1, 2, 1, 6, 8], 3, 7) == 0": {
      "result": false,
      "time": 0.03783297538757324,
      "error": null
    },
    "assert count_pairs([4, 2, 2, 5, 9], 1, 6) == 0": {
      "result": false,
      "time": 0.08223414421081543,
      "error": null
    },
    "assert count_pairs([4, 8, 6, 6, 4], 3, 3) == 0": {
      "result": true,
      "time": 0.044083595275878906,
      "error": null
    },
    "assert count_pairs([4, 9, 3, 7, 4], 5, 1) == 2": {
      "result": false,
      "time": 0.04948306083679199,
      "error": null
    },
    "assert count_pairs([7, 3, 5, 7, 1], 4, 2) == 3": {
      "result": false,
      "time": 0.04153251647949219,
      "error": null
    },
    "assert count_pairs([1, 2, 6, 5, 6], 5, 7) == 0": {
      "result": false,
      "time": 0.04288482666015625,
      "error": null
    },
    "assert count_pairs([7, 2, 3, 5, 4], 3, 3) == 0": {
      "result": true,
      "time": 0.040090084075927734,
      "error": null
    },
    "assert count_pairs([4, 6, 1, 1, 2], 4, 3) == 2": {
      "result": false,
      "time": 0.04359912872314453,
      "error": null
    },
    "assert count_pairs([7, 5, 3, 2, 1], 3, 6) == 0": {
      "result": false,
      "time": 0.044261932373046875,
      "error": null
    },
    "assert count_pairs([7, 2, 3, 8, 3], 4, 5) == 2": {
      "result": true,
      "time": 0.04443478584289551,
      "error": null
    },
    "assert count_pairs([5, 6, 3, 3, 7], 4, 1) == 1": {
      "result": false,
      "time": 0.042386531829833984,
      "error": null
    },
    "assert count_pairs([7, 4, 4, 4, 5], 5, 6) == 0": {
      "result": false,
      "time": 0.036628007888793945,
      "error": null
    },
    "assert count_pairs([5, 3, 2, 7, 4], 3, 2) == 1": {
      "result": false,
      "time": 0.04618024826049805,
      "error": null
    },
    "assert count_pairs([1, 5, 6, 6, 6], 3, 1) == 1": {
      "result": false,
      "time": 0.050336599349975586,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.3137254901960784,
  "general_error": "",
  "has_testcase_error": false
}