{
  "code": "def count_Intgral_Points(x1, y1, x2, y2):\n    count = 0\n    for x in range(x1, x2+1):\n        for y in range(y1, y2+1):\n            if x == y:\n                count += 1\n    return count",
  "results": {
    "assert count_Intgral_Points(1,1,4,4) == 4": {
      "result": true,
      "time": 0.0393984317779541,
      "error": null
    },
    "assert count_Intgral_Points(1,2,1,2) == 1": {
      "result": false,
      "time": 0.039502859115600586,
      "error": null
    },
    "assert count_Intgral_Points(4,2,6,4) == 1": {
      "result": true,
      "time": 0.042574167251586914,
      "error": null
    },
    "assert count_Intgral_Points(5, 2, 3, 3) == 0": {
      "result": true,
      "time": 0.03466200828552246,
      "error": null
    },
    "assert count_Intgral_Points(3, 3, 9, 3) == -5": {
      "result": false,
      "time": 0.037865638732910156,
      "error": null
    },
    "assert count_Intgral_Points(4, 4, 6, 6) == 1": {
      "result": false,
      "time": 0.03815865516662598,
      "error": null
    },
    "assert count_Intgral_Points(1, 2, 2, 5) == 0": {
      "result": false,
      "time": 0.04392099380493164,
      "error": null
    },
    "assert count_Intgral_Points(4, 3, 2, 8) == -12": {
      "result": false,
      "time": 0.04247307777404785,
      "error": null
    },
    "assert count_Intgral_Points(1, 4, 2, 1) == 0": {
      "result": true,
      "time": 0.037644147872924805,
      "error": null
    },
    "assert count_Intgral_Points(6, 4, 3, 5) == 0": {
      "result": true,
      "time": 0.04695415496826172,
      "error": null
    },
    "assert count_Intgral_Points(3, 1, 3, 3) == -1": {
      "result": false,
      "time": 0.04408621788024902,
      "error": null
    },
    "assert count_Intgral_Points(4, 1, 7, 7) == 10": {
      "result": false,
      "time": 0.0390779972076416,
      "error": null
    },
    "assert count_Intgral_Points(4, 5, 1, 2) == 16": {
      "result": false,
      "time": 0.04394388198852539,
      "error": null
    },
    "assert count_Intgral_Points(6, 4, 9, 8) == 6": {
      "result": false,
      "time": 0.04192090034484863,
      "error": null
    },
    "assert count_Intgral_Points(5, 4, 7, 8) == 3": {
      "result": true,
      "time": 0.034922122955322266,
      "error": null
    },
    "assert count_Intgral_Points(6, 1, 2, 3) == -5": {
      "result": false,
      "time": 0.041387319564819336,
      "error": null
    },
    "assert count_Intgral_Points(5, 5, 2, 7) == -4": {
      "result": false,
      "time": 0.04494309425354004,
      "error": null
    },
    "assert count_Intgral_Points(4, 1, 7, 2) == 0": {
      "result": true,
      "time": 0.04193997383117676,
      "error": null
    },
    "assert count_Intgral_Points(5, 5, 6, 4) == 0": {
      "result": true,
      "time": 0.04568195343017578,
      "error": null
    },
    "assert count_Intgral_Points(5, 6, 8, 9) == 4": {
      "result": false,
      "time": 0.04170060157775879,
      "error": null
    },
    "assert count_Intgral_Points(2, 3, 1, 4) == 0": {
      "result": true,
      "time": 0.03664135932922363,
      "error": null
    },
    "assert count_Intgral_Points(5, 6, 7, 4) == -3": {
      "result": false,
      "time": 0.04215407371520996,
      "error": null
    },
    "assert count_Intgral_Points(6, 6, 9, 2) == -10": {
      "result": false,
      "time": 0.04476761817932129,
      "error": null
    },
    "assert count_Intgral_Points(5, 1, 7, 6) == 4": {
      "result": false,
      "time": 0.04330277442932129,
      "error": null
    },
    "assert count_Intgral_Points(5, 2, 6, 5) == 0": {
      "result": false,
      "time": 0.04145455360412598,
      "error": null
    },
    "assert count_Intgral_Points(1, 3, 4, 8) == 8": {
      "result": false,
      "time": 0.03996872901916504,
      "error": null
    },
    "assert count_Intgral_Points(5, 6, 4, 3) == 8": {
      "result": false,
      "time": 0.034193992614746094,
      "error": null
    },
    "assert count_Intgral_Points(1, 2, 4, 7) == 8": {
      "result": false,
      "time": 0.04920005798339844,
      "error": null
    },
    "assert count_Intgral_Points(5, 1, 6, 1) == 0": {
      "result": true,
      "time": 0.04297995567321777,
      "error": null
    },
    "assert count_Intgral_Points(1, 1, 9, 6) == 28": {
      "result": false,
      "time": 0.04076051712036133,
      "error": null
    },
    "assert count_Intgral_Points(5, 4, 7, 6) == 1": {
      "result": false,
      "time": 0.0418703556060791,
      "error": null
    },
    "assert count_Intgral_Points(4, 2, 9, 3) == 0": {
      "result": true,
      "time": 0.0406346321105957,
      "error": null
    },
    "assert count_Intgral_Points(4, 6, 4, 6) == 1": {
      "result": false,
      "time": 0.0436558723449707,
      "error": null
    },
    "assert count_Intgral_Points(1, 6, 1, 3) == 4": {
      "result": false,
      "time": 0.045380353927612305,
      "error": null
    },
    "assert count_Intgral_Points(4, 5, 9, 3) == -12": {
      "result": false,
      "time": 0.04324936866760254,
      "error": null
    },
    "assert count_Intgral_Points(3, 3, 6, 7) == 6": {
      "result": false,
      "time": 0.04506373405456543,
      "error": null
    },
    "assert count_Intgral_Points(5, 4, 5, 4) == 1": {
      "result": false,
      "time": 0.03436398506164551,
      "error": null
    },
    "assert count_Intgral_Points(5, 7, 4, 1) == 14": {
      "result": false,
      "time": 0.05346798896789551,
      "error": null
    },
    "assert count_Intgral_Points(5, 2, 2, 7) == -16": {
      "result": false,
      "time": 0.03969717025756836,
      "error": null
    },
    "assert count_Intgral_Points(1, 7, 4, 1) == -14": {
      "result": false,
      "time": 0.04036307334899902,
      "error": null
    },
    "assert count_Intgral_Points(1, 5, 4, 1) == -10": {
      "result": false,
      "time": 0.046449899673461914,
      "error": null
    },
    "assert count_Intgral_Points(5, 7, 3, 2) == 18": {
      "result": false,
      "time": 0.04685616493225098,
      "error": null
    },
    "assert count_Intgral_Points(3, 5, 2, 5) == 2": {
      "result": false,
      "time": 0.04397177696228027,
      "error": null
    },
    "assert count_Intgral_Points(2, 7, 2, 6) == 2": {
      "result": false,
      "time": 0.04122042655944824,
      "error": null
    },
    "assert count_Intgral_Points(2, 7, 5, 6) == -4": {
      "result": false,
      "time": 0.04779314994812012,
      "error": null
    },
    "assert count_Intgral_Points(1, 3, 2, 6) == 0": {
      "result": true,
      "time": 0.04684638977050781,
      "error": null
    },
    "assert count_Intgral_Points(1, 4, 5, 6) == 3": {
      "result": false,
      "time": 0.042118072509765625,
      "error": null
    },
    "assert count_Intgral_Points(3, 1, 4, 3) == 0": {
      "result": false,
      "time": 0.040022850036621094,
      "error": null
    },
    "assert count_Intgral_Points(5, 7, 2, 4) == 16": {
      "result": false,
      "time": 0.04182171821594238,
      "error": null
    },
    "assert count_Intgral_Points(4, 4, 5, 3) == 0": {
      "result": true,
      "time": 0.04116082191467285,
      "error": null
    },
    "assert count_Intgral_Points(4, 1, 1, 5) == -12": {
      "result": false,
      "time": 0.04401397705078125,
      "error": null
    },
    "assert count_Intgral_Points(5, 1, 4, 1) == 2": {
      "result": false,
      "time": 0.0459599494934082,
      "error": null
    },
    "assert count_Intgral_Points(4, 1, 6, 7) == 5": {
      "result": false,
      "time": 0.03595280647277832,
      "error": null
    },
    "assert count_Intgral_Points(2, 2, 6, 2) == -3": {
      "result": false,
      "time": 0.03796100616455078,
      "error": null
    },
    "assert count_Intgral_Points(3, 1, 5, 4) == 2": {
      "result": true,
      "time": 0.03831815719604492,
      "error": null
    },
    "assert count_Intgral_Points(6, 5, 5, 4) == 4": {
      "result": false,
      "time": 0.04341864585876465,
      "error": null
    },
    "assert count_Intgral_Points(5, 3, 5, 2) == 2": {
      "result": false,
      "time": 0.043172359466552734,
      "error": null
    },
    "assert count_Intgral_Points(4, 5, 3, 1) == 10": {
      "result": false,
      "time": 0.04100751876831055,
      "error": null
    },
    "assert count_Intgral_Points(1, 5, 4, 3) == -6": {
      "result": false,
      "time": 0.04320192337036133,
      "error": null
    },
    "assert count_Intgral_Points(5, 4, 2, 6) == -4": {
      "result": false,
      "time": 0.04340314865112305,
      "error": null
    },
    "assert count_Intgral_Points(4, 7, 5, 7) == 0": {
      "result": true,
      "time": 0.04098796844482422,
      "error": null
    },
    "assert count_Intgral_Points(5, 2, 6, 6) == 0": {
      "result": false,
      "time": 0.03757119178771973,
      "error": null
    },
    "assert count_Intgral_Points(2, 5, 4, 4) == -2": {
      "result": false,
      "time": 0.041034698486328125,
      "error": null
    },
    "assert count_Intgral_Points(2, 6, 3, 3) == 0": {
      "result": true,
      "time": 0.04945254325866699,
      "error": null
    },
    "assert count_Intgral_Points(3, 7, 6, 6) == -4": {
      "result": false,
      "time": 0.041562795639038086,
      "error": null
    },
    "assert count_Intgral_Points(4, 5, 5, 4) == 0": {
      "result": true,
      "time": 0.039641618728637695,
      "error": null
    },
    "assert count_Intgral_Points(1, 1, 2, 2) == 0": {
      "result": false,
      "time": 0.04361915588378906,
      "error": null
    },
    "assert count_Intgral_Points(2, 4, 1, 6) == -2": {
      "result": false,
      "time": 0.042353153228759766,
      "error": null
    },
    "assert count_Intgral_Points(8, 5, 1, 4) == 16": {
      "result": false,
      "time": 0.04286384582519531,
      "error": null
    },
    "assert count_Intgral_Points(1, 5, 6, 9) == 12": {
      "result": false,
      "time": 0.033928632736206055,
      "error": null
    },
    "assert count_Intgral_Points(2, 4, 11, 6) == 8": {
      "result": false,
      "time": 0.04477119445800781,
      "error": null
    },
    "assert count_Intgral_Points(1, 6, 3, 3) == -4": {
      "result": false,
      "time": 0.044942617416381836,
      "error": null
    },
    "assert count_Intgral_Points(9, 3, 6, 9) == -20": {
      "result": false,
      "time": 0.04674839973449707,
      "error": null
    },
    "assert count_Intgral_Points(6, 6, 9, 6) == -2": {
      "result": false,
      "time": 0.04545760154724121,
      "error": null
    },
    "assert count_Intgral_Points(4, 5, 2, 9) == -9": {
      "result": false,
      "time": 0.04147648811340332,
      "error": null
    },
    "assert count_Intgral_Points(8, 7, 3, 3) == 30": {
      "result": false,
      "time": 0.04369997978210449,
      "error": null
    },
    "assert count_Intgral_Points(3, 7, 1, 3) == 15": {
      "result": false,
      "time": 0.043382883071899414,
      "error": null
    },
    "assert count_Intgral_Points(1, 5, 5, 8) == 6": {
      "result": false,
      "time": 0.04625058174133301,
      "error": null
    },
    "assert count_Intgral_Points(9, 6, 11, 3) == -4": {
      "result": false,
      "time": 0.0489501953125,
      "error": null
    },
    "assert count_Intgral_Points(3, 4, 8, 8) == 12": {
      "result": false,
      "time": 0.03949284553527832,
      "error": null
    },
    "assert count_Intgral_Points(7, 3, 3, 9) == -25": {
      "result": false,
      "time": 0.047538042068481445,
      "error": null
    },
    "assert count_Intgral_Points(2, 1, 8, 7) == 25": {
      "result": false,
      "time": 0.048139095306396484,
      "error": null
    },
    "assert count_Intgral_Points(4, 1, 6, 1) == -1": {
      "result": false,
      "time": 0.04589128494262695,
      "error": null
    },
    "assert count_Intgral_Points(1, 1, 8, 2) == 0": {
      "result": false,
      "time": 0.044046640396118164,
      "error": null
    },
    "assert count_Intgral_Points(4, 1, 2, 1) == 3": {
      "result": false,
      "time": 0.03911089897155762,
      "error": null
    },
    "assert count_Intgral_Points(9, 1, 5, 3) == -5": {
      "result": false,
      "time": 0.04129767417907715,
      "error": null
    },
    "assert count_Intgral_Points(4, 6, 6, 3) == -4": {
      "result": false,
      "time": 0.038463592529296875,
      "error": null
    },
    "assert count_Intgral_Points(9, 4, 9, 5) == 0": {
      "result": true,
      "time": 0.04649710655212402,
      "error": null
    },
    "assert count_Intgral_Points(6, 4, 8, 3) == -2": {
      "result": false,
      "time": 0.06141948699951172,
      "error": null
    },
    "assert count_Intgral_Points(2, 5, 7, 9) == 12": {
      "result": false,
      "time": 0.061074256896972656,
      "error": null
    },
    "assert count_Intgral_Points(3, 4, 10, 8) == 18": {
      "result": false,
      "time": 0.05671834945678711,
      "error": null
    },
    "assert count_Intgral_Points(3, 6, 9, 4) == -15": {
      "result": false,
      "time": 0.05224752426147461,
      "error": null
    },
    "assert count_Intgral_Points(7, 5, 6, 6) == 0": {
      "result": true,
      "time": 0.051096200942993164,
      "error": null
    },
    "assert count_Intgral_Points(4, 6, 9, 6) == -4": {
      "result": false,
      "time": 0.05654597282409668,
      "error": null
    },
    "assert count_Intgral_Points(7, 5, 8, 3) == 0": {
      "result": true,
      "time": 0.04908275604248047,
      "error": null
    },
    "assert count_Intgral_Points(7, 4, 3, 4) == 5": {
      "result": false,
      "time": 0.04939866065979004,
      "error": null
    },
    "assert count_Intgral_Points(2, 6, 4, 6) == -1": {
      "result": false,
      "time": 0.04941439628601074,
      "error": null
    },
    "assert count_Intgral_Points(2, 6, 6, 7) == 0": {
      "result": false,
      "time": 0.05088496208190918,
      "error": null
    },
    "assert count_Intgral_Points(3, 6, 5, 1) == -6": {
      "result": false,
      "time": 0.042563438415527344,
      "error": null
    },
    "assert count_Intgral_Points(9, 1, 4, 3) == -6": {
      "result": false,
      "time": 0.05320167541503906,
      "error": null
    },
    "assert count_Intgral_Points(4, 6, 2, 8) == -3": {
      "result": false,
      "time": 0.05372953414916992,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.19801980198019803,
  "general_error": "",
  "has_testcase_error": false
}