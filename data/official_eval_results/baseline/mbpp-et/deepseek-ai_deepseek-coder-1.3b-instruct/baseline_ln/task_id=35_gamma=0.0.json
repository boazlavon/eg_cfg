{
  "code": "def find_rect_num(n):\n    if n == 1:\n        return 1\n    else:\n        return n * (n + 1) * (2 * n + 1) // 6",
  "results": {
    "assert find_rect_num(4) == 20": {
      "result": false,
      "time": 0.04143095016479492,
      "error": null
    },
    "assert find_rect_num(5) == 30": {
      "result": false,
      "time": 0.03112006187438965,
      "error": null
    },
    "assert find_rect_num(6) == 42": {
      "result": false,
      "time": 0.040700435638427734,
      "error": null
    },
    "assert find_rect_num(7) == 56": {
      "result": false,
      "time": 0.035032033920288086,
      "error": null
    },
    "assert find_rect_num(9) == 90": {
      "result": false,
      "time": 0.03620123863220215,
      "error": null
    },
    "assert find_rect_num(2) == 6": {
      "result": false,
      "time": 0.032346487045288086,
      "error": null
    },
    "assert find_rect_num(3) == 12": {
      "result": false,
      "time": 0.03540945053100586,
      "error": null
    },
    "assert find_rect_num(1) == 2": {
      "result": false,
      "time": 0.03514528274536133,
      "error": null
    },
    "assert find_rect_num(8) == 72": {
      "result": false,
      "time": 0.03528428077697754,
      "error": null
    },
    "assert find_rect_num(10) == 110": {
      "result": false,
      "time": 0.03255271911621094,
      "error": null
    },
    "assert find_rect_num(11) == 132": {
      "result": false,
      "time": 0.027880191802978516,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": "",
  "has_testcase_error": false
}