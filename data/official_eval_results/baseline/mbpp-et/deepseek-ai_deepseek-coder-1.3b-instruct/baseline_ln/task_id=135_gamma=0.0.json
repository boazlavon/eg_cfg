{
  "code": "def hexagonal_num(n):\n    return n * (2 * n - 1)\n",
  "results": {
    "assert hexagonal_num(10) == 190": {
      "result": true,
      "time": 0.03416037559509277,
      "error": null
    },
    "assert hexagonal_num(5) == 45": {
      "result": true,
      "time": 0.03912496566772461,
      "error": null
    },
    "assert hexagonal_num(7) == 91": {
      "result": true,
      "time": 0.03845858573913574,
      "error": null
    },
    "assert hexagonal_num(14) == 378": {
      "result": true,
      "time": 0.030441761016845703,
      "error": null
    },
    "assert hexagonal_num(8) == 120": {
      "result": true,
      "time": 0.03344249725341797,
      "error": null
    },
    "assert hexagonal_num(13) == 325": {
      "result": true,
      "time": 0.037446022033691406,
      "error": null
    },
    "assert hexagonal_num(15) == 435": {
      "result": true,
      "time": 0.03067493438720703,
      "error": null
    },
    "assert hexagonal_num(12) == 276": {
      "result": true,
      "time": 0.030248403549194336,
      "error": null
    },
    "assert hexagonal_num(11) == 231": {
      "result": true,
      "time": 0.03409910202026367,
      "error": null
    },
    "assert hexagonal_num(9) == 153": {
      "result": true,
      "time": 0.03859519958496094,
      "error": null
    },
    "assert hexagonal_num(4) == 28": {
      "result": true,
      "time": 0.03566765785217285,
      "error": null
    },
    "assert hexagonal_num(3) == 15": {
      "result": true,
      "time": 0.03721189498901367,
      "error": null
    },
    "assert hexagonal_num(6) == 66": {
      "result": true,
      "time": 0.032366037368774414,
      "error": null
    },
    "assert hexagonal_num(2) == 6": {
      "result": true,
      "time": 0.03412127494812012,
      "error": null
    },
    "assert hexagonal_num(1) == 1": {
      "result": true,
      "time": 0.036696672439575195,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}