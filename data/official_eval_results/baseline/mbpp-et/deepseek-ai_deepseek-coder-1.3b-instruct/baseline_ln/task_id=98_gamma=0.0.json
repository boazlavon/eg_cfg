{
  "code": "def multiply_num(nums):\n    product = 1\n    for num in nums:\n        product *= num\n    return product / len(nums)\n",
  "results": {
    "assert multiply_num((8, 2, 3, -1, 7))==-67.2": {
      "result": true,
      "time": 0.033084869384765625,
      "error": null
    },
    "assert multiply_num((-10,-20,-30))==-2000.0": {
      "result": true,
      "time": 0.037893056869506836,
      "error": null
    },
    "assert multiply_num((19,15,18))==1710.0": {
      "result": true,
      "time": 0.03620433807373047,
      "error": null
    },
    "assert multiply_num((4, 1, 2, 1, 5)) == 8.0": {
      "result": true,
      "time": 0.03932332992553711,
      "error": null
    },
    "assert multiply_num((3, 7, 1, 4, 3)) == 50.4": {
      "result": true,
      "time": 0.04127144813537598,
      "error": null
    },
    "assert multiply_num((6, 2, 6, -6, 3)) == -259.2": {
      "result": true,
      "time": 0.03822493553161621,
      "error": null
    },
    "assert multiply_num((8, 2, 6, -2, 6)) == -230.4": {
      "result": true,
      "time": 0.03739047050476074,
      "error": null
    },
    "assert multiply_num((13, 4, 3, 1, 6)) == 187.2": {
      "result": true,
      "time": 0.03574109077453613,
      "error": null
    },
    "assert multiply_num((13, 7, 1, 1, 11)) == 200.2": {
      "result": true,
      "time": 0.040955305099487305,
      "error": null
    },
    "assert multiply_num((6, 2, 1, 3, 4)) == 28.8": {
      "result": true,
      "time": 0.03260493278503418,
      "error": null
    },
    "assert multiply_num((7, 1, 7, -4, 5)) == -196.0": {
      "result": true,
      "time": 0.02991008758544922,
      "error": null
    },
    "assert multiply_num((6, 2, 7, -1, 2)) == -33.6": {
      "result": true,
      "time": 0.03327679634094238,
      "error": null
    },
    "assert multiply_num((8, 3, 2, 2, 8)) == 153.6": {
      "result": true,
      "time": 0.038492441177368164,
      "error": null
    },
    "assert multiply_num((8, 2, 6, 0, 4)) == 0.0": {
      "result": true,
      "time": 0.03609943389892578,
      "error": null
    },
    "assert multiply_num((3, 5, 3, -3, 10)) == -270.0": {
      "result": true,
      "time": 0.046446800231933594,
      "error": null
    },
    "assert multiply_num((7, 6, 3, -6, 10)) == -1512.0": {
      "result": true,
      "time": 0.04277634620666504,
      "error": null
    },
    "assert multiply_num((12, 1, 6, 4, 10)) == 576.0": {
      "result": true,
      "time": 0.0408782958984375,
      "error": null
    },
    "assert multiply_num((6, 5, 5, -5, 8)) == -1200.0": {
      "result": true,
      "time": 0.047405242919921875,
      "error": null
    },
    "assert multiply_num((4, 4, 3, -3, 11)) == -316.8": {
      "result": true,
      "time": 0.03409934043884277,
      "error": null
    },
    "assert multiply_num((8, 4, 3, -6, 11)) == -1267.2": {
      "result": true,
      "time": 0.03986930847167969,
      "error": null
    },
    "assert multiply_num((5, 1, 1, -6, 4)) == -24.0": {
      "result": true,
      "time": 0.03783440589904785,
      "error": null
    },
    "assert multiply_num((11, 3, 3, -6, 10)) == -1188.0": {
      "result": true,
      "time": 0.035700082778930664,
      "error": null
    },
    "assert multiply_num((5, 7, 6, 2, 2)) == 168.0": {
      "result": true,
      "time": 0.035868167877197266,
      "error": null
    },
    "assert multiply_num((12, 2, 1, -6, 10)) == -288.0": {
      "result": true,
      "time": 0.03543210029602051,
      "error": null
    },
    "assert multiply_num((10, 3, 8, 3, 5)) == 720.0": {
      "result": true,
      "time": 0.03312849998474121,
      "error": null
    },
    "assert multiply_num((4, 1, 1, -3, 11)) == -26.4": {
      "result": true,
      "time": 0.03789091110229492,
      "error": null
    },
    "assert multiply_num((4, 2, 2, -5, 11)) == -176.0": {
      "result": true,
      "time": 0.03570866584777832,
      "error": null
    },
    "assert multiply_num((4, 7, 4, 0, 11)) == 0.0": {
      "result": true,
      "time": 0.03479480743408203,
      "error": null
    },
    "assert multiply_num((5, 2, 1, 1, 2)) == 4.0": {
      "result": true,
      "time": 0.03353309631347656,
      "error": null
    },
    "assert multiply_num((12, 6, 4, -5, 3)) == -864.0": {
      "result": true,
      "time": 0.03681039810180664,
      "error": null
    },
    "assert multiply_num((9, 6, 3, 2, 8)) == 518.4": {
      "result": true,
      "time": 0.03860974311828613,
      "error": null
    },
    "assert multiply_num((6, 1, 3, 4, 10)) == 144.0": {
      "result": true,
      "time": 0.03753018379211426,
      "error": null
    },
    "assert multiply_num((12, 7, 5, -5, 4)) == -1680.0": {
      "result": true,
      "time": 0.032308101654052734,
      "error": null
    },
    "assert multiply_num((12, 7, 1, -3, 12)) == -604.8": {
      "result": true,
      "time": 0.03612637519836426,
      "error": null
    },
    "assert multiply_num((12, 3, 6, -5, 12)) == -2592.0": {
      "result": true,
      "time": 0.0318601131439209,
      "error": null
    },
    "assert multiply_num((5, 6, 7, 2, 10)) == 840.0": {
      "result": true,
      "time": 0.03943061828613281,
      "error": null
    },
    "assert multiply_num((-15, -24, -35)) == -4200.0": {
      "result": true,
      "time": 0.04032301902770996,
      "error": null
    },
    "assert multiply_num((-8, -17, -28)) == -1269.3333333333333": {
      "result": true,
      "time": 0.04143667221069336,
      "error": null
    },
    "assert multiply_num((-14, -15, -33)) == -2310.0": {
      "result": true,
      "time": 0.03461623191833496,
      "error": null
    },
    "assert multiply_num((-7, -24, -27)) == -1512.0": {
      "result": true,
      "time": 0.04004716873168945,
      "error": null
    },
    "assert multiply_num((-12, -18, -31)) == -2232.0": {
      "result": true,
      "time": 0.0391385555267334,
      "error": null
    },
    "assert multiply_num((-6, -17, -25)) == -850.0": {
      "result": true,
      "time": 0.03754448890686035,
      "error": null
    },
    "assert multiply_num((-13, -22, -27)) == -2574.0": {
      "result": true,
      "time": 0.03532266616821289,
      "error": null
    },
    "assert multiply_num((-14, -23, -32)) == -3434.6666666666665": {
      "result": true,
      "time": 0.03871273994445801,
      "error": null
    },
    "assert multiply_num((-15, -20, -35)) == -3500.0": {
      "result": true,
      "time": 0.03287863731384277,
      "error": null
    },
    "assert multiply_num((-10, -16, -27)) == -1440.0": {
      "result": true,
      "time": 0.0359501838684082,
      "error": null
    },
    "assert multiply_num((-11, -25, -25)) == -2291.6666666666665": {
      "result": true,
      "time": 0.035675048828125,
      "error": null
    },
    "assert multiply_num((-15, -17, -25)) == -2125.0": {
      "result": true,
      "time": 0.03215932846069336,
      "error": null
    },
    "assert multiply_num((-15, -24, -29)) == -3480.0": {
      "result": true,
      "time": 0.0340726375579834,
      "error": null
    },
    "assert multiply_num((-8, -22, -32)) == -1877.3333333333333": {
      "result": true,
      "time": 0.03569340705871582,
      "error": null
    },
    "assert multiply_num((-13, -22, -26)) == -2478.6666666666665": {
      "result": true,
      "time": 0.03646039962768555,
      "error": null
    },
    "assert multiply_num((-14, -21, -32)) == -3136.0": {
      "result": true,
      "time": 0.039858102798461914,
      "error": null
    },
    "assert multiply_num((-11, -23, -31)) == -2614.3333333333335": {
      "result": true,
      "time": 0.029578208923339844,
      "error": null
    },
    "assert multiply_num((-12, -15, -30)) == -1800.0": {
      "result": true,
      "time": 0.03234553337097168,
      "error": null
    },
    "assert multiply_num((-13, -16, -32)) == -2218.6666666666665": {
      "result": true,
      "time": 0.03316307067871094,
      "error": null
    },
    "assert multiply_num((-8, -21, -26)) == -1456.0": {
      "result": true,
      "time": 0.03076624870300293,
      "error": null
    },
    "assert multiply_num((-7, -19, -26)) == -1152.6666666666667": {
      "result": true,
      "time": 0.028784513473510742,
      "error": null
    },
    "assert multiply_num((-11, -19, -26)) == -1811.3333333333333": {
      "result": true,
      "time": 0.027555465698242188,
      "error": null
    },
    "assert multiply_num((-8, -18, -32)) == -1536.0": {
      "result": true,
      "time": 0.029128074645996094,
      "error": null
    },
    "assert multiply_num((-14, -19, -35)) == -3103.3333333333335": {
      "result": true,
      "time": 0.02909994125366211,
      "error": null
    },
    "assert multiply_num((-9, -16, -26)) == -1248.0": {
      "result": true,
      "time": 0.032674551010131836,
      "error": null
    },
    "assert multiply_num((-9, -24, -33)) == -2376.0": {
      "result": true,
      "time": 0.0387883186340332,
      "error": null
    },
    "assert multiply_num((-11, -22, -35)) == -2823.3333333333335": {
      "result": true,
      "time": 0.029201030731201172,
      "error": null
    },
    "assert multiply_num((-11, -25, -33)) == -3025.0": {
      "result": true,
      "time": 0.030492305755615234,
      "error": null
    },
    "assert multiply_num((-6, -22, -33)) == -1452.0": {
      "result": true,
      "time": 0.03293108940124512,
      "error": null
    },
    "assert multiply_num((-12, -25, -31)) == -3100.0": {
      "result": true,
      "time": 0.029892683029174805,
      "error": null
    },
    "assert multiply_num((-5, -24, -34)) == -1360.0": {
      "result": true,
      "time": 0.031322479248046875,
      "error": null
    },
    "assert multiply_num((-12, -19, -29)) == -2204.0": {
      "result": true,
      "time": 0.03579568862915039,
      "error": null
    },
    "assert multiply_num((-15, -16, -30)) == -2400.0": {
      "result": true,
      "time": 0.02959442138671875,
      "error": null
    },
    "assert multiply_num((14, 19, 17)) == 1507.3333333333333": {
      "result": true,
      "time": 0.03374481201171875,
      "error": null
    },
    "assert multiply_num((17, 17, 14)) == 1348.6666666666667": {
      "result": true,
      "time": 0.027014493942260742,
      "error": null
    },
    "assert multiply_num((16, 15, 23)) == 1840.0": {
      "result": true,
      "time": 0.030118465423583984,
      "error": null
    },
    "assert multiply_num((20, 13, 16)) == 1386.6666666666667": {
      "result": true,
      "time": 0.02782893180847168,
      "error": null
    },
    "assert multiply_num((15, 10, 23)) == 1150.0": {
      "result": true,
      "time": 0.029808998107910156,
      "error": null
    },
    "assert multiply_num((20, 19, 22)) == 2786.6666666666665": {
      "result": true,
      "time": 0.027538299560546875,
      "error": null
    },
    "assert multiply_num((14, 20, 18)) == 1680.0": {
      "result": true,
      "time": 0.02845621109008789,
      "error": null
    },
    "assert multiply_num((23, 11, 21)) == 1771.0": {
      "result": true,
      "time": 0.0344996452331543,
      "error": null
    },
    "assert multiply_num((22, 15, 23)) == 2530.0": {
      "result": true,
      "time": 0.03516197204589844,
      "error": null
    },
    "assert multiply_num((19, 17, 14)) == 1507.3333333333333": {
      "result": true,
      "time": 0.03136181831359863,
      "error": null
    },
    "assert multiply_num((14, 10, 19)) == 886.6666666666666": {
      "result": true,
      "time": 0.02684760093688965,
      "error": null
    },
    "assert multiply_num((19, 10, 23)) == 1456.6666666666667": {
      "result": true,
      "time": 0.03229069709777832,
      "error": null
    },
    "assert multiply_num((21, 18, 19)) == 2394.0": {
      "result": true,
      "time": 0.03293180465698242,
      "error": null
    },
    "assert multiply_num((14, 13, 22)) == 1334.6666666666667": {
      "result": true,
      "time": 0.03336811065673828,
      "error": null
    },
    "assert multiply_num((16, 10, 14)) == 746.6666666666666": {
      "result": true,
      "time": 0.03392624855041504,
      "error": null
    },
    "assert multiply_num((15, 16, 22)) == 1760.0": {
      "result": true,
      "time": 0.03702497482299805,
      "error": null
    },
    "assert multiply_num((17, 11, 19)) == 1184.3333333333333": {
      "result": true,
      "time": 0.027773141860961914,
      "error": null
    },
    "assert multiply_num((20, 12, 16)) == 1280.0": {
      "result": true,
      "time": 0.029010534286499023,
      "error": null
    },
    "assert multiply_num((16, 16, 14)) == 1194.6666666666667": {
      "result": true,
      "time": 0.027889728546142578,
      "error": null
    },
    "assert multiply_num((14, 10, 15)) == 700.0": {
      "result": true,
      "time": 0.03403878211975098,
      "error": null
    },
    "assert multiply_num((17, 14, 22)) == 1745.3333333333333": {
      "result": true,
      "time": 0.03335452079772949,
      "error": null
    },
    "assert multiply_num((14, 10, 13)) == 606.6666666666666": {
      "result": true,
      "time": 0.032520294189453125,
      "error": null
    },
    "assert multiply_num((20, 18, 16)) == 1920.0": {
      "result": true,
      "time": 0.037024736404418945,
      "error": null
    },
    "assert multiply_num((15, 13, 16)) == 1040.0": {
      "result": true,
      "time": 0.03438735008239746,
      "error": null
    },
    "assert multiply_num((20, 16, 16)) == 1706.6666666666667": {
      "result": true,
      "time": 0.031221866607666016,
      "error": null
    },
    "assert multiply_num((21, 17, 20)) == 2380.0": {
      "result": true,
      "time": 0.03812551498413086,
      "error": null
    },
    "assert multiply_num((17, 16, 20)) == 1813.3333333333333": {
      "result": true,
      "time": 0.03258204460144043,
      "error": null
    },
    "assert multiply_num((20, 13, 22)) == 1906.6666666666667": {
      "result": true,
      "time": 0.03290414810180664,
      "error": null
    },
    "assert multiply_num((14, 11, 19)) == 975.3333333333334": {
      "result": true,
      "time": 0.03512310981750488,
      "error": null
    },
    "assert multiply_num((14, 19, 16)) == 1418.6666666666667": {
      "result": true,
      "time": 0.03222966194152832,
      "error": null
    },
    "assert multiply_num((19, 14, 21)) == 1862.0": {
      "result": true,
      "time": 0.03010272979736328,
      "error": null
    },
    "assert multiply_num((16, 12, 14)) == 896.0": {
      "result": true,
      "time": 0.028725624084472656,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}