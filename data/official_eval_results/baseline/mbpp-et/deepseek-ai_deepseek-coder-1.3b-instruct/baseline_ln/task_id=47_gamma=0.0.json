{
  "code": "def compute_Last_Digit(a, b):\n    def factorial(n):\n        if n == 0:\n            return 1\n        else:\n            return n * factorial(n-1)\n\n    last_digit_a = factorial(a) % 10\n    last_digit_b = factorial(b) % 10\n\n    return last_digit_a * last_digit_b % 10",
  "results": {
    "assert compute_Last_Digit(2,4) == 2": {
      "result": false,
      "time": 0.0386350154876709,
      "error": null
    },
    "assert compute_Last_Digit(6,8) == 6": {
      "result": false,
      "time": 0.04318428039550781,
      "error": null
    },
    "assert compute_Last_Digit(1,2) == 2": {
      "result": true,
      "time": 0.03317904472351074,
      "error": null
    },
    "assert compute_Last_Digit(1, 8) == 0": {
      "result": true,
      "time": 0.03189826011657715,
      "error": null
    },
    "assert compute_Last_Digit(2, 7) == 0": {
      "result": true,
      "time": 0.03524589538574219,
      "error": null
    },
    "assert compute_Last_Digit(5, 7) == 2": {
      "result": false,
      "time": 0.03657793998718262,
      "error": null
    },
    "assert compute_Last_Digit(7, 6) == 1": {
      "result": false,
      "time": 0.0334930419921875,
      "error": null
    },
    "assert compute_Last_Digit(7, 9) == 2": {
      "result": false,
      "time": 0.0333101749420166,
      "error": null
    },
    "assert compute_Last_Digit(4, 1) == 1": {
      "result": false,
      "time": 0.039948463439941406,
      "error": null
    },
    "assert compute_Last_Digit(6, 6) == 1": {
      "result": false,
      "time": 0.04233431816101074,
      "error": null
    },
    "assert compute_Last_Digit(4, 7) == 0": {
      "result": true,
      "time": 0.03931450843811035,
      "error": null
    },
    "assert compute_Last_Digit(3, 2) == 1": {
      "result": false,
      "time": 0.036637067794799805,
      "error": null
    },
    "assert compute_Last_Digit(6, 7) == 7": {
      "result": false,
      "time": 0.033284902572631836,
      "error": null
    },
    "assert compute_Last_Digit(6, 9) == 4": {
      "result": false,
      "time": 0.03486967086791992,
      "error": null
    },
    "assert compute_Last_Digit(6, 2) == 1": {
      "result": false,
      "time": 0.031929731369018555,
      "error": null
    },
    "assert compute_Last_Digit(2, 9) == 0": {
      "result": true,
      "time": 0.03419160842895508,
      "error": null
    },
    "assert compute_Last_Digit(6, 4) == 1": {
      "result": false,
      "time": 0.0333712100982666,
      "error": null
    },
    "assert compute_Last_Digit(1, 2) == 2": {
      "result": true,
      "time": 0.031214237213134766,
      "error": null
    },
    "assert compute_Last_Digit(2, 1) == 1": {
      "result": false,
      "time": 0.04974794387817383,
      "error": null
    },
    "assert compute_Last_Digit(4, 3) == 1": {
      "result": false,
      "time": 0.03661608695983887,
      "error": null
    },
    "assert compute_Last_Digit(5, 5) == 1": {
      "result": false,
      "time": 0.047974586486816406,
      "error": null
    },
    "assert compute_Last_Digit(3, 1) == 1": {
      "result": false,
      "time": 0.040657997131347656,
      "error": null
    },
    "assert compute_Last_Digit(6, 3) == 1": {
      "result": false,
      "time": 0.04246091842651367,
      "error": null
    },
    "assert compute_Last_Digit(6, 1) == 1": {
      "result": false,
      "time": 0.0354304313659668,
      "error": null
    },
    "assert compute_Last_Digit(4, 6) == 0": {
      "result": true,
      "time": 0.044191598892211914,
      "error": null
    },
    "assert compute_Last_Digit(1, 4) == 4": {
      "result": true,
      "time": 0.04675912857055664,
      "error": null
    },
    "assert compute_Last_Digit(6, 5) == 1": {
      "result": false,
      "time": 0.04320645332336426,
      "error": null
    },
    "assert compute_Last_Digit(2, 3) == 3": {
      "result": false,
      "time": 0.048049211502075195,
      "error": null
    },
    "assert compute_Last_Digit(7, 8) == 8": {
      "result": false,
      "time": 0.03978323936462402,
      "error": null
    },
    "assert compute_Last_Digit(1, 5) == 0": {
      "result": true,
      "time": 0.039553165435791016,
      "error": null
    },
    "assert compute_Last_Digit(8, 10) == 0": {
      "result": true,
      "time": 0.039764404296875,
      "error": null
    },
    "assert compute_Last_Digit(11, 3) == 1": {
      "result": false,
      "time": 0.045735836029052734,
      "error": null
    },
    "assert compute_Last_Digit(3, 4) == 4": {
      "result": true,
      "time": 0.041765451431274414,
      "error": null
    },
    "assert compute_Last_Digit(7, 3) == 1": {
      "result": false,
      "time": 0.03665733337402344,
      "error": null
    },
    "assert compute_Last_Digit(11, 6) == 1": {
      "result": false,
      "time": 0.03564786911010742,
      "error": null
    },
    "assert compute_Last_Digit(5, 11) == 0": {
      "result": true,
      "time": 0.050113677978515625,
      "error": null
    },
    "assert compute_Last_Digit(10, 13) == 6": {
      "result": false,
      "time": 0.03928780555725098,
      "error": null
    },
    "assert compute_Last_Digit(1, 12) == 0": {
      "result": true,
      "time": 0.04081892967224121,
      "error": null
    },
    "assert compute_Last_Digit(4, 9) == 0": {
      "result": true,
      "time": 0.0387873649597168,
      "error": null
    },
    "assert compute_Last_Digit(3, 13) == 0": {
      "result": true,
      "time": 0.048070669174194336,
      "error": null
    },
    "assert compute_Last_Digit(4, 12) == 0": {
      "result": true,
      "time": 0.04243659973144531,
      "error": null
    },
    "assert compute_Last_Digit(11, 7) == 1": {
      "result": false,
      "time": 0.04096388816833496,
      "error": null
    },
    "assert compute_Last_Digit(9, 4) == 1": {
      "result": false,
      "time": 0.03849601745605469,
      "error": null
    },
    "assert compute_Last_Digit(8, 13) == 0": {
      "result": true,
      "time": 0.04557085037231445,
      "error": null
    },
    "assert compute_Last_Digit(3, 9) == 0": {
      "result": true,
      "time": 0.047096967697143555,
      "error": null
    },
    "assert compute_Last_Digit(9, 13) == 0": {
      "result": true,
      "time": 0.052106618881225586,
      "error": null
    },
    "assert compute_Last_Digit(1, 6) == 0": {
      "result": true,
      "time": 0.04413294792175293,
      "error": null
    },
    "assert compute_Last_Digit(8, 7) == 1": {
      "result": false,
      "time": 0.05749034881591797,
      "error": null
    },
    "assert compute_Last_Digit(6, 11) == 0": {
      "result": true,
      "time": 0.03654313087463379,
      "error": null
    },
    "assert compute_Last_Digit(7, 10) == 0": {
      "result": true,
      "time": 0.045133113861083984,
      "error": null
    },
    "assert compute_Last_Digit(9, 11) == 0": {
      "result": true,
      "time": 0.04456686973571777,
      "error": null
    },
    "assert compute_Last_Digit(4, 10) == 0": {
      "result": true,
      "time": 0.04523944854736328,
      "error": null
    },
    "assert compute_Last_Digit(6, 10) == 0": {
      "result": true,
      "time": 0.03899216651916504,
      "error": null
    },
    "assert compute_Last_Digit(8, 11) == 0": {
      "result": true,
      "time": 0.05036616325378418,
      "error": null
    },
    "assert compute_Last_Digit(5, 4) == 1": {
      "result": false,
      "time": 0.042864322662353516,
      "error": null
    },
    "assert compute_Last_Digit(3, 7) == 0": {
      "result": true,
      "time": 0.04015302658081055,
      "error": null
    },
    "assert compute_Last_Digit(1, 7) == 0": {
      "result": true,
      "time": 0.044672250747680664,
      "error": null
    },
    "assert compute_Last_Digit(5, 3) == 1": {
      "result": false,
      "time": 0.03360319137573242,
      "error": null
    },
    "assert compute_Last_Digit(5, 6) == 6": {
      "result": false,
      "time": 0.04162192344665527,
      "error": null
    },
    "assert compute_Last_Digit(3, 5) == 0": {
      "result": true,
      "time": 0.04317045211791992,
      "error": null
    },
    "assert compute_Last_Digit(4, 2) == 1": {
      "result": false,
      "time": 0.04996800422668457,
      "error": null
    },
    "assert compute_Last_Digit(4, 4) == 1": {
      "result": false,
      "time": 0.03772258758544922,
      "error": null
    },
    "assert compute_Last_Digit(2, 6) == 0": {
      "result": true,
      "time": 0.03802752494812012,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.47619047619047616,
  "general_error": "",
  "has_testcase_error": false
}