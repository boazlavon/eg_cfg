{
  "code": "def tetrahedral_number(n):\n    return n * (n + 1) * (n + 2) // 6\n",
  "results": {
    "assert tetrahedral_number(5) == 35.0": {
      "result": true,
      "time": 0.038817405700683594,
      "error": null
    },
    "assert tetrahedral_number(6) == 56.0": {
      "result": true,
      "time": 0.037021636962890625,
      "error": null
    },
    "assert tetrahedral_number(7) == 84.0": {
      "result": true,
      "time": 0.038846492767333984,
      "error": null
    },
    "assert tetrahedral_number(2) == 4.0": {
      "result": true,
      "time": 0.046181678771972656,
      "error": null
    },
    "assert tetrahedral_number(4) == 20.0": {
      "result": true,
      "time": 0.047853946685791016,
      "error": null
    },
    "assert tetrahedral_number(1) == 1.0": {
      "result": true,
      "time": 0.04365372657775879,
      "error": null
    },
    "assert tetrahedral_number(9) == 165.0": {
      "result": true,
      "time": 0.04395103454589844,
      "error": null
    },
    "assert tetrahedral_number(3) == 10.0": {
      "result": true,
      "time": 0.035008907318115234,
      "error": null
    },
    "assert tetrahedral_number(10) == 220.0": {
      "result": true,
      "time": 0.034234046936035156,
      "error": null
    },
    "assert tetrahedral_number(8) == 120.0": {
      "result": true,
      "time": 0.03564333915710449,
      "error": null
    },
    "assert tetrahedral_number(11) == 286.0": {
      "result": true,
      "time": 0.04420876502990723,
      "error": null
    },
    "assert tetrahedral_number(12) == 364.0": {
      "result": true,
      "time": 0.06115007400512695,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}