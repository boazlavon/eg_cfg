{
  "code": "def find_lucas(n):\n    if n == 1:\n        return 2\n    elif n == 2:\n        return 1\n    else:\n        lucas_numbers = [2, 1]\n        for i in range(2, n):\n            lucas_numbers.append(lucas_numbers[-1] + lucas_numbers[-2])\n        return lucas_numbers[-1]",
  "results": {
    "assert find_lucas(9) == 76": {
      "result": false,
      "time": 0.04049181938171387,
      "error": null
    },
    "assert find_lucas(4) == 7": {
      "result": false,
      "time": 0.045122623443603516,
      "error": null
    },
    "assert find_lucas(3) == 4": {
      "result": false,
      "time": 0.04158949851989746,
      "error": null
    },
    "assert find_lucas(11) == 199": {
      "result": false,
      "time": 0.04501175880432129,
      "error": null
    },
    "assert find_lucas(10) == 123": {
      "result": false,
      "time": 0.03888297080993652,
      "error": null
    },
    "assert find_lucas(6) == 18": {
      "result": false,
      "time": 0.05099844932556152,
      "error": null
    },
    "assert find_lucas(7) == 29": {
      "result": false,
      "time": 0.04267716407775879,
      "error": null
    },
    "assert find_lucas(13) == 521": {
      "result": false,
      "time": 0.03665804862976074,
      "error": null
    },
    "assert find_lucas(12) == 322": {
      "result": false,
      "time": 0.03781747817993164,
      "error": null
    },
    "assert find_lucas(8) == 47": {
      "result": false,
      "time": 0.03985881805419922,
      "error": null
    },
    "assert find_lucas(5) == 11": {
      "result": false,
      "time": 0.04044318199157715,
      "error": null
    },
    "assert find_lucas(14) == 843": {
      "result": false,
      "time": 0.0427091121673584,
      "error": null
    },
    "assert find_lucas(1) == 1": {
      "result": false,
      "time": 0.03702712059020996,
      "error": null
    },
    "assert find_lucas(2) == 3": {
      "result": false,
      "time": 0.033032894134521484,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": "",
  "has_testcase_error": false
}