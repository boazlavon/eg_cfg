{
  "code": "def num_comm_div(num1, num2):\n    if num1 > num2:\n        num = num1\n        den = num2\n    else:\n        num = num2\n        den = num1\n    rem = num % den\n    while rem != 0:\n        num = den\n        den = rem\n        rem = num % den\n    return den",
  "results": {
    "assert num_comm_div(2,4) == 2": {
      "result": true,
      "time": 0.04851508140563965,
      "error": null
    },
    "assert num_comm_div(2,8) == 2": {
      "result": true,
      "time": 0.040030479431152344,
      "error": null
    },
    "assert num_comm_div(12,24) == 6": {
      "result": false,
      "time": 0.03745269775390625,
      "error": null
    },
    "assert num_comm_div(6, 9) == 2": {
      "result": false,
      "time": 0.048117637634277344,
      "error": null
    },
    "assert num_comm_div(6, 5) == 1": {
      "result": true,
      "time": 0.04144763946533203,
      "error": null
    },
    "assert num_comm_div(3, 1) == 1": {
      "result": true,
      "time": 0.04531598091125488,
      "error": null
    },
    "assert num_comm_div(1, 6) == 1": {
      "result": true,
      "time": 0.04296255111694336,
      "error": null
    },
    "assert num_comm_div(4, 7) == 1": {
      "result": true,
      "time": 0.04535079002380371,
      "error": null
    },
    "assert num_comm_div(1, 4) == 1": {
      "result": true,
      "time": 0.03615975379943848,
      "error": null
    },
    "assert num_comm_div(6, 6) == 4": {
      "result": false,
      "time": 0.044841766357421875,
      "error": null
    },
    "assert num_comm_div(1, 7) == 1": {
      "result": true,
      "time": 0.04164910316467285,
      "error": null
    },
    "assert num_comm_div(2, 9) == 1": {
      "result": true,
      "time": 0.04793572425842285,
      "error": null
    },
    "assert num_comm_div(6, 7) == 1": {
      "result": true,
      "time": 0.04399704933166504,
      "error": null
    },
    "assert num_comm_div(3, 7) == 1": {
      "result": true,
      "time": 0.04168701171875,
      "error": null
    },
    "assert num_comm_div(4, 6) == 2": {
      "result": true,
      "time": 0.040755510330200195,
      "error": null
    },
    "assert num_comm_div(6, 1) == 1": {
      "result": true,
      "time": 0.04211282730102539,
      "error": null
    },
    "assert num_comm_div(6, 2) == 2": {
      "result": true,
      "time": 0.04621696472167969,
      "error": null
    },
    "assert num_comm_div(7, 3) == 1": {
      "result": true,
      "time": 0.05155444145202637,
      "error": null
    },
    "assert num_comm_div(5, 1) == 1": {
      "result": true,
      "time": 0.04285764694213867,
      "error": null
    },
    "assert num_comm_div(1, 3) == 1": {
      "result": true,
      "time": 0.04861092567443848,
      "error": null
    },
    "assert num_comm_div(4, 9) == 1": {
      "result": true,
      "time": 0.04408073425292969,
      "error": null
    },
    "assert num_comm_div(3, 5) == 1": {
      "result": true,
      "time": 0.03463268280029297,
      "error": null
    },
    "assert num_comm_div(6, 3) == 2": {
      "result": false,
      "time": 0.03351449966430664,
      "error": null
    },
    "assert num_comm_div(2, 4) == 2": {
      "result": true,
      "time": 0.031191349029541016,
      "error": null
    },
    "assert num_comm_div(2, 1) == 1": {
      "result": true,
      "time": 0.03482699394226074,
      "error": null
    },
    "assert num_comm_div(7, 2) == 1": {
      "result": true,
      "time": 0.03784823417663574,
      "error": null
    },
    "assert num_comm_div(7, 8) == 1": {
      "result": true,
      "time": 0.036199092864990234,
      "error": null
    },
    "assert num_comm_div(2, 8) == 2": {
      "result": true,
      "time": 0.03322291374206543,
      "error": null
    },
    "assert num_comm_div(1, 11) == 1": {
      "result": true,
      "time": 0.03508782386779785,
      "error": null
    },
    "assert num_comm_div(5, 11) == 1": {
      "result": true,
      "time": 0.03134584426879883,
      "error": null
    },
    "assert num_comm_div(1, 9) == 1": {
      "result": true,
      "time": 0.03037571907043457,
      "error": null
    },
    "assert num_comm_div(7, 7) == 2": {
      "result": false,
      "time": 0.036429643630981445,
      "error": null
    },
    "assert num_comm_div(5, 5) == 2": {
      "result": false,
      "time": 0.03372788429260254,
      "error": null
    },
    "assert num_comm_div(1, 10) == 1": {
      "result": true,
      "time": 0.029338598251342773,
      "error": null
    },
    "assert num_comm_div(5, 9) == 1": {
      "result": true,
      "time": 0.03308844566345215,
      "error": null
    },
    "assert num_comm_div(4, 4) == 3": {
      "result": false,
      "time": 0.03375124931335449,
      "error": null
    },
    "assert num_comm_div(7, 9) == 1": {
      "result": true,
      "time": 0.034014225006103516,
      "error": null
    },
    "assert num_comm_div(2, 10) == 2": {
      "result": true,
      "time": 0.03572249412536621,
      "error": null
    },
    "assert num_comm_div(4, 13) == 1": {
      "result": true,
      "time": 0.037286996841430664,
      "error": null
    },
    "assert num_comm_div(3, 6) == 2": {
      "result": false,
      "time": 0.03654003143310547,
      "error": null
    },
    "assert num_comm_div(5, 7) == 1": {
      "result": true,
      "time": 0.03549766540527344,
      "error": null
    },
    "assert num_comm_div(3, 11) == 1": {
      "result": true,
      "time": 0.02984142303466797,
      "error": null
    },
    "assert num_comm_div(4, 12) == 3": {
      "result": false,
      "time": 0.03519153594970703,
      "error": null
    },
    "assert num_comm_div(1, 5) == 1": {
      "result": true,
      "time": 0.034210205078125,
      "error": null
    },
    "assert num_comm_div(6, 8) == 2": {
      "result": true,
      "time": 0.02935004234313965,
      "error": null
    },
    "assert num_comm_div(7, 11) == 1": {
      "result": true,
      "time": 0.03320002555847168,
      "error": null
    },
    "assert num_comm_div(14, 19) == 1": {
      "result": true,
      "time": 0.03421497344970703,
      "error": null
    },
    "assert num_comm_div(7, 26) == 1": {
      "result": true,
      "time": 0.034561872482299805,
      "error": null
    },
    "assert num_comm_div(14, 23) == 1": {
      "result": true,
      "time": 0.031354427337646484,
      "error": null
    },
    "assert num_comm_div(8, 28) == 3": {
      "result": false,
      "time": 0.03537416458129883,
      "error": null
    },
    "assert num_comm_div(9, 23) == 1": {
      "result": true,
      "time": 0.032633066177368164,
      "error": null
    },
    "assert num_comm_div(13, 25) == 1": {
      "result": true,
      "time": 0.03385782241821289,
      "error": null
    },
    "assert num_comm_div(17, 21) == 1": {
      "result": true,
      "time": 0.032880544662475586,
      "error": null
    },
    "assert num_comm_div(11, 19) == 1": {
      "result": true,
      "time": 0.03516435623168945,
      "error": null
    },
    "assert num_comm_div(10, 28) == 2": {
      "result": true,
      "time": 0.031170368194580078,
      "error": null
    },
    "assert num_comm_div(10, 25) == 2": {
      "result": false,
      "time": 0.033921003341674805,
      "error": null
    },
    "assert num_comm_div(12, 22) == 2": {
      "result": true,
      "time": 0.03277015686035156,
      "error": null
    },
    "assert num_comm_div(7, 23) == 1": {
      "result": true,
      "time": 0.0398249626159668,
      "error": null
    },
    "assert num_comm_div(14, 27) == 1": {
      "result": true,
      "time": 0.032086849212646484,
      "error": null
    },
    "assert num_comm_div(14, 28) == 4": {
      "result": false,
      "time": 0.0379033088684082,
      "error": null
    },
    "assert num_comm_div(17, 27) == 1": {
      "result": true,
      "time": 0.03435540199279785,
      "error": null
    },
    "assert num_comm_div(11, 28) == 1": {
      "result": true,
      "time": 0.032319068908691406,
      "error": null
    },
    "assert num_comm_div(11, 29) == 1": {
      "result": true,
      "time": 0.03547334671020508,
      "error": null
    },
    "assert num_comm_div(15, 25) == 2": {
      "result": false,
      "time": 0.03411245346069336,
      "error": null
    },
    "assert num_comm_div(7, 24) == 1": {
      "result": true,
      "time": 0.03412437438964844,
      "error": null
    },
    "assert num_comm_div(10, 19) == 1": {
      "result": true,
      "time": 0.03543519973754883,
      "error": null
    },
    "assert num_comm_div(9, 19) == 1": {
      "result": true,
      "time": 0.029516220092773438,
      "error": null
    },
    "assert num_comm_div(8, 22) == 2": {
      "result": true,
      "time": 0.03299069404602051,
      "error": null
    },
    "assert num_comm_div(12, 27) == 2": {
      "result": false,
      "time": 0.03256702423095703,
      "error": null
    },
    "assert num_comm_div(7, 19) == 1": {
      "result": true,
      "time": 0.0355377197265625,
      "error": null
    },
    "assert num_comm_div(9, 20) == 1": {
      "result": true,
      "time": 0.03303050994873047,
      "error": null
    },
    "assert num_comm_div(11, 25) == 1": {
      "result": true,
      "time": 0.033571720123291016,
      "error": null
    },
    "assert num_comm_div(8, 24) == 4": {
      "result": false,
      "time": 0.03267836570739746,
      "error": null
    },
    "assert num_comm_div(17, 28) == 1": {
      "result": true,
      "time": 0.03579401969909668,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.7972972972972973,
  "general_error": "",
  "has_testcase_error": false
}