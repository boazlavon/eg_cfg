{
  "code": "def bitwise_xor(tup1, tup2):\n    res = tuple(i ^ j for i, j in zip(tup1, tup2))\n    return res\n",
  "results": {
    "assert bitwise_xor((10, 4, 6, 9), (5, 2, 3, 3)) == (15, 6, 5, 10)": {
      "result": true,
      "time": 0.0541996955871582,
      "error": null
    },
    "assert bitwise_xor((11, 5, 7, 10), (6, 3, 4, 4)) == (13, 6, 3, 14)": {
      "result": true,
      "time": 0.04829049110412598,
      "error": null
    },
    "assert bitwise_xor((12, 6, 8, 11), (7, 4, 5, 6)) == (11, 2, 13, 13)": {
      "result": true,
      "time": 0.05301499366760254,
      "error": null
    },
    "assert bitwise_xor((9, 2, 11, 12), (3, 1, 2, 1)) == (10, 3, 9, 13)": {
      "result": true,
      "time": 0.051067352294921875,
      "error": null
    },
    "assert bitwise_xor((12, 7, 8, 11), (3, 2, 4, 2)) == (15, 5, 12, 9)": {
      "result": true,
      "time": 0.05729055404663086,
      "error": null
    },
    "assert bitwise_xor((9, 2, 6, 8), (2, 5, 6, 8)) == (11, 7, 0, 0)": {
      "result": true,
      "time": 0.05445146560668945,
      "error": null
    },
    "assert bitwise_xor((6, 6, 6, 11), (1, 5, 8, 4)) == (7, 3, 14, 15)": {
      "result": true,
      "time": 0.05355048179626465,
      "error": null
    },
    "assert bitwise_xor((9, 2, 7, 11), (2, 5, 6, 2)) == (11, 7, 1, 9)": {
      "result": true,
      "time": 0.0556027889251709,
      "error": null
    },
    "assert bitwise_xor((12, 7, 6, 12), (1, 7, 6, 2)) == (13, 0, 0, 14)": {
      "result": true,
      "time": 0.049662113189697266,
      "error": null
    },
    "assert bitwise_xor((14, 1, 5, 10), (2, 6, 3, 3)) == (12, 7, 6, 9)": {
      "result": true,
      "time": 0.04599618911743164,
      "error": null
    },
    "assert bitwise_xor((9, 5, 4, 7), (10, 5, 4, 8)) == (3, 0, 0, 15)": {
      "result": true,
      "time": 0.05184793472290039,
      "error": null
    },
    "assert bitwise_xor((5, 2, 1, 13), (10, 4, 3, 6)) == (15, 6, 2, 11)": {
      "result": true,
      "time": 0.060753822326660156,
      "error": null
    },
    "assert bitwise_xor((8, 8, 3, 9), (5, 2, 3, 2)) == (13, 10, 0, 11)": {
      "result": true,
      "time": 0.057616233825683594,
      "error": null
    },
    "assert bitwise_xor((5, 7, 6, 4), (1, 1, 1, 2)) == (4, 6, 7, 6)": {
      "result": true,
      "time": 0.055275678634643555,
      "error": null
    },
    "assert bitwise_xor((15, 1, 10, 14), (1, 2, 3, 1)) == (14, 3, 9, 15)": {
      "result": true,
      "time": 0.05308413505554199,
      "error": null
    },
    "assert bitwise_xor((8, 2, 3, 8), (2, 2, 6, 8)) == (10, 0, 5, 0)": {
      "result": true,
      "time": 0.051830291748046875,
      "error": null
    },
    "assert bitwise_xor((8, 1, 3, 10), (7, 6, 7, 1)) == (15, 7, 4, 11)": {
      "result": true,
      "time": 0.04762768745422363,
      "error": null
    },
    "assert bitwise_xor((8, 3, 10, 10), (7, 6, 8, 8)) == (15, 5, 2, 2)": {
      "result": true,
      "time": 0.046128273010253906,
      "error": null
    },
    "assert bitwise_xor((14, 5, 10, 11), (1, 4, 5, 5)) == (15, 1, 15, 14)": {
      "result": true,
      "time": 0.04745125770568848,
      "error": null
    },
    "assert bitwise_xor((8, 7, 7, 10), (4, 2, 5, 8)) == (12, 5, 2, 2)": {
      "result": true,
      "time": 0.05650043487548828,
      "error": null
    },
    "assert bitwise_xor((5, 9, 9, 6), (5, 3, 7, 3)) == (0, 10, 14, 5)": {
      "result": true,
      "time": 0.0675959587097168,
      "error": null
    },
    "assert bitwise_xor((8, 8, 11, 4), (7, 2, 7, 8)) == (15, 10, 12, 12)": {
      "result": true,
      "time": 0.057579994201660156,
      "error": null
    },
    "assert bitwise_xor((15, 1, 10, 5), (1, 6, 7, 2)) == (14, 7, 13, 7)": {
      "result": true,
      "time": 0.0519258975982666,
      "error": null
    },
    "assert bitwise_xor((7, 9, 7, 6), (2, 4, 5, 5)) == (5, 13, 2, 3)": {
      "result": true,
      "time": 0.0460047721862793,
      "error": null
    },
    "assert bitwise_xor((15, 3, 6, 6), (7, 3, 4, 6)) == (8, 0, 2, 0)": {
      "result": true,
      "time": 0.05336737632751465,
      "error": null
    },
    "assert bitwise_xor((13, 5, 7, 9), (3, 1, 1, 6)) == (14, 4, 6, 15)": {
      "result": true,
      "time": 0.0415346622467041,
      "error": null
    },
    "assert bitwise_xor((10, 9, 6, 14), (3, 5, 8, 5)) == (9, 12, 14, 11)": {
      "result": true,
      "time": 0.059218645095825195,
      "error": null
    },
    "assert bitwise_xor((15, 1, 8, 4), (10, 1, 4, 5)) == (5, 0, 12, 1)": {
      "result": true,
      "time": 0.06003618240356445,
      "error": null
    },
    "assert bitwise_xor((10, 6, 4, 10), (7, 5, 8, 6)) == (13, 3, 12, 12)": {
      "result": true,
      "time": 0.04634213447570801,
      "error": null
    },
    "assert bitwise_xor((5, 8, 6, 6), (7, 6, 1, 4)) == (2, 14, 7, 2)": {
      "result": true,
      "time": 0.05198240280151367,
      "error": null
    },
    "assert bitwise_xor((14, 9, 6, 5), (2, 6, 1, 4)) == (12, 15, 7, 1)": {
      "result": true,
      "time": 0.04669976234436035,
      "error": null
    },
    "assert bitwise_xor((12, 5, 9, 6), (6, 1, 4, 1)) == (10, 4, 13, 7)": {
      "result": true,
      "time": 0.04947209358215332,
      "error": null
    },
    "assert bitwise_xor((12, 5, 2, 13), (4, 7, 5, 1)) == (8, 2, 7, 12)": {
      "result": true,
      "time": 0.042464256286621094,
      "error": null
    },
    "assert bitwise_xor((11, 8, 6, 11), (8, 5, 8, 3)) == (3, 13, 14, 8)": {
      "result": true,
      "time": 0.0436551570892334,
      "error": null
    },
    "assert bitwise_xor((15, 6, 6, 5), (3, 1, 4, 8)) == (12, 7, 2, 13)": {
      "result": true,
      "time": 0.0409088134765625,
      "error": null
    },
    "assert bitwise_xor((8, 9, 2, 8), (6, 6, 8, 5)) == (14, 15, 10, 13)": {
      "result": true,
      "time": 0.03650832176208496,
      "error": null
    },
    "assert bitwise_xor((13, 4, 8, 15), (8, 2, 3, 4)) == (5, 6, 11, 11)": {
      "result": true,
      "time": 0.04150724411010742,
      "error": null
    },
    "assert bitwise_xor((16, 3, 10, 15), (7, 2, 6, 8)) == (23, 1, 12, 7)": {
      "result": true,
      "time": 0.043781280517578125,
      "error": null
    },
    "assert bitwise_xor((14, 10, 2, 10), (8, 7, 8, 8)) == (6, 13, 10, 2)": {
      "result": true,
      "time": 0.03800368309020996,
      "error": null
    },
    "assert bitwise_xor((15, 6, 10, 5), (1, 3, 5, 8)) == (14, 5, 15, 13)": {
      "result": true,
      "time": 0.03932452201843262,
      "error": null
    },
    "assert bitwise_xor((8, 2, 10, 11), (2, 7, 9, 2)) == (10, 5, 3, 9)": {
      "result": true,
      "time": 0.03249549865722656,
      "error": null
    },
    "assert bitwise_xor((12, 9, 5, 11), (6, 4, 1, 4)) == (10, 13, 4, 15)": {
      "result": true,
      "time": 0.0524899959564209,
      "error": null
    },
    "assert bitwise_xor((16, 3, 7, 9), (8, 7, 7, 3)) == (24, 4, 0, 10)": {
      "result": true,
      "time": 0.04901742935180664,
      "error": null
    },
    "assert bitwise_xor((14, 5, 10, 15), (4, 8, 9, 1)) == (10, 13, 3, 14)": {
      "result": true,
      "time": 0.03151702880859375,
      "error": null
    },
    "assert bitwise_xor((16, 1, 7, 12), (7, 1, 5, 8)) == (23, 0, 2, 4)": {
      "result": true,
      "time": 0.03756308555603027,
      "error": null
    },
    "assert bitwise_xor((10, 7, 10, 5), (7, 1, 8, 3)) == (13, 6, 2, 6)": {
      "result": true,
      "time": 0.03414583206176758,
      "error": null
    },
    "assert bitwise_xor((14, 2, 2, 14), (6, 6, 9, 4)) == (8, 4, 11, 10)": {
      "result": true,
      "time": 0.03823542594909668,
      "error": null
    },
    "assert bitwise_xor((8, 9, 9, 7), (1, 3, 9, 6)) == (9, 10, 0, 1)": {
      "result": true,
      "time": 0.03449726104736328,
      "error": null
    },
    "assert bitwise_xor((10, 2, 2, 5), (10, 6, 3, 6)) == (0, 4, 1, 3)": {
      "result": true,
      "time": 0.039521217346191406,
      "error": null
    },
    "assert bitwise_xor((8, 2, 7, 6), (3, 2, 5, 5)) == (11, 0, 2, 3)": {
      "result": true,
      "time": 0.040882110595703125,
      "error": null
    },
    "assert bitwise_xor((10, 10, 2, 5), (10, 2, 2, 8)) == (0, 8, 0, 13)": {
      "result": true,
      "time": 0.04063677787780762,
      "error": null
    },
    "assert bitwise_xor((9, 2, 12, 11), (3, 2, 1, 2)) == (10, 0, 13, 9)": {
      "result": true,
      "time": 0.036733388900756836,
      "error": null
    },
    "assert bitwise_xor((12, 3, 4, 5), (2, 4, 1, 4)) == (14, 7, 5, 1)": {
      "result": true,
      "time": 0.03774690628051758,
      "error": null
    },
    "assert bitwise_xor((7, 2, 10, 11), (4, 1, 5, 8)) == (3, 3, 15, 3)": {
      "result": true,
      "time": 0.03367900848388672,
      "error": null
    },
    "assert bitwise_xor((7, 1, 12, 12), (6, 2, 3, 8)) == (1, 3, 15, 4)": {
      "result": true,
      "time": 0.037090301513671875,
      "error": null
    },
    "assert bitwise_xor((16, 9, 6, 8), (8, 5, 8, 1)) == (24, 12, 14, 9)": {
      "result": true,
      "time": 0.03835487365722656,
      "error": null
    },
    "assert bitwise_xor((15, 7, 2, 10), (1, 3, 5, 1)) == (14, 4, 7, 11)": {
      "result": true,
      "time": 0.04193520545959473,
      "error": null
    },
    "assert bitwise_xor((16, 9, 12, 9), (9, 3, 5, 4)) == (25, 10, 9, 13)": {
      "result": true,
      "time": 0.039190053939819336,
      "error": null
    },
    "assert bitwise_xor((14, 10, 12, 6), (3, 4, 3, 8)) == (13, 14, 15, 14)": {
      "result": true,
      "time": 0.03559589385986328,
      "error": null
    },
    "assert bitwise_xor((9, 3, 5, 15), (6, 6, 1, 5)) == (15, 5, 4, 10)": {
      "result": true,
      "time": 0.03600573539733887,
      "error": null
    },
    "assert bitwise_xor((6, 6, 5, 13), (7, 1, 4, 7)) == (1, 7, 1, 10)": {
      "result": true,
      "time": 0.03834342956542969,
      "error": null
    },
    "assert bitwise_xor((16, 9, 8, 7), (10, 4, 9, 7)) == (26, 13, 1, 0)": {
      "result": true,
      "time": 0.03458118438720703,
      "error": null
    },
    "assert bitwise_xor((13, 4, 10, 5), (3, 7, 2, 6)) == (14, 3, 8, 3)": {
      "result": true,
      "time": 0.03696012496948242,
      "error": null
    },
    "assert bitwise_xor((15, 3, 9, 6), (1, 3, 3, 7)) == (14, 0, 10, 1)": {
      "result": true,
      "time": 0.03649091720581055,
      "error": null
    },
    "assert bitwise_xor((10, 4, 11, 10), (10, 4, 4, 1)) == (0, 0, 15, 11)": {
      "result": true,
      "time": 0.03518319129943848,
      "error": null
    },
    "assert bitwise_xor((7, 7, 3, 7), (1, 5, 9, 3)) == (6, 2, 10, 4)": {
      "result": true,
      "time": 0.03346085548400879,
      "error": null
    },
    "assert bitwise_xor((6, 4, 9, 11), (6, 6, 7, 3)) == (0, 2, 14, 8)": {
      "result": true,
      "time": 0.04174351692199707,
      "error": null
    },
    "assert bitwise_xor((6, 5, 10, 13), (6, 1, 4, 3)) == (0, 4, 14, 14)": {
      "result": true,
      "time": 0.03793168067932129,
      "error": null
    },
    "assert bitwise_xor((7, 3, 7, 5), (8, 1, 7, 4)) == (15, 2, 0, 1)": {
      "result": true,
      "time": 0.03702950477600098,
      "error": null
    },
    "assert bitwise_xor((8, 10, 5, 12), (6, 5, 8, 2)) == (14, 15, 13, 14)": {
      "result": true,
      "time": 0.03795742988586426,
      "error": null
    },
    "assert bitwise_xor((8, 5, 5, 12), (8, 6, 7, 5)) == (0, 3, 2, 9)": {
      "result": true,
      "time": 0.03591561317443848,
      "error": null
    },
    "assert bitwise_xor((17, 9, 4, 6), (3, 3, 2, 2)) == (18, 10, 6, 4)": {
      "result": true,
      "time": 0.036249637603759766,
      "error": null
    },
    "assert bitwise_xor((16, 11, 9, 9), (11, 3, 4, 1)) == (27, 8, 13, 8)": {
      "result": true,
      "time": 0.038677215576171875,
      "error": null
    },
    "assert bitwise_xor((9, 1, 7, 15), (3, 6, 5, 3)) == (10, 7, 2, 12)": {
      "result": true,
      "time": 0.03595113754272461,
      "error": null
    },
    "assert bitwise_xor((15, 9, 8, 9), (8, 8, 8, 11)) == (7, 1, 0, 2)": {
      "result": true,
      "time": 0.0364072322845459,
      "error": null
    },
    "assert bitwise_xor((9, 5, 6, 9), (12, 8, 3, 4)) == (5, 13, 5, 13)": {
      "result": true,
      "time": 0.039614200592041016,
      "error": null
    },
    "assert bitwise_xor((7, 2, 3, 16), (5, 1, 9, 3)) == (2, 3, 10, 19)": {
      "result": true,
      "time": 0.04643893241882324,
      "error": null
    },
    "assert bitwise_xor((16, 4, 11, 9), (7, 4, 2, 8)) == (23, 0, 9, 1)": {
      "result": true,
      "time": 0.03979349136352539,
      "error": null
    },
    "assert bitwise_xor((12, 10, 6, 14), (7, 1, 10, 5)) == (11, 11, 12, 11)": {
      "result": true,
      "time": 0.03762483596801758,
      "error": null
    },
    "assert bitwise_xor((12, 4, 3, 10), (5, 4, 4, 6)) == (9, 0, 7, 12)": {
      "result": true,
      "time": 0.037512779235839844,
      "error": null
    },
    "assert bitwise_xor((15, 10, 13, 14), (11, 8, 10, 9)) == (4, 2, 7, 7)": {
      "result": true,
      "time": 0.039057254791259766,
      "error": null
    },
    "assert bitwise_xor((17, 3, 10, 9), (7, 4, 1, 8)) == (22, 7, 11, 1)": {
      "result": true,
      "time": 0.037294864654541016,
      "error": null
    },
    "assert bitwise_xor((9, 5, 3, 7), (3, 2, 10, 8)) == (10, 7, 9, 15)": {
      "result": true,
      "time": 0.03408050537109375,
      "error": null
    },
    "assert bitwise_xor((16, 9, 8, 13), (11, 3, 7, 10)) == (27, 10, 15, 7)": {
      "result": true,
      "time": 0.03711867332458496,
      "error": null
    },
    "assert bitwise_xor((17, 3, 8, 16), (5, 3, 8, 6)) == (20, 0, 0, 22)": {
      "result": true,
      "time": 0.035376548767089844,
      "error": null
    },
    "assert bitwise_xor((13, 8, 7, 9), (2, 9, 4, 1)) == (15, 1, 3, 8)": {
      "result": true,
      "time": 0.03860068321228027,
      "error": null
    },
    "assert bitwise_xor((15, 11, 11, 6), (7, 6, 9, 5)) == (8, 13, 2, 3)": {
      "result": true,
      "time": 0.03956246376037598,
      "error": null
    },
    "assert bitwise_xor((16, 4, 5, 10), (12, 1, 1, 11)) == (28, 5, 4, 1)": {
      "result": true,
      "time": 0.047556400299072266,
      "error": null
    },
    "assert bitwise_xor((7, 11, 4, 16), (2, 6, 1, 8)) == (5, 13, 5, 24)": {
      "result": true,
      "time": 0.04056048393249512,
      "error": null
    },
    "assert bitwise_xor((16, 9, 8, 14), (3, 9, 6, 8)) == (19, 0, 14, 6)": {
      "result": true,
      "time": 0.04396700859069824,
      "error": null
    },
    "assert bitwise_xor((7, 1, 6, 9), (7, 5, 3, 1)) == (0, 4, 5, 8)": {
      "result": true,
      "time": 0.03919386863708496,
      "error": null
    },
    "assert bitwise_xor((14, 3, 6, 16), (10, 8, 5, 2)) == (4, 11, 3, 18)": {
      "result": true,
      "time": 0.04143786430358887,
      "error": null
    },
    "assert bitwise_xor((17, 3, 6, 7), (5, 5, 7, 6)) == (20, 6, 1, 1)": {
      "result": true,
      "time": 0.039637088775634766,
      "error": null
    },
    "assert bitwise_xor((12, 1, 10, 13), (9, 2, 4, 11)) == (5, 3, 14, 6)": {
      "result": true,
      "time": 0.04169106483459473,
      "error": null
    },
    "assert bitwise_xor((12, 11, 10, 9), (4, 5, 3, 9)) == (8, 14, 9, 0)": {
      "result": true,
      "time": 0.04418063163757324,
      "error": null
    },
    "assert bitwise_xor((15, 1, 10, 12), (8, 7, 7, 2)) == (7, 6, 13, 14)": {
      "result": true,
      "time": 0.04178142547607422,
      "error": null
    },
    "assert bitwise_xor((8, 5, 3, 8), (6, 6, 4, 8)) == (14, 3, 7, 0)": {
      "result": true,
      "time": 0.0439448356628418,
      "error": null
    },
    "assert bitwise_xor((10, 3, 4, 10), (10, 9, 9, 11)) == (0, 10, 13, 1)": {
      "result": true,
      "time": 0.043617963790893555,
      "error": null
    },
    "assert bitwise_xor((16, 3, 3, 9), (5, 1, 4, 4)) == (21, 2, 7, 13)": {
      "result": true,
      "time": 0.044638872146606445,
      "error": null
    },
    "assert bitwise_xor((10, 7, 11, 10), (8, 9, 1, 7)) == (2, 14, 10, 13)": {
      "result": true,
      "time": 0.062424659729003906,
      "error": null
    },
    "assert bitwise_xor((10, 6, 6, 16), (2, 9, 2, 4)) == (8, 15, 4, 20)": {
      "result": true,
      "time": 0.05467081069946289,
      "error": null
    },
    "assert bitwise_xor((16, 11, 4, 14), (4, 7, 2, 8)) == (20, 12, 6, 6)": {
      "result": true,
      "time": 0.0557551383972168,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}