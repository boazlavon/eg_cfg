{
  "code": "def max_len_sub(arr, diff):\n    n = len(arr)\n    dp = [0]*n\n    max_len = 0\n    for i in range(n):\n        dp[i] = [arr[i]]\n        for j in range(i):\n            if arr[i] - arr[j] == diff:\n                dp[i].append(dp[j] + [arr[i]])\n        max_len = max(max_len, max(dp[i]))\n    return max_len",
  "results": {
    "assert max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 8) == 5": {
      "result": false,
      "time": 0.03717231750488281,
      "error": null
    },
    "assert max_len_sub([-2, -1, 5, -1, 4, 0, 3], 7) == 4": {
      "result": false,
      "time": 0.041220664978027344,
      "error": null
    },
    "assert max_len_sub([9, 11, 13, 15, 18], 5) == 1": {
      "result": false,
      "time": 0.035501718521118164,
      "error": null
    },
    "assert max_len_sub([7, 1, 4, 8, 6, 9, 7, 12], 5) == 2": {
      "result": false,
      "time": 0.043079376220703125,
      "error": null
    },
    "assert max_len_sub([4, 10, 9, 6, 10, 11, 6, 13], 7) == 4": {
      "result": false,
      "time": 0.03371930122375488,
      "error": null
    },
    "assert max_len_sub([3, 2, 9, 7, 4, 7, 10, 6], 3) == 2": {
      "result": false,
      "time": 0.03757786750793457,
      "error": null
    },
    "assert max_len_sub([4, 8, 9, 7, 8, 6, 2, 4], 6) == 3": {
      "result": false,
      "time": 0.04504704475402832,
      "error": null
    },
    "assert max_len_sub([6, 7, 10, 1, 4, 9, 7, 9], 4) == 2": {
      "result": false,
      "time": 0.034540653228759766,
      "error": null
    },
    "assert max_len_sub([4, 3, 8, 3, 9, 1, 4, 9], 8) == 4": {
      "result": false,
      "time": 0.03419756889343262,
      "error": null
    },
    "assert max_len_sub([2, 5, 10, 5, 11, 10, 8, 12], 6) == 3": {
      "result": false,
      "time": 0.03883481025695801,
      "error": null
    },
    "assert max_len_sub([2, 6, 2, 4, 11, 4, 5, 7], 6) == 2": {
      "result": false,
      "time": 0.03346896171569824,
      "error": null
    },
    "assert max_len_sub([5, 6, 2, 1, 4, 9, 8, 8], 6) == 2": {
      "result": false,
      "time": 0.03020501136779785,
      "error": null
    },
    "assert max_len_sub([1, 5, 7, 4, 6, 10, 4, 3], 5) == 2": {
      "result": false,
      "time": 0.0360867977142334,
      "error": null
    },
    "assert max_len_sub([3, 8, 8, 6, 12, 7, 7, 7], 7) == 4": {
      "result": false,
      "time": 0.03207230567932129,
      "error": null
    },
    "assert max_len_sub([3, 5, 4, 8, 7, 5, 8, 8], 5) == 2": {
      "result": false,
      "time": 0.038126230239868164,
      "error": null
    },
    "assert max_len_sub([7, 6, 2, 4, 2, 11, 8, 10], 3) == 2": {
      "result": false,
      "time": 0.043523550033569336,
      "error": null
    },
    "assert max_len_sub([5, 6, 7, 3, 3, 10, 1, 10], 3) == 3": {
      "result": false,
      "time": 0.03368711471557617,
      "error": null
    },
    "assert max_len_sub([4, 9, 10, 4, 10, 2, 7, 9], 8) == 4": {
      "result": false,
      "time": 0.03547167778015137,
      "error": null
    },
    "assert max_len_sub([1, 5, 6, 7, 4, 6, 8, 12], 8) == 4": {
      "result": false,
      "time": 0.03378105163574219,
      "error": null
    },
    "assert max_len_sub([4, 8, 2, 3, 8, 5, 5, 9], 4) == 2": {
      "result": false,
      "time": 0.03916025161743164,
      "error": null
    },
    "assert max_len_sub([4, 9, 9, 4, 11, 9, 4, 10], 4) == 2": {
      "result": false,
      "time": 0.036490440368652344,
      "error": null
    },
    "assert max_len_sub([5, 10, 8, 8, 11, 2, 1, 11], 3) == 1": {
      "result": false,
      "time": 0.04094338417053223,
      "error": null
    },
    "assert max_len_sub([3, 4, 11, 5, 9, 4, 3, 5], 4) == 3": {
      "result": false,
      "time": 0.038178205490112305,
      "error": null
    },
    "assert max_len_sub([4, 9, 2, 2, 9, 4, 8, 12], 6) == 2": {
      "result": false,
      "time": 0.03255629539489746,
      "error": null
    },
    "assert max_len_sub([2, 2, 8, 5, 7, 6, 6, 6], 4) == 2": {
      "result": false,
      "time": 0.03439640998840332,
      "error": null
    },
    "assert max_len_sub([1, 5, 10, 7, 11, 9, 7, 8], 7) == 2": {
      "result": false,
      "time": 0.0303804874420166,
      "error": null
    },
    "assert max_len_sub([7, 4, 1, 3, 8, 9, 5, 3], 3) == 1": {
      "result": false,
      "time": 0.03754377365112305,
      "error": null
    },
    "assert max_len_sub([2, 8, 2, 5, 6, 7, 2, 3], 4) == 2": {
      "result": false,
      "time": 0.038217782974243164,
      "error": null
    },
    "assert max_len_sub([4, 9, 2, 2, 8, 1, 3, 9], 3) == 1": {
      "result": false,
      "time": 0.035791635513305664,
      "error": null
    },
    "assert max_len_sub([1, 1, 8, 4, 5, 6, 6, 11], 6) == 3": {
      "result": false,
      "time": 0.03898882865905762,
      "error": null
    },
    "assert max_len_sub([4, 7, 3, 4, 3, 5, 1, 12], 3) == 2": {
      "result": false,
      "time": 0.03281450271606445,
      "error": null
    },
    "assert max_len_sub([1, 1, 3, 8, 10, 5, 9, 13], 4) == 2": {
      "result": false,
      "time": 0.03688645362854004,
      "error": null
    },
    "assert max_len_sub([1, 2, 11, 4, 7, 4, 5, 8], 6) == 2": {
      "result": false,
      "time": 0.03553485870361328,
      "error": null
    },
    "assert max_len_sub([1, 1, 9, 8, 6, 3, 1, 4], 4) == 2": {
      "result": false,
      "time": 0.03778243064880371,
      "error": null
    },
    "assert max_len_sub([2, 5, 7, 4, 11, 9, 4, 13], 7) == 3": {
      "result": false,
      "time": 0.03642153739929199,
      "error": null
    },
    "assert max_len_sub([7, 6, 2, 1, 12, 1, 1, 13], 8) == 4": {
      "result": false,
      "time": 0.04854583740234375,
      "error": null
    },
    "assert max_len_sub([-6, 2, 9, 3, 6, 4, 8], 3) == 1": {
      "result": false,
      "time": 0.036696672439575195,
      "error": null
    },
    "assert max_len_sub([-7, -2, 7, 2, 1, 3, 1], 3) == 1": {
      "result": false,
      "time": 0.03563332557678223,
      "error": null
    },
    "assert max_len_sub([-4, -4, 5, -5, 2, 1, 1], 3) == 2": {
      "result": false,
      "time": 0.03801274299621582,
      "error": null
    },
    "assert max_len_sub([-1, -2, 4, -1, 2, 3, 5], 4) == 3": {
      "result": false,
      "time": 0.03538823127746582,
      "error": null
    },
    "assert max_len_sub([-2, -6, 1, -1, 1, 3, 6], 2) == 1": {
      "result": false,
      "time": 0.03616738319396973,
      "error": null
    },
    "assert max_len_sub([-6, -6, 5, -4, 7, 4, 3], 6) == 2": {
      "result": false,
      "time": 0.028497695922851562,
      "error": null
    },
    "assert max_len_sub([-4, 1, 7, 1, 4, 1, 7], 2) == 1": {
      "result": false,
      "time": 0.03587198257446289,
      "error": null
    },
    "assert max_len_sub([2, 0, 1, 1, 2, 5, 7], 7) == 4": {
      "result": false,
      "time": 0.03436756134033203,
      "error": null
    },
    "assert max_len_sub([0, -2, 8, -1, 6, 1, 7], 3) == 1": {
      "result": false,
      "time": 0.038079023361206055,
      "error": null
    },
    "assert max_len_sub([-7, 3, 7, 0, 7, 5, 5], 7) == 2": {
      "result": false,
      "time": 0.03672337532043457,
      "error": null
    },
    "assert max_len_sub([-6, -4, 4, 0, 5, 5, 2], 4) == 1": {
      "result": false,
      "time": 0.030098915100097656,
      "error": null
    },
    "assert max_len_sub([-2, -3, 3, -1, 2, 3, 7], 3) == 2": {
      "result": false,
      "time": 0.03776741027832031,
      "error": null
    },
    "assert max_len_sub([0, -1, 2, -6, 1, 1, 8], 5) == 2": {
      "result": false,
      "time": 0.040242671966552734,
      "error": null
    },
    "assert max_len_sub([1, -3, 9, -1, 8, 3, 7], 7) == 3": {
      "result": false,
      "time": 0.038872718811035156,
      "error": null
    },
    "assert max_len_sub([-1, 2, 2, -6, 9, 5, 1], 2) == 1": {
      "result": false,
      "time": 0.034865617752075195,
      "error": null
    },
    "assert max_len_sub([1, -5, 1, -2, 5, 3, 3], 7) == 2": {
      "result": false,
      "time": 0.03653883934020996,
      "error": null
    },
    "assert max_len_sub([-4, -4, 1, 4, 7, 4, 1], 6) == 2": {
      "result": false,
      "time": 0.03987264633178711,
      "error": null
    },
    "assert max_len_sub([1, 2, 4, -6, 7, 5, 2], 3) == 2": {
      "result": false,
      "time": 0.03942465782165527,
      "error": null
    },
    "assert max_len_sub([-4, -3, 2, -4, 6, 1, 4], 4) == 3": {
      "result": false,
      "time": 0.03490877151489258,
      "error": null
    },
    "assert max_len_sub([1, -4, 9, -5, 2, 1, 5], 2) == 1": {
      "result": false,
      "time": 0.03641533851623535,
      "error": null
    },
    "assert max_len_sub([2, -4, 2, -2, 5, 3, 8], 7) == 3": {
      "result": false,
      "time": 0.0373077392578125,
      "error": null
    },
    "assert max_len_sub([-7, 0, 8, 3, 8, 1, 3], 4) == 1": {
      "result": false,
      "time": 0.03848910331726074,
      "error": null
    },
    "assert max_len_sub([2, -2, 6, -4, 3, 3, 7], 4) == 1": {
      "result": false,
      "time": 0.03591609001159668,
      "error": null
    },
    "assert max_len_sub([-7, 3, 8, -4, 7, 1, 4], 2) == 1": {
      "result": false,
      "time": 0.03358650207519531,
      "error": null
    },
    "assert max_len_sub([-3, 3, 10, -4, 2, 4, 6], 2) == 1": {
      "result": false,
      "time": 0.03630423545837402,
      "error": null
    },
    "assert max_len_sub([0, -1, 6, -1, 6, 4, 6], 7) == 3": {
      "result": false,
      "time": 0.04042553901672363,
      "error": null
    },
    "assert max_len_sub([1, -1, 7, 0, 3, 1, 7], 4) == 2": {
      "result": false,
      "time": 0.03841280937194824,
      "error": null
    },
    "assert max_len_sub([-1, -1, 1, -1, 9, 4, 1], 5) == 3": {
      "result": false,
      "time": 0.03526568412780762,
      "error": null
    },
    "assert max_len_sub([-7, 0, 8, -1, 6, 5, 1], 2) == 1": {
      "result": false,
      "time": 0.03562808036804199,
      "error": null
    },
    "assert max_len_sub([0, -1, 6, -3, 5, 4, 6], 7) == 3": {
      "result": false,
      "time": 0.038419246673583984,
      "error": null
    },
    "assert max_len_sub([0, 2, 2, -2, 7, 3, 8], 4) == 2": {
      "result": false,
      "time": 0.038934946060180664,
      "error": null
    },
    "assert max_len_sub([-3, -1, 4, 2, 3, 5, 8], 2) == 1": {
      "result": false,
      "time": 0.037229061126708984,
      "error": null
    },
    "assert max_len_sub([-4, 0, 10, -6, 5, 2, 5], 7) == 2": {
      "result": false,
      "time": 0.03510880470275879,
      "error": null
    },
    "assert max_len_sub([13, 13, 13, 17, 16], 1) == 1": {
      "result": false,
      "time": 0.03774285316467285,
      "error": null
    },
    "assert max_len_sub([6, 6, 17, 10, 22], 5) == 2": {
      "result": false,
      "time": 0.039867401123046875,
      "error": null
    },
    "assert max_len_sub([4, 7, 18, 17, 14], 3) == 1": {
      "result": false,
      "time": 0.03566098213195801,
      "error": null
    },
    "assert max_len_sub([10, 14, 10, 12, 16], 3) == 2": {
      "result": false,
      "time": 0.034018754959106445,
      "error": null
    },
    "assert max_len_sub([9, 6, 11, 18, 19], 1) == 1": {
      "result": false,
      "time": 0.036516666412353516,
      "error": null
    },
    "assert max_len_sub([7, 8, 11, 17, 18], 4) == 2": {
      "result": false,
      "time": 0.03836393356323242,
      "error": null
    },
    "assert max_len_sub([11, 11, 14, 20, 18], 2) == 2": {
      "result": false,
      "time": 0.04068303108215332,
      "error": null
    },
    "assert max_len_sub([9, 6, 12, 19, 18], 5) == 2": {
      "result": false,
      "time": 0.038614511489868164,
      "error": null
    },
    "assert max_len_sub([4, 10, 13, 12, 20], 3) == 1": {
      "result": false,
      "time": 0.03665757179260254,
      "error": null
    },
    "assert max_len_sub([12, 13, 9, 17, 16], 3) == 2": {
      "result": false,
      "time": 0.03607463836669922,
      "error": null
    },
    "assert max_len_sub([4, 9, 8, 11, 23], 2) == 1": {
      "result": false,
      "time": 0.03550839424133301,
      "error": null
    },
    "assert max_len_sub([7, 11, 16, 20, 19], 5) == 2": {
      "result": false,
      "time": 0.041103363037109375,
      "error": null
    },
    "assert max_len_sub([9, 12, 11, 20, 16], 2) == 1": {
      "result": false,
      "time": 0.03540515899658203,
      "error": null
    },
    "assert max_len_sub([11, 11, 18, 12, 21], 4) == 3": {
      "result": false,
      "time": 0.04091811180114746,
      "error": null
    },
    "assert max_len_sub([13, 9, 11, 12, 20], 5) == 2": {
      "result": false,
      "time": 0.03850436210632324,
      "error": null
    },
    "assert max_len_sub([13, 15, 18, 10, 16], 4) == 1": {
      "result": false,
      "time": 0.038022756576538086,
      "error": null
    },
    "assert max_len_sub([11, 14, 18, 11, 22], 1) == 1": {
      "result": false,
      "time": 0.03316450119018555,
      "error": null
    },
    "assert max_len_sub([14, 8, 10, 19, 16], 1) == 1": {
      "result": false,
      "time": 0.034569501876831055,
      "error": null
    },
    "assert max_len_sub([5, 9, 18, 13, 21], 1) == 1": {
      "result": false,
      "time": 0.034002065658569336,
      "error": null
    },
    "assert max_len_sub([12, 12, 14, 17, 22], 2) == 2": {
      "result": false,
      "time": 0.038457393646240234,
      "error": null
    },
    "assert max_len_sub([9, 13, 11, 20, 19], 5) == 2": {
      "result": false,
      "time": 0.03355288505554199,
      "error": null
    },
    "assert max_len_sub([7, 6, 13, 16, 17], 3) == 2": {
      "result": false,
      "time": 0.0421295166015625,
      "error": null
    },
    "assert max_len_sub([6, 12, 18, 18, 17], 4) == 2": {
      "result": false,
      "time": 0.03921842575073242,
      "error": null
    },
    "assert max_len_sub([9, 11, 18, 19, 18], 3) == 1": {
      "result": false,
      "time": 0.03912663459777832,
      "error": null
    },
    "assert max_len_sub([9, 11, 11, 10, 21], 5) == 3": {
      "result": false,
      "time": 0.03559708595275879,
      "error": null
    },
    "assert max_len_sub([12, 16, 12, 15, 16], 1) == 1": {
      "result": false,
      "time": 0.04329562187194824,
      "error": null
    },
    "assert max_len_sub([9, 6, 11, 15, 18], 2) == 1": {
      "result": false,
      "time": 0.0384521484375,
      "error": null
    },
    "assert max_len_sub([9, 13, 11, 14, 22], 4) == 2": {
      "result": false,
      "time": 0.03238844871520996,
      "error": null
    },
    "assert max_len_sub([7, 9, 13, 18, 18], 2) == 1": {
      "result": false,
      "time": 0.029996395111083984,
      "error": null
    },
    "assert max_len_sub([10, 13, 11, 15, 21], 3) == 2": {
      "result": false,
      "time": 0.03614497184753418,
      "error": null
    },
    "assert max_len_sub([6, 8, 11, 15, 22], 4) == 1": {
      "result": false,
      "time": 0.03268694877624512,
      "error": null
    },
    "assert max_len_sub([8, 14, 18, 13, 14], 3) == 1": {
      "result": false,
      "time": 0.04180717468261719,
      "error": null
    },
    "assert max_len_sub([4, 13, 17, 15, 21], 2) == 1": {
      "result": false,
      "time": 0.029776334762573242,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": "",
  "has_testcase_error": false
}