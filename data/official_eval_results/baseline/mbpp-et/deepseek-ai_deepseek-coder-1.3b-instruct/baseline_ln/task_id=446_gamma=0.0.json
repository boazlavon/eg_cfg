{
  "code": "def count_Occurrence(tup, lst):\n    count = 0\n    for i in lst:\n        count += tup.count(i)\n    return count\n",
  "results": {
    "assert count_Occurrence(('a', 'a', 'c', 'b', 'd'),['a', 'b'] ) == 3": {
      "result": true,
      "time": 0.04397988319396973,
      "error": null
    },
    "assert count_Occurrence((1, 2, 3, 1, 4, 6, 7, 1, 4),[1, 4, 7]) == 6": {
      "result": true,
      "time": 0.040099382400512695,
      "error": null
    },
    "assert count_Occurrence((1,2,3,4,5,6),[1,2]) == 2": {
      "result": true,
      "time": 0.04159975051879883,
      "error": null
    },
    "assert count_Occurrence(('y', 'k', 'a', 'b', 'd'), ['l', 'l']) == 0": {
      "result": true,
      "time": 0.044472455978393555,
      "error": null
    },
    "assert count_Occurrence(('y', 'm', 'e', 'b', 'l'), ['f', 'n']) == 0": {
      "result": true,
      "time": 0.04915189743041992,
      "error": null
    },
    "assert count_Occurrence(('o', 'f', 'j', 'm', 'm'), ['y', 'e']) == 0": {
      "result": true,
      "time": 0.05010247230529785,
      "error": null
    },
    "assert count_Occurrence(('u', 'q', 'h', 'f', 'r'), ['m', 'c']) == 0": {
      "result": true,
      "time": 0.03979992866516113,
      "error": null
    },
    "assert count_Occurrence(('v', 'g', 'r', 'f', 'y'), ['r', 'g']) == 2": {
      "result": true,
      "time": 0.03811502456665039,
      "error": null
    },
    "assert count_Occurrence(('a', 'w', 'l', 'o', 'b'), ['g', 's']) == 0": {
      "result": true,
      "time": 0.040802955627441406,
      "error": null
    },
    "assert count_Occurrence(('u', 'p', 'g', 'q', 'a'), ['k', 'w']) == 0": {
      "result": true,
      "time": 0.042766571044921875,
      "error": null
    },
    "assert count_Occurrence(('q', 'w', 'o', 'b', 'u'), ['b', 'm']) == 1": {
      "result": true,
      "time": 0.042619943618774414,
      "error": null
    },
    "assert count_Occurrence(('o', 'h', 'q', 'n', 'v'), ['y', 'l']) == 0": {
      "result": true,
      "time": 0.03421473503112793,
      "error": null
    },
    "assert count_Occurrence(('p', 'f', 'e', 'l', 'v'), ['v', 'g']) == 1": {
      "result": true,
      "time": 0.039565086364746094,
      "error": null
    },
    "assert count_Occurrence(('j', 'u', 'c', 'u', 'r'), ['f', 't']) == 0": {
      "result": true,
      "time": 0.03800177574157715,
      "error": null
    },
    "assert count_Occurrence(('h', 'q', 'w', 'r', 'z'), ['b', 'l']) == 0": {
      "result": true,
      "time": 0.040250301361083984,
      "error": null
    },
    "assert count_Occurrence(('m', 'u', 'a', 'z', 's'), ['g', 's']) == 1": {
      "result": true,
      "time": 0.03929328918457031,
      "error": null
    },
    "assert count_Occurrence(('x', 'v', 'x', 't', 'l'), ['g', 'o']) == 0": {
      "result": true,
      "time": 0.03389263153076172,
      "error": null
    },
    "assert count_Occurrence(('z', 'o', 's', 'v', 'g'), ['u', 'k']) == 0": {
      "result": true,
      "time": 0.035132408142089844,
      "error": null
    },
    "assert count_Occurrence(('p', 'w', 'm', 'f', 'b'), ['w', 'f']) == 2": {
      "result": true,
      "time": 0.033539772033691406,
      "error": null
    },
    "assert count_Occurrence(('w', 'u', 'e', 'd', 'v'), ['x', 'o']) == 0": {
      "result": true,
      "time": 0.0385127067565918,
      "error": null
    },
    "assert count_Occurrence(('c', 'k', 'y', 'k', 'v'), ['n', 'f']) == 0": {
      "result": true,
      "time": 0.03706479072570801,
      "error": null
    },
    "assert count_Occurrence(('t', 'l', 'h', 'l', 'i'), ['n', 'o']) == 0": {
      "result": true,
      "time": 0.037394046783447266,
      "error": null
    },
    "assert count_Occurrence(('y', 'a', 'd', 'a', 'z'), ['y', 'w']) == 1": {
      "result": true,
      "time": 0.04098916053771973,
      "error": null
    },
    "assert count_Occurrence(('f', 't', 'q', 'm', 'x'), ['f', 'l']) == 1": {
      "result": true,
      "time": 0.041123151779174805,
      "error": null
    },
    "assert count_Occurrence(('n', 'c', 'v', 'h', 'r'), ['u', 'a']) == 0": {
      "result": true,
      "time": 0.03616786003112793,
      "error": null
    },
    "assert count_Occurrence(('p', 'c', 'k', 'f', 'i'), ['p', 'r']) == 1": {
      "result": true,
      "time": 0.038655757904052734,
      "error": null
    },
    "assert count_Occurrence(('p', 'i', 'g', 't', 'q'), ['e', 'k']) == 0": {
      "result": true,
      "time": 0.03796696662902832,
      "error": null
    },
    "assert count_Occurrence(('f', 'c', 'p', 'q', 'r'), ['g', 'a']) == 0": {
      "result": true,
      "time": 0.04235577583312988,
      "error": null
    },
    "assert count_Occurrence(('m', 's', 'i', 'o', 'x'), ['z', 'e']) == 0": {
      "result": true,
      "time": 0.04241585731506348,
      "error": null
    },
    "assert count_Occurrence(('y', 'q', 'w', 'q', 'm'), ['y', 'v']) == 1": {
      "result": true,
      "time": 0.04050874710083008,
      "error": null
    },
    "assert count_Occurrence(('y', 'r', 'l', 'k', 'c'), ['a', 'p']) == 0": {
      "result": true,
      "time": 0.03820300102233887,
      "error": null
    },
    "assert count_Occurrence(('f', 'y', 's', 'c', 'x'), ['n', 'z']) == 0": {
      "result": true,
      "time": 0.03329873085021973,
      "error": null
    },
    "assert count_Occurrence(('j', 'u', 'n', 'b', 'u'), ['t', 'a']) == 0": {
      "result": true,
      "time": 0.04184603691101074,
      "error": null
    },
    "assert count_Occurrence(('x', 'x', 'f', 'a', 'l'), ['r', 'j']) == 0": {
      "result": true,
      "time": 0.03941631317138672,
      "error": null
    },
    "assert count_Occurrence(('d', 'g', 'w', 'i', 'e'), ['h', 'e']) == 1": {
      "result": true,
      "time": 0.041190385818481445,
      "error": null
    },
    "assert count_Occurrence(('s', 't', 'h', 'c', 'm'), ['r', 'p']) == 0": {
      "result": true,
      "time": 0.03557252883911133,
      "error": null
    },
    "assert count_Occurrence((1, 5, 1, 1, 3, 9, 5, 2, 4), [1, 1, 2]) == 4": {
      "result": false,
      "time": 0.04030132293701172,
      "error": null
    },
    "assert count_Occurrence((4, 5, 7, 3, 4, 9, 8, 5, 4), [3, 9, 11]) == 2": {
      "result": true,
      "time": 0.04352307319641113,
      "error": null
    },
    "assert count_Occurrence((3, 4, 3, 2, 3, 6, 6, 4, 6), [4, 1, 4]) == 2": {
      "result": false,
      "time": 0.04237723350524902,
      "error": null
    },
    "assert count_Occurrence((1, 4, 1, 4, 9, 10, 4, 1, 9), [3, 1, 2]) == 3": {
      "result": true,
      "time": 0.037180185317993164,
      "error": null
    },
    "assert count_Occurrence((4, 5, 8, 2, 2, 6, 5, 2, 1), [1, 2, 5]) == 6": {
      "result": true,
      "time": 0.04297995567321777,
      "error": null
    },
    "assert count_Occurrence((6, 6, 7, 3, 1, 6, 6, 4, 9), [3, 4, 5]) == 2": {
      "result": true,
      "time": 0.03584861755371094,
      "error": null
    },
    "assert count_Occurrence((4, 2, 6, 6, 8, 2, 7, 5, 6), [1, 7, 6]) == 4": {
      "result": true,
      "time": 0.04082059860229492,
      "error": null
    },
    "assert count_Occurrence((5, 7, 5, 4, 5, 11, 8, 2, 5), [5, 9, 9]) == 4": {
      "result": true,
      "time": 0.048331260681152344,
      "error": null
    },
    "assert count_Occurrence((1, 3, 3, 4, 5, 3, 11, 1, 8), [2, 5, 8]) == 2": {
      "result": true,
      "time": 0.04347944259643555,
      "error": null
    },
    "assert count_Occurrence((1, 6, 3, 2, 9, 7, 4, 4, 9), [5, 3, 8]) == 1": {
      "result": true,
      "time": 0.04155778884887695,
      "error": null
    },
    "assert count_Occurrence((2, 6, 5, 5, 8, 3, 12, 6, 3), [2, 5, 10]) == 3": {
      "result": true,
      "time": 0.0405728816986084,
      "error": null
    },
    "assert count_Occurrence((5, 5, 7, 3, 9, 11, 3, 4, 5), [4, 1, 2]) == 1": {
      "result": true,
      "time": 0.04731416702270508,
      "error": null
    },
    "assert count_Occurrence((6, 5, 6, 2, 3, 3, 8, 3, 7), [4, 5, 9]) == 1": {
      "result": true,
      "time": 0.035447120666503906,
      "error": null
    },
    "assert count_Occurrence((2, 5, 7, 1, 2, 7, 10, 2, 4), [4, 8, 4]) == 1": {
      "result": false,
      "time": 0.03514981269836426,
      "error": null
    },
    "assert count_Occurrence((2, 7, 3, 5, 2, 11, 5, 2, 5), [6, 3, 6]) == 1": {
      "result": true,
      "time": 0.034628868103027344,
      "error": null
    },
    "assert count_Occurrence((1, 7, 2, 4, 1, 1, 3, 3, 3), [5, 1, 7]) == 4": {
      "result": true,
      "time": 0.035352468490600586,
      "error": null
    },
    "assert count_Occurrence((4, 3, 6, 6, 5, 5, 11, 2, 2), [3, 8, 6]) == 3": {
      "result": true,
      "time": 0.0414738655090332,
      "error": null
    },
    "assert count_Occurrence((6, 4, 7, 5, 6, 6, 12, 1, 4), [6, 7, 6]) == 4": {
      "result": false,
      "time": 0.04124903678894043,
      "error": null
    },
    "assert count_Occurrence((5, 6, 7, 1, 4, 5, 5, 6, 7), [2, 6, 7]) == 4": {
      "result": true,
      "time": 0.031713008880615234,
      "error": null
    },
    "assert count_Occurrence((5, 3, 3, 4, 5, 4, 3, 6, 2), [1, 3, 4]) == 5": {
      "result": true,
      "time": 0.03867650032043457,
      "error": null
    },
    "assert count_Occurrence((2, 2, 5, 6, 6, 8, 9, 5, 4), [3, 9, 8]) == 2": {
      "result": true,
      "time": 0.04214310646057129,
      "error": null
    },
    "assert count_Occurrence((4, 6, 3, 1, 9, 3, 3, 5, 9), [4, 9, 10]) == 3": {
      "result": true,
      "time": 0.03973031044006348,
      "error": null
    },
    "assert count_Occurrence((4, 7, 3, 4, 4, 6, 5, 2, 2), [6, 2, 4]) == 6": {
      "result": true,
      "time": 0.04143953323364258,
      "error": null
    },
    "assert count_Occurrence((6, 4, 5, 3, 5, 6, 7, 6, 8), [6, 3, 5]) == 6": {
      "result": true,
      "time": 0.03833293914794922,
      "error": null
    },
    "assert count_Occurrence((5, 5, 3, 6, 5, 8, 9, 2, 2), [2, 1, 9]) == 3": {
      "result": true,
      "time": 0.03654813766479492,
      "error": null
    },
    "assert count_Occurrence((3, 1, 4, 2, 7, 3, 4, 4, 9), [5, 5, 4]) == 3": {
      "result": true,
      "time": 0.04146409034729004,
      "error": null
    },
    "assert count_Occurrence((5, 7, 8, 1, 4, 10, 2, 5, 5), [5, 8, 11]) == 4": {
      "result": true,
      "time": 0.03645896911621094,
      "error": null
    },
    "assert count_Occurrence((5, 6, 5, 1, 9, 11, 10, 6, 7), [6, 5, 7]) == 5": {
      "result": true,
      "time": 0.03768730163574219,
      "error": null
    },
    "assert count_Occurrence((3, 3, 6, 1, 9, 1, 4, 3, 5), [5, 1, 4]) == 4": {
      "result": true,
      "time": 0.0406336784362793,
      "error": null
    },
    "assert count_Occurrence((5, 2, 6, 4, 8, 6, 8, 6, 3), [1, 1, 12]) == 0": {
      "result": true,
      "time": 0.03651881217956543,
      "error": null
    },
    "assert count_Occurrence((6, 2, 5, 3, 8, 8, 6, 4, 2), [6, 7, 3]) == 3": {
      "result": true,
      "time": 0.03759431838989258,
      "error": null
    },
    "assert count_Occurrence((5, 2, 7, 5, 9, 10, 6, 2, 9), [6, 4, 3]) == 1": {
      "result": true,
      "time": 0.03818988800048828,
      "error": null
    },
    "assert count_Occurrence((4, 6, 7, 2, 3, 2, 2, 6, 4), [4, 5, 4]) == 2": {
      "result": false,
      "time": 0.03570055961608887,
      "error": null
    },
    "assert count_Occurrence((1, 4, 2, 5, 3, 7), [3, 3]) == 1": {
      "result": false,
      "time": 0.04097557067871094,
      "error": null
    },
    "assert count_Occurrence((2, 4, 8, 2, 6, 2), [3, 5]) == 0": {
      "result": true,
      "time": 0.038254499435424805,
      "error": null
    },
    "assert count_Occurrence((4, 7, 3, 9, 10, 5), [3, 3]) == 1": {
      "result": false,
      "time": 0.038567304611206055,
      "error": null
    },
    "assert count_Occurrence((3, 3, 2, 8, 6, 7), [1, 3]) == 2": {
      "result": true,
      "time": 0.04077267646789551,
      "error": null
    },
    "assert count_Occurrence((3, 3, 1, 7, 7, 4), [6, 6]) == 0": {
      "result": true,
      "time": 0.035730600357055664,
      "error": null
    },
    "assert count_Occurrence((4, 3, 3, 7, 6, 5), [3, 4]) == 3": {
      "result": true,
      "time": 0.03827095031738281,
      "error": null
    },
    "assert count_Occurrence((1, 1, 7, 7, 9, 9), [2, 5]) == 0": {
      "result": true,
      "time": 0.03731107711791992,
      "error": null
    },
    "assert count_Occurrence((6, 7, 2, 2, 4, 11), [1, 7]) == 1": {
      "result": true,
      "time": 0.036977529525756836,
      "error": null
    },
    "assert count_Occurrence((4, 5, 6, 3, 5, 4), [2, 3]) == 1": {
      "result": true,
      "time": 0.04176020622253418,
      "error": null
    },
    "assert count_Occurrence((6, 6, 2, 9, 10, 3), [4, 1]) == 0": {
      "result": true,
      "time": 0.03329038619995117,
      "error": null
    },
    "assert count_Occurrence((4, 3, 3, 2, 4, 6), [4, 6]) == 3": {
      "result": true,
      "time": 0.041329145431518555,
      "error": null
    },
    "assert count_Occurrence((4, 7, 2, 9, 5, 7), [3, 6]) == 0": {
      "result": true,
      "time": 0.04230785369873047,
      "error": null
    },
    "assert count_Occurrence((1, 6, 1, 3, 1, 2), [3, 5]) == 1": {
      "result": true,
      "time": 0.038986921310424805,
      "error": null
    },
    "assert count_Occurrence((5, 4, 7, 7, 3, 10), [4, 2]) == 1": {
      "result": true,
      "time": 0.036957502365112305,
      "error": null
    },
    "assert count_Occurrence((3, 2, 1, 4, 3, 6), [6, 6]) == 1": {
      "result": false,
      "time": 0.03494572639465332,
      "error": null
    },
    "assert count_Occurrence((2, 2, 7, 3, 5, 8), [5, 1]) == 1": {
      "result": true,
      "time": 0.03292512893676758,
      "error": null
    },
    "assert count_Occurrence((2, 2, 7, 4, 9, 10), [6, 6]) == 0": {
      "result": true,
      "time": 0.03890848159790039,
      "error": null
    },
    "assert count_Occurrence((6, 2, 1, 3, 7, 10), [5, 2]) == 1": {
      "result": true,
      "time": 0.0382843017578125,
      "error": null
    },
    "assert count_Occurrence((3, 7, 8, 8, 10, 4), [5, 6]) == 0": {
      "result": true,
      "time": 0.037198781967163086,
      "error": null
    },
    "assert count_Occurrence((5, 7, 2, 4, 6, 6), [5, 4]) == 2": {
      "result": true,
      "time": 0.041690826416015625,
      "error": null
    },
    "assert count_Occurrence((3, 6, 3, 2, 7, 6), [3, 3]) == 2": {
      "result": false,
      "time": 0.03962588310241699,
      "error": null
    },
    "assert count_Occurrence((5, 3, 1, 5, 1, 10), [2, 3]) == 1": {
      "result": true,
      "time": 0.040315866470336914,
      "error": null
    },
    "assert count_Occurrence((1, 6, 2, 5, 4, 3), [2, 1]) == 2": {
      "result": true,
      "time": 0.042760372161865234,
      "error": null
    },
    "assert count_Occurrence((6, 4, 5, 8, 1, 5), [4, 3]) == 1": {
      "result": true,
      "time": 0.04747462272644043,
      "error": null
    },
    "assert count_Occurrence((4, 1, 1, 5, 9, 6), [4, 5]) == 2": {
      "result": true,
      "time": 0.04055190086364746,
      "error": null
    },
    "assert count_Occurrence((4, 3, 8, 3, 8, 8), [3, 4]) == 3": {
      "result": true,
      "time": 0.04115891456604004,
      "error": null
    },
    "assert count_Occurrence((2, 7, 3, 9, 2, 3), [1, 5]) == 0": {
      "result": true,
      "time": 0.0396428108215332,
      "error": null
    },
    "assert count_Occurrence((4, 5, 6, 4, 9, 2), [4, 5]) == 3": {
      "result": true,
      "time": 0.038420915603637695,
      "error": null
    },
    "assert count_Occurrence((3, 4, 3, 5, 5, 10), [4, 1]) == 1": {
      "result": true,
      "time": 0.035152435302734375,
      "error": null
    },
    "assert count_Occurrence((5, 3, 7, 3, 1, 3), [1, 7]) == 2": {
      "result": true,
      "time": 0.03170657157897949,
      "error": null
    },
    "assert count_Occurrence((2, 6, 3, 9, 1, 5), [4, 3]) == 1": {
      "result": true,
      "time": 0.03333401679992676,
      "error": null
    },
    "assert count_Occurrence((3, 5, 7, 1, 1, 6), [1, 4]) == 2": {
      "result": true,
      "time": 0.03982734680175781,
      "error": null
    },
    "assert count_Occurrence((3, 7, 6, 3, 4, 4), [3, 6]) == 3": {
      "result": true,
      "time": 0.04010510444641113,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.9117647058823529,
  "general_error": "",
  "has_testcase_error": false
}