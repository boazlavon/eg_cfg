{
  "code": "def magic_square_test(square):\n    n = len(square)\n    row_sum = [0]*n\n    col_sum = [0]*n\n    diag_sum1 = 0\n    diag_sum2 = 0\n\n    for i in range(n):\n        for j in range(n):\n            row_sum[i] += square[i][j]\n            col_sum[j] += square[i][j]\n            if i == j:\n                diag_sum1 += square[i][j]\n            if i + j == n-1:\n                diag_sum2 += square[i][j]\n\n    if max(row_sum) != max(col_sum) or max(row_sum) != max(col_sum) or max(row_sum) != max(col_sum) or max(row_sum) != max(col_sum):\n        return False\n\n    if diag_sum1 != diag_sum2 or diag_sum1 != diag_sum2 or diag_sum1 != diag_sum2:\n        return False\n\n    return True\n",
  "results": {
    "assert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True": {
      "result": true,
      "time": 0.03126263618469238,
      "error": null
    },
    "assert magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 8]])==True": {
      "result": true,
      "time": 0.029563426971435547,
      "error": null
    },
    "assert magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 7]])==False": {
      "result": true,
      "time": 0.031213045120239258,
      "error": null
    },
    "assert magic_square_test([[8, 9, 3, 14], [7, 10, 9, 11], [16, 6, 13, 6], [9, 11, 17, 2]]) == False": {
      "result": true,
      "time": 0.02936530113220215,
      "error": null
    },
    "assert magic_square_test([[9, 10, 6, 17], [5, 8, 4, 11], [13, 1, 5, 9], [11, 10, 17, 8]]) == False": {
      "result": true,
      "time": 0.03404808044433594,
      "error": null
    },
    "assert magic_square_test([[2, 8, 3, 9], [3, 16, 5, 7], [12, 7, 5, 2], [12, 11, 12, 6]]) == False": {
      "result": true,
      "time": 0.03333449363708496,
      "error": null
    },
    "assert magic_square_test([[12, 12, 6, 10], [7, 10, 4, 9], [20, 8, 9, 8], [14, 8, 16, 3]]) == False": {
      "result": true,
      "time": 0.03492307662963867,
      "error": null
    },
    "assert magic_square_test([[12, 10, 1, 13], [4, 12, 3, 6], [18, 7, 5, 1], [4, 2, 15, 7]]) == False": {
      "result": true,
      "time": 0.03024768829345703,
      "error": null
    },
    "assert magic_square_test([[12, 17, 3, 9], [7, 9, 11, 8], [19, 1, 11, 1], [10, 9, 15, 7]]) == False": {
      "result": true,
      "time": 0.0315556526184082,
      "error": null
    },
    "assert magic_square_test([[11, 7, 2, 16], [7, 18, 4, 12], [16, 7, 13, 6], [10, 1, 18, 6]]) == False": {
      "result": true,
      "time": 0.033139705657958984,
      "error": null
    },
    "assert magic_square_test([[8, 7, 5, 15], [7, 13, 6, 8], [20, 2, 11, 9], [13, 6, 15, 4]]) == False": {
      "result": true,
      "time": 0.031102657318115234,
      "error": null
    },
    "assert magic_square_test([[10, 8, 3, 10], [1, 9, 7, 13], [16, 7, 14, 4], [7, 10, 18, 1]]) == False": {
      "result": true,
      "time": 0.030225515365600586,
      "error": null
    },
    "assert magic_square_test([[2, 17, 1, 10], [4, 15, 5, 11], [15, 6, 5, 7], [5, 1, 14, 8]]) == False": {
      "result": true,
      "time": 0.03609919548034668,
      "error": null
    },
    "assert magic_square_test([[6, 13, 5, 14], [5, 15, 11, 14], [12, 4, 15, 2], [13, 9, 13, 5]]) == False": {
      "result": true,
      "time": 0.030254602432250977,
      "error": null
    },
    "assert magic_square_test([[12, 14, 5, 9], [1, 11, 9, 14], [13, 5, 14, 8], [11, 7, 13, 4]]) == False": {
      "result": true,
      "time": 0.028964519500732422,
      "error": null
    },
    "assert magic_square_test([[2, 9, 2, 16], [7, 15, 4, 11], [21, 2, 13, 4], [10, 9, 20, 9]]) == False": {
      "result": true,
      "time": 0.029208660125732422,
      "error": null
    },
    "assert magic_square_test([[7, 11, 2, 16], [6, 10, 9, 8], [15, 4, 12, 6], [14, 10, 18, 9]]) == False": {
      "result": true,
      "time": 0.035665035247802734,
      "error": null
    },
    "assert magic_square_test([[9, 8, 3, 12], [6, 14, 5, 7], [13, 3, 6, 10], [12, 11, 15, 6]]) == False": {
      "result": true,
      "time": 0.027838706970214844,
      "error": null
    },
    "assert magic_square_test([[4, 10, 4, 17], [1, 14, 3, 12], [17, 6, 13, 1], [4, 8, 12, 8]]) == False": {
      "result": true,
      "time": 0.0303957462310791,
      "error": null
    },
    "assert magic_square_test([[9, 7, 6, 9], [6, 10, 8, 10], [19, 3, 5, 1], [8, 7, 18, 5]]) == False": {
      "result": true,
      "time": 0.03574681282043457,
      "error": null
    },
    "assert magic_square_test([[5, 13, 1, 12], [6, 16, 7, 10], [18, 4, 8, 5], [8, 5, 16, 4]]) == False": {
      "result": true,
      "time": 0.03514885902404785,
      "error": null
    },
    "assert magic_square_test([[8, 12, 3, 13], [4, 13, 13, 8], [17, 7, 15, 9], [14, 5, 14, 7]]) == False": {
      "result": true,
      "time": 0.03655815124511719,
      "error": null
    },
    "assert magic_square_test([[10, 9, 2, 18], [7, 9, 13, 13], [18, 7, 9, 4], [5, 9, 14, 8]]) == False": {
      "result": true,
      "time": 0.03156566619873047,
      "error": null
    },
    "assert magic_square_test([[5, 8, 5, 16], [6, 14, 9, 15], [20, 2, 13, 5], [7, 4, 18, 1]]) == False": {
      "result": true,
      "time": 0.03233981132507324,
      "error": null
    },
    "assert magic_square_test([[7, 14, 6, 9], [7, 14, 13, 8], [11, 6, 9, 5], [10, 3, 10, 6]]) == False": {
      "result": true,
      "time": 0.03682851791381836,
      "error": null
    },
    "assert magic_square_test([[7, 15, 5, 9], [2, 17, 7, 8], [21, 8, 8, 1], [10, 11, 15, 8]]) == False": {
      "result": true,
      "time": 0.03881549835205078,
      "error": null
    },
    "assert magic_square_test([[9, 14, 5, 19], [4, 15, 11, 16], [19, 6, 13, 7], [9, 7, 10, 1]]) == False": {
      "result": true,
      "time": 0.03280377388000488,
      "error": null
    },
    "assert magic_square_test([[12, 11, 6, 15], [6, 16, 5, 13], [19, 8, 11, 1], [13, 10, 11, 2]]) == False": {
      "result": true,
      "time": 0.031409502029418945,
      "error": null
    },
    "assert magic_square_test([[10, 11, 5, 11], [3, 18, 10, 15], [18, 6, 5, 3], [12, 5, 18, 3]]) == False": {
      "result": true,
      "time": 0.03674960136413574,
      "error": null
    },
    "assert magic_square_test([[7, 11, 4, 17], [2, 15, 4, 11], [17, 5, 5, 3], [8, 2, 20, 7]]) == False": {
      "result": true,
      "time": 0.03659701347351074,
      "error": null
    },
    "assert magic_square_test([[6, 16, 4, 15], [2, 15, 11, 8], [20, 6, 14, 3], [14, 3, 20, 7]]) == False": {
      "result": true,
      "time": 0.03357076644897461,
      "error": null
    },
    "assert magic_square_test([[8, 11, 3, 11], [2, 12, 9, 7], [21, 5, 9, 10], [14, 7, 11, 1]]) == False": {
      "result": true,
      "time": 0.04001951217651367,
      "error": null
    },
    "assert magic_square_test([[12, 17, 4, 14], [6, 9, 4, 16], [15, 5, 14, 5], [13, 3, 10, 7]]) == False": {
      "result": true,
      "time": 0.038574934005737305,
      "error": null
    },
    "assert magic_square_test([[11, 14, 2, 17], [5, 17, 4, 10], [14, 1, 8, 6], [4, 7, 14, 2]]) == False": {
      "result": true,
      "time": 0.034522056579589844,
      "error": null
    },
    "assert magic_square_test([[7, 16, 2, 10], [2, 17, 6, 13], [12, 5, 10, 5], [7, 1, 15, 1]]) == False": {
      "result": true,
      "time": 0.03687620162963867,
      "error": null
    },
    "assert magic_square_test([[12, 7, 4, 14], [7, 18, 5, 9], [17, 4, 12, 1], [10, 7, 17, 4]]) == False": {
      "result": true,
      "time": 0.033171653747558594,
      "error": null
    },
    "assert magic_square_test([[2, 2, 4], [5, 9, 5], [8, 2, 6]]) == False": {
      "result": true,
      "time": 0.038077354431152344,
      "error": null
    },
    "assert magic_square_test([[7, 10, 8], [14, 9, 6], [1, 1, 13]]) == False": {
      "result": true,
      "time": 0.03488755226135254,
      "error": null
    },
    "assert magic_square_test([[7, 2, 3], [4, 1, 1], [7, 2, 9]]) == False": {
      "result": true,
      "time": 0.03314566612243652,
      "error": null
    },
    "assert magic_square_test([[4, 10, 11], [7, 5, 3], [5, 1, 4]]) == False": {
      "result": true,
      "time": 0.036508798599243164,
      "error": null
    },
    "assert magic_square_test([[3, 7, 1], [12, 5, 3], [1, 7, 6]]) == False": {
      "result": true,
      "time": 0.03736233711242676,
      "error": null
    },
    "assert magic_square_test([[6, 11, 4], [8, 1, 2], [9, 8, 11]]) == False": {
      "result": true,
      "time": 0.04118013381958008,
      "error": null
    },
    "assert magic_square_test([[4, 3, 8], [4, 5, 6], [4, 4, 10]]) == False": {
      "result": true,
      "time": 0.03139233589172363,
      "error": null
    },
    "assert magic_square_test([[5, 2, 11], [10, 4, 1], [3, 6, 4]]) == False": {
      "result": true,
      "time": 0.034456491470336914,
      "error": null
    },
    "assert magic_square_test([[3, 7, 9], [5, 5, 6], [6, 2, 7]]) == False": {
      "result": true,
      "time": 0.03555417060852051,
      "error": null
    },
    "assert magic_square_test([[2, 3, 7], [5, 1, 5], [6, 3, 8]]) == False": {
      "result": true,
      "time": 0.03964972496032715,
      "error": null
    },
    "assert magic_square_test([[1, 11, 3], [11, 10, 3], [5, 8, 3]]) == False": {
      "result": true,
      "time": 0.03243684768676758,
      "error": null
    },
    "assert magic_square_test([[4, 9, 4], [8, 8, 4], [2, 8, 10]]) == False": {
      "result": true,
      "time": 0.03847098350524902,
      "error": null
    },
    "assert magic_square_test([[2, 11, 3], [9, 8, 3], [9, 5, 11]]) == False": {
      "result": true,
      "time": 0.04171872138977051,
      "error": null
    },
    "assert magic_square_test([[5, 8, 3], [7, 10, 4], [3, 2, 11]]) == False": {
      "result": true,
      "time": 0.035607337951660156,
      "error": null
    },
    "assert magic_square_test([[3, 9, 11], [13, 1, 3], [6, 3, 9]]) == False": {
      "result": true,
      "time": 0.03291034698486328,
      "error": null
    },
    "assert magic_square_test([[6, 4, 2], [13, 2, 2], [6, 1, 12]]) == False": {
      "result": true,
      "time": 0.03923797607421875,
      "error": null
    },
    "assert magic_square_test([[1, 2, 7], [13, 10, 3], [3, 6, 7]]) == False": {
      "result": true,
      "time": 0.037889719009399414,
      "error": null
    },
    "assert magic_square_test([[7, 2, 9], [10, 8, 5], [2, 8, 13]]) == False": {
      "result": true,
      "time": 0.037485599517822266,
      "error": null
    },
    "assert magic_square_test([[4, 8, 4], [14, 10, 3], [2, 1, 9]]) == False": {
      "result": true,
      "time": 0.0409696102142334,
      "error": null
    },
    "assert magic_square_test([[4, 10, 10], [5, 6, 5], [1, 2, 11]]) == False": {
      "result": true,
      "time": 0.03285717964172363,
      "error": null
    },
    "assert magic_square_test([[7, 3, 2], [6, 5, 4], [6, 1, 9]]) == False": {
      "result": true,
      "time": 0.039681196212768555,
      "error": null
    },
    "assert magic_square_test([[6, 3, 2], [11, 2, 6], [2, 7, 11]]) == False": {
      "result": true,
      "time": 0.03784966468811035,
      "error": null
    },
    "assert magic_square_test([[4, 8, 2], [6, 8, 5], [6, 6, 4]]) == False": {
      "result": true,
      "time": 0.032663822174072266,
      "error": null
    },
    "assert magic_square_test([[1, 7, 4], [9, 2, 3], [5, 8, 9]]) == False": {
      "result": true,
      "time": 0.032105445861816406,
      "error": null
    },
    "assert magic_square_test([[1, 8, 7], [4, 3, 4], [3, 1, 6]]) == False": {
      "result": true,
      "time": 0.036997079849243164,
      "error": null
    },
    "assert magic_square_test([[2, 6, 5], [5, 3, 3], [5, 2, 4]]) == False": {
      "result": true,
      "time": 0.03295326232910156,
      "error": null
    },
    "assert magic_square_test([[6, 5, 4], [6, 7, 1], [7, 1, 5]]) == False": {
      "result": true,
      "time": 0.03367352485656738,
      "error": null
    },
    "assert magic_square_test([[1, 7, 2], [10, 4, 6], [6, 4, 6]]) == False": {
      "result": true,
      "time": 0.03641867637634277,
      "error": null
    },
    "assert magic_square_test([[1, 12, 5], [7, 3, 1], [7, 3, 4]]) == False": {
      "result": true,
      "time": 0.03661513328552246,
      "error": null
    },
    "assert magic_square_test([[1, 10, 1], [13, 4, 6], [4, 7, 12]]) == False": {
      "result": true,
      "time": 0.03654122352600098,
      "error": null
    },
    "assert magic_square_test([[1, 7, 9], [7, 2, 2], [7, 5, 12]]) == False": {
      "result": true,
      "time": 0.03787541389465332,
      "error": null
    },
    "assert magic_square_test([[1, 10, 3], [5, 2, 2], [7, 6, 4]]) == False": {
      "result": true,
      "time": 0.03307151794433594,
      "error": null
    },
    "assert magic_square_test([[7, 5, 7], [6, 6, 2], [2, 1, 13]]) == False": {
      "result": true,
      "time": 0.03369712829589844,
      "error": null
    },
    "assert magic_square_test([[5, 9, 3], [8, 8, 2], [7, 6, 3]]) == False": {
      "result": true,
      "time": 0.03426623344421387,
      "error": null
    },
    "assert magic_square_test([[4, 2, 10], [10, 6, 4], [3, 4, 3]]) == False": {
      "result": true,
      "time": 0.034821510314941406,
      "error": null
    },
    "assert magic_square_test([[4, 6, 10], [11, 4, 6], [3, 6, 2]]) == False": {
      "result": true,
      "time": 0.03836703300476074,
      "error": null
    },
    "assert magic_square_test([[7, 11, 5], [5, 6, 2], [8, 4, 10]]) == False": {
      "result": true,
      "time": 0.03346681594848633,
      "error": null
    },
    "assert magic_square_test([[7, 5, 4], [12, 10, 1], [1, 3, 6]]) == False": {
      "result": true,
      "time": 0.04098820686340332,
      "error": null
    },
    "assert magic_square_test([[6, 7, 11], [7, 6, 5], [3, 8, 4]]) == False": {
      "result": true,
      "time": 0.045159339904785156,
      "error": null
    },
    "assert magic_square_test([[6, 10, 11], [10, 5, 4], [2, 4, 4]]) == False": {
      "result": true,
      "time": 0.03694868087768555,
      "error": null
    },
    "assert magic_square_test([[2, 5, 3], [4, 6, 1], [7, 1, 10]]) == False": {
      "result": true,
      "time": 0.032659053802490234,
      "error": null
    },
    "assert magic_square_test([[4, 7, 4], [4, 8, 4], [7, 3, 2]]) == False": {
      "result": true,
      "time": 0.03960609436035156,
      "error": null
    },
    "assert magic_square_test([[5, 2, 11], [12, 7, 4], [7, 2, 6]]) == False": {
      "result": true,
      "time": 0.03434896469116211,
      "error": null
    },
    "assert magic_square_test([[7, 7, 6], [7, 2, 2], [6, 7, 11]]) == False": {
      "result": true,
      "time": 0.0364077091217041,
      "error": null
    },
    "assert magic_square_test([[4, 8, 8], [7, 8, 3], [8, 3, 6]]) == False": {
      "result": true,
      "time": 0.03192424774169922,
      "error": null
    },
    "assert magic_square_test([[6, 6, 2], [13, 9, 4], [6, 4, 4]]) == False": {
      "result": true,
      "time": 0.03508329391479492,
      "error": null
    },
    "assert magic_square_test([[6, 11, 6], [8, 8, 4], [8, 7, 2]]) == False": {
      "result": true,
      "time": 0.03969740867614746,
      "error": null
    },
    "assert magic_square_test([[5, 11, 2], [14, 5, 2], [7, 5, 5]]) == False": {
      "result": true,
      "time": 0.035820722579956055,
      "error": null
    },
    "assert magic_square_test([[3, 12, 11], [13, 9, 2], [2, 8, 12]]) == False": {
      "result": true,
      "time": 0.03363609313964844,
      "error": null
    },
    "assert magic_square_test([[5, 7, 1], [9, 7, 6], [4, 2, 2]]) == False": {
      "result": true,
      "time": 0.034471750259399414,
      "error": null
    },
    "assert magic_square_test([[2, 3, 9], [14, 8, 5], [6, 1, 7]]) == False": {
      "result": true,
      "time": 0.03656888008117676,
      "error": null
    },
    "assert magic_square_test([[3, 6, 7], [14, 5, 6], [8, 8, 5]]) == False": {
      "result": true,
      "time": 0.028286457061767578,
      "error": null
    },
    "assert magic_square_test([[3, 8, 2], [9, 7, 3], [4, 8, 9]]) == False": {
      "result": true,
      "time": 0.03374505043029785,
      "error": null
    },
    "assert magic_square_test([[7, 2, 6], [4, 3, 2], [9, 8, 7]]) == False": {
      "result": true,
      "time": 0.03824114799499512,
      "error": null
    },
    "assert magic_square_test([[4, 10, 9], [11, 9, 3], [1, 3, 2]]) == False": {
      "result": true,
      "time": 0.040711402893066406,
      "error": null
    },
    "assert magic_square_test([[4, 5, 7], [5, 6, 2], [8, 2, 5]]) == False": {
      "result": true,
      "time": 0.0418546199798584,
      "error": null
    },
    "assert magic_square_test([[6, 8, 5], [10, 5, 3], [7, 6, 7]]) == False": {
      "result": true,
      "time": 0.036571502685546875,
      "error": null
    },
    "assert magic_square_test([[4, 7, 11], [13, 8, 6], [8, 6, 3]]) == False": {
      "result": true,
      "time": 0.04015922546386719,
      "error": null
    },
    "assert magic_square_test([[4, 5, 3], [11, 7, 5], [9, 1, 7]]) == False": {
      "result": true,
      "time": 0.04169321060180664,
      "error": null
    },
    "assert magic_square_test([[1, 7, 1], [7, 9, 1], [2, 1, 11]]) == False": {
      "result": true,
      "time": 0.03425860404968262,
      "error": null
    },
    "assert magic_square_test([[3, 7, 9], [13, 4, 3], [1, 3, 11]]) == False": {
      "result": true,
      "time": 0.03755331039428711,
      "error": null
    },
    "assert magic_square_test([[5, 4, 9], [12, 4, 1], [4, 4, 9]]) == False": {
      "result": true,
      "time": 0.040740966796875,
      "error": null
    },
    "assert magic_square_test([[1, 4, 7], [9, 1, 3], [1, 8, 10]]) == False": {
      "result": true,
      "time": 0.03286933898925781,
      "error": null
    },
    "assert magic_square_test([[2, 11, 2], [11, 4, 4], [3, 5, 2]]) == False": {
      "result": true,
      "time": 0.0371098518371582,
      "error": null
    },
    "assert magic_square_test([[4, 2, 1], [14, 1, 3], [3, 4, 9]]) == False": {
      "result": true,
      "time": 0.04006767272949219,
      "error": null
    },
    "assert magic_square_test([[7, 4, 8], [8, 2, 3], [1, 7, 11]]) == False": {
      "result": true,
      "time": 0.03491067886352539,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}