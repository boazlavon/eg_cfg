{
  "code": "import math\n\ndef first_Factorial_Divisible_Number(x):\n    i = 1\n    while True:\n        factorial = math.factorial(i)\n        if factorial % x == 0:\n            return i\n        i += 1",
  "results": {
    "assert first_Factorial_Divisible_Number(10) == 5": {
      "result": true,
      "time": 0.0887148380279541,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(15) == 5": {
      "result": true,
      "time": 0.1193704605102539,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(5) == 4": {
      "result": false,
      "time": 0.09460282325744629,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(13) == 12": {
      "result": false,
      "time": 0.09918212890625,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(6) == 3": {
      "result": true,
      "time": 0.09313654899597168,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(8) == 4": {
      "result": true,
      "time": 0.09409713745117188,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(14) == 7": {
      "result": true,
      "time": 0.09233331680297852,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(7) == 6": {
      "result": false,
      "time": 0.08542156219482422,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(12) == 4": {
      "result": true,
      "time": 0.08421182632446289,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(11) == 10": {
      "result": false,
      "time": 0.08645892143249512,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(9) == 6": {
      "result": true,
      "time": 0.0857391357421875,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(20) == 5": {
      "result": true,
      "time": 0.09764432907104492,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(19) == 18": {
      "result": false,
      "time": 0.0920407772064209,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(18) == 6": {
      "result": true,
      "time": 0.08633065223693848,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(16) == 6": {
      "result": true,
      "time": 0.09710049629211426,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(17) == 16": {
      "result": false,
      "time": 0.08449602127075195,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(1) == 1": {
      "result": true,
      "time": 0.08045649528503418,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(2) == 1": {
      "result": false,
      "time": 0.08547759056091309,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(4) == 3": {
      "result": false,
      "time": 0.08553647994995117,
      "error": null
    },
    "assert first_Factorial_Divisible_Number(3) == 2": {
      "result": false,
      "time": 0.11100983619689941,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.55,
  "general_error": "",
  "has_testcase_error": false
}