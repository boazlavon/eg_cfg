{
  "code": "def fourth_Power_Sum(n):\n    return sum(i**4 for i in range(1, n+1))\n",
  "results": {
    "assert fourth_Power_Sum(2) == 17": {
      "result": true,
      "time": 0.048185110092163086,
      "error": null
    },
    "assert fourth_Power_Sum(4) == 354": {
      "result": true,
      "time": 0.04578137397766113,
      "error": null
    },
    "assert fourth_Power_Sum(6) == 2275": {
      "result": true,
      "time": 0.04844927787780762,
      "error": null
    },
    "assert fourth_Power_Sum(1) == 1": {
      "result": true,
      "time": 0.05663108825683594,
      "error": null
    },
    "assert fourth_Power_Sum(5) == 979": {
      "result": true,
      "time": 0.0394139289855957,
      "error": null
    },
    "assert fourth_Power_Sum(3) == 98": {
      "result": true,
      "time": 0.044189453125,
      "error": null
    },
    "assert fourth_Power_Sum(7) == 4676": {
      "result": true,
      "time": 0.05374741554260254,
      "error": null
    },
    "assert fourth_Power_Sum(8) == 8772": {
      "result": true,
      "time": 0.04019474983215332,
      "error": null
    },
    "assert fourth_Power_Sum(9) == 15333": {
      "result": true,
      "time": 0.041112661361694336,
      "error": null
    },
    "assert fourth_Power_Sum(10) == 25333": {
      "result": true,
      "time": 0.04305291175842285,
      "error": null
    },
    "assert fourth_Power_Sum(11) == 39974": {
      "result": true,
      "time": 0.058765411376953125,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}