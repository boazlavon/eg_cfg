{
  "code": "def get_maxgold(grid, m, n):\n    if not grid:\n        return 0\n\n    dp = [[0]*n for _ in range(m)]\n    moves = [(0, 1), (0, -1), (1, 0), (-1, 0)]\n\n    def dfs(x, y):\n        if dp[x][y] != 0:\n            return dp[x][y]\n        temp = grid[x][y]\n        for dx, dy in moves:\n            nx, ny = x + dx, y + dy\n            if 0 <= nx < m and 0 <= ny < n:\n                temp += max(dfs(nx, ny), 0)\n        dp[x][y] = temp\n        return temp\n\n    return max(dfs(x, y) for x in range(m) for y in range(n))",
  "results": {
    "assert get_maxgold([[1, 3, 1, 5],[2, 2, 4, 1],[5, 0, 2, 3],[0, 6, 1, 2]],4,4)==16": {
      "result": false,
      "time": 0.047151803970336914,
      "error": null
    },
    "assert get_maxgold([[10,20],[30,40]],2,2)==70": {
      "result": false,
      "time": 0.04408121109008789,
      "error": null
    },
    "assert get_maxgold([[4,9],[3,7]],2,2)==13": {
      "result": false,
      "time": 0.04429149627685547,
      "error": null
    },
    "assert get_maxgold([[2, 8, 1, 9], [6, 4, 1, 3], [9, 3, 5, 2], [5, 10, 6, 2]], 1, 4) == 20": {
      "result": false,
      "time": 0.053658485412597656,
      "error": null
    },
    "assert get_maxgold([[5, 4, 2, 5], [4, 3, 1, 5], [8, 2, 2, 1], [2, 6, 5, 4]], 2, 4) == 16": {
      "result": false,
      "time": 0.051976680755615234,
      "error": null
    },
    "assert get_maxgold([[4, 1, 4, 6], [6, 3, 7, 5], [4, 2, 7, 8], [5, 6, 3, 1]], 3, 3) == 16": {
      "result": false,
      "time": 0.042368412017822266,
      "error": null
    },
    "assert get_maxgold([[4, 1, 4, 2], [4, 2, 7, 4], [7, 4, 7, 8], [2, 6, 5, 6]], 3, 3) == 18": {
      "result": false,
      "time": 0.03785252571105957,
      "error": null
    },
    "assert get_maxgold([[3, 4, 4, 7], [4, 2, 9, 6], [10, 1, 3, 8], [4, 7, 2, 5]], 2, 4) == 24": {
      "result": false,
      "time": 0.04561257362365723,
      "error": null
    },
    "assert get_maxgold([[6, 8, 5, 5], [7, 5, 3, 4], [3, 3, 1, 1], [5, 8, 4, 1]], 3, 1) == 7": {
      "result": false,
      "time": 0.055206298828125,
      "error": null
    },
    "assert get_maxgold([[5, 2, 5, 9], [2, 3, 3, 3], [6, 1, 4, 7], [4, 5, 5, 6]], 2, 4) == 22": {
      "result": false,
      "time": 0.05433917045593262,
      "error": null
    },
    "assert get_maxgold([[3, 2, 2, 9], [6, 2, 6, 5], [6, 5, 4, 1], [1, 4, 5, 3]], 2, 2) == 8": {
      "result": false,
      "time": 0.057158470153808594,
      "error": null
    },
    "assert get_maxgold([[5, 4, 4, 4], [2, 2, 5, 1], [2, 4, 4, 8], [4, 9, 3, 1]], 2, 4) == 18": {
      "result": false,
      "time": 0.043897151947021484,
      "error": null
    },
    "assert get_maxgold([[1, 1, 5, 6], [1, 7, 2, 1], [2, 3, 7, 7], [2, 2, 3, 6]], 4, 2) == 9": {
      "result": false,
      "time": 0.044055938720703125,
      "error": null
    },
    "assert get_maxgold([[6, 4, 6, 2], [2, 7, 7, 1], [6, 3, 4, 7], [1, 10, 1, 6]], 4, 4) == 27": {
      "result": false,
      "time": 0.045407772064208984,
      "error": null
    },
    "assert get_maxgold([[3, 5, 2, 8], [1, 5, 8, 6], [4, 2, 2, 4], [4, 3, 4, 3]], 2, 3) == 16": {
      "result": false,
      "time": 0.04539608955383301,
      "error": null
    },
    "assert get_maxgold([[4, 5, 3, 4], [4, 7, 9, 5], [2, 1, 3, 5], [1, 1, 5, 4]], 2, 1) == 4": {
      "result": false,
      "time": 0.04416370391845703,
      "error": null
    },
    "assert get_maxgold([[3, 2, 3, 10], [6, 5, 9, 4], [7, 3, 6, 8], [2, 1, 1, 2]], 3, 2) == 12": {
      "result": false,
      "time": 0.049089670181274414,
      "error": null
    },
    "assert get_maxgold([[5, 4, 3, 8], [1, 4, 8, 2], [4, 5, 3, 7], [4, 7, 5, 6]], 2, 3) == 17": {
      "result": false,
      "time": 0.04571342468261719,
      "error": null
    },
    "assert get_maxgold([[4, 4, 6, 8], [4, 1, 4, 5], [9, 2, 6, 6], [2, 6, 1, 5]], 1, 1) == 4": {
      "result": true,
      "time": 0.04573345184326172,
      "error": null
    },
    "assert get_maxgold([[6, 1, 4, 4], [7, 3, 6, 2], [3, 5, 1, 8], [1, 3, 3, 3]], 4, 3) == 18": {
      "result": false,
      "time": 0.06719350814819336,
      "error": null
    },
    "assert get_maxgold([[3, 2, 4, 4], [6, 1, 4, 4], [2, 1, 3, 4], [1, 5, 5, 4]], 2, 4) == 16": {
      "result": false,
      "time": 0.054637908935546875,
      "error": null
    },
    "assert get_maxgold([[2, 3, 3, 5], [6, 2, 3, 1], [3, 5, 2, 5], [3, 2, 6, 2]], 2, 4) == 17": {
      "result": false,
      "time": 0.05304551124572754,
      "error": null
    },
    "assert get_maxgold([[4, 2, 2, 10], [6, 1, 5, 3], [2, 1, 7, 5], [2, 3, 2, 7]], 2, 3) == 13": {
      "result": false,
      "time": 0.053238630294799805,
      "error": null
    },
    "assert get_maxgold([[5, 8, 6, 1], [4, 5, 1, 1], [5, 2, 5, 3], [2, 2, 5, 7]], 2, 2) == 13": {
      "result": false,
      "time": 0.06331086158752441,
      "error": null
    },
    "assert get_maxgold([[6, 8, 5, 10], [2, 7, 2, 3], [7, 1, 4, 3], [3, 11, 5, 4]], 3, 1) == 7": {
      "result": false,
      "time": 0.05290699005126953,
      "error": null
    },
    "assert get_maxgold([[4, 5, 1, 2], [7, 5, 5, 4], [1, 4, 6, 6], [4, 10, 3, 1]], 4, 4) == 26": {
      "result": false,
      "time": 0.054451942443847656,
      "error": null
    },
    "assert get_maxgold([[3, 8, 4, 10], [7, 2, 4, 2], [9, 1, 1, 6], [1, 2, 5, 6]], 3, 3) == 19": {
      "result": false,
      "time": 0.05484342575073242,
      "error": null
    },
    "assert get_maxgold([[1, 3, 2, 4], [6, 3, 4, 6], [1, 1, 4, 3], [5, 1, 3, 1]], 2, 1) == 6": {
      "result": false,
      "time": 0.0636739730834961,
      "error": null
    },
    "assert get_maxgold([[3, 7, 1, 1], [4, 7, 2, 2], [2, 1, 6, 1], [1, 3, 6, 6]], 2, 3) == 13": {
      "result": false,
      "time": 0.061728715896606445,
      "error": null
    },
    "assert get_maxgold([[2, 8, 3, 7], [4, 2, 8, 6], [9, 1, 5, 3], [4, 2, 5, 5]], 3, 1) == 9": {
      "result": false,
      "time": 0.05597424507141113,
      "error": null
    },
    "assert get_maxgold([[4, 2, 3, 5], [4, 7, 2, 3], [2, 4, 6, 4], [4, 10, 5, 6]], 4, 3) == 20": {
      "result": false,
      "time": 0.058815717697143555,
      "error": null
    },
    "assert get_maxgold([[4, 8, 6, 6], [4, 4, 8, 1], [6, 1, 7, 4], [4, 5, 5, 4]], 4, 4) == 26": {
      "result": false,
      "time": 0.05712270736694336,
      "error": null
    },
    "assert get_maxgold([[6, 2, 2, 4], [2, 1, 2, 3], [6, 4, 6, 7], [4, 4, 6, 7]], 3, 4) == 23": {
      "result": false,
      "time": 0.06362748146057129,
      "error": null
    },
    "assert get_maxgold([[5, 5, 6, 3], [6, 7, 6, 5], [3, 2, 2, 2], [5, 3, 4, 5]], 3, 1) == 6": {
      "result": false,
      "time": 0.052549123764038086,
      "error": null
    },
    "assert get_maxgold([[4, 8, 4, 9], [3, 4, 1, 6], [7, 5, 3, 7], [5, 7, 2, 2]], 1, 3) == 16": {
      "result": false,
      "time": 0.06280326843261719,
      "error": null
    },
    "assert get_maxgold([[6, 7, 3, 2], [1, 5, 9, 6], [3, 5, 3, 3], [4, 11, 2, 3]], 3, 2) == 13": {
      "result": false,
      "time": 0.05711865425109863,
      "error": null
    },
    "assert get_maxgold([[8, 18], [35, 37]], 1, 2) == 26": {
      "result": false,
      "time": 0.0667104721069336,
      "error": null
    },
    "assert get_maxgold([[12, 20], [28, 43]], 2, 1) == 28": {
      "result": false,
      "time": 0.05692625045776367,
      "error": null
    },
    "assert get_maxgold([[9, 17], [29, 37]], 2, 1) == 29": {
      "result": false,
      "time": 0.059392690658569336,
      "error": null
    },
    "assert get_maxgold([[15, 19], [34, 36]], 2, 1) == 34": {
      "result": false,
      "time": 0.051332950592041016,
      "error": null
    },
    "assert get_maxgold([[9, 23], [27, 36]], 2, 2) == 63": {
      "result": false,
      "time": 0.07093405723571777,
      "error": null
    },
    "assert get_maxgold([[11, 20], [28, 41]], 2, 1) == 28": {
      "result": false,
      "time": 0.04613471031188965,
      "error": null
    },
    "assert get_maxgold([[13, 24], [34, 37]], 1, 1) == 13": {
      "result": true,
      "time": 0.0519871711730957,
      "error": null
    },
    "assert get_maxgold([[12, 15], [29, 40]], 2, 1) == 29": {
      "result": false,
      "time": 0.06771206855773926,
      "error": null
    },
    "assert get_maxgold([[6, 18], [29, 44]], 1, 2) == 24": {
      "result": false,
      "time": 0.06926393508911133,
      "error": null
    },
    "assert get_maxgold([[15, 23], [33, 37]], 2, 2) == 70": {
      "result": false,
      "time": 0.05982398986816406,
      "error": null
    },
    "assert get_maxgold([[9, 18], [25, 35]], 1, 2) == 27": {
      "result": false,
      "time": 0.07256746292114258,
      "error": null
    },
    "assert get_maxgold([[7, 18], [26, 42]], 2, 2) == 68": {
      "result": false,
      "time": 0.07275199890136719,
      "error": null
    },
    "assert get_maxgold([[7, 15], [28, 35]], 1, 1) == 7": {
      "result": true,
      "time": 0.06646108627319336,
      "error": null
    },
    "assert get_maxgold([[14, 16], [34, 43]], 2, 1) == 34": {
      "result": false,
      "time": 0.06995940208435059,
      "error": null
    },
    "assert get_maxgold([[6, 15], [29, 44]], 1, 1) == 6": {
      "result": true,
      "time": 0.0723416805267334,
      "error": null
    },
    "assert get_maxgold([[14, 24], [32, 43]], 2, 1) == 32": {
      "result": false,
      "time": 0.06788158416748047,
      "error": null
    },
    "assert get_maxgold([[12, 20], [32, 38]], 2, 2) == 70": {
      "result": false,
      "time": 0.05538368225097656,
      "error": null
    },
    "assert get_maxgold([[8, 24], [25, 40]], 2, 1) == 25": {
      "result": false,
      "time": 0.061460256576538086,
      "error": null
    },
    "assert get_maxgold([[10, 23], [31, 36]], 1, 1) == 10": {
      "result": true,
      "time": 0.06126213073730469,
      "error": null
    },
    "assert get_maxgold([[7, 15], [28, 42]], 1, 2) == 22": {
      "result": false,
      "time": 0.0724172592163086,
      "error": null
    },
    "assert get_maxgold([[13, 19], [25, 42]], 1, 1) == 13": {
      "result": true,
      "time": 0.05997300148010254,
      "error": null
    },
    "assert get_maxgold([[11, 23], [33, 37]], 1, 2) == 34": {
      "result": false,
      "time": 0.07220172882080078,
      "error": null
    },
    "assert get_maxgold([[11, 25], [35, 40]], 1, 2) == 36": {
      "result": false,
      "time": 0.07524967193603516,
      "error": null
    },
    "assert get_maxgold([[9, 23], [26, 35]], 1, 2) == 32": {
      "result": false,
      "time": 0.06513857841491699,
      "error": null
    },
    "assert get_maxgold([[8, 18], [25, 44]], 1, 1) == 8": {
      "result": true,
      "time": 0.06817793846130371,
      "error": null
    },
    "assert get_maxgold([[14, 19], [35, 45]], 1, 1) == 14": {
      "result": true,
      "time": 0.06249856948852539,
      "error": null
    },
    "assert get_maxgold([[6, 22], [34, 43]], 2, 1) == 34": {
      "result": false,
      "time": 0.07944202423095703,
      "error": null
    },
    "assert get_maxgold([[12, 21], [28, 45]], 1, 1) == 12": {
      "result": true,
      "time": 0.06473398208618164,
      "error": null
    },
    "assert get_maxgold([[13, 20], [27, 35]], 1, 1) == 13": {
      "result": true,
      "time": 0.06088757514953613,
      "error": null
    },
    "assert get_maxgold([[13, 23], [35, 35]], 2, 1) == 35": {
      "result": false,
      "time": 0.06550931930541992,
      "error": null
    },
    "assert get_maxgold([[10, 15], [32, 45]], 2, 1) == 32": {
      "result": false,
      "time": 0.06862306594848633,
      "error": null
    },
    "assert get_maxgold([[5, 23], [32, 43]], 1, 2) == 28": {
      "result": false,
      "time": 0.06953573226928711,
      "error": null
    },
    "assert get_maxgold([[6, 19], [33, 40]], 2, 2) == 73": {
      "result": false,
      "time": 0.05909395217895508,
      "error": null
    },
    "assert get_maxgold([[1, 10], [4, 3]], 1, 1) == 1": {
      "result": true,
      "time": 0.065399169921875,
      "error": null
    },
    "assert get_maxgold([[9, 11], [4, 8]], 1, 2) == 20": {
      "result": false,
      "time": 0.0619204044342041,
      "error": null
    },
    "assert get_maxgold([[3, 8], [8, 2]], 1, 2) == 11": {
      "result": false,
      "time": 0.06182098388671875,
      "error": null
    },
    "assert get_maxgold([[2, 10], [6, 8]], 2, 1) == 6": {
      "result": false,
      "time": 0.06011366844177246,
      "error": null
    },
    "assert get_maxgold([[6, 7], [2, 12]], 2, 2) == 18": {
      "result": false,
      "time": 0.04834175109863281,
      "error": null
    },
    "assert get_maxgold([[2, 9], [8, 3]], 1, 1) == 2": {
      "result": true,
      "time": 0.05081820487976074,
      "error": null
    },
    "assert get_maxgold([[7, 5], [3, 10]], 2, 1) == 7": {
      "result": false,
      "time": 0.03871440887451172,
      "error": null
    },
    "assert get_maxgold([[2, 14], [5, 5]], 2, 2) == 19": {
      "result": false,
      "time": 0.046785593032836914,
      "error": null
    },
    "assert get_maxgold([[1, 13], [2, 4]], 1, 1) == 1": {
      "result": true,
      "time": 0.04594564437866211,
      "error": null
    },
    "assert get_maxgold([[2, 8], [3, 11]], 1, 2) == 10": {
      "result": false,
      "time": 0.05069231986999512,
      "error": null
    },
    "assert get_maxgold([[4, 10], [6, 3]], 1, 1) == 4": {
      "result": true,
      "time": 0.05130338668823242,
      "error": null
    },
    "assert get_maxgold([[1, 6], [6, 3]], 2, 2) == 12": {
      "result": false,
      "time": 0.040488243103027344,
      "error": null
    },
    "assert get_maxgold([[1, 5], [6, 7]], 2, 1) == 6": {
      "result": false,
      "time": 0.04766082763671875,
      "error": null
    },
    "assert get_maxgold([[9, 5], [4, 5]], 1, 1) == 9": {
      "result": true,
      "time": 0.04726076126098633,
      "error": null
    },
    "assert get_maxgold([[9, 4], [8, 11]], 1, 2) == 13": {
      "result": false,
      "time": 0.049224853515625,
      "error": null
    },
    "assert get_maxgold([[7, 5], [8, 3]], 2, 2) == 13": {
      "result": false,
      "time": 0.041579484939575195,
      "error": null
    },
    "assert get_maxgold([[5, 6], [3, 4]], 2, 2) == 11": {
      "result": false,
      "time": 0.052416324615478516,
      "error": null
    },
    "assert get_maxgold([[5, 4], [6, 8]], 2, 1) == 6": {
      "result": false,
      "time": 0.042897701263427734,
      "error": null
    },
    "assert get_maxgold([[3, 6], [1, 5]], 1, 1) == 3": {
      "result": true,
      "time": 0.052121877670288086,
      "error": null
    },
    "assert get_maxgold([[8, 4], [3, 6]], 2, 2) == 14": {
      "result": false,
      "time": 0.03995776176452637,
      "error": null
    },
    "assert get_maxgold([[1, 4], [4, 11]], 1, 1) == 1": {
      "result": true,
      "time": 0.03862881660461426,
      "error": null
    },
    "assert get_maxgold([[1, 14], [4, 9]], 2, 2) == 18": {
      "result": false,
      "time": 0.043686628341674805,
      "error": null
    },
    "assert get_maxgold([[1, 7], [8, 9]], 2, 2) == 17": {
      "result": false,
      "time": 0.04173421859741211,
      "error": null
    },
    "assert get_maxgold([[8, 9], [3, 8]], 2, 2) == 17": {
      "result": false,
      "time": 0.044408559799194336,
      "error": null
    },
    "assert get_maxgold([[3, 11], [3, 8]], 2, 2) == 14": {
      "result": false,
      "time": 0.05231809616088867,
      "error": null
    },
    "assert get_maxgold([[3, 8], [2, 11]], 1, 1) == 3": {
      "result": true,
      "time": 0.04393744468688965,
      "error": null
    },
    "assert get_maxgold([[5, 4], [1, 12]], 1, 2) == 9": {
      "result": false,
      "time": 0.04770660400390625,
      "error": null
    },
    "assert get_maxgold([[1, 13], [4, 8]], 2, 1) == 4": {
      "result": false,
      "time": 0.05425262451171875,
      "error": null
    },
    "assert get_maxgold([[1, 13], [3, 3]], 2, 2) == 16": {
      "result": false,
      "time": 0.03860640525817871,
      "error": null
    },
    "assert get_maxgold([[6, 12], [8, 10]], 2, 1) == 8": {
      "result": false,
      "time": 0.041611671447753906,
      "error": null
    },
    "assert get_maxgold([[5, 9], [8, 9]], 2, 2) == 17": {
      "result": false,
      "time": 0.042273521423339844,
      "error": null
    },
    "assert get_maxgold([[3, 10], [8, 9]], 1, 2) == 13": {
      "result": false,
      "time": 0.04764866828918457,
      "error": null
    },
    "assert get_maxgold([[8, 6], [7, 3]], 2, 1) == 8": {
      "result": false,
      "time": 0.04050803184509277,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.17647058823529413,
  "general_error": "",
  "has_testcase_error": false
}