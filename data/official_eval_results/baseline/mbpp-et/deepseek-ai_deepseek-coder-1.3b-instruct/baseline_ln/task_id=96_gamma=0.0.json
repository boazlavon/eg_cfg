{
  "code": "def divisor(n):\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count\n",
  "results": {
    "assert divisor(15) == 4 ": {
      "result": true,
      "time": 0.032437801361083984,
      "error": null
    },
    "assert divisor(12) == 6": {
      "result": true,
      "time": 0.029713869094848633,
      "error": null
    },
    "assert divisor(9) == 3": {
      "result": true,
      "time": 0.03645610809326172,
      "error": null
    },
    "assert divisor(11) == 2": {
      "result": true,
      "time": 0.039357662200927734,
      "error": null
    },
    "assert divisor(13) == 2": {
      "result": true,
      "time": 0.043528079986572266,
      "error": null
    },
    "assert divisor(19) == 2": {
      "result": true,
      "time": 0.04411053657531738,
      "error": null
    },
    "assert divisor(15) == 4": {
      "result": true,
      "time": 0.03874778747558594,
      "error": null
    },
    "assert divisor(10) == 4": {
      "result": true,
      "time": 0.03377246856689453,
      "error": null
    },
    "assert divisor(14) == 4": {
      "result": true,
      "time": 0.03749871253967285,
      "error": null
    },
    "assert divisor(16) == 5": {
      "result": true,
      "time": 0.032201528549194336,
      "error": null
    },
    "assert divisor(20) == 6": {
      "result": true,
      "time": 0.04023456573486328,
      "error": null
    },
    "assert divisor(18) == 6": {
      "result": true,
      "time": 0.036889076232910156,
      "error": null
    },
    "assert divisor(17) == 2": {
      "result": true,
      "time": 0.04098057746887207,
      "error": null
    },
    "assert divisor(8) == 4": {
      "result": true,
      "time": 0.038324594497680664,
      "error": null
    },
    "assert divisor(7) == 2": {
      "result": true,
      "time": 0.035332441329956055,
      "error": null
    },
    "assert divisor(6) == 4": {
      "result": true,
      "time": 0.03787374496459961,
      "error": null
    },
    "assert divisor(4) == 3": {
      "result": true,
      "time": 0.036525726318359375,
      "error": null
    },
    "assert divisor(5) == 2": {
      "result": true,
      "time": 0.03701925277709961,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}