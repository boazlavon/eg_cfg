{
  "code": "def find_ways(n):\n    if n == 0:\n        return 1\n    dp = [0] * (n + 1)\n    dp[0] = 1\n    for i in range(1, n + 1):\n        dp[i] = dp[i - 1]\n        if i - 2 >= 0:\n            dp[i] += dp[i - 2]\n        if i - 3 >= 0:\n            dp[i] += dp[i - 3]\n    return dp[n]",
  "results": {
    "assert find_ways(4) == 2": {
      "result": false,
      "time": 0.04313826560974121,
      "error": null
    },
    "assert find_ways(6) == 5": {
      "result": false,
      "time": 0.044240474700927734,
      "error": null
    },
    "assert find_ways(8) == 14": {
      "result": false,
      "time": 0.04645514488220215,
      "error": null
    },
    "assert find_ways(1) == 1": {
      "result": true,
      "time": 0.0458984375,
      "error": null
    },
    "assert find_ways(3) == 1": {
      "result": false,
      "time": 0.05222749710083008,
      "error": null
    },
    "assert find_ways(7) == 5": {
      "result": false,
      "time": 0.06064796447753906,
      "error": null
    },
    "assert find_ways(9) == 14": {
      "result": false,
      "time": 0.0506443977355957,
      "error": null
    },
    "assert find_ways(2) == 1": {
      "result": false,
      "time": 0.049588918685913086,
      "error": null
    },
    "assert find_ways(5) == 2": {
      "result": false,
      "time": 0.058142662048339844,
      "error": null
    },
    "assert find_ways(10) == 42": {
      "result": false,
      "time": 0.0527803897857666,
      "error": null
    },
    "assert find_ways(11) == 42": {
      "result": false,
      "time": 0.05109906196594238,
      "error": null
    },
    "assert find_ways(13) == 132": {
      "result": false,
      "time": 0.06154632568359375,
      "error": null
    },
    "assert find_ways(12) == 132": {
      "result": false,
      "time": 0.05265355110168457,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.07692307692307693,
  "general_error": "",
  "has_testcase_error": false
}