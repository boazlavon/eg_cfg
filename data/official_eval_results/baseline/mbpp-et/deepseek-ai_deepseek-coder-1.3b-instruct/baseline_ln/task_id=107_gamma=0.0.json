{
  "code": "def count_Hexadecimal(start, end):\n    count = 0\n    for i in range(start, end + 1):\n        if i >= 10 and i <= 15:\n            count += 1\n    return count\n",
  "results": {
    "assert count_Hexadecimal(10,15) == 6": {
      "result": true,
      "time": 0.039411067962646484,
      "error": null
    },
    "assert count_Hexadecimal(2,4) == 0": {
      "result": true,
      "time": 0.03416109085083008,
      "error": null
    },
    "assert count_Hexadecimal(15,16) == 1": {
      "result": true,
      "time": 0.03435397148132324,
      "error": null
    },
    "assert count_Hexadecimal(7, 19) == 6": {
      "result": true,
      "time": 0.036653757095336914,
      "error": null
    },
    "assert count_Hexadecimal(10, 18) == 6": {
      "result": true,
      "time": 0.0346982479095459,
      "error": null
    },
    "assert count_Hexadecimal(5, 15) == 6": {
      "result": true,
      "time": 0.037996530532836914,
      "error": null
    },
    "assert count_Hexadecimal(6, 11) == 2": {
      "result": true,
      "time": 0.03392815589904785,
      "error": null
    },
    "assert count_Hexadecimal(14, 16) == 2": {
      "result": true,
      "time": 0.039862632751464844,
      "error": null
    },
    "assert count_Hexadecimal(15, 12) == 0": {
      "result": true,
      "time": 0.04103732109069824,
      "error": null
    },
    "assert count_Hexadecimal(6, 18) == 6": {
      "result": true,
      "time": 0.03963804244995117,
      "error": null
    },
    "assert count_Hexadecimal(12, 13) == 2": {
      "result": true,
      "time": 0.03169703483581543,
      "error": null
    },
    "assert count_Hexadecimal(8, 15) == 6": {
      "result": true,
      "time": 0.03846144676208496,
      "error": null
    },
    "assert count_Hexadecimal(14, 10) == 0": {
      "result": true,
      "time": 0.03706645965576172,
      "error": null
    },
    "assert count_Hexadecimal(8, 14) == 5": {
      "result": true,
      "time": 0.03489995002746582,
      "error": null
    },
    "assert count_Hexadecimal(7, 18) == 6": {
      "result": true,
      "time": 0.03334927558898926,
      "error": null
    },
    "assert count_Hexadecimal(5, 16) == 6": {
      "result": true,
      "time": 0.03479266166687012,
      "error": null
    },
    "assert count_Hexadecimal(10, 19) == 6": {
      "result": true,
      "time": 0.031435251235961914,
      "error": null
    },
    "assert count_Hexadecimal(10, 12) == 3": {
      "result": true,
      "time": 0.03529858589172363,
      "error": null
    },
    "assert count_Hexadecimal(11, 13) == 3": {
      "result": true,
      "time": 0.04745769500732422,
      "error": null
    },
    "assert count_Hexadecimal(13, 11) == 0": {
      "result": true,
      "time": 0.031853675842285156,
      "error": null
    },
    "assert count_Hexadecimal(8, 20) == 6": {
      "result": true,
      "time": 0.03423118591308594,
      "error": null
    },
    "assert count_Hexadecimal(11, 11) == 1": {
      "result": true,
      "time": 0.0380706787109375,
      "error": null
    },
    "assert count_Hexadecimal(7, 16) == 6": {
      "result": true,
      "time": 0.03483319282531738,
      "error": null
    },
    "assert count_Hexadecimal(11, 17) == 5": {
      "result": true,
      "time": 0.032736778259277344,
      "error": null
    },
    "assert count_Hexadecimal(5, 14) == 5": {
      "result": true,
      "time": 0.03771090507507324,
      "error": null
    },
    "assert count_Hexadecimal(12, 19) == 4": {
      "result": true,
      "time": 0.0312652587890625,
      "error": null
    },
    "assert count_Hexadecimal(11, 20) == 5": {
      "result": true,
      "time": 0.0318143367767334,
      "error": null
    },
    "assert count_Hexadecimal(12, 14) == 3": {
      "result": true,
      "time": 0.03077530860900879,
      "error": null
    },
    "assert count_Hexadecimal(11, 19) == 5": {
      "result": true,
      "time": 0.036574602127075195,
      "error": null
    },
    "assert count_Hexadecimal(15, 10) == 0": {
      "result": true,
      "time": 0.036405086517333984,
      "error": null
    },
    "assert count_Hexadecimal(14, 19) == 2": {
      "result": true,
      "time": 0.03658318519592285,
      "error": null
    },
    "assert count_Hexadecimal(6, 3) == 0": {
      "result": true,
      "time": 0.03483223915100098,
      "error": null
    },
    "assert count_Hexadecimal(5, 3) == 0": {
      "result": true,
      "time": 0.03318190574645996,
      "error": null
    },
    "assert count_Hexadecimal(2, 2) == 0": {
      "result": true,
      "time": 0.03839898109436035,
      "error": null
    },
    "assert count_Hexadecimal(5, 1) == 0": {
      "result": true,
      "time": 0.03813362121582031,
      "error": null
    },
    "assert count_Hexadecimal(2, 1) == 0": {
      "result": true,
      "time": 0.03322267532348633,
      "error": null
    },
    "assert count_Hexadecimal(5, 7) == 0": {
      "result": true,
      "time": 0.0342867374420166,
      "error": null
    },
    "assert count_Hexadecimal(4, 2) == 0": {
      "result": true,
      "time": 0.041898488998413086,
      "error": null
    },
    "assert count_Hexadecimal(4, 5) == 0": {
      "result": true,
      "time": 0.036867380142211914,
      "error": null
    },
    "assert count_Hexadecimal(5, 4) == 0": {
      "result": true,
      "time": 0.03736996650695801,
      "error": null
    },
    "assert count_Hexadecimal(1, 2) == 0": {
      "result": true,
      "time": 0.030391931533813477,
      "error": null
    },
    "assert count_Hexadecimal(1, 7) == 0": {
      "result": true,
      "time": 0.04523181915283203,
      "error": null
    },
    "assert count_Hexadecimal(3, 6) == 0": {
      "result": true,
      "time": 0.03695416450500488,
      "error": null
    },
    "assert count_Hexadecimal(5, 8) == 0": {
      "result": true,
      "time": 0.0391240119934082,
      "error": null
    },
    "assert count_Hexadecimal(1, 4) == 0": {
      "result": true,
      "time": 0.04305744171142578,
      "error": null
    },
    "assert count_Hexadecimal(4, 6) == 0": {
      "result": true,
      "time": 0.037717580795288086,
      "error": null
    },
    "assert count_Hexadecimal(1, 6) == 0": {
      "result": true,
      "time": 0.0315396785736084,
      "error": null
    },
    "assert count_Hexadecimal(4, 3) == 0": {
      "result": true,
      "time": 0.03148460388183594,
      "error": null
    },
    "assert count_Hexadecimal(3, 7) == 0": {
      "result": true,
      "time": 0.04066729545593262,
      "error": null
    },
    "assert count_Hexadecimal(1, 1) == 0": {
      "result": true,
      "time": 0.03787374496459961,
      "error": null
    },
    "assert count_Hexadecimal(3, 1) == 0": {
      "result": true,
      "time": 0.03507876396179199,
      "error": null
    },
    "assert count_Hexadecimal(2, 5) == 0": {
      "result": true,
      "time": 0.03588724136352539,
      "error": null
    },
    "assert count_Hexadecimal(7, 2) == 0": {
      "result": true,
      "time": 0.04590868949890137,
      "error": null
    },
    "assert count_Hexadecimal(3, 4) == 0": {
      "result": true,
      "time": 0.040407657623291016,
      "error": null
    },
    "assert count_Hexadecimal(4, 7) == 0": {
      "result": true,
      "time": 0.03870582580566406,
      "error": null
    },
    "assert count_Hexadecimal(2, 3) == 0": {
      "result": true,
      "time": 0.033560991287231445,
      "error": null
    },
    "assert count_Hexadecimal(7, 9) == 0": {
      "result": true,
      "time": 0.03311967849731445,
      "error": null
    },
    "assert count_Hexadecimal(19, 16) == 0": {
      "result": true,
      "time": 0.03702831268310547,
      "error": null
    },
    "assert count_Hexadecimal(12, 20) == 4": {
      "result": true,
      "time": 0.035301923751831055,
      "error": null
    },
    "assert count_Hexadecimal(17, 15) == 0": {
      "result": true,
      "time": 0.03418135643005371,
      "error": null
    },
    "assert count_Hexadecimal(20, 19) == 0": {
      "result": true,
      "time": 0.04076576232910156,
      "error": null
    },
    "assert count_Hexadecimal(10, 15) == 6": {
      "result": true,
      "time": 0.03580164909362793,
      "error": null
    },
    "assert count_Hexadecimal(16, 20) == 0": {
      "result": true,
      "time": 0.03964543342590332,
      "error": null
    },
    "assert count_Hexadecimal(14, 20) == 2": {
      "result": true,
      "time": 0.04250764846801758,
      "error": null
    },
    "assert count_Hexadecimal(13, 14) == 2": {
      "result": true,
      "time": 0.03448963165283203,
      "error": null
    },
    "assert count_Hexadecimal(10, 11) == 2": {
      "result": true,
      "time": 0.03417801856994629,
      "error": null
    },
    "assert count_Hexadecimal(15, 13) == 0": {
      "result": true,
      "time": 0.03510737419128418,
      "error": null
    },
    "assert count_Hexadecimal(18, 21) == 0": {
      "result": true,
      "time": 0.037558794021606445,
      "error": null
    },
    "assert count_Hexadecimal(20, 21) == 0": {
      "result": true,
      "time": 0.03611397743225098,
      "error": null
    },
    "assert count_Hexadecimal(16, 21) == 0": {
      "result": true,
      "time": 0.03398585319519043,
      "error": null
    },
    "assert count_Hexadecimal(13, 20) == 3": {
      "result": true,
      "time": 0.03681015968322754,
      "error": null
    },
    "assert count_Hexadecimal(10, 17) == 6": {
      "result": true,
      "time": 0.036730289459228516,
      "error": null
    },
    "assert count_Hexadecimal(16, 19) == 0": {
      "result": true,
      "time": 0.0339353084564209,
      "error": null
    },
    "assert count_Hexadecimal(13, 13) == 1": {
      "result": true,
      "time": 0.03483724594116211,
      "error": null
    },
    "assert count_Hexadecimal(17, 13) == 0": {
      "result": true,
      "time": 0.039583683013916016,
      "error": null
    },
    "assert count_Hexadecimal(19, 15) == 0": {
      "result": true,
      "time": 0.03803539276123047,
      "error": null
    },
    "assert count_Hexadecimal(13, 21) == 3": {
      "result": true,
      "time": 0.03168082237243652,
      "error": null
    },
    "assert count_Hexadecimal(11, 18) == 5": {
      "result": true,
      "time": 0.03795599937438965,
      "error": null
    },
    "assert count_Hexadecimal(10, 14) == 5": {
      "result": true,
      "time": 0.033937931060791016,
      "error": null
    },
    "assert count_Hexadecimal(15, 20) == 1": {
      "result": true,
      "time": 0.034758567810058594,
      "error": null
    },
    "assert count_Hexadecimal(10, 21) == 6": {
      "result": true,
      "time": 0.034661293029785156,
      "error": null
    },
    "assert count_Hexadecimal(16, 13) == 0": {
      "result": true,
      "time": 0.03856301307678223,
      "error": null
    },
    "assert count_Hexadecimal(17, 16) == 0": {
      "result": true,
      "time": 0.0374448299407959,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}