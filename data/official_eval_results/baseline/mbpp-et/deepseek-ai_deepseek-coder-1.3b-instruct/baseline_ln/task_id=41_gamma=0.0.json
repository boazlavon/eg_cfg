{
  "code": "filter_evennumbers = lambda nums: [num for num in nums if num % 2 == 0]\n",
  "results": {
    "assert filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[2, 4, 6, 8, 10]": {
      "result": true,
      "time": 0.06976151466369629,
      "error": null
    },
    "assert filter_evennumbers([10,20,45,67,84,93])==[10,20,84]": {
      "result": true,
      "time": 0.0678548812866211,
      "error": null
    },
    "assert filter_evennumbers([5,7,9,8,6,4,3])==[8,6,4]": {
      "result": true,
      "time": 0.0669252872467041,
      "error": null
    },
    "assert filter_evennumbers([6, 6, 6, 4, 9, 3, 6, 12, 12, 15]) == [6, 6, 6, 4, 6, 12, 12]": {
      "result": true,
      "time": 0.07427215576171875,
      "error": null
    },
    "assert filter_evennumbers([1, 7, 8, 5, 8, 7, 5, 3, 4, 12]) == [8, 8, 4, 12]": {
      "result": true,
      "time": 0.06372594833374023,
      "error": null
    },
    "assert filter_evennumbers([5, 4, 7, 1, 3, 11, 11, 12, 11, 6]) == [4, 12, 6]": {
      "result": true,
      "time": 0.06897473335266113,
      "error": null
    },
    "assert filter_evennumbers([3, 5, 8, 5, 3, 8, 12, 13, 14, 7]) == [8, 8, 12, 14]": {
      "result": true,
      "time": 0.058510541915893555,
      "error": null
    },
    "assert filter_evennumbers([2, 3, 1, 3, 2, 9, 5, 11, 12, 6]) == [2, 2, 12, 6]": {
      "result": true,
      "time": 0.06786012649536133,
      "error": null
    },
    "assert filter_evennumbers([2, 4, 5, 9, 6, 5, 2, 5, 11, 9]) == [2, 4, 6, 2]": {
      "result": true,
      "time": 0.07011651992797852,
      "error": null
    },
    "assert filter_evennumbers([2, 2, 6, 2, 8, 4, 3, 12, 9, 14]) == [2, 2, 6, 2, 8, 4, 12, 14]": {
      "result": true,
      "time": 0.06048226356506348,
      "error": null
    },
    "assert filter_evennumbers([6, 5, 5, 6, 4, 5, 3, 7, 13, 15]) == [6, 6, 4]": {
      "result": true,
      "time": 0.06538653373718262,
      "error": null
    },
    "assert filter_evennumbers([1, 3, 2, 1, 1, 11, 5, 12, 9, 10]) == [2, 12, 10]": {
      "result": true,
      "time": 0.06346774101257324,
      "error": null
    },
    "assert filter_evennumbers([4, 3, 5, 4, 6, 5, 7, 4, 14, 5]) == [4, 4, 6, 4, 14]": {
      "result": true,
      "time": 0.0626833438873291,
      "error": null
    },
    "assert filter_evennumbers([3, 4, 5, 3, 9, 4, 8, 7, 14, 8]) == [4, 4, 8, 14, 8]": {
      "result": true,
      "time": 0.06884098052978516,
      "error": null
    },
    "assert filter_evennumbers([5, 5, 3, 9, 7, 8, 8, 9, 5, 6]) == [8, 8, 6]": {
      "result": true,
      "time": 0.07098603248596191,
      "error": null
    },
    "assert filter_evennumbers([6, 3, 4, 9, 5, 5, 11, 6, 12, 12]) == [6, 4, 6, 12, 12]": {
      "result": true,
      "time": 0.06403565406799316,
      "error": null
    },
    "assert filter_evennumbers([3, 5, 8, 5, 2, 4, 2, 10, 10, 14]) == [8, 2, 4, 2, 10, 10, 14]": {
      "result": true,
      "time": 0.07267403602600098,
      "error": null
    },
    "assert filter_evennumbers([6, 2, 4, 9, 9, 8, 11, 5, 5, 11]) == [6, 2, 4, 8]": {
      "result": true,
      "time": 0.06644773483276367,
      "error": null
    },
    "assert filter_evennumbers([4, 4, 1, 8, 2, 5, 11, 8, 9, 15]) == [4, 4, 8, 2, 8]": {
      "result": true,
      "time": 0.07351469993591309,
      "error": null
    },
    "assert filter_evennumbers([3, 7, 7, 2, 3, 8, 2, 3, 5, 9]) == [2, 8, 2]": {
      "result": true,
      "time": 0.07016301155090332,
      "error": null
    },
    "assert filter_evennumbers([6, 5, 2, 9, 9, 8, 6, 11, 4, 11]) == [6, 2, 8, 6, 4]": {
      "result": true,
      "time": 0.0569453239440918,
      "error": null
    },
    "assert filter_evennumbers([5, 4, 3, 6, 2, 4, 2, 8, 6, 12]) == [4, 6, 2, 4, 2, 8, 6, 12]": {
      "result": true,
      "time": 0.06773948669433594,
      "error": null
    },
    "assert filter_evennumbers([4, 4, 3, 7, 3, 7, 12, 9, 14, 6]) == [4, 4, 12, 14, 6]": {
      "result": true,
      "time": 0.059157609939575195,
      "error": null
    },
    "assert filter_evennumbers([3, 1, 1, 7, 10, 8, 7, 9, 8, 6]) == [10, 8, 8, 6]": {
      "result": true,
      "time": 0.07294845581054688,
      "error": null
    },
    "assert filter_evennumbers([4, 4, 8, 8, 5, 6, 3, 7, 11, 8]) == [4, 4, 8, 8, 6, 8]": {
      "result": true,
      "time": 0.07060503959655762,
      "error": null
    },
    "assert filter_evennumbers([4, 1, 4, 9, 7, 1, 7, 9, 10, 5]) == [4, 4, 10]": {
      "result": true,
      "time": 0.06254911422729492,
      "error": null
    },
    "assert filter_evennumbers([6, 7, 6, 7, 4, 4, 7, 4, 7, 8]) == [6, 6, 4, 4, 4, 8]": {
      "result": true,
      "time": 0.0692746639251709,
      "error": null
    },
    "assert filter_evennumbers([2, 3, 5, 2, 10, 2, 11, 5, 14, 14]) == [2, 2, 10, 2, 14, 14]": {
      "result": true,
      "time": 0.06554412841796875,
      "error": null
    },
    "assert filter_evennumbers([5, 4, 6, 8, 6, 3, 7, 12, 6, 8]) == [4, 6, 8, 6, 12, 6, 8]": {
      "result": true,
      "time": 0.06967782974243164,
      "error": null
    },
    "assert filter_evennumbers([4, 7, 6, 5, 9, 4, 5, 9, 13, 5]) == [4, 6, 4]": {
      "result": true,
      "time": 0.060883522033691406,
      "error": null
    },
    "assert filter_evennumbers([2, 1, 2, 8, 3, 1, 4, 6, 10, 7]) == [2, 2, 8, 4, 6, 10]": {
      "result": true,
      "time": 0.0692143440246582,
      "error": null
    },
    "assert filter_evennumbers([1, 6, 3, 7, 7, 1, 8, 9, 12, 6]) == [6, 8, 12, 6]": {
      "result": true,
      "time": 0.06258726119995117,
      "error": null
    },
    "assert filter_evennumbers([1, 7, 3, 9, 4, 11, 8, 6, 11, 10]) == [4, 8, 6, 10]": {
      "result": true,
      "time": 0.07240128517150879,
      "error": null
    },
    "assert filter_evennumbers([6, 4, 5, 2, 4, 2, 9, 9, 8, 12]) == [6, 4, 2, 4, 2, 8, 12]": {
      "result": true,
      "time": 0.05937004089355469,
      "error": null
    },
    "assert filter_evennumbers([6, 1, 4, 9, 1, 10, 9, 11, 4, 14]) == [6, 4, 10, 4, 14]": {
      "result": true,
      "time": 0.06020641326904297,
      "error": null
    },
    "assert filter_evennumbers([1, 4, 4, 9, 5, 7, 2, 4, 4, 9]) == [4, 4, 2, 4, 4]": {
      "result": true,
      "time": 0.06692886352539062,
      "error": null
    },
    "assert filter_evennumbers([6, 16, 41, 62, 85, 89]) == [6, 16, 62]": {
      "result": true,
      "time": 0.061467647552490234,
      "error": null
    },
    "assert filter_evennumbers([6, 18, 45, 66, 82, 91]) == [6, 18, 66, 82]": {
      "result": true,
      "time": 0.06779694557189941,
      "error": null
    },
    "assert filter_evennumbers([8, 20, 44, 71, 89, 89]) == [8, 20, 44]": {
      "result": true,
      "time": 0.06538987159729004,
      "error": null
    },
    "assert filter_evennumbers([7, 20, 45, 72, 86, 94]) == [20, 72, 86, 94]": {
      "result": true,
      "time": 0.05835318565368652,
      "error": null
    },
    "assert filter_evennumbers([10, 18, 47, 62, 86, 98]) == [10, 18, 62, 86, 98]": {
      "result": true,
      "time": 0.04975605010986328,
      "error": null
    },
    "assert filter_evennumbers([8, 15, 42, 68, 82, 92]) == [8, 42, 68, 82, 92]": {
      "result": true,
      "time": 0.05021166801452637,
      "error": null
    },
    "assert filter_evennumbers([6, 19, 47, 65, 86, 94]) == [6, 86, 94]": {
      "result": true,
      "time": 0.05576515197753906,
      "error": null
    },
    "assert filter_evennumbers([6, 19, 50, 68, 84, 97]) == [6, 50, 68, 84]": {
      "result": true,
      "time": 0.05549740791320801,
      "error": null
    },
    "assert filter_evennumbers([6, 22, 44, 70, 84, 97]) == [6, 22, 44, 70, 84]": {
      "result": true,
      "time": 0.06106424331665039,
      "error": null
    },
    "assert filter_evennumbers([7, 17, 40, 72, 88, 98]) == [40, 72, 88, 98]": {
      "result": true,
      "time": 0.03873300552368164,
      "error": null
    },
    "assert filter_evennumbers([11, 16, 49, 70, 87, 91]) == [16, 70]": {
      "result": true,
      "time": 0.044934749603271484,
      "error": null
    },
    "assert filter_evennumbers([7, 17, 50, 69, 79, 98]) == [50, 98]": {
      "result": true,
      "time": 0.05043363571166992,
      "error": null
    },
    "assert filter_evennumbers([13, 25, 50, 71, 88, 90]) == [50, 88, 90]": {
      "result": true,
      "time": 0.039653778076171875,
      "error": null
    },
    "assert filter_evennumbers([15, 23, 48, 69, 79, 89]) == [48]": {
      "result": true,
      "time": 0.04550743103027344,
      "error": null
    },
    "assert filter_evennumbers([5, 24, 48, 68, 87, 91]) == [24, 48, 68]": {
      "result": true,
      "time": 0.036623239517211914,
      "error": null
    },
    "assert filter_evennumbers([7, 21, 50, 67, 87, 96]) == [50, 96]": {
      "result": true,
      "time": 0.036707162857055664,
      "error": null
    },
    "assert filter_evennumbers([14, 21, 42, 70, 80, 94]) == [14, 42, 70, 80, 94]": {
      "result": true,
      "time": 0.04842829704284668,
      "error": null
    },
    "assert filter_evennumbers([12, 15, 43, 70, 79, 94]) == [12, 70, 94]": {
      "result": true,
      "time": 0.04236745834350586,
      "error": null
    },
    "assert filter_evennumbers([15, 21, 47, 65, 79, 95]) == []": {
      "result": true,
      "time": 0.04461812973022461,
      "error": null
    },
    "assert filter_evennumbers([9, 25, 40, 64, 89, 98]) == [40, 64, 98]": {
      "result": true,
      "time": 0.04404711723327637,
      "error": null
    },
    "assert filter_evennumbers([13, 17, 40, 68, 79, 89]) == [40, 68]": {
      "result": true,
      "time": 0.040807247161865234,
      "error": null
    },
    "assert filter_evennumbers([13, 21, 44, 66, 81, 97]) == [44, 66]": {
      "result": true,
      "time": 0.046602487564086914,
      "error": null
    },
    "assert filter_evennumbers([8, 23, 42, 66, 83, 89]) == [8, 42, 66]": {
      "result": true,
      "time": 0.04767346382141113,
      "error": null
    },
    "assert filter_evennumbers([8, 21, 46, 71, 80, 93]) == [8, 46, 80]": {
      "result": true,
      "time": 0.047193288803100586,
      "error": null
    },
    "assert filter_evennumbers([9, 16, 44, 69, 84, 88]) == [16, 44, 84, 88]": {
      "result": true,
      "time": 0.044896602630615234,
      "error": null
    },
    "assert filter_evennumbers([14, 16, 50, 64, 89, 95]) == [14, 16, 50, 64]": {
      "result": true,
      "time": 0.045720815658569336,
      "error": null
    },
    "assert filter_evennumbers([10, 25, 43, 70, 81, 93]) == [10, 70]": {
      "result": true,
      "time": 0.0383143424987793,
      "error": null
    },
    "assert filter_evennumbers([11, 24, 50, 72, 81, 92]) == [24, 50, 72, 92]": {
      "result": true,
      "time": 0.04695296287536621,
      "error": null
    },
    "assert filter_evennumbers([9, 17, 47, 67, 84, 89]) == [84]": {
      "result": true,
      "time": 0.052036285400390625,
      "error": null
    },
    "assert filter_evennumbers([14, 25, 44, 63, 80, 89]) == [14, 44, 80]": {
      "result": true,
      "time": 0.03607892990112305,
      "error": null
    },
    "assert filter_evennumbers([9, 16, 46, 67, 80, 97]) == [16, 46, 80]": {
      "result": true,
      "time": 0.04354500770568848,
      "error": null
    },
    "assert filter_evennumbers([5, 20, 46, 70, 82, 89]) == [20, 46, 70, 82]": {
      "result": true,
      "time": 0.04562687873840332,
      "error": null
    },
    "assert filter_evennumbers([6, 18, 47, 71, 86, 88]) == [6, 18, 86, 88]": {
      "result": true,
      "time": 0.045499563217163086,
      "error": null
    },
    "assert filter_evennumbers([2, 11, 12, 13, 4, 6, 2]) == [2, 12, 4, 6, 2]": {
      "result": true,
      "time": 0.043287038803100586,
      "error": null
    },
    "assert filter_evennumbers([2, 10, 12, 9, 2, 4, 7]) == [2, 10, 12, 2, 4]": {
      "result": true,
      "time": 0.036478519439697266,
      "error": null
    },
    "assert filter_evennumbers([10, 11, 5, 3, 10, 4, 6]) == [10, 10, 4, 6]": {
      "result": true,
      "time": 0.04002571105957031,
      "error": null
    },
    "assert filter_evennumbers([2, 11, 9, 4, 10, 7, 5]) == [2, 4, 10]": {
      "result": true,
      "time": 0.03682994842529297,
      "error": null
    },
    "assert filter_evennumbers([3, 11, 14, 3, 5, 4, 6]) == [14, 4, 6]": {
      "result": true,
      "time": 0.03787851333618164,
      "error": null
    },
    "assert filter_evennumbers([10, 10, 14, 12, 11, 3, 3]) == [10, 10, 14, 12]": {
      "result": true,
      "time": 0.04669642448425293,
      "error": null
    },
    "assert filter_evennumbers([9, 4, 4, 12, 9, 3, 4]) == [4, 4, 12, 4]": {
      "result": true,
      "time": 0.049658775329589844,
      "error": null
    },
    "assert filter_evennumbers([5, 6, 10, 9, 9, 7, 8]) == [6, 10, 8]": {
      "result": true,
      "time": 0.044342994689941406,
      "error": null
    },
    "assert filter_evennumbers([8, 10, 13, 12, 10, 1, 2]) == [8, 10, 12, 10, 2]": {
      "result": true,
      "time": 0.038881778717041016,
      "error": null
    },
    "assert filter_evennumbers([7, 12, 7, 6, 3, 8, 7]) == [12, 6, 8]": {
      "result": true,
      "time": 0.04180026054382324,
      "error": null
    },
    "assert filter_evennumbers([7, 7, 12, 6, 2, 2, 1]) == [12, 6, 2, 2]": {
      "result": true,
      "time": 0.04190182685852051,
      "error": null
    },
    "assert filter_evennumbers([2, 5, 8, 13, 3, 2, 7]) == [2, 8, 2]": {
      "result": true,
      "time": 0.040726661682128906,
      "error": null
    },
    "assert filter_evennumbers([4, 5, 14, 7, 6, 7, 3]) == [4, 14, 6]": {
      "result": true,
      "time": 0.04704761505126953,
      "error": null
    },
    "assert filter_evennumbers([2, 2, 12, 10, 3, 3, 8]) == [2, 2, 12, 10, 8]": {
      "result": true,
      "time": 0.04526543617248535,
      "error": null
    },
    "assert filter_evennumbers([4, 11, 4, 5, 4, 4, 3]) == [4, 4, 4, 4]": {
      "result": true,
      "time": 0.04676365852355957,
      "error": null
    },
    "assert filter_evennumbers([3, 3, 9, 13, 11, 9, 5]) == []": {
      "result": true,
      "time": 0.04506683349609375,
      "error": null
    },
    "assert filter_evennumbers([1, 9, 11, 8, 11, 7, 2]) == [8, 2]": {
      "result": true,
      "time": 0.0617680549621582,
      "error": null
    },
    "assert filter_evennumbers([9, 7, 6, 6, 9, 4, 3]) == [6, 6, 4]": {
      "result": true,
      "time": 0.05556297302246094,
      "error": null
    },
    "assert filter_evennumbers([3, 10, 5, 5, 2, 3, 2]) == [10, 2, 2]": {
      "result": true,
      "time": 0.05070614814758301,
      "error": null
    },
    "assert filter_evennumbers([7, 4, 7, 10, 9, 5, 4]) == [4, 10, 4]": {
      "result": true,
      "time": 0.05444908142089844,
      "error": null
    },
    "assert filter_evennumbers([3, 8, 5, 9, 7, 9, 7]) == [8]": {
      "result": true,
      "time": 0.06170058250427246,
      "error": null
    },
    "assert filter_evennumbers([4, 2, 6, 7, 6, 4, 7]) == [4, 2, 6, 6, 4]": {
      "result": true,
      "time": 0.04951667785644531,
      "error": null
    },
    "assert filter_evennumbers([7, 11, 9, 12, 8, 8, 5]) == [12, 8, 8]": {
      "result": true,
      "time": 0.04075908660888672,
      "error": null
    },
    "assert filter_evennumbers([2, 4, 5, 7, 5, 9, 5]) == [2, 4]": {
      "result": true,
      "time": 0.05479907989501953,
      "error": null
    },
    "assert filter_evennumbers([9, 4, 9, 4, 8, 4, 5]) == [4, 4, 8, 4]": {
      "result": true,
      "time": 0.05410885810852051,
      "error": null
    },
    "assert filter_evennumbers([3, 5, 11, 7, 7, 7, 1]) == []": {
      "result": true,
      "time": 0.05083131790161133,
      "error": null
    },
    "assert filter_evennumbers([3, 6, 11, 11, 3, 1, 8]) == [6, 8]": {
      "result": true,
      "time": 0.05829787254333496,
      "error": null
    },
    "assert filter_evennumbers([4, 11, 14, 13, 1, 5, 5]) == [4, 14]": {
      "result": true,
      "time": 0.05643177032470703,
      "error": null
    },
    "assert filter_evennumbers([4, 11, 10, 7, 7, 4, 3]) == [4, 10, 4]": {
      "result": true,
      "time": 0.06220722198486328,
      "error": null
    },
    "assert filter_evennumbers([2, 6, 10, 10, 4, 9, 3]) == [2, 6, 10, 10, 4]": {
      "result": true,
      "time": 0.056363582611083984,
      "error": null
    },
    "assert filter_evennumbers([4, 5, 6, 11, 1, 7, 3]) == [4, 6]": {
      "result": true,
      "time": 0.05573773384094238,
      "error": null
    },
    "assert filter_evennumbers([4, 4, 6, 9, 6, 5, 8]) == [4, 4, 6, 6, 8]": {
      "result": true,
      "time": 0.0598146915435791,
      "error": null
    },
    "assert filter_evennumbers([4, 12, 4, 7, 5, 3, 7]) == [4, 12, 4]": {
      "result": true,
      "time": 0.05150032043457031,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": "",
  "has_testcase_error": false
}