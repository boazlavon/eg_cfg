{
  "code": "def odd_Days(year):\n    if year % 4 == 0:\n        if year % 100 == 0:\n            if year % 400 == 0:\n                return 66\n            else:\n                return 65\n        else:\n            return 60\n    else:\n        return 65",
  "results": {
    "assert odd_Days(100) == 5": {
      "result": false,
      "time": 0.0405881404876709,
      "error": null
    },
    "assert odd_Days(50) ==6": {
      "result": false,
      "time": 0.040921926498413086,
      "error": null
    },
    "assert odd_Days(75) == 2": {
      "result": false,
      "time": 0.04394841194152832,
      "error": null
    },
    "assert odd_Days(103) == 1": {
      "result": false,
      "time": 0.04456615447998047,
      "error": null
    },
    "assert odd_Days(104) == 3": {
      "result": false,
      "time": 0.03527379035949707,
      "error": null
    },
    "assert odd_Days(101) == 6": {
      "result": false,
      "time": 0.04424118995666504,
      "error": null
    },
    "assert odd_Days(95) == 6": {
      "result": false,
      "time": 0.03724026679992676,
      "error": null
    },
    "assert odd_Days(105) == 4": {
      "result": false,
      "time": 0.03606534004211426,
      "error": null
    },
    "assert odd_Days(97) == 2": {
      "result": false,
      "time": 0.040041446685791016,
      "error": null
    },
    "assert odd_Days(102) == 0": {
      "result": false,
      "time": 0.04982638359069824,
      "error": null
    },
    "assert odd_Days(99) == 4": {
      "result": false,
      "time": 0.04230904579162598,
      "error": null
    },
    "assert odd_Days(98) == 3": {
      "result": false,
      "time": 0.03774285316467285,
      "error": null
    },
    "assert odd_Days(52) == 2": {
      "result": false,
      "time": 0.04866600036621094,
      "error": null
    },
    "assert odd_Days(45) == 0": {
      "result": false,
      "time": 0.035665035247802734,
      "error": null
    },
    "assert odd_Days(50) == 6": {
      "result": false,
      "time": 0.04172372817993164,
      "error": null
    },
    "assert odd_Days(51) == 0": {
      "result": false,
      "time": 0.04055023193359375,
      "error": null
    },
    "assert odd_Days(48) == 4": {
      "result": false,
      "time": 0.04003405570983887,
      "error": null
    },
    "assert odd_Days(47) == 2": {
      "result": false,
      "time": 0.040146827697753906,
      "error": null
    },
    "assert odd_Days(53) == 3": {
      "result": false,
      "time": 0.03959393501281738,
      "error": null
    },
    "assert odd_Days(46) == 1": {
      "result": false,
      "time": 0.03510451316833496,
      "error": null
    },
    "assert odd_Days(55) == 5": {
      "result": false,
      "time": 0.04386186599731445,
      "error": null
    },
    "assert odd_Days(49) == 5": {
      "result": false,
      "time": 0.03755950927734375,
      "error": null
    },
    "assert odd_Days(54) == 4": {
      "result": false,
      "time": 0.04609537124633789,
      "error": null
    },
    "assert odd_Days(79) == 0": {
      "result": false,
      "time": 0.03749489784240723,
      "error": null
    },
    "assert odd_Days(76) == 4": {
      "result": false,
      "time": 0.05007767677307129,
      "error": null
    },
    "assert odd_Days(72) == 6": {
      "result": false,
      "time": 0.03713488578796387,
      "error": null
    },
    "assert odd_Days(74) == 1": {
      "result": false,
      "time": 0.049753427505493164,
      "error": null
    },
    "assert odd_Days(70) == 3": {
      "result": false,
      "time": 0.03877902030944824,
      "error": null
    },
    "assert odd_Days(73) == 0": {
      "result": false,
      "time": 0.04329514503479004,
      "error": null
    },
    "assert odd_Days(77) == 5": {
      "result": false,
      "time": 0.040314674377441406,
      "error": null
    },
    "assert odd_Days(80) == 2": {
      "result": false,
      "time": 0.051598310470581055,
      "error": null
    },
    "assert odd_Days(71) == 4": {
      "result": false,
      "time": 0.05503654479980469,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": "",
  "has_testcase_error": false
}