{
  "code": "def closest_integer(value):\n    number = float(value)\n    floor_value = int(number)\n    ceiling_value = floor_value + 1\n    distance_to_floor = abs(number - floor_value)\n    distance_to_ceiling = abs(ceiling_value - number)\n    \n    if distance_to_floor < distance_to_ceiling:\n        return floor_value\n    elif distance_to_ceiling < distance_to_floor:\n        return ceiling_value\n    else:\n        if number >= 0:\n            return ceiling_value\n        else:\n            return floor_value",
  "results": {
    "def check(candidate):\n\n    # Check some simple cases\n    assert candidate(\"10\") == 10, \"Test 1\"\n    assert candidate(\"14.5\") == 15, \"Test 2\"\n    assert candidate(\"-15.5\") == -16, \"Test 3\"\n    assert candidate(\"15.3\") == 15, \"Test 3\"\n\n    # Check some edge cases that are easy to work out by hand.\n    assert candidate(\"0\") == 0, \"Test 0\"\n\n\ncheck(closest_integer)": {
      "result": false,
      "time": 0.05385756492614746,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 19:16:10",
    "guidance_input_tokens": 583,
    "guidance_output_tokens": 421,
    "end_time": "2025-05-27 19:16:18",
    "duration": "0:00:07.331371"
  },
  "retry": 0,
  "random_seed": 1038
}