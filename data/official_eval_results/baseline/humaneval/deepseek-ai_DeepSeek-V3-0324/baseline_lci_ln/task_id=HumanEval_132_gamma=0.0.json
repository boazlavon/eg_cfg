{
  "code": "def is_nested(string):\n    stack = []\n    has_nested = False\n    for char in string:\n        if char == '[':\n            stack.append(char)\n        elif char == ']' and stack:\n            stack.pop()\n            if stack:\n                has_nested = True\n    return has_nested",
  "results": {
    "assert is_nested('[[]]') == True, \"This prints if this assert fails 1 (good for debugging!)\"": {
      "result": true,
      "time": 0.0641319751739502,
      "error": null
    },
    "assert is_nested('[]]]]]]][[[[[]') == False": {
      "result": false,
      "time": 0.05511355400085449,
      "error": null
    },
    "assert is_nested('[][]') == False": {
      "result": true,
      "time": 0.055223703384399414,
      "error": null
    },
    "assert is_nested(('[]')) == False": {
      "result": true,
      "time": 0.05010581016540527,
      "error": null
    },
    "assert is_nested('[[[[]]]]') == True": {
      "result": true,
      "time": 0.050115108489990234,
      "error": null
    },
    "assert is_nested('[]]]]]]]]]]') == False": {
      "result": true,
      "time": 0.053518056869506836,
      "error": null
    },
    "assert is_nested('[][][[]]') == True": {
      "result": true,
      "time": 0.049154043197631836,
      "error": null
    },
    "assert is_nested('[[]') == False": {
      "result": false,
      "time": 0.0540308952331543,
      "error": null
    },
    "assert is_nested('[]]') == False": {
      "result": true,
      "time": 0.04989814758300781,
      "error": null
    },
    "assert is_nested('[[]][[') == True": {
      "result": true,
      "time": 0.05218172073364258,
      "error": null
    },
    "assert is_nested('[[][]]') == True": {
      "result": true,
      "time": 0.05167865753173828,
      "error": null
    },
    "assert is_nested('') == False, \"This prints if this assert fails 2 (also good for debugging!)\"": {
      "result": true,
      "time": 0.049021005630493164,
      "error": null
    },
    "assert is_nested('[[[[[[[[') == False": {
      "result": true,
      "time": 0.04811596870422363,
      "error": null
    },
    "assert is_nested(']]]]]]]]') == False": {
      "result": true,
      "time": 0.04785299301147461,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.8571428571428571,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:41:55",
    "guidance_input_tokens": 616,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:41:58",
    "duration": "0:00:03.142102"
  },
  "retry": 0,
  "random_seed": 379
}