{
  "code": "def sort_numbers(numbers):\n    word_to_num = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    }\n    num_to_word = {\n        0: 'zero',\n        1: 'one',\n        2: 'two',\n        3: 'three',\n        4: 'four',\n        5: 'five',\n        6: 'six',\n        7: 'seven',\n        8: 'eight',\n        9: 'nine'\n    }\n    words = numbers.split()\n    nums = []\n    for word in words:\n        num = word_to_num[word]\n        nums.append(num)\n    nums.sort()\n    sorted_words = []\n    for num in nums:\n        word = num_to_word[num]\n        sorted_words.append(word)\n    result = ' '.join(sorted_words)\n    return result",
  "results": {
    "\n\nMETADATA = {\n    'author': 'jt',\n    'dataset': 'test'\n}\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three five nine') == 'three five nine'\n    assert candidate('five zero four seven nine eight') == 'zero four five seven eight nine'\n    assert candidate('six five four three two one zero') == 'zero one two three four five six'\n\ncheck(sort_numbers)": {
      "result": true,
      "time": 0.05314803123474121,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 19:25:51",
    "guidance_input_tokens": 601,
    "guidance_output_tokens": 240,
    "end_time": "2025-05-27 19:25:57",
    "duration": "0:00:05.913659"
  },
  "retry": 0,
  "random_seed": 1038
}