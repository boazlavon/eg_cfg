{
  "code": "def histogram(test):\n    if not test:\n        return {}\n    letters = test.split()\n    counts = {}\n    for letter in letters:\n        if letter in counts:\n            counts[letter] += 1\n        else:\n            counts[letter] = 1\n    max_count = 0\n    for count in counts.values():\n        if count > max_count:\n            max_count = count\n    result = {}\n    for letter, count in counts.items():\n        if count == max_count:\n            result[letter] = count\n    return result",
  "results": {
    "assert histogram('a b b a') == {'a':2,'b': 2}, \"This prints if this assert fails 1 (good for debugging!)\"": {
      "result": true,
      "time": 0.054671287536621094,
      "error": null
    },
    "assert histogram('a b c a b') == {'a': 2, 'b': 2}, \"This prints if this assert fails 2 (good for debugging!)\"": {
      "result": true,
      "time": 0.05474352836608887,
      "error": null
    },
    "assert histogram('a b c d g') == {'a': 1, 'b': 1, 'c': 1, 'd': 1, 'g': 1}, \"This prints if this assert fails 3 (good for debugging!)\"": {
      "result": true,
      "time": 0.05144453048706055,
      "error": null
    },
    "assert histogram('r t g') == {'r': 1,'t': 1,'g': 1}, \"This prints if this assert fails 4 (good for debugging!)\"": {
      "result": true,
      "time": 0.05048727989196777,
      "error": null
    },
    "assert histogram('b b b b a') == {'b': 4}, \"This prints if this assert fails 5 (good for debugging!)\"": {
      "result": true,
      "time": 0.05186343193054199,
      "error": null
    },
    "assert histogram('r t g') == {'r': 1,'t': 1,'g': 1}, \"This prints if this assert fails 6 (good for debugging!)\"": {
      "result": true,
      "time": 0.05463075637817383,
      "error": null
    },
    "assert histogram('') == {}, \"This prints if this assert fails 7 (also good for debugging!)\"": {
      "result": true,
      "time": 0.052735328674316406,
      "error": null
    },
    "assert histogram('a') == {'a': 1}, \"This prints if this assert fails 8 (also good for debugging!)\"": {
      "result": true,
      "time": 0.051633358001708984,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:38:59",
    "guidance_input_tokens": 631,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:39:03",
    "duration": "0:00:03.513713"
  },
  "retry": 0,
  "random_seed": 379
}