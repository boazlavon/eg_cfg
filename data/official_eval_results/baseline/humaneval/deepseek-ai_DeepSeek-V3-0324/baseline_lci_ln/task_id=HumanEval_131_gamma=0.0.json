{
  "code": "def digits(n):\n    product = 1\n    has_odd = False\n    while n > 0:\n        digit = n % 10\n        if digit % 2 != 0:\n            product = product * digit\n            has_odd = True\n        n = n // 10\n    if not has_odd:\n        return 0\n    return product",
  "results": {
    "assert digits(5) == 5": {
      "result": true,
      "time": 0.05277371406555176,
      "error": null
    },
    "assert digits(54) == 5": {
      "result": true,
      "time": 0.05110001564025879,
      "error": null
    },
    "assert digits(120) ==1": {
      "result": true,
      "time": 0.050528526306152344,
      "error": null
    },
    "assert digits(5014) == 5": {
      "result": true,
      "time": 0.05137968063354492,
      "error": null
    },
    "assert digits(98765) == 315": {
      "result": true,
      "time": 0.054401397705078125,
      "error": null
    },
    "assert digits(5576543) == 2625": {
      "result": true,
      "time": 0.04857897758483887,
      "error": null
    },
    "assert digits(2468) == 0": {
      "result": true,
      "time": 0.04466104507446289,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:41:52",
    "guidance_input_tokens": 553,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:41:55",
    "duration": "0:00:02.478103"
  },
  "retry": 0,
  "random_seed": 379
}