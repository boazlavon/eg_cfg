{
  "code": "def rolling_max(numbers):\n    max_so_far = None\n    result = []\n    for num in numbers:\n        if max_so_far is None:\n            max_so_far = num\n        else:\n            if num > max_so_far:\n                max_so_far = num\n        result.append(max_so_far)\n    return result",
  "results": {
    "assert rolling_max([]) == []": {
      "result": true,
      "time": 0.05139970779418945,
      "error": null
    },
    "assert rolling_max([1, 2, 3, 4]) == [1, 2, 3, 4]": {
      "result": true,
      "time": 0.05284428596496582,
      "error": null
    },
    "assert rolling_max([4, 3, 2, 1]) == [4, 4, 4, 4]": {
      "result": true,
      "time": 0.05424308776855469,
      "error": null
    },
    "assert rolling_max([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]": {
      "result": true,
      "time": 0.0499262809753418,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:04:27",
    "guidance_input_tokens": 594,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:04:37",
    "duration": "0:00:09.425367"
  },
  "retry": 0,
  "random_seed": 379
}