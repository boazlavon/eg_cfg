{
  "code": "def numerical_letter_grade(grades):\n    letter_grades = []\n    for gpa in grades:\n        if gpa == 4.0:\n            letter = 'A+'\n        elif gpa > 3.7:\n            letter = 'A'\n        elif gpa > 3.3:\n            letter = 'A-'\n        elif gpa > 3.0:\n            letter = 'B+'\n        elif gpa > 2.7:\n            letter = 'B'\n        elif gpa > 2.3:\n            letter = 'B-'\n        elif gpa > 2.0:\n            letter = 'C+'\n        elif gpa > 1.7:\n            letter = 'C'\n        elif gpa > 1.3:\n            letter = 'C-'\n        elif gpa > 1.0:\n            letter = 'D+'\n        elif gpa > 0.7:\n            letter = 'D'\n        elif gpa > 0.0:\n            letter = 'D-'\n        else:\n            letter = 'E'\n        letter_grades.append(letter)\n    return letter_grades",
  "results": {
    "assert numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]) == ['A+', 'B', 'C-', 'C', 'A-']": {
      "result": true,
      "time": 0.049901485443115234,
      "error": null
    },
    "assert numerical_letter_grade([1.2]) == ['D+']": {
      "result": true,
      "time": 0.05100440979003906,
      "error": null
    },
    "assert numerical_letter_grade([0.5]) == ['D-']": {
      "result": true,
      "time": 0.046675920486450195,
      "error": null
    },
    "assert numerical_letter_grade([0.0]) == ['E']": {
      "result": true,
      "time": 0.04804801940917969,
      "error": null
    },
    "assert numerical_letter_grade([1, 0.3, 1.5, 2.8, 3.3]) == ['D', 'D-', 'C-', 'B', 'B+']": {
      "result": true,
      "time": 0.04479360580444336,
      "error": null
    },
    "assert numerical_letter_grade([0, 0.7]) == ['E', 'D-']": {
      "result": true,
      "time": 0.04768514633178711,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:35:54",
    "guidance_input_tokens": 740,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:36:00",
    "duration": "0:00:06.549561"
  },
  "retry": 0,
  "random_seed": 379
}