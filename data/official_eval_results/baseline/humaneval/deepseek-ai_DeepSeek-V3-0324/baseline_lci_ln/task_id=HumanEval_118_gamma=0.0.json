{
  "code": "def get_closest_vowel(word):\n    vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    consonants = []\n    for i in range(1, len(word) - 1):\n        if word[i] not in vowels:\n            consonants.append(i)\n    for i in range(len(word) - 2, 0, -1):\n        if i in consonants:\n            continue\n        if word[i] in vowels:\n            return word[i]\n    return \"\"",
  "results": {
    "def check(candidate):\n\n    # Check some simple cases\n    assert candidate(\"yogurt\") == \"u\"\n    assert candidate(\"full\") == \"u\"\n    assert candidate(\"easy\") == \"\"\n    assert candidate(\"eAsy\") == \"\"\n    assert candidate(\"ali\") == \"\"\n    assert candidate(\"bad\") == \"a\"\n    assert candidate(\"most\") == \"o\"\n    assert candidate(\"ab\") == \"\"\n    assert candidate(\"ba\") == \"\"\n    assert candidate(\"quick\") == \"\"\n    assert candidate(\"anime\") == \"i\"\n    assert candidate(\"Asia\") == \"\"\n    assert candidate(\"Above\") == \"o\"\n\n    # Check some edge cases that are easy to work out by hand.\n    assert True\n\n\ncheck(get_closest_vowel)": {
      "result": false,
      "time": 0.05261397361755371,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 19:18:16",
    "guidance_input_tokens": 627,
    "guidance_output_tokens": 123,
    "end_time": "2025-05-27 19:18:24",
    "duration": "0:00:07.383827"
  },
  "retry": 0,
  "random_seed": 1038
}