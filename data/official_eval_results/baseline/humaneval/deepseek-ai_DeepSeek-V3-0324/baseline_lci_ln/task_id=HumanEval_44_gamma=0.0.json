{
  "code": "def change_base(x: int, base: int):\n    if x == 0:\n        return '0'\n    digits = []\n    while x > 0:\n        remainder = x % base\n        digits.append(str(remainder))\n        x = x // base\n    digits.reverse()\n    result = ''.join(digits)\n    return result",
  "results": {
    "assert change_base(8, 3) == \"22\"": {
      "result": true,
      "time": 0.04642295837402344,
      "error": null
    },
    "assert change_base(9, 3) == \"100\"": {
      "result": true,
      "time": 0.05160093307495117,
      "error": null
    },
    "assert change_base(234, 2) == \"11101010\"": {
      "result": true,
      "time": 0.046396493911743164,
      "error": null
    },
    "assert change_base(16, 2) == \"10000\"": {
      "result": true,
      "time": 0.04372549057006836,
      "error": null
    },
    "assert change_base(8, 2) == \"1000\"": {
      "result": true,
      "time": 0.04782271385192871,
      "error": null
    },
    "assert change_base(7, 2) == \"111\"": {
      "result": true,
      "time": 0.04521512985229492,
      "error": null
    },
    "assert change_base(x, x + 1) == str(x)": {
      "result": false,
      "time": 0.04599881172180176,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.8571428571428571,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:32:30",
    "guidance_input_tokens": 590,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:32:33",
    "duration": "0:00:02.821147"
  },
  "retry": 0,
  "random_seed": 379
}