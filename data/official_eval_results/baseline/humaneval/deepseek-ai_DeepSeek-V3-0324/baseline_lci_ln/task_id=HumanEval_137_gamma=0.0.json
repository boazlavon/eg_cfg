{
  "code": "def compare_one(a, b):\n    def to_float(value):\n        if isinstance(value, str):\n            value = value.replace(',', '.')\n            try:\n                return float(value)\n            except ValueError:\n                return None\n        elif isinstance(value, (int, float)):\n            return float(value)\n        else:\n            return None\n    \n    a_float = to_float(a)\n    b_float = to_float(b)\n    \n    if a_float is None or b_float is None:\n        return None\n    \n    if a_float > b_float:\n        return a\n    elif b_float > a_float:\n        return b\n    else:\n        return None",
  "results": {
    "def check(compare_one):\n\n    # Check some simple cases\n    assert compare_one(1, 2) == 2\n    assert compare_one(1, 2.5) == 2.5\n    assert compare_one(2, 3) == 3\n    assert compare_one(5, 6) == 6\n    assert compare_one(1, \"2,3\") == \"2,3\"\n    assert compare_one(\"5,1\", \"6\") == \"6\"\n    assert compare_one(\"1\", \"2\") == \"2\"\n    assert compare_one(\"1\", 1) == None\n\n    # Check some edge cases that are easy to work out by hand.\n    assert True\n\n\ncheck(compare_one)": {
      "result": true,
      "time": 0.05227851867675781,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 17:40:41",
    "guidance_input_tokens": 620,
    "guidance_output_tokens": 249,
    "end_time": "2025-05-27 17:40:46",
    "duration": "0:00:04.172723"
  },
  "retry": 0,
  "random_seed": 726
}