{
  "code": "def rescale_to_unit(numbers):\n    min_val = min(numbers)\n    max_val = max(numbers)\n    range_val = max_val - min_val\n    rescaled = []\n    for num in numbers:\n        normalized = (num - min_val) / range_val\n        rescaled.append(normalized)\n    return rescaled",
  "results": {
    "assert rescale_to_unit([2.0, 49.9]) == [0.0, 1.0]": {
      "result": true,
      "time": 0.053943634033203125,
      "error": null
    },
    "assert rescale_to_unit([100.0, 49.9]) == [1.0, 0.0]": {
      "result": true,
      "time": 0.05350017547607422,
      "error": null
    },
    "assert rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]": {
      "result": true,
      "time": 0.049395084381103516,
      "error": null
    },
    "assert rescale_to_unit([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]": {
      "result": true,
      "time": 0.04979681968688965,
      "error": null
    },
    "assert rescale_to_unit([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]": {
      "result": true,
      "time": 0.05066251754760742,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:06:02",
    "guidance_input_tokens": 622,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:06:09",
    "duration": "0:00:07.028168"
  },
  "retry": 0,
  "random_seed": 379
}