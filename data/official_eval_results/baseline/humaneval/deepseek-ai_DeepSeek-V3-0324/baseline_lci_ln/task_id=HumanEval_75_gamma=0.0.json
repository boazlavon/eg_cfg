{
  "code": "def is_multiply_prime(a):\n    if a < 2:\n        return False\n    primes = []\n    for num in range(2, 100):\n        is_prime = True\n        for i in range(2, num):\n            if num % i == 0:\n                is_prime = False\n                break\n        if is_prime:\n            primes.append(num)\n    count = 0\n    temp = a\n    for prime in primes:\n        while temp % prime == 0:\n            temp = temp / prime\n            count += 1\n    return count == 3 and temp == 1",
  "results": {
    "def check(is_multiply_prime):\n\n    assert is_multiply_prime(5) == False\n    assert is_multiply_prime(30) == True\n    assert is_multiply_prime(8) == True\n    assert is_multiply_prime(10) == False\n    assert is_multiply_prime(125) == True\n    assert is_multiply_prime(3 * 5 * 7) == True\n    assert is_multiply_prime(3 * 6 * 7) == False\n    assert is_multiply_prime(9 * 9 * 9) == False\n    assert is_multiply_prime(11 * 9 * 9) == False\n    assert is_multiply_prime(11 * 13 * 7) == True\n\n\ncheck(is_multiply_prime)": {
      "result": true,
      "time": 0.055162668228149414,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 17:39:19",
    "guidance_input_tokens": 589,
    "guidance_output_tokens": 151,
    "end_time": "2025-05-27 17:39:22",
    "duration": "0:00:02.288553"
  },
  "retry": 0,
  "random_seed": 726
}