{
  "code": "def x_or_y(n, x, y):\n    if n < 2:\n        return y\n    is_prime = True\n    for i in range(2, n):\n        if n % i == 0:\n            is_prime = False\n            break\n    if is_prime:\n        return x\n    else:\n        return y",
  "results": {
    "assert x_or_y(7, 34, 12) == 34": {
      "result": true,
      "time": 0.05649209022521973,
      "error": null
    },
    "assert x_or_y(15, 8, 5) == 5": {
      "result": true,
      "time": 0.05156135559082031,
      "error": null
    },
    "assert x_or_y(3, 33, 5212) == 33": {
      "result": true,
      "time": 0.044618844985961914,
      "error": null
    },
    "assert x_or_y(1259, 3, 52) == 3": {
      "result": true,
      "time": 0.04907345771789551,
      "error": null
    },
    "assert x_or_y(7919, -1, 12) == -1": {
      "result": true,
      "time": 0.047492265701293945,
      "error": null
    },
    "assert x_or_y(3609, 1245, 583) == 583": {
      "result": true,
      "time": 0.0505526065826416,
      "error": null
    },
    "assert x_or_y(91, 56, 129) == 129": {
      "result": true,
      "time": 0.050536155700683594,
      "error": null
    },
    "assert x_or_y(6, 34, 1234) == 1234": {
      "result": true,
      "time": 0.05410623550415039,
      "error": null
    },
    "assert x_or_y(1, 2, 0) == 0": {
      "result": true,
      "time": 0.05190730094909668,
      "error": null
    },
    "assert x_or_y(2, 2, 0) == 2": {
      "result": true,
      "time": 0.04421544075012207,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:43:51",
    "guidance_input_tokens": 570,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:43:55",
    "duration": "0:00:03.404860"
  },
  "retry": 0,
  "random_seed": 379
}