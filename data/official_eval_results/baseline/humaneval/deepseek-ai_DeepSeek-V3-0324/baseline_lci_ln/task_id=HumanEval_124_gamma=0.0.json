{
  "code": "def valid_date(date):\n    if not date:\n        return False\n    if len(date) != 10:\n        return False\n    if date[2] != '-' or date[5] != '-':\n        return False\n    parts = date.split('-')\n    if len(parts) != 3:\n        return False\n    try:\n        month = int(parts[0])\n        day = int(parts[1])\n        year = int(parts[2])\n    except ValueError:\n        return False\n    if month < 1 or month > 12:\n        return False\n    if month in [1, 3, 5, 7, 8, 10, 12]:\n        if day < 1 or day > 31:\n            return False\n    elif month in [4, 6, 9, 11]:\n        if day < 1 or day > 30:\n            return False\n    elif month == 2:\n        if day < 1 or day > 29:\n            return False\n    return True",
  "results": {
    "assert valid_date('03-11-2000') == True": {
      "result": true,
      "time": 0.05147194862365723,
      "error": null
    },
    "assert valid_date('15-01-2012') == False": {
      "result": true,
      "time": 0.05388474464416504,
      "error": null
    },
    "assert valid_date('04-0-2040') == False": {
      "result": true,
      "time": 0.05087161064147949,
      "error": null
    },
    "assert valid_date('06-04-2020') == True": {
      "result": true,
      "time": 0.052017927169799805,
      "error": null
    },
    "assert valid_date('01-01-2007') == True": {
      "result": true,
      "time": 0.05413055419921875,
      "error": null
    },
    "assert valid_date('03-32-2011') == False": {
      "result": true,
      "time": 0.048935651779174805,
      "error": null
    },
    "assert valid_date('') == False": {
      "result": true,
      "time": 0.05058884620666504,
      "error": null
    },
    "assert valid_date('04-31-3000') == False": {
      "result": true,
      "time": 0.05397820472717285,
      "error": null
    },
    "assert valid_date('06-06-2005') == True": {
      "result": true,
      "time": 0.05352330207824707,
      "error": null
    },
    "assert valid_date('21-31-2000') == False": {
      "result": true,
      "time": 0.0503389835357666,
      "error": null
    },
    "assert valid_date('04-12-2003') == True": {
      "result": true,
      "time": 0.0481870174407959,
      "error": null
    },
    "assert valid_date('04122003') == False": {
      "result": true,
      "time": 0.04847288131713867,
      "error": null
    },
    "assert valid_date('20030412') == False": {
      "result": true,
      "time": 0.048770904541015625,
      "error": null
    },
    "assert valid_date('2003-04') == False": {
      "result": true,
      "time": 0.04945063591003418,
      "error": null
    },
    "assert valid_date('2003-04-12') == False": {
      "result": true,
      "time": 0.06550359725952148,
      "error": null
    },
    "assert valid_date('04-2003') == False": {
      "result": true,
      "time": 0.05597567558288574,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:40:50",
    "guidance_input_tokens": 736,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:40:57",
    "duration": "0:00:06.234842"
  },
  "retry": 0,
  "random_seed": 379
}