{
  "code": "def anti_shuffle(s):\n    words = s.split(' ')\n    ordered_words = []\n    for word in words:\n        if word:\n            chars = []\n            for char in word:\n                chars.append(char)\n            char_ords = []\n            for char in chars:\n                char_ords.append(ord(char))\n            zipped = []\n            for i in range(len(chars)):\n                zipped.append((char_ords[i], chars[i]))\n            sorted_zipped = sorted(zipped)\n            sorted_chars = []\n            for item in sorted_zipped:\n                sorted_chars.append(item[1])\n            ordered_word = ''\n            for char in sorted_chars:\n                ordered_word = ordered_word + char\n            ordered_words.append(ordered_word)\n        else:\n            ordered_words.append('')\n    result = ''\n    first_word = True\n    for word in ordered_words:\n        if not first_word:\n            result = result + ' ' + word\n        else:\n            result = result + word\n            first_word = False\n    return result",
  "results": {
    "assert anti_shuffle('Hi') == 'Hi'": {
      "result": true,
      "time": 0.05410170555114746,
      "error": null
    },
    "assert anti_shuffle('hello') == 'ehllo'": {
      "result": true,
      "time": 0.0554046630859375,
      "error": null
    },
    "assert anti_shuffle('number') == 'bemnru'": {
      "result": true,
      "time": 0.05316734313964844,
      "error": null
    },
    "assert anti_shuffle('abcd') == 'abcd'": {
      "result": true,
      "time": 0.05140876770019531,
      "error": null
    },
    "assert anti_shuffle('Hello World!!!') == 'Hello !!!Wdlor'": {
      "result": true,
      "time": 0.05286979675292969,
      "error": null
    },
    "assert anti_shuffle('') == ''": {
      "result": true,
      "time": 0.052506446838378906,
      "error": null
    },
    "assert anti_shuffle('Hi. My name is Mister Robot. How are you?') == '.Hi My aemn is Meirst .Rboot How aer ?ouy'": {
      "result": true,
      "time": 0.055162668228149414,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:36:48",
    "guidance_input_tokens": 613,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:37:04",
    "duration": "0:00:15.370992"
  },
  "retry": 0,
  "random_seed": 379
}