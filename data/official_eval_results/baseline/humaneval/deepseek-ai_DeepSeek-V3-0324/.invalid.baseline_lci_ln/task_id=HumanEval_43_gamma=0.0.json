{
  "code": "def pairs_sum_to_zero(l):\n    length = len(l)\n    found = False\n    for i in range(length):\n        first_num = l[i]\n        for j in range(i + 1, length):\n            second_num = l[j]\n            sum_nums = first_num + second_num\n            if sum_nums == 0:\n                found = True\n                break\n        if found:\n            break\n    return found",
  "results": {
    "assert pairs_sum_to_zero([1, 3, 5, 0]) == False": {
      "result": true,
      "time": 0.06316804885864258,
      "error": null
    },
    "assert pairs_sum_to_zero([1, 3, -2, 1]) == False": {
      "result": true,
      "time": 0.05395698547363281,
      "error": null
    },
    "assert pairs_sum_to_zero([1, 2, 3, 7]) == False": {
      "result": true,
      "time": 0.047554969787597656,
      "error": null
    },
    "assert pairs_sum_to_zero([2, 4, -5, 3, 5, 7]) == True": {
      "result": true,
      "time": 0.049524545669555664,
      "error": null
    },
    "assert pairs_sum_to_zero([1]) == False": {
      "result": true,
      "time": 0.050750732421875,
      "error": null
    },
    "assert pairs_sum_to_zero([-3, 9, -1, 3, 2, 30]) == True": {
      "result": true,
      "time": 0.051511287689208984,
      "error": null
    },
    "assert pairs_sum_to_zero([-3, 9, -1, 3, 2, 31]) == True": {
      "result": true,
      "time": 0.0559694766998291,
      "error": null
    },
    "assert pairs_sum_to_zero([-3, 9, -1, 4, 2, 30]) == False": {
      "result": true,
      "time": 0.05548572540283203,
      "error": null
    },
    "assert pairs_sum_to_zero([-3, 9, -1, 4, 2, 31]) == False": {
      "result": true,
      "time": 0.05236053466796875,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:32:20",
    "guidance_input_tokens": 648,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:32:30",
    "duration": "0:00:10.417000"
  },
  "retry": 0,
  "random_seed": 379
}