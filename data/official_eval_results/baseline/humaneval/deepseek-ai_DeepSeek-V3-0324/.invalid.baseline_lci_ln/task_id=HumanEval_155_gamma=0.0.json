{
  "code": "def even_odd_count(num):\n    even_count = 0\n    odd_count = 0\n    absolute_num = abs(num)\n    while absolute_num > 0:\n        digit = absolute_num % 10\n        if digit % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n        absolute_num = absolute_num // 10\n    return (even_count, odd_count)",
  "results": {
    "assert even_odd_count(7) == (0, 1)": {
      "result": true,
      "time": 0.05888772010803223,
      "error": null
    },
    "assert even_odd_count(-78) == (1, 1)": {
      "result": true,
      "time": 0.047066688537597656,
      "error": null
    },
    "assert even_odd_count(3452) == (2, 2)": {
      "result": true,
      "time": 0.0518341064453125,
      "error": null
    },
    "assert even_odd_count(346211) == (3, 3)": {
      "result": true,
      "time": 0.04408669471740723,
      "error": null
    },
    "assert even_odd_count(-345821) == (3, 3)": {
      "result": true,
      "time": 0.050289154052734375,
      "error": null
    },
    "assert even_odd_count(-2) == (1, 0)": {
      "result": true,
      "time": 0.0526585578918457,
      "error": null
    },
    "assert even_odd_count(-45347) == (2, 3)": {
      "result": true,
      "time": 0.04646706581115723,
      "error": null
    },
    "assert even_odd_count(0) == (1, 0)": {
      "result": false,
      "time": 0.04950761795043945,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.875,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:44:06",
    "guidance_input_tokens": 557,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:44:08",
    "duration": "0:00:01.914211"
  },
  "retry": 0,
  "random_seed": 379
}