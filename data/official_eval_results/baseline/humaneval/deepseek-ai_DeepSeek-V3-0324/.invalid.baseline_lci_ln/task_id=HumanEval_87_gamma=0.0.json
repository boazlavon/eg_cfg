{
  "code": "def get_row(lst, x):\n    coordinates = []\n    for row_index in range(len(lst)):\n        row = lst[row_index]\n        for col_index in range(len(row)):\n            if row[col_index] == x:\n                coordinate = (row_index, col_index)\n                coordinates.append(coordinate)\n    coordinates.sort()\n    for i in range(len(coordinates)):\n        for j in range(i + 1, len(coordinates)):\n            if coordinates[i][0] == coordinates[j][0]:\n                if coordinates[i][1] < coordinates[j][1]:\n                    temp = coordinates[i]\n                    coordinates[i] = coordinates[j]\n                    coordinates[j] = temp\n    return coordinates",
  "results": {
    "assert get_row([": {
      "result": false,
      "time": 0.05088233947753906,
      "error": null
    },
    "assert get_row([], 1) == []": {
      "result": true,
      "time": 0.05305933952331543,
      "error": null
    },
    "assert get_row([[1]], 2) == []": {
      "result": true,
      "time": 0.052525997161865234,
      "error": null
    },
    "assert get_row([[], [1], [1, 2, 3]], 3) == [(2, 2)]": {
      "result": true,
      "time": 0.05167222023010254,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.75,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-26 20:37:04",
    "guidance_input_tokens": 732,
    "guidance_output_tokens": 0,
    "end_time": "2025-05-26 20:37:12",
    "duration": "0:00:08.600984"
  },
  "retry": 0,
  "random_seed": 379
}