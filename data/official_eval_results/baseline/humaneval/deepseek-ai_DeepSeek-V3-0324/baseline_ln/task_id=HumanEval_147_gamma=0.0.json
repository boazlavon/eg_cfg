{
  "code": "def get_max_triples(n):\n    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count0 = 0\n    count1 = 0\n    count2 = 0\n    \n    for num in a:\n        mod = num % 3\n        if mod == 0:\n            count0 += 1\n        elif mod == 1:\n            count1 += 1\n        else:\n            count2 += 1\n    \n    total = 0\n    # All three mod 0\n    total += count0 * (count0 - 1) * (count0 - 2) // 6 if count0 >= 3 else 0\n    # All three mod 1\n    total += count1 * (count1 - 1) * (count1 - 2) // 6 if count1 >= 3 else 0\n    # All three mod 2\n    total += count2 * (count2 - 1) * (count2 - 2) // 6 if count2 >= 3 else 0\n    # One from each mod group\n    total += count0 * count1 * count2\n    \n    return total",
  "results": {
    "def check(get_max_triples):\n\n    assert get_max_triples(5) == 1\n    assert get_max_triples(6) == 4\n    assert get_max_triples(10) == 36\n    assert get_max_triples(100) == 53361\n\ncheck(get_max_triples)": {
      "result": true,
      "time": 0.06032133102416992,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 17:56:25",
    "guidance_input_tokens": 812,
    "guidance_output_tokens": 963,
    "end_time": "2025-05-27 17:56:35",
    "duration": "0:00:10.644585"
  },
  "retry": 0,
  "random_seed": 726
}