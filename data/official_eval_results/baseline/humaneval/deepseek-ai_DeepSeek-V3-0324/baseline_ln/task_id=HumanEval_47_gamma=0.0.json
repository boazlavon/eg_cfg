{
  "code": "def median(l: list):\n    sorted_l = sorted(l)\n    n = len(sorted_l)\n    if n % 2 == 1:\n        return sorted_l[n//2]\n    else:\n        return (sorted_l[n//2 - 1] + sorted_l[n//2]) / 2",
  "results": {
    "\n\nMETADATA = {}\n\n\ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7 \n\n\ncheck(median)": {
      "result": true,
      "time": 0.05738186836242676,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 19:33:36",
    "guidance_input_tokens": 730,
    "guidance_output_tokens": 69,
    "end_time": "2025-05-27 19:33:40",
    "duration": "0:00:03.177610"
  },
  "retry": 0,
  "random_seed": 1038
}