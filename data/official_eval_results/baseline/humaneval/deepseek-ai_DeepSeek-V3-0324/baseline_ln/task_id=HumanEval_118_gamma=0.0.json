{
  "code": "def get_closest_vowel(word):\n    vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    word_len = len(word)\n    if word_len < 3:\n        return \"\"\n    \n    for i in range(word_len - 2, 0, -1):\n        current_char = word[i]\n        prev_char = word[i - 1]\n        next_char = word[i + 1]\n        if current_char in vowels and prev_char not in vowels and next_char not in vowels:\n            return current_char\n    return \"\"",
  "results": {
    "def check(candidate):\n\n    # Check some simple cases\n    assert candidate(\"yogurt\") == \"u\"\n    assert candidate(\"full\") == \"u\"\n    assert candidate(\"easy\") == \"\"\n    assert candidate(\"eAsy\") == \"\"\n    assert candidate(\"ali\") == \"\"\n    assert candidate(\"bad\") == \"a\"\n    assert candidate(\"most\") == \"o\"\n    assert candidate(\"ab\") == \"\"\n    assert candidate(\"ba\") == \"\"\n    assert candidate(\"quick\") == \"\"\n    assert candidate(\"anime\") == \"i\"\n    assert candidate(\"Asia\") == \"\"\n    assert candidate(\"Above\") == \"o\"\n\n    # Check some edge cases that are easy to work out by hand.\n    assert True\n\n\ncheck(get_closest_vowel)": {
      "result": true,
      "time": 0.05879521369934082,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 19:37:15",
    "guidance_input_tokens": 790,
    "guidance_output_tokens": 137,
    "end_time": "2025-05-27 19:37:17",
    "duration": "0:00:02.000786"
  },
  "retry": 0,
  "random_seed": 1038
}