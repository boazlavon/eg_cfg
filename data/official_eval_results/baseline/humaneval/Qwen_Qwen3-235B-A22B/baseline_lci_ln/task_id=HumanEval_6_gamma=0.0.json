{
  "code": "def parse_nested_parens(paren_string: str) -> List[int]:\n    pass",
  "results": {
    "\n\nMETADATA = {\n    'author': 'jt',\n    'dataset': 'test'\n}\n\n\ndef check(candidate):\n    assert candidate('(()()) ((())) () ((())()())') == [2, 3, 1, 3]\n    assert candidate('() (()) ((())) (((())))') == [1, 2, 3, 4]\n    assert candidate('(()(())((())))') == [4]\n\ncheck(parse_nested_parens)": {
      "result": false,
      "time": 0.06328034400939941,
      "error": null
    }
  },
  "passed": false,
  "accuracy": 0.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 19:19:22",
    "guidance_input_tokens": 605,
    "guidance_output_tokens": 41,
    "end_time": "2025-05-27 19:19:23",
    "duration": "0:00:01.305087"
  },
  "retry": 0,
  "random_seed": 1038
}