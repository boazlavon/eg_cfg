{
  "code": "def double_the_difference(lst):\n    result = 0\n    for num in lst:\n        if isinstance(num, int):\n            if num > 0:\n                if num % 2 != 0:\n                    squared_value = num ** 2\n                    result += squared_value\n    return result",
  "results": {
    "def check(candidate):\n\n    # Check some simple cases\n    assert candidate([]) == 0 , \"This prints if this assert fails 1 (good for debugging!)\"\n    assert candidate([5, 4]) == 25 , \"This prints if this assert fails 2 (good for debugging!)\"\n    assert candidate([0.1, 0.2, 0.3]) == 0 , \"This prints if this assert fails 3 (good for debugging!)\"\n    assert candidate([-10, -20, -30]) == 0 , \"This prints if this assert fails 4 (good for debugging!)\"\n\n\n    # Check some edge cases that are easy to work out by hand.\n    assert candidate([-1, -2, 8]) == 0, \"This prints if this assert fails 5 (also good for debugging!)\"\n    assert candidate([0.2, 3, 5]) == 34, \"This prints if this assert fails 6 (also good for debugging!)\"\n    lst = list(range(-99, 100, 2))\n    odd_sum = sum([i**2 for i in lst if i%2!=0 and i > 0])\n    assert candidate(lst) == odd_sum , \"This prints if this assert fails 7 (good for debugging!)\"\n\n\ncheck(double_the_difference)": {
      "result": true,
      "time": 0.0568695068359375,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 19:16:53",
    "guidance_input_tokens": 701,
    "guidance_output_tokens": 103,
    "end_time": "2025-05-27 19:16:54",
    "duration": "0:00:01.875029"
  },
  "retry": 0,
  "random_seed": 1038
}