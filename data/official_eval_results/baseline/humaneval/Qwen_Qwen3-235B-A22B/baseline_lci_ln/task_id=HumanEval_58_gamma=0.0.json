{
  "code": "def common(l1: list, l2: list):\n    unique_elements_l1 = []\n    for element in l1:\n        if element not in unique_elements_l1:\n            unique_elements_l1.append(element)\n    unique_elements_l2 = []\n    for element in l2:\n        if element not in unique_elements_l2:\n            unique_elements_l2.append(element)\n    common_elements = []\n    for element in unique_elements_l1:\n        if element in unique_elements_l2:\n            common_elements.append(element)\n    common_elements_sorted = sorted(common_elements)\n    return common_elements_sorted",
  "results": {
    "\n\nMETADATA = {}\n\n\ndef check(candidate):\n    assert candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]) == [1, 5, 653]\n    assert candidate([5, 3, 2, 8], [3, 2]) == [2, 3]\n    assert candidate([4, 3, 2, 8], [3, 2, 4]) == [2, 3, 4]\n    assert candidate([4, 3, 2, 8], []) == []\n\n\ncheck(common)": {
      "result": true,
      "time": 0.0612947940826416,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 19:26:54",
    "guidance_input_tokens": 622,
    "guidance_output_tokens": 237,
    "end_time": "2025-05-27 19:26:57",
    "duration": "0:00:03.463898"
  },
  "retry": 0,
  "random_seed": 1038
}