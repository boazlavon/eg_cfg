{
  "code": "import math\n\ndef largest_prime_factor(n: int) -> int:\n    largest = -1\n    \n    # Check divisibility by 2\n    while n % 2 == 0:\n        largest = 2\n        n //= 2\n    \n    # Check divisibility by odd numbers from 3 upwards\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            largest = i\n            n //= i\n    \n    # If n is still greater than 2, then it's prime\n    if n > 2:\n        largest = n\n    \n    return largest",
  "results": {
    "\n\nMETADATA = {}\n\n\ndef check(candidate):\n    assert candidate(15) == 5\n    assert candidate(27) == 3\n    assert candidate(63) == 7\n    assert candidate(330) == 11\n    assert candidate(13195) == 29\n\n\ncheck(largest_prime_factor)": {
      "result": true,
      "time": 0.06567096710205078,
      "error": null
    }
  },
  "passed": true,
  "accuracy": 1.0,
  "general_error": null,
  "has_testcase_error": false,
  "stats": {
    "start_time": "2025-05-27 19:15:12",
    "guidance_input_tokens": 763,
    "guidance_output_tokens": 155,
    "end_time": "2025-05-27 19:15:15",
    "duration": "0:00:02.540559"
  },
  "retry": 0,
  "random_seed": 1038
}